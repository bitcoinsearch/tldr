<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
  <updated>2023-06-14T01:56:23.801477+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-06-06 03:59:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
    <updated>2023-06-14T01:56:23.801477+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017928.html" rel="alternate"/>
    <summary>ZmnSCPxj, the email author, mentions that someone claimed a few years ago that 2p-ECDSA could use Scriptless Script on lightning-dev. He acknowledges that he does not understand the math enough to confirm if it is secure or not. If secure, Spilman backout can be folded into scriptless script swap too. ZmnSCPxj outlines the steps for this process in detail and how Bob can limit the griefing problem by requiring locktime2 = now + 60. He also points out that this solution is not suitable for griefing in the Lightning Network as channels are intended to be reused there, whereas Spilman channels in CoinSwap exist only to allow funding transactions to confirm in any order on-chain, and are used only for the specific swap.</summary>
    <published>2020-06-06T03:59:30+00:00</published>
  </entry>
</feed>
