<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-06-14T00:33:57.110120+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-06-21 02:10:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-06-14T00:33:57.110120+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017992.html" rel="alternate"/>
    <summary>In a recent conversation on the Bitcoin-Dev mailing list, a user was hoping for one of Bitcoin's inventive cryptographers to describe how someone with an adaptor signature could use the information to create a pubkey and resolve the PTLC. However, if this is not possible, they suggest advocating for making pay-to-revealed-adaptor-signature possible using something like OP_CHECKSIGFROMSTACK. It was suggested that the signed message could be a signature to `SIGHASH_NONE` and embedded in a transaction with `OP_RETURN`. If doing so, `SIGHASH_ANYPREVOUT` is also required to embed the adaptor signature for spending from that transaction in the transaction being spent, and it implies `A[p4s] = a[p4s] * G` is a one-time-use keypair.</summary>
    <published>2020-06-21T02:10:32+00:00</published>
  </entry>
</feed>
