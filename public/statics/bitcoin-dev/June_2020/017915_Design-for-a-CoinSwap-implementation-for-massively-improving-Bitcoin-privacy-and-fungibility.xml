<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
  <updated>2023-06-14T01:55:33.340208+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-06-03 04:53:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
    <updated>2023-06-14T01:55:33.340208+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017915.html" rel="alternate"/>
    <summary>The discussion between Chris and Ruben is about PayJoin-with-CoinSwap which is a method of breaking the common-input-ownership heuristic, improving privacy for people who don't use it, and also useful for Alice if she is spending from a reused address or from an address linked to her identity. Alice can do PayJoin with a payee Carol that supports normal PayJoin for similar overall results. They also discuss the potential issues with RBF and SAS 4-tx setup, where Alice can steal the funds of Bob. Additionally, they talk about S6 which mildly leaks to each maker its position in the route via timelocks. Lastly, they discuss the possibility of making private key handover work with S6.</summary>
    <published>2020-06-03T04:53:52+00:00</published>
  </entry>
</feed>
