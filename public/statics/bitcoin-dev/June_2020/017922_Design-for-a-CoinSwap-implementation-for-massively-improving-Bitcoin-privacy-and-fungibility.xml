<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
  <updated>2023-06-14T01:55:42.997563+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-06-04 16:37:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
    <updated>2023-06-14T01:55:42.997563+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017922.html" rel="alternate"/>
    <summary>The email discusses improvements to the CoinSwap protocol that can help avoid theft and griefing attacks. The first improvement is `nLockTime`-protected Backouts which allow everyone to recover their funds unilaterally in case one of the other funding transactions does not confirm. The email then explains how to create Spilman unidirectional payment channels along the route, bringing the fiddly timing details offchain where it is less visible to observers. However, this method still allows a form of griefing attack, which can be mitigated by modifying steps 9-12. Finally, for full protection against griefing attacks, Bob1 and Bob2 have to wait for the incoming funding transaction to be confirmed deeply before broadcasting its outgoing funding transaction as well.</summary>
    <published>2020-06-04T16:37:53+00:00</published>
  </entry>
</feed>
