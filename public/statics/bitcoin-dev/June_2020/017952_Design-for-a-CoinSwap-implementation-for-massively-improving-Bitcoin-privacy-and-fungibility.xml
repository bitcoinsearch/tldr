<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
  <updated>2023-06-14T01:56:49.001936+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-06-10 07:09:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Design for a CoinSwap implementation for massively improving Bitcoin privacy and fungibility</title>
    <updated>2023-06-14T01:56:49.001936+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017952.html" rel="alternate"/>
    <summary>A proposal has been made for combining routing and multi-transaction to achieve better benefits. The proposal shows how this could be done using an example of Alice's multiple UTXOs. A reader expresses concerns about Bitcoin's scalability and privacy, pointing out that similar privacy properties in Bitcoin transactions require large transaction sizes as in Monero transactions. The reader also questions the scalability of CoinSwap, which they believe is a much-needed development. Chris argues that CoinSwap provides better privacy: cost ratios than equal-valued CoinJoins. Different mixing techniques exist to provide users with a range of costs and privacy options. These include PayJoins, Equal-valued CoinJoins, and CoinSwaps. Each technique has its costs and benefits, with CoinSwap being more expensive than Equal-valued CoinJoins but offering significant privacy for its cost.</summary>
    <published>2020-06-10T07:09:04+00:00</published>
  </entry>
</feed>
