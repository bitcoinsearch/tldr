<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stamping transaction</title>
  <updated>2023-06-14T02:16:10.149426+00:00</updated>
  <author>
    <name>Mostafa Sedaghat joo 2020-06-09 09:34:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stamping transaction</title>
    <updated>2023-06-14T02:16:10.149426+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017944.html" rel="alternate"/>
    <summary>Mostafa suggests decoupling transactions from the block to keep the blockchain size small. However, ZmnSCPxj argues that stamped transactions are not a solution to reduce the blockchain size. The reason why old history is retained is to prove to new nodes that one is the correct owner of the current coins. This is what separates Bitcoin from previous currency systems. Stamped transactions will require a hardfork, which is risky and unlikely to be accepted by everyone. Moreover, validation becomes more expensive as the blockchain grows. ZmnSCPxj proposes using a set of the most recent N block hashes instead of memorizing the last N block hashes. Since stamped transactions have a time-to-live, using a set creates a constant data structure and is good for validation. Stamped transactions are larger and more expensive than unstamped transactions, making them less incentivized. Users may prefer running older versions and never upgrading to the new version that requires stamped transactions. Furthermore, validating the stamp on every node is still a cost, and it is an incentive problem if individual users are not incentivized to use it. Stamping transactions does not help reduce mempool size as resending the transaction with a fresh stamp increases bandwidth usage.</summary>
    <published>2020-06-09T09:34:57+00:00</published>
  </entry>
</feed>
