<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CoinPool, exploring generic payment pools for Fun and Privacy</title>
  <updated>2023-06-14T02:27:08.610085+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-06-13 01:20:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-13 01:20:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-12 08:39:35</name>
  </author>
  <author>
    <name>Jeremy 2020-06-11 17:21:08</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-12 08:39:35</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-13 00:45:12</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-13 00:28:27</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-16 05:23:01</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-11 08:53:08</name>
  </author>
  <author>
    <name>Jeremy 2020-06-11 17:21:08</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-12 23:45:35</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-13 00:28:27</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-16 05:23:01</name>
  </author>
  <author>
    <name>Jeremy 2020-06-11 17:21:08</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-12 23:45:35</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-13 00:45:12</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-13 01:20:16</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-11 08:53:08</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-12 23:45:35</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-12 08:39:35</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-11 08:53:08</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-13 00:45:12</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-13 00:28:27</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-16 05:23:01</name>
  </author>
  <link href="bitcoin-dev/June_2020/017977_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017977_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017971_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017968_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017971_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017976_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017978_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017983_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017964_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017968_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017975_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017978_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017983_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017968_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017975_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017976_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017977_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017964_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017975_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017971_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017964_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017976_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017978_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017983_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - CoinPool, exploring generic payment pools for Fun and Privacy</title>
    <updated>2023-06-14T02:27:08.610085+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017977.html" rel="alternate"/>
    <summary>The email discusses the use of WabiSabi and Taproot in a CoinPool to allow for interoperation with LN. This allows any SCRIPT to be operated without requiring the CoinPool software to include a SCRIPT interpreter, only signature validation. The CoinPool proposal is a multiparticipant offchain update mechanism that requires all participants to sign off on the new state, and the WabiSabi protocol can be used during negotiation of a new state. To hide each participant's ownership in the CoinPool from others, unilateral closes should expose all current outputs without identifying which participant exited the CoinPool.Jeremy Rubin shared his insights on designing payment pools, specifically regarding the requirement of non-interactive any-order withdrawal property. He suggested setting the requirement to O(log(n)) instead of O(1) space and presented a CTV-based payment pool design where channels are constructed and set up non-interactively using CTV. Both protocols require new features in Bitcoin but CTV is relatively simple compared to accumulators + sighashnoinput. The payment pool in both designs can be created non-interactively, allowing third parties such as exchanges to withdraw users' funds into a payment pool. While CTV pools are compatible with LN, Rubin has only implemented rudimentary transactions for them so far.CoinPool is proposed as a solution to privacy issues arising from second-layer protocols on Bitcoin. It is a generic payment pool that can be wrapped around any other protocol. CoinPool has three main features: non-interactive any-order withdrawal property, a Taproot output for the CoinPool UTXO, and two types of transactions that can spend the UTXO: Pool_Tx and Split_Tx. CoinPool provides scalability benefits, such as reducing the UTXO set in size, committing fewer transactions on-chain through off-chain transfers, and batching activities from different users. Participants agree on a pool policy and commit inputs to a funding transaction by sending a corresponding signature. Updates can be made to the coin distribution within the pool tree, allowing participants to redirect coins to new pools or split leaves of the tree. Withdrawals can be made unilaterally or with the consent of all parties in the form of a Pool_Tx or Split_Tx. CoinPool provides privacy by breaking payment sender/receiver linkability for an on-chain observer, making common-input-ownership, address reuse, and change address heuristics irrelevant.Gleb Naumenko and an unnamed collaborator are studying the privacy issues that arise from second-layer protocols on Bitcoin, such as Lightning Network and vaults. They aim to address privacy leaks from on-chain transactions of these protocols and protocol-specific metadata. The email is discussing the potential for WabiSabi to improve anonymity in CoinJoin transactions by allowing participants to pretend to be multiple people. By using a new persona to own coins after an initial state setup, it can be difficult for other pool participants to determine which participant owns which coin. This creates greater ambiguity and reduces the possibility of tracing leaves by value weight or identifying sockpuppets.ZmnSCPxj's message to Antoine, Gleb, and a mailing list discusses different ideas related to CoinPool, multiparticipant channels, channel factories, and nodelets. These ideas provide better flexibility with forwarding, with CoinPool allowing any entity to forward to any other entity without tying up liquidity specifically with those entities.The CoinPool proposal aims to improve cross-protocol privacy on Bitcoin by providing a generic payment pool that can be wrapped around any other protocol. The protocol is designed to be low-latency and off-chain, avoiding issues like timelocking coins, extensive use of on-chain space, and paying fees to provide sufficient privacy. However, deploying CoinPools poses several challenges, especially scalability, which requires introducing new on-chain primitives. Sybil-resistance measures are necessary to prevent attackers from joining a pool, and participants have requirements for security and pool performance, which include persistent storage and hot access to signing keys.The email discusses the potential for WabiSabi to improve anonymity in CoinJoin transactions by allowing participants to pretend to be multiple people, creating greater ambiguity and reducing the possibility of tracing leaves by value weight or identifying sockpuppets. The proposal also suggests using the WabiSabi protocol during negotiation of a new state and exchanging credentials among the participants to perform value transfers inside the WabiSabi construction. To hide transfers from the elected WabiSabi server, participants can maintain two coins in every state and move coins randomly across the two coins they own at each state update. The email notes that a desired feature for CoinPool is that a participant can exit, and the CoinPool would still remain valid, but only for the remaining participants. However, this could be a mild privacy leak, as every other participant now knows how much that particular participant took out from the CoinPool. In order to disincentivize a participant from closing unilaterally for trivial reasons, the SIGHASH_ANYPREVOUT can</summary>
    <published>2020-06-13T01:20:16+00:00</published>
  </entry>
</feed>
