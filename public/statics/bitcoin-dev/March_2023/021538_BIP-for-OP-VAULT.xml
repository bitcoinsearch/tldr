<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for OP_VAULT</title>
  <updated>2023-06-16T15:40:27.646140+00:00</updated>
  <author>
    <name>Brandon Black 2023-03-13 19:03:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for OP_VAULT</title>
    <updated>2023-06-16T15:40:27.646140+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021538.html" rel="alternate"/>
    <summary>In a message to his colleagues, Brandon suggests replacing the internal key with a hardcoded NUMS point in order to batch multiple vault inputs that may have different internal keys but the same OP_FLU/OP_VAULT_TRIGGER script to the same time+template-restricted output. He likes the idea of explicitly batching via the implied input/output summation rules while avoiding address reuse for on chain efficiency and potentially privacy. According to him, many inputs with different internal keys can be combined to satisfy the total output value for a single output as long as their scriptpubkeys with FLU and NUMS internal key are equal. This enables avoiding address reuse within the vault. Additionally, many inputs with the same scriptpubkey can be combined to satisfy a single CTV output template which allows a user to unfsck themselves if they initiate a withdrawal that cannot be satisfied because they didn't send enough sats to satisfy their template.</summary>
    <published>2023-03-13T19:03:30+00:00</published>
  </entry>
</feed>
