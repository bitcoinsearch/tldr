<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for OP_VAULT</title>
  <updated>2023-06-16T15:34:50.621394+00:00</updated>
  <author>
    <name>Andrew Melnychuk Oseen 2023-03-02 19:51:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for OP_VAULT</title>
    <updated>2023-06-16T15:34:50.621394+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021518.html" rel="alternate"/>
    <summary>In an email to the bitcoin-dev mailing list, a user named Andrew outlined their desire for multiple tapleaves to be restricted on the amount they can spend. They provided an example of an input of 1 BTC with a locking script of a tapscript that has 1 of 3 pubkeys belonging to participants Alice, Bob, and Carol. Andrew wants to restrict the outputs of their next transactions to .2, .3, and .5 BTC, respectively. If Bob spends their output, they are restricted to make a transaction that has a change output that has at least Alice and Carol's amount and a 1 or 2 tapscript or a 1 of 3 tapscript if Bob didn't spend all of their funds. In the event of two of the three participants separately broadcasting their transactions, Andrew hopes that the second sender can combine the two transactions into a package where the outputs and witnesses would be adjusted, where two participants share an output with their respective amounts, and the remainder participant still has their funds available.Andrew admitted to being new to bitcoin-dev but said they were persistent and had a lot of time on their hands. They also mentioned looking at some BIPs like OP_CHECKTEMPLATEVERIFY, which had some ideas they liked, such as OP_AMOUNTVERIFY. They acknowledged not being aware of the risks previously discussed by the community on this topic.</summary>
    <published>2023-03-02T19:51:17+00:00</published>
  </entry>
</feed>
