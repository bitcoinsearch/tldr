<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for OP_VAULT</title>
  <updated>2023-06-16T15:35:06.597666+00:00</updated>
  <author>
    <name>Luke Dashjr 2023-03-11 20:53:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for OP_VAULT</title>
    <updated>2023-06-16T15:35:06.597666+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021532.html" rel="alternate"/>
    <summary>Luke reviewed the BIP and left several comments on the PR indicating conceptual issues with it. He suggested a new approach where Joe receives funds with a taproot output, sends funds to Fred, but Fred cannot spend them until N blocks later (covenant-enforced relative locktime), and Joe can spend Fred's UTXO within the N block window to a recovery output if his funds are stolen. Although this setup requires implementation details that are non-obvious and would likely require another address format or at least recipient-wallet changes, it seems within the scope of possibility. On 2/13/23 16:09, James O'Beirne via bitcoin-dev announced that there have been improvements made to the OP_VAULT draft, such as no longer having a hard dependence on package relay/ephemeral anchors for fee management and not hardcoding specific output locations in transaction validation algorithms. The BIP fully describing the proposal is available at https://github.com/jamesob/bips/blob/jamesob-23-02-opvault/bip-vaults.mediawiki, and the corresponding PR is available at https://github.com/bitcoin/bips/pull/1421. James plans to try for a merge to the inquisition repo and thanked everyone who participated so far, especially AJ and Greg for all the advice.</summary>
    <published>2023-03-11T20:53:21+00:00</published>
  </entry>
</feed>
