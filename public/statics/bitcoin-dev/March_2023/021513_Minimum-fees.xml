<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Minimum fees</title>
  <updated>2023-06-16T15:58:59.074628+00:00</updated>
  <author>
    <name>Nadav Ivgi 2023-03-02 00:39:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Minimum fees</title>
    <updated>2023-06-16T15:58:59.074628+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021513.html" rel="alternate"/>
    <summary>Giuseppe B, a newcomer to the bitcoin-dev mailing list, proposed a new protocol rule called "min_fees." In the scenario where block rewards are nearly zero and the base layer is primarily used for large settlements while smaller transactions go through LN, transaction fees may end up being very small. Users would not mind paying higher fees to increase network security, but nobody wants to be the only one doing so. To address this, Giuseppe suggests that the miner who mines a block appends a min_fee field to the block, specifying the minimum fees required in the following block for it to be valid. The introduction of this new rule could bring the equilibrium closer to a socially optimal one and benefit the network security in the long term. However, until enough fees accumulate in the mempool to satisfy min_fees, rational behavior for miners would be to compete for fees in the latest block, leading to increased reorgs/orphan rates and chain instability. This could also cause miners to prefer setting their low_fee to zero to avoid other miners from forking their blocks off. Ultimately, it remains unclear whether this proposal would change much if humanity is willing to spend X BTC/day on mining fees, regardless of whether it's spread out through fewer or more blocks.</summary>
    <published>2023-03-02T00:39:13+00:00</published>
  </entry>
</feed>
