<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for OP_VAULT</title>
  <updated>2023-06-16T15:35:22.223141+00:00</updated>
  <author>
    <name>Greg Sanders 2023-03-13 14:55:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for OP_VAULT</title>
    <updated>2023-06-16T15:35:22.223141+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021534.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, James O'Beirne proposed improvements to the OP_VAULT draft. The proposal has undergone various improvements since the last correspondence, such as no longer having a hard dependence on package relay/ephemeral anchors for fee management and not having specific output locations hardcoded in any of the transaction validation algorithms. O'Beirne has written a BIP that fully describes the proposal and is seeking a merge to the inquisition repo. However, Luke Dashjr reviewed the BIP and left several comments on the PR. He thinks the current idealized functionality of deposit -&gt; trigger -&gt; withdrawal is too complicated for everyday use and would harm privacy quite a bit. Instead, he suggests a new approach where Joe receives funds with a taproot output like normal, sends funds to Fred, but Fred cannot spend them until N blocks later (covenant-enforced relative locktime), and if Joe's funds were stolen, he can spend Fred's UTXO within the N block window to a recovery output. The implementation details for this kind of setup are non-obvious and will likely require yet another address format (or at least recipient-wallet changes), but it certainly seems within the scope of possibility.</summary>
    <published>2023-03-13T14:55:05+00:00</published>
  </entry>
</feed>
