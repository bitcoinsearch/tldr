<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for OP_VAULT</title>
  <updated>2023-06-16T15:35:50.742696+00:00</updated>
  <author>
    <name>Greg Sanders 2023-03-14 14:40:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for OP_VAULT</title>
    <updated>2023-06-16T15:35:50.742696+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021539.html" rel="alternate"/>
    <summary>In this email exchange between Greg and Brandon, they discuss the privacy issues and possibilities of James' current PR proposal. They agree that rotating trigger authorization keys maintains batchability and stops address reuse. However, rotating inner pubkeys only doesn't seem to help much. Coinjoins are another batching scenario that could benefit, but it would require a lot of effort and people would likely just use a NUMS to reduce fingerprinting. They also discuss the idea of many inputs with different internal keys being combined to satisfy the total output value for a single output, as long as their scriptpubkeys with FLU and NUMS internal key are equal. This enables avoiding address reuse within the vault. Additionally, many inputs with the same scriptpubkey can be combined to satisfy a single CTV output template, allowing a user to unfsck themselves if they initiate a withdrawal that cannot be satisfied because they didn't send enough sats to satisfy their template.Overall, they seem to be discussing ways to improve privacy and efficiency in transactions while avoiding address reuse. They note that some proposed solutions may require significant effort to implement and may not be worth it in practice.</summary>
    <published>2023-03-14T14:40:53+00:00</published>
  </entry>
</feed>
