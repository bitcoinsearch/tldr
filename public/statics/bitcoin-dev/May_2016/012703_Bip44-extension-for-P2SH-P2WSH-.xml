<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bip44 extension for P2SH/P2WSH/...</title>
  <updated>2023-06-11T05:20:56.256778+00:00</updated>
  <author>
    <name>Jonas Schnelli 2016-05-14 08:16:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bip44 extension for P2SH/P2WSH/...</title>
    <updated>2023-06-11T05:20:56.256778+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012703.html" rel="alternate"/>
    <summary>The conversation thread revolves around the concern of recovering funds from a wallet conforming to BIPXX, which requires wallet software to handle BIPXX. Making BIPXX backward compatible with previously created BIP44 or BIP43 purpose 0 wallets doesn't change this. Importing a bip32 wallet is still an expert job and can lead to bad security practice, especially without a sweep. Users prefer importing transaction history and sending all funds covered by that seed to a new wallet rather than importing private keys. The task can be better covered by a little GUI tool or cli-app/script, which accepts different bip32 schematics, different bip39 implementation, creates large lookup windows, creates a sweep transaction to a new address/wallet, and exports transaction history in CSV format. However, the idea may over-complicate things.</summary>
    <published>2016-05-14T08:16:42+00:00</published>
  </entry>
</feed>
