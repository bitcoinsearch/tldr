<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making AsicBoost irrelevant</title>
  <updated>2023-06-11T05:17:14.301725+00:00</updated>
  <author>
    <name>James Hilliard 2016-05-11 22:00:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making AsicBoost irrelevant</title>
    <updated>2023-06-11T05:17:14.301725+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012678.html" rel="alternate"/>
    <summary>In May 2016, a discussion took place on the bitcoin-dev mailing list regarding the patented AsicBoost optimization and how to render it useless as part of a proposed hard fork. The patent appeared to be owned exclusively by Bitmain in China. The concern was that the fact that AsicBoost was patented required a hard fork to remove it, not just the possibility of private optimizations. However, the fact that AsicBoost was independently discovered by multiple organizations indicated that private optimizations would only provide temporary wins over competitors. There was an argument that fork changes were risky because there was no way to tell from a block if it was mined with AsicBoost or not, so people didn't know what percentage of the hashrate used AsicBoost at any point in time. Changing the block mining algorithm could cause hardware to produce invalid blocks, leading to two co-existing bitcoin blockchains. Chip manufacturers wouldn't reveal which optimizations they used, making it impossible to make changes without threatening to irreversibly fork out their hardware by a rule change. The proposed solution was to embrace as many optimizations as possible to the point where there are no more optimizations left to do, or hopefully getting very close to that point. The fix should also be compatible with existing mining hardware.</summary>
    <published>2016-05-11T22:00:59+00:00</published>
  </entry>
</feed>
