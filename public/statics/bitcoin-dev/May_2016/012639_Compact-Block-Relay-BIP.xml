<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Compact Block Relay BIP</title>
  <updated>2023-05-19T23:20:45.031256+00:00</updated>
  <author>
    <name>Gregory Maxwell 2016-05-09 10:43:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Compact Block Relay BIP</title>
    <updated>2023-05-19T23:20:45.031256+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012639.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Tom Zander raised concerns about the networking effects of selecting the best node to set the announce bit for block propagation. However, testing on actual nodes in the network showed that blocks are normally requested from one of the last three peers they were requested from 70% of the time, which increases robustness and reduces latency. The decision is non-normative to the protocol, so nodes can decide based on better criteria if discovered in the future. The "high bandwidth" mode uses somewhat more bandwidth than low bandwidth but still &gt;&gt;10 times less than an ordinary getdata relay. If a node is trying to minimize bandwidth usage, it can choose not to request the high bandwidth mode. The latency bound cannot be achieved without unsolicited data. The variable length encoding used in Bitcoin Core for years is being adopted in a BIP for compact blocks, with some control information in the high bits. Salting the hash eliminates collision attacks, and per-source randomization ensures that when a rare chance collision occurs, it only impacts a single node at a time.</summary>
    <published>2016-05-09T10:43:02+00:00</published>
  </entry>
</feed>
