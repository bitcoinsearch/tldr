<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: OP_PRANDOM</title>
  <updated>2023-06-11T05:30:46.457364+00:00</updated>
  <author>
    <name>Matthew Roberts 2016-05-20 15:05:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: OP_PRANDOM</title>
    <updated>2023-06-11T05:30:46.457364+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012731.html" rel="alternate"/>
    <summary>The context is a discussion of the security of using multiple block hashes as a source of randomness. It is suggested that combining block hashes by taking the first N bits from each block hash to produce a single number may be a better approach than the current direction. Another suggestion is to use the hash of the proof of work hash as part of the number, making it infinitely expensive to manipulate the number. However, there is a non-zero risk of a participant in a contract attempting to bribe a miner, so the inclusion of multiple block hashes as a source of randomness is necessary. Every miner would effectively need to be bribed to ensure control over the results of the random numbers. Using Pay-to-script-hash can protect the details of contracts that use OP_PRANDOM from miners' prying eyes. The risk approaches zero as N goes up.</summary>
    <published>2016-05-20T15:05:36+00:00</published>
  </entry>
</feed>
