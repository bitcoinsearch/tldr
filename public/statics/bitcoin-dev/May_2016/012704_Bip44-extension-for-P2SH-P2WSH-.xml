<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bip44 extension for P2SH/P2WSH/...</title>
  <updated>2023-06-11T05:22:21.017172+00:00</updated>
  <author>
    <name>Jochen Hoenicke 2016-05-14 12:15:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bip44 extension for P2SH/P2WSH/...</title>
    <updated>2023-06-11T05:22:21.018171+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012704.html" rel="alternate"/>
    <summary>On the Bitcoin-dev mailing list, Daniel Weigl suggested defining a common derivation scheme for BIP44 compatible wallets to handle P2(W)SH receiving addresses with the approaching implementation of SegWit. He asked for feedback from other wallet developers before starting a BIP. The discussion showed that starting a new BIP is a good idea because everyone would do it differently otherwise. Option 1 would have one account that supports both non-segwit and segwit addresses while option 2 would have one p2pkh-only account and one segwit-only account that are completely separate. Jochen preferred option 1 and suggested Aaron's trick to avoid scanning twice the addresses. One disadvantage of option 1 is that a non-segwit wallet would ignore all segwit outputs, which means that the balance it shows is smaller, but this would not lead to losing money except when sweeping the account with a p2pkh-only wallet and then throwing the xprv away. Option 2 could also be done to appear as if it was only one account, but there is no advantage over option 1 in that case.</summary>
    <published>2016-05-14T12:15:16+00:00</published>
  </entry>
</feed>
