<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bip44 extension for P2SH/P2WSH/...</title>
  <updated>2023-06-11T05:20:17.980806+00:00</updated>
  <author>
    <name>Andreas Schildbach 2016-05-14 07:00:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bip44 extension for P2SH/P2WSH/...</title>
    <updated>2023-06-11T05:20:17.980806+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012702.html" rel="alternate"/>
    <summary>BIP43 defines that balance retrieval never changes. In order to add paths, a new BIP is required to ensure uniformity in balance across wallets having the same BIP and seed. With SegWit approaching, Daniel Weigl via bitcoin-dev suggests defining a common derivation scheme for how BIP44 compatible wallets will handle P2(W)SH receiving addresses. Two options are proposed: 1) Stay with the current BIP44 account, giving users the option to display public keys as either P2PKH-Address or P2SH address and scan the blockchain for both representations of each public key. The downside is that the wallet has to scan/look for ever twice as much addresses. 2) Define a new derivation path parallel to BIP44 but under a different purpose like ' instead of 44'. Let the user choose which account they want to add ("Normal account", "Witness account"). This option makes it easier to make a staged roll-out, only users actively deciding to use SegWit will get it and we can catch bugs earlier. Daniel/Mycelium's personal favourite is pt2. No Bip44 compliant wallet had integrated it at that point.</summary>
    <published>2016-05-14T07:00:27+00:00</published>
  </entry>
</feed>
