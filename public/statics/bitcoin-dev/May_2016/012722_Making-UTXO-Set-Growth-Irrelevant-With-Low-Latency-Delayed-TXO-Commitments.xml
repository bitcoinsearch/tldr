<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making UTXO Set Growth Irrelevant With Low-Latency Delayed TXO Commitments</title>
  <updated>2023-06-11T05:26:14.878265+00:00</updated>
  <author>
    <name>Peter Todd 2016-05-18 23:53:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making UTXO Set Growth Irrelevant With Low-Latency Delayed TXO Commitments</title>
    <updated>2023-06-11T05:26:14.878265+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012722.html" rel="alternate"/>
    <summary>The email thread discusses the proposed TXO commitments using Merkle Mountain Range, a type of deterministic, indexable, insertion-ordered merkle tree. The MMR implementation with pruning support is available on Github, where item retrieval by index is implemented and changing elements in-place is yet to be implemented. The original MMR scheme developed for OpenTimestamps is insufficient as it doesn't prove the position in the tree very well. However, the proofchains MMR scheme fixes this problem by making each inner node in the MMR commit to the total number of elements under it. The proposal of having both an append-only TXO and an append-only STXO was discussed, but it wouldn't work as the STXO would need to be indexed by outpoint or txout creation order, which is similar to insertion-ordered TXO commitment. It is interesting how a merbinner tree, when insertion-order indexed, ends up with a data structure that's almost identical to a MMR.</summary>
    <published>2016-05-18T23:53:36+00:00</published>
  </entry>
</feed>
