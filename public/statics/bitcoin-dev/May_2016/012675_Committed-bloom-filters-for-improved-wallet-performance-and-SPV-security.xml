<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-06-11T05:00:38.988718+00:00</updated>
  <author>
    <name>Bob McElrath 2016-05-11 20:29:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-06-11T05:00:38.988718+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012675.html" rel="alternate"/>
    <summary>The proposal of creating a Bloom Filter Digest for every block was discussed in the Bitcoin-dev mailing list. The filter size is determined by the number of elements it contains and false-positive rate, where an optimal filter is linear in the number of elements and logarithmic in the false-positive rate. A Cuckoo filter is faster than using Bloom filters as the data that would be put into the filter is already hashed. False-positive rate should be roughly less than 1/block height to prevent light clients from downloading more blocks than necessary. For today's block height (~410000) and false positive rate of 1e-6, this is about 20 bits per element. Thus the required size of the filter commitment is roughly N*log2H, where H is the block height. If Bitcoin had these filters from the beginning, a light client today would have to download about 12MB of data in filters, with personal SPV wallet using 31MB currently. It is not clear if this is a bandwidth win, though it's definitely a win for computing load on full nodes.</summary>
    <published>2016-05-11T20:29:33+00:00</published>
  </entry>
</feed>
