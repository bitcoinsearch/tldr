<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Code review</title>
  <updated>2023-06-07T17:27:41.345150+00:00</updated>
  <author>
    <name>Mike Hearn 2013-10-04 11:32:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Code review</title>
    <updated>2023-06-07T17:27:41.345150+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003328.html" rel="alternate"/>
    <summary>When it comes to git branches, every single log message and diff is individually valuable. However, sometimes log messages do not accurately describe the contents of the diff which leads to misinformation and noise. While many people strive for neat collections of easy-to-understand and review commits, this can be difficult in practice. One solution is to use squashed commits, but this can still be challenging when reviewing large pull requests.Despite this, there is nothing that makes a single large commit harder to review than multiple small ones. In fact, a large commit may be easier to review since it contains the same amount of code or less, and you can easily search the entire change during the review process. There are many things that can make code review easier, such as utilizing the ability to search through the changes.It's worth noting that inside Google, the code review process follows a one-commit-one-review system.</summary>
    <published>2013-10-04T11:32:47+00:00</published>
  </entry>
</feed>
