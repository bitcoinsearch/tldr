<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal to replace BIP0039</title>
  <updated>2023-06-07T18:21:56.542452+00:00</updated>
  <author>
    <name>slush 2013-10-24 18:54:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal to replace BIP0039</title>
    <updated>2023-06-07T18:21:56.542452+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003430.html" rel="alternate"/>
    <summary>The author of an email expressed their initial problem with BIP0039 not being backward compatible with Electrum and suggested that allocating a few bits of the mnemonic to encode a "version number" along with the checksum bits would be helpful for future replacements. However, someone replied saying that it is possible to implement both algorithms into the client at the same time and accused the author of spreading FUD about it on IRC, emails, and mailing lists. The solution for the Electrum client is to consider the mnemonic as Electrum, create first few addresses, and do a lookup. If there are transactions in address history, then this is an Electrum mnemonic. If there were no used addresses, build a seed using BIP39 and do the same lookup; if there's history, this is a BIP39 mnemonic. If there is no history on both algorithms, then pick a preferred one for given clients. The decision tree needs to be implemented only in Electrum.</summary>
    <published>2013-10-24T18:54:53+00:00</published>
  </entry>
</feed>
