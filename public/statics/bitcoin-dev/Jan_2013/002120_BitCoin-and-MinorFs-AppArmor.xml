<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BitCoin and MinorFs/AppArmor</title>
  <updated>2023-05-26T20:35:31.706804+00:00</updated>
  <author>
    <name>Rob Meijer 2013-01-10 17:41:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BitCoin and MinorFs/AppArmor</title>
    <updated>2023-05-26T20:35:31.706840+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-January/002120.html" rel="alternate"/>
    <summary>The author, Rob Meijer, explains his efforts on creating MinorFs2, which is a set of filesystems that work closely together with AppArmor to give 'pseudo persistent processes' their own private but decomposable and delegatable piece of filesystem storage. However, the development was stalled as Python was not sufficiently mastered by the author leading to him rewriting what he had done so far in C++. The author has also started developing a library named LibMinorFs, which would make the usage of MinorFs by applications like Bitcoin more convenient. He proposes the idea of incorporating this library into Bitcoin, making it use private storage when available. The author seeks feedback from the bitcoin developers to think about what attributes from the current granularity level (pseudo persistent process) should be kept, dropped, and what properties should be added to arrive at an 'id' that is the best fit for granularity of persistent private storage for bitcoin. The API is defined in the inc/minorfs/ directory and the usage shown in src/testmain.cpp. The author emphasizes accommodating bitcoin developer needs in the next version of MinorFs to accommodate their needs to a level that code to use MinorFs where available can be added to bitcoin.</summary>
    <published>2013-01-10T17:41:21+00:00</published>
  </entry>
</feed>
