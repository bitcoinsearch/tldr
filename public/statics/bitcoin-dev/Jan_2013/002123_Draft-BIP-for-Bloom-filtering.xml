<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Draft BIP for Bloom filtering</title>
  <updated>2023-06-06T08:08:17.271050+00:00</updated>
  <author>
    <name>Mike Hearn 2013-01-11 14:11:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Draft BIP for Bloom filtering</title>
    <updated>2023-06-06T08:08:17.271050+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-January/002123.html" rel="alternate"/>
    <summary>The author conducted initial performance tests on Bitcoin syncing from a local peer. The results indicate that the speed of filtering can be improved when transactions are checked in parallel by multi-threading the filtering process in bitcoind. The author suggests that if this is implemented, a 4-core server would get 4x faster at filtering blocks and could sync at more like 200 blocks per second. Additionally, it is recommended to make the client smarter so that the filter parameters (FP rate) are adapted during the sync process. Another recommendation is to shard the wallet keys over multiple peers for better privacy, and to suck down filtered blocks in parallel from multiple peers for better speed. It is suggested that the last point may be the most important from a practical perspective as it seems the bottleneck for chain sync is now CPU time.</summary>
    <published>2013-01-11T14:11:44+00:00</published>
  </entry>
</feed>
