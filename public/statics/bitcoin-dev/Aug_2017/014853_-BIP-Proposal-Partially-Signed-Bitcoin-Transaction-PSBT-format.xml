<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Partially Signed Bitcoin Transaction (PSBT) format</title>
  <updated>2023-06-12T14:59:42.328426+00:00</updated>
  <author>
    <name>Greg Sanders 2017-08-22 19:26:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Partially Signed Bitcoin Transaction (PSBT) format</title>
    <updated>2023-06-12T14:59:42.328426+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-August/014853.html" rel="alternate"/>
    <summary>The discussion is about securing partially signed transactions for inputs in a way that doesn't compromise privacy. One suggestion is to have each input come with an ownership proof, which is essentially a signature over H(A || x) using the key for A. The 'x' is a private fixed key that only the signing device knows, and most likely along some unique bip32 path. This makes it identifiable and privacy-losing across inputs. To avoid "re-use", one would want to sign some message like HMAC("ownership proof", H(A || x) ) instead. Public verifiers see HMAC("ownership proof", some_random_hash_connected_to_A ) and the owner can recreate some_random_hash_connected_to_A by H(A || x). The goal is to create a proof of non-ownership, or a proof that the hardware wallet doesn't own the address. However, to verify the signature, 'x' should be public. There's also a need to prevent the reuse of signatures as ownership proof for different purposes.</summary>
    <published>2017-08-22T19:26:30+00:00</published>
  </entry>
</feed>
