<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Would anyone object to adding a dlopen message hook system?</title>
  <updated>2023-06-12T14:52:52.139063+00:00</updated>
  <author>
    <name>Erik Aronesty 2017-08-15 01:33:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Would anyone object to adding a dlopen message hook system?</title>
    <updated>2023-06-12T14:52:52.139063+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-August/014826.html" rel="alternate"/>
    <summary>The discussion revolves around extending the P2P layer of Bitcoin. The proposal is to enable adding new message types by externalizing message processing through RPC/ZMQ. The idea is to leave the base P2P layer undisturbed and provide a way to create enhanced features that some peers support. The end goal is to allow people to pay for better node access, creating a market for node services. The proposed approach to achieve this is by using lightning network micropayments. The proposal suggests having linked-in modules, which can be optionally compiled and added to bitcoin conf, then loaded via dlopen(). The modules should be slightly robust to Bitcoin versions changing out from under them. However, any module incompatibility should throw an exception, ensuring broken peers don't stay online. The consensus logic, p2p system, wallet, and GUI currently share the same process, making a module approach like this a security nightmare. Therefore, it is suggested to use existing IPC interfaces like RPC/ZMQ, which can be bidirectional using long poll.</summary>
    <published>2017-08-15T01:33:34+00:00</published>
  </entry>
</feed>
