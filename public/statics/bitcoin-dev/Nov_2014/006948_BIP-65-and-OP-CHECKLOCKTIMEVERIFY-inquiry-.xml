<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 65 and OP_CHECKLOCKTIMEVERIFY inquiry...</title>
  <updated>2023-05-19T19:33:13.107944+00:00</updated>
  <author>
    <name>Gregory Maxwell 2014-11-27 23:46:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 65 and OP_CHECKLOCKTIMEVERIFY inquiry...</title>
    <updated>2023-05-19T19:33:13.107944+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006948.html" rel="alternate"/>
    <summary>In an email exchange, Richard Moore inquired about BIP 65 and suggested that instead of OP_CHECKLOCKTIMEVERIFY, there could be an OP_CHECKLOCKTIME that would push either OP_TRUE or OP_FALSE onto the stack. However, it was pointed out that updating the stack is not soft-fork compatible and any use would immediately fork the network. Likewise, an invertible test is also not soft-fork compatible. A solution suggested is to have the VERIFY test inside a branch and have the signer provide its falseness as an input to the branch. It was also suggested by Moore to allow an opcode that would use similar semantics but against an item in the stack, allowing for multiple nLockTimes in a single script. However, this approach would break existing invariants and make coins potentially less fungible. The locktime validity is basically monotonic and is a useful intentional property. All of these suggestions were carefully designed out of the proposal and may require more clarification in the BIP text.</summary>
    <published>2014-11-27T23:46:23+00:00</published>
  </entry>
</feed>
