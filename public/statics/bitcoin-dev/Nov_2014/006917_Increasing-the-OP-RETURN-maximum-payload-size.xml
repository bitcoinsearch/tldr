<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Increasing the OP_RETURN maximum payload size</title>
  <updated>2023-06-09T14:17:10.241616+00:00</updated>
  <author>
    <name>Luke Dashjr 2014-11-16 17:24:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Increasing the OP_RETURN maximum payload size</title>
    <updated>2023-06-09T14:17:10.241616+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006917.html" rel="alternate"/>
    <summary>Flavien Charlon, a Bitcoin developer, proposed increasing the limit of data that can be embedded as part of an OP_RETURN output from 40 bytes to 80 bytes in a message sent on November 16th, 2014. This limit was initially supposed to be 80 bytes but was reduced to 40 before the 0.9 release to err on the side of caution. After nine months, OP_RETURN did not lead to a blockchain catastrophe. Flavien suggested three proposals for increasing the limit of the amount of data that could be embedded in an OP_RETURN output. The first proposal suggested allowing two OP_RETURN outputs per transaction, which seems inefficient. The second proposal suggested increasing the default maximum payload size from 40 bytes to 80 bytes, which is configurable. However, Luke argued that focusing on defaults is part of the problem and preferred to randomize the default to incentivize miners to make the decision they're supposed to be making. The third proposal suggested making the maximum OP_RETURN payload size proportional to the number of outputs of the transaction. Luke thought this policy requires code hacks, but it looks the most ripe for code changes (particularly one that makes it possible to configure this policy, not hardcoding it).</summary>
    <published>2014-11-16T17:24:18+00:00</published>
  </entry>
</feed>
