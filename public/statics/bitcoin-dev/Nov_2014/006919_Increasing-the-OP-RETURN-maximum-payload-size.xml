<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Increasing the OP_RETURN maximum payload size</title>
  <updated>2023-06-09T14:17:24.889212+00:00</updated>
  <author>
    <name>Jorge Tim√≥n 2014-11-16 19:04:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Increasing the OP_RETURN maximum payload size</title>
    <updated>2023-06-09T14:17:24.889212+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006919.html" rel="alternate"/>
    <summary>In a discussion on #bitcoin-dev, the topic of larger sizes for OP_RETURNs arose. The decision to make it 40 bytes was justified because it is enough for timestamping. However, pay-to-contract could be used for cheaper and even secret timestamping that cannot be censored by miners. The author states that they did not know of any use cases requiring bigger sizes for OP_RETURNs. The author mentions that policies for things like default size allowed for OP_RETURN, minimum fees, anti-dust policies, and first-seen vs replace-by-fee depend on the miners. However, most miners and pools are apathetic when it comes to configuring their own policy. The best course of action is to make it easier for miners to implement their own policies by abstracting out those parts of the code. By separating script/standard, there has been some progress in this direction. The author suggests investing time in reviewing and testing related pull requests if one is interested in having more miners accepting 80 bytes OP_RETURN transactions. The post also includes links to a video explaining pay-to-contract and a generic working implementation.</summary>
    <published>2014-11-16T19:04:48+00:00</published>
  </entry>
</feed>
