<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The difficulty of writing consensus critical code: the SIGHASH_SINGLE bug</title>
  <updated>2023-06-09T14:08:50.066750+00:00</updated>
  <author>
    <name>Peter Todd 2014-11-07 00:03:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The difficulty of writing consensus critical code: the SIGHASH_SINGLE bug</title>
    <updated>2023-06-09T14:08:50.066750+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006889.html" rel="alternate"/>
    <summary>In a mailing list post from November 6th, 2014, Bitcoin developer Justus Ranvier criticized the way Bitcoin Core handles bugs. He argued that because of the extra consensus requirements in Bitcoin, fixing bugs is even more necessary than in other engineering fields. The two ways to fix bugs are either in a controlled, planned, and managed process or as an immediate response to a crisis. Ranvier argued for scheduling and planning upgrades to fix bugs in the protocol, rather than waiting for a crisis to occur. Ranvier also pointed out the political implications of not fixing bugs in Bitcoin. In the current model, the specification is the protocol, and the Bitcoin Core team is hesitant to change anything. Soft-forks are the minimum-viable way of making changes to the protocol, and they require minor consensus. Hard-forks, on the other hand, require political consensus, which requires centralization and political power. To keep the politics of Bitcoin development free from centralized control, Ranvier suggested forking Bitcoin Core and changing the non-consensus-critical code that implements policy. He argued that multiple forks of the Bitcoin Core reference client getting used by miners and users ensures that no one group maintaining such a fork can change anything without strong consensus. Forking the codebase, rather than rewriting it, best ensures that the code actually implements the protocol properly, is safe to use for mining, and gets used.</summary>
    <published>2014-11-07T00:03:10+00:00</published>
  </entry>
</feed>
