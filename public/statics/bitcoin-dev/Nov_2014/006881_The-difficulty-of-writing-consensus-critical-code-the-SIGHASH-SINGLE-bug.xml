<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The difficulty of writing consensus critical code: the SIGHASH_SINGLE bug</title>
  <updated>2023-05-19T19:29:27.942784+00:00</updated>
  <author>
    <name>Matt Corallo 2014-11-06 22:05:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The difficulty of writing consensus critical code: the SIGHASH_SINGLE bug</title>
    <updated>2023-05-19T19:29:27.942784+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006881.html" rel="alternate"/>
    <summary>The absence of BIP62 makes many basic contracts unusable, including atomic swaps that are important for sidechains. Though redoing Bitcoin in a hardfork is a good option in the long term, it may not be feasible for implementing payment channels immediately. The difficulty of writing consensus-compatible code is also acknowledged, and it is suggested that anyone with money behind an implementation doing script verification in code not derived from Bitcoin Core should rethink their decision.Tamas Blummer agrees that writing bug-for-bug compatible code with Satoshi is nearly impossible. While the aim of BIP62 is noble, increasing the complexity of the code with soft-fork-ready versioning does not feel right to him. Instead, he suggests freezing the consensus code and studying its bugs to determine if they can define a hard fork or a better chain to migrate to, as discussed by Blockstream.</summary>
    <published>2014-11-06T22:05:54+00:00</published>
  </entry>
</feed>
