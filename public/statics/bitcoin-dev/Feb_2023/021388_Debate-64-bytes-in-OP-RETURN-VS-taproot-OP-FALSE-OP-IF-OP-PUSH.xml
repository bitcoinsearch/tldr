<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Debate: 64 bytes in OP_RETURN VS taproot OP_FALSE	OP_IF OP_PUSH</title>
  <updated>2023-05-22T23:27:02.132700+00:00</updated>
  <author>
    <name>Peter Todd 2023-02-01 02:07:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Debate: 64 bytes in OP_RETURN VS taproot OP_FALSE	OP_IF OP_PUSH</title>
    <updated>2023-05-22T23:27:02.132700+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021388.html" rel="alternate"/>
    <summary>A discussion on Bitcoin-dev mailing list centered around which is better when placing 64 bytes in the Bitcoin blockchain- a traditional OP_RETURN or a spent taproot transaction. The question arose for a particular protocol, such as a timestamp or a commitment, where no other choice was available. While some might argue against using either, opinions were divided between both options. Those who preferred taproot over OP_RETURN pointed out that it is a safer place to put 64 bytes that is more uncensorable. However, an important consideration with using taproot is that users need to have the data they are committing to, in order to spend the txout in the future. In comparison, OpReturn doesn't have that problem, and in case of hard drive failure, users can still recover funds from a wallet seed.It is incorrect to say that OpReturn outputs "clog UTXO space". The whole point of OpReturn is to standardize a way to keep such outputs out of the UTXO set. There is the 75% discount to using witness space. But considering the size of a transaction as a whole using taproot instead of OpReturn doesn't save much.Finally, it was noted that 64 bytes is more than a mere 32 byte commitment. What specific use case was being considered here? Are users actually publishing data, or simply committing to data? If the latter, they can use ECC commitments and have no extra space at all.</summary>
    <published>2023-02-01T02:07:16+00:00</published>
  </entry>
</feed>
