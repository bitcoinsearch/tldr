<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Debate: 64 bytes in OP_RETURN VS taproot OP_FALSE OP_IF OP_PUSH</title>
  <updated>2023-06-16T04:13:32.487073+00:00</updated>
  <author>
    <name>Russell O'Connor 2023-02-05 00:11:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Debate: 64 bytes in OP_RETURN VS taproot OP_FALSE OP_IF OP_PUSH</title>
    <updated>2023-06-16T04:13:32.487073+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021432.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list centers around the cost of bytes in the witness versus the script pubkey. There is a crossover point in data size where it becomes cheaper to use witness data, but the specific number depends on the overhead of each method. A calculation based on reasonable assumptions could be used to propose an OP_RETURN proposal. A member of the mailing list, Aymeric Vitte, asks for advice on a number to use as a limit for the bitcoin-transactions nodejs module. He notes that the current limit from the specs is 512B and that increasing the limit is necessary due to the IF/ENDIF "unlimited" storage rule in bitcoin which mimics ethereum for the worse and is questionable to use. Christopher Allen suggests using 520 as the limit since it is similar to the limit in taproot, while also considering hash, signature, and metadata to satisfy others. The discussion continues on the mailing list.</summary>
    <published>2023-02-05T00:11:35+00:00</published>
  </entry>
</feed>
