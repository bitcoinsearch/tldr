<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Refreshed BIP324</title>
  <updated>2023-06-16T01:32:33.138197+00:00</updated>
  <author>
    <name>Dhruv M 2023-02-16 17:43:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Refreshed BIP324</title>
    <updated>2023-06-16T01:32:33.138197+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021472.html" rel="alternate"/>
    <summary>A proposal has been put forward on Bitcoin-dev to address the problem of 1 byte message type IDs lacking a co-ordination mechanism when multiple in-flight BIPs are proposing new message types, as well as the issue of allocating scarce 1 byte IDs judiciously. One solution proposed is uniform encoding using the high-bit which increases the available ID space drastically. However, there is still the issue of ensuring that the most frequent message types get the shorter IDs. Another proposed solution is making type IDs negotiable per direction per connection, which solves the issue at the cost of increased complexity. The proposal suggests restricting type IDs to [1, 127], removing 1 byte allocations for messages sent at most once per connection per direction, and possibly moving the type id mapping to the p2p layer away from the transport layer. The discussion also includes various technical details such as the current implementation for 324, serialization tables, and negotiation mechanisms, among others.</summary>
    <published>2023-02-16T17:43:22+00:00</published>
  </entry>
</feed>
