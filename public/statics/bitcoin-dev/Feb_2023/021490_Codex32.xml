<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Codex32</title>
  <updated>2023-06-16T15:49:13.727402+00:00</updated>
  <author>
    <name>Christopher Allen 2023-02-19 23:05:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Codex32</title>
    <updated>2023-06-16T15:49:13.727402+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021490.html" rel="alternate"/>
    <summary>Using only upper case alphabets and numbers in codex32, and avoiding most punctuation, can significantly reduce the size of QR codes. The ISO specification, upon encountering lowercase letters, assumes the value to be binary and converts it into a two-byte value, which increases the size of the QR code. However, if codex32 uses only the 45 allowed characters mentioned in the alphanumeric table (https://www.thonky.com/qr-code-tutorial/alphanumeric-table), and is all uppercase, it becomes a single-byte code that can be compressed. Although it doesn't compress well, it at least does not double the size first. The research conducted by Blockchain Commons on this topic is available at https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-003-uri-binary-compatibility.md. While a superior QR codec like the one provided by Blockchain Commons or Nayuki.io can do better, many platforms and basic QR codecs will still double the size of the QR if it contains any lowercase letters. In conclusion, using only uppercase alphabets and numbers while avoiding most punctuation in codex32 can significantly reduce the size of QR codes, thereby improving their efficiency.</summary>
    <published>2023-02-19T23:05:12+00:00</published>
  </entry>
</feed>
