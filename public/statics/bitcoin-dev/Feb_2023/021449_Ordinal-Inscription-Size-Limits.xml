<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ordinal Inscription Size Limits</title>
  <updated>2023-06-16T04:04:38.936946+00:00</updated>
  <author>
    <name>Aymeric Vitte 2023-02-07 12:17:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ordinal Inscription Size Limits</title>
    <updated>2023-06-16T04:04:38.936946+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021449.html" rel="alternate"/>
    <summary>On a Bitcoin developer platform, Erik Aronesty shared an example of a JavaScript exploit that could be used to render untrusted blockchain data in a user's browser. This is being used as an example to show that it is not a good idea to store "big things" in the blockchain but rather proofs of something. The rationale for this change request can be found on GitHub. It is suggested that if people want to pay to store big things, they should be allowed to do so. However, validating what is stored in the blockchain is impossible. In relation to NFT proposals, a third party is used to allow a timestamp to prove that someone is the seeder of the NFT and the first owner. Minting cannot be trusted and becomes useless with the use of a third party. The blockchain still validates the life of the NFT, allowing it to remain decentralized like lightning. Using a third party does not mean that the blockchain is of no use. It is important to note that the code loaded in JavaScript is impossible to be sure of without using a third party. The code self-validates with the correct version and the user must check the hash. In addition, the page cannot lie, but there may be other ways to steal keys or embed checks in bookmarklets. Others should check the code and seed the hash somewhere, even if it is clearly explained that the code must be used offline.</summary>
    <published>2023-02-07T12:17:24+00:00</published>
  </entry>
</feed>
