<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Testing censorship resistance of bitcoin p2p network</title>
  <updated>2023-06-16T15:29:49.827104+00:00</updated>
  <author>
    <name>Andrew Poelstra 2023-02-17 23:35:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Testing censorship resistance of bitcoin p2p network</title>
    <updated>2023-06-16T15:29:49.827104+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021480.html" rel="alternate"/>
    <summary>In a bitcoin-dev email thread, a user named vjudeu raised the question of how far the rule should go regarding SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS, pointing out that OP_FALSE OP_IF OP_ENDIF and OP_TRUE OP_NOTIF OP_ENDIF are effectively the same as OP_NOP but are considered non-standard. Andrew Poelstra, Director of Research at Blockstream, replied suggesting that banning any specific script fragments would not be effective since spammers could simply use IF ENDIF and provide FALSE as a zero push, which would also ban legitimate use cases. Instead, he proposed statically analyzing scripts to determine whether the IF branch could ever be taken, which would at least force inscription scripts to be "plausible" and increase their space cost.</summary>
    <published>2023-02-17T23:35:34+00:00</published>
  </entry>
</feed>
