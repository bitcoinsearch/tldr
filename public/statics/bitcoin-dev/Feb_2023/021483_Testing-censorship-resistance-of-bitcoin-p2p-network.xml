<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Testing censorship resistance of bitcoin p2p network</title>
  <updated>2023-06-16T15:31:04.953262+00:00</updated>
  <author>
    <name>Andrew Poelstra 2023-02-18 01:28:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Testing censorship resistance of bitcoin p2p network</title>
    <updated>2023-06-16T15:31:04.953262+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021483.html" rel="alternate"/>
    <summary>On February 18, 2023, Andrew Poelstra from Blockstream suggested on bitcoin-dev mailing list that static analysis could be used to determine whether the IF branch could ever be taken in inscription scripts of Bitcoin transactions. He proposed filtering which would make inscription scripts "plausible" and require OP_DROP to be added somewhere hundreds of times. Peter Todd asked for the actual percentage increase in space cost by adding OP_DROPs. According to standardness rules, a little over 1%, but by consensus (520-byte pushes) less than 0.2%. Although "greatly increase" might be a stretch, it's not trivial either if the fee market is functioning and we're talking about large amounts of data.</summary>
    <published>2023-02-18T01:28:38+00:00</published>
  </entry>
</feed>
