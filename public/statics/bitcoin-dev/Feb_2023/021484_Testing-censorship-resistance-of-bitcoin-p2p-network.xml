<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Testing censorship resistance of bitcoin p2p network</title>
  <updated>2023-06-16T15:30:10.441858+00:00</updated>
  <author>
    <name>vjudeu at gazeta.pl 2023-02-18 09:48:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Testing censorship resistance of bitcoin p2p network</title>
    <updated>2023-06-16T15:30:10.441858+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021484.html" rel="alternate"/>
    <summary>The message discusses the issue of spam in Bitcoin transactions. The current standardness rules allow up to 80-byte pushes, resulting in a little over 1% of spam. By consensus, which allows 520-byte pushes, it is less than 0.2%. To reduce the number of dropping opcodes, people can use "OP_2DROP" instead of "OP_DROP OP_DROP." However, this is not enough to reject an official alternative like commitments. Transactions will still be included in the chain, even if they are spam. Therefore, some kind of pruning is needed to deal with large NOPs in the chain. Switching from witness to non-witness nodes is not an option because it would require additional witness validation and invalidate signatures. One solution is to store the first and last chunk of data and keep the internal state of SHA-256 before entering the last chunk. This way, unused parts can be pruned without invalidating signatures.In response to a comment by Andrew Poelstra, the message also mentions that spammers could provide "FALSE" as a separate witness element rather than being part of the witnessScript. Banning specific script fragments could lead to the use of legitimate cases of "IF ENDIF."</summary>
    <published>2023-02-18T09:48:02+00:00</published>
  </entry>
</feed>
