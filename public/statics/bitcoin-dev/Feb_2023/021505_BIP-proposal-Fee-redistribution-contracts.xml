<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP proposal: Fee-redistribution contracts</title>
  <updated>2023-06-16T15:57:30.647026+00:00</updated>
  <author>
    <name>Rastislav Budinsky 2023-02-27 13:32:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP proposal: Fee-redistribution contracts</title>
    <updated>2023-06-16T15:57:30.647026+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021505.html" rel="alternate"/>
    <summary>The writer is working on their Bachelor's thesis which introduces a new way of collecting transaction fees. Under the proposed solution, miners will only take a fraction M of the fees while the remaining fraction C is sent to one or more contracts which collect fees from the miner and redistribute it back to them in a "smarter" way. The collected fees are averaged and rewarded to the miner without introducing new Bitcoins. Multiple contracts can be used, each averaging the collected fees over different time frames. The benefits of this proposal are discussed in the paper, mainly making mining more secure and predictable against fluctuations in fees. The writer would like opinions about the proposal and discussion of the needed parameters. Introducing the solution soon enough will not make a great difference to miners with current block rewards and the contracts will adapt before transaction fees become the main source of income for miners. As the writer has little experience in blockchain development, they are unsure if this is possible as a soft-fork, but suggest creating a generally spendable script by anyone holding the funds where the miner of the block would spend it, and the correct logic of following the contracts embedded into consensus nodes themselves, thus being a less disruptive solution to hard-fork. The paper can be found at [1].</summary>
    <published>2023-02-27T13:32:01+00:00</published>
  </entry>
</feed>
