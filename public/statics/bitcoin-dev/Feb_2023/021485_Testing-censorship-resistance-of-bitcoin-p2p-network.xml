<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Testing censorship resistance of bitcoin p2p network</title>
  <updated>2023-06-16T15:30:19.856543+00:00</updated>
  <author>
    <name>Russell O'Connor 2023-02-18 18:03:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Testing censorship resistance of bitcoin p2p network</title>
    <updated>2023-06-16T15:30:19.856543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021485.html" rel="alternate"/>
    <summary>In a message posted on the bitcoin-dev mailing list, a developer suggested that future Script upgrades could be designed in a way that allows unused parts to be pruned without invalidating signatures. However, another developer pointed out that even if pruning was implemented, it might not prevent agents from posting unused data blobs as part of their programs, since there are many mathematical expressions for what is ultimately an identity function. The Simplicity language, which is being developed with a core design principle of pruning unused case branches, still allows users to write functions that are roughly equivalent to PUSH ** DROP in Script. While Simplicity's pruning can lower costs for legitimate users, preventing spamming via unused data blobs would only add more consensus complexity and marginally raise the bar for would-be spammers.</summary>
    <published>2023-02-18T18:03:45+00:00</published>
  </entry>
</feed>
