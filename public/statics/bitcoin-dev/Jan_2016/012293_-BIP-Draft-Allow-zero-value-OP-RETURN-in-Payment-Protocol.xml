<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Draft] Allow zero value OP_RETURN in Payment Protocol</title>
  <updated>2023-06-11T03:16:48.759123+00:00</updated>
  <author>
    <name>Thomas Kerin 2016-01-26 16:19:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Draft] Allow zero value OP_RETURN in Payment Protocol</title>
    <updated>2023-06-11T03:16:48.759123+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012293.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev mailing list, Toby Padilla argued that there are already valid use cases for OP_RETURN feature and it only makes sense to fully support it. The reason it's not supported now is because the Payments protocol came before OP_RETURN. However, someone pointed out that OP_RETURN has been there from day one, and its purpose is causing script execution to end if encountered. Toby Padilla further explained that he has been exploring the area with key.run and wants the functionality for voting based on aggregate OP_RETURN value. He clarified that he does not want to store data on the blockchain, but to associate content pointers with transactions. Since OP_RETURN has already been approved and supported, he thinks that it doesn't make much sense for him to have to re-defend it from scratch.On the other hand, Luke Dashjr disagreed with Toby Padilla's viewpoint and argued that removing the cost of this hurts bitcoin, and ironically, Toby Padilla's application to a certain degree. He emphasized that just because someone can do a thing one way, it doesn't mean they should. Especially if their applications success depends on people spamming OP_RETURN hashes of every torrent they like.</summary>
    <published>2016-01-26T16:19:18+00:00</published>
  </entry>
</feed>
