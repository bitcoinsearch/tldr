<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Draft] Allow zero value OP_RETURN in Payment Protocol</title>
  <updated>2023-06-11T03:16:24.861004+00:00</updated>
  <author>
    <name>Luke Dashjr 2016-01-26 03:04:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Draft] Allow zero value OP_RETURN in Payment Protocol</title>
    <updated>2023-06-11T03:16:24.861004+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012286.html" rel="alternate"/>
    <summary>The discussion is centered around PaymentRequests and their limitations regarding OP_RETURN values. The conversation started with Toby Padilla stating that none of the reasons for using non-PaymentRequest based transactions apply to PaymentRequests. He went on to explain that PaymentRequests allow for the same types of transactions as non-PaymentRequest based transactions, but with the limitation that OP_RETURN values must be greater. In essence, PaymentRequests are like a pre-OP_RETURN environment as OP_RETURN serves a purpose and cannot be used with PaymentRequest transactions.Luke disagreed, stating that while OP_RETURN can be used, coins would need to be burned, and he saw no benefit in changing that. He believed that it was better for coins to be burned than for the system to be changed.Toby then tried to clarify his point by saying that if one were to create an OP_RETURN transaction today without this BIP, they would need a key at some point if they wanted a zero value. Luke responded by pointing out that a key was always necessary, regardless of the value being redeemed.</summary>
    <published>2016-01-26T03:04:33+00:00</published>
  </entry>
</feed>
