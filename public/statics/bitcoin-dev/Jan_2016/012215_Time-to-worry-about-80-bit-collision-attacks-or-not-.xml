<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Time to worry about 80-bit collision attacks or not?</title>
  <updated>2023-06-11T03:01:03.231466+00:00</updated>
  <author>
    <name>Gavin Andresen 2016-01-08 12:38:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Time to worry about 80-bit collision attacks or not?</title>
    <updated>2023-06-11T03:01:03.231466+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012215.html" rel="alternate"/>
    <summary>In an email conversation between Rusty Russell and Matt Corallo, they discuss the vulnerability of anything using P2SH in case of an attack on RIPEMD160. However, Russell argues that even if a collision is generated in RIPEMD160, it wouldn't help as a specific SHA256 hash for the RIPEMD160 preimage is needed. He adds that even though a preimage attack would make grinding out the SHA256 preimage easier, consensus was that if broken MD5 was used instead of RIPEMD160, Bitcoin would still be secure today because of Satoshi's use of nested hash functions everywhere. Russell opines that we will only worry about economically viable attacks in 20 years due to Moore's law but suggests that simplicity should be chosen and all software scriptPubKeys should be "RIPEMD(SHA256(WP))" for now. They also discuss the specifics of the collision attack where an attacker is in the middle of establishing a payment channel with somebody and generate about 2^81 scripts that are some form of pay-to-attacker. However, they conclude that there isn't a viable attack unless RIPEMD160 and SHA256 (or the combination) suffer a cryptographic break.</summary>
    <published>2016-01-08T12:38:50+00:00</published>
  </entry>
</feed>
