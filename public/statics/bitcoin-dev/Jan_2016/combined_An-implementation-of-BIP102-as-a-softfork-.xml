<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - An implementation of BIP102 as a softfork.</title>
  <updated>2023-06-11T02:51:08.534619+00:00</updated>
  <author>
    <name>Martijn Meijering 2015-12-30 11:16:22</name>
  </author>
  <author>
    <name>Jonathan Toomim 2015-12-30 15:00:16</name>
  </author>
  <author>
    <name>Martijn Meijering 2015-12-30 11:16:22</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:19:55</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:28:37</name>
  </author>
  <author>
    <name>Marcel Jamin 2015-12-30 13:57:08</name>
  </author>
  <author>
    <name>Nick ODell 2016-01-04 18:04:29</name>
  </author>
  <author>
    <name>Martijn Meijering 2015-12-30 11:16:22</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2015-12-30 16:27:50</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-05 01:26:59</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2015-12-30 05:46:01</name>
  </author>
  <author>
    <name>Jonathan Toomim 2015-12-30 13:29:05</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:19:55</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2015-12-30 16:27:50</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-03 03:51:26</name>
  </author>
  <author>
    <name>Jonathan Toomim 2015-12-30 13:29:05</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:31:37</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-05 01:26:59</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2015-12-30 05:46:01</name>
  </author>
  <author>
    <name>Marco Falke 2015-12-30 10:33:39</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:19:55</name>
  </author>
  <author>
    <name>Jonathan Toomim 2015-12-30 15:00:16</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-12 03:58:13</name>
  </author>
  <author>
    <name>Nick ODell 2016-01-04 18:04:29</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-03 03:51:26</name>
  </author>
  <author>
    <name>Nick ODell 2016-01-04 18:04:29</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-12 03:58:13</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2015-12-30 05:46:01</name>
  </author>
  <author>
    <name>Marco Falke 2015-12-30 10:33:39</name>
  </author>
  <author>
    <name>Jonathan Toomim 2015-12-30 15:00:16</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2015-12-30 16:27:50</name>
  </author>
  <author>
    <name>Marco Falke 2015-12-30 10:33:39</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:28:37</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:31:37</name>
  </author>
  <author>
    <name>Marcel Jamin 2015-12-30 13:57:08</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-05 01:26:59</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-12 03:58:13</name>
  </author>
  <author>
    <name>Jonathan Toomim 2015-12-30 13:29:05</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:28:37</name>
  </author>
  <author>
    <name>Peter Todd 2015-12-30 14:31:37</name>
  </author>
  <author>
    <name>Marcel Jamin 2015-12-30 13:57:08</name>
  </author>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-03 03:51:26</name>
  </author>
  <link href="bitcoin-dev/Dec_2015/012156_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012160_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012156_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012157_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012158_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012162_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012190_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012156_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012161_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012192_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012153_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012154_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012157_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012161_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012188_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012154_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012159_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012192_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012153_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012155_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012157_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012160_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012233_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012190_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012188_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012190_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012233_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012153_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012155_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012160_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012161_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012155_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012158_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012159_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012162_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012192_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012233_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012154_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012158_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012159_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012162_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012188_An-implementation-of-BIP102-as-a-softfork-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - An implementation of BIP102 as a softfork.</title>
    <updated>2023-06-11T02:51:08.534619+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012156.html" rel="alternate"/>
    <summary>The Bitcoin developer community has been discussing various proposals related to implementing changes in the Bitcoin protocol and ensuring backward compatibility. One proposal involves a softfork implementation of BIP102, which is normally a hardfork. The implementation involves constructing post-fork blocks that can be mapped to valid blocks under the pre-fork rules, allowing for a larger block-size limit without requiring all nodes on the network to upgrade. Another proposal involves using a forced soft-fork approach, which would force all nodes on the network to upgrade to the latest version of the software, but this idea has received mixed reactions. There have also been discussions around the safety of old clients not being able to see transactions and the possibility of sending multiple transactions resulting in double spends. Some suggestions have been made to require the tx version number to be increased to prevent such issues, but there are concerns about its impact on pre-signed transactions.In addition, the community is exploring different ways to avoid recursion in generalized softforks and whether a "firm" soft fork would be a better option than a hard fork or keeping the blocksize limit unchanged forever. These discussions reveal the technical details and considerations involved in proposing changes to the Bitcoin protocol and highlight the challenges in ensuring backward compatibility while implementing upgrades.A proposal for a softfork implementation of BIP102 has been shared on the bitcoin-dev mailing list to address concerns with deploying a block-size increase using a hardfork. The post-fork blocks are constructed in a way that they can be mapped to valid blocks under pre-fork rules, meaning post-fork miners are still creating a valid chain under old rules, albeit indirectly. From the POV of non-upgraded clients, BIP102s circumvents the block-size limit by moving transaction validation data "outside" of the block, similar to Segregated Witness and Extension Blocks. In a discussion on the Bitcoin-dev mailing list, Martijn Meijering expressed concerns about blocking old clients from seeing transactions. They discussed the possibility of sending multiple transactions and increasing fees in an attempt to get it confirmed. However, Peter Todd warned against this as it is dangerous to simply send multiple transactions without knowing for sure that the longest blockchain is being seen. He suggested designing software with fee-bumping to avoid this mistake. The developer community is discussing a proposal called "forced soft-fork", which would force all nodes on the network to upgrade to the latest version of the software. The proposal would involve a multi-levels-deep block-within-a-block-within-a-block approach, but proponents say that this could be simplified with careful planning. The forced soft-fork would make it easier for developers to implement new features and upgrades, but there are concerns about the potential impact on the security and stability of the Bitcoin network.In an email conversation, Marco Falke and Joe explain the concept of a "generalized" soft fork. Falke notes that the approach requires nodes to be upgraded, which is not a property of a true soft fork. He also points out that non-upgraded nodes will only have the coinbase transaction and will be susceptible to double spends. Joe argues that the terminology used to describe the approach is not important, but concedes that non-upgraded nodes would not be able to verify collected fees. He suggests that allowing the new rules to add fees implicitly could be a solution. When Falke questions the benefits of a "generalized" soft fork over a hard fork, Joe acknowledges that hard forks can be cleaner, but highlights the risk of a network split between upgraded and non-upgraded clients. He argues that using a "firm" soft fork is a better option in such cases. However, concerns have been raised about the potential impact on the security and stability of the Bitcoin network with the proposed forced soft-fork implementation. Additionally, the code itself has been deemed crufty and hackish. In a forum discussion, Nick ODell inquired about how fees were being collected from transactions in the block, and Joe suggested mapping the new-rules coinbase transaction into an old-rules legacy coinbase transaction while ensuring the mapping is not reversible. Joe has redesigned the implementation of this suggestion, which can be found in two GitHub links provided by him. The new version maps the Merkle root onto a 'legacy' coinbase transaction, which solves the problem with fees.</summary>
    <published>2015-12-30T11:16:22+00:00</published>
  </entry>
</feed>
