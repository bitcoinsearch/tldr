<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Time to worry about 80-bit collision attacks or not?</title>
  <updated>2023-06-11T03:00:52.025010+00:00</updated>
  <author>
    <name>Dave Scotese 2016-01-07 20:56:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Time to worry about 80-bit collision attacks or not?</title>
    <updated>2023-06-11T03:00:52.025010+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012201.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around whether or not extra bytes should be added to the hash function used by Bitcoin, with some arguing that 256-bit ECDSA is overkill and suggesting 160-bit instead. Gavin Andresen suggested using RIPEMD160(SHA256()) as the hash function, which would save 12 bytes, but Pieter Wuille argued that collision security is necessary and that 80 bits of storage should be encouraged. Andresen countered that it's trivial for contract wallets to protect against collision attacks, and that adding extra bytes to prevent an attack that takes 2^80 computation and 2^80 storage is unnecessary. The general question raised was whether or not we should be worried about collision attacks against RIPEMD160, with a successful brute-force collision attack requiring at least O(2^80) CPU and O(2^80) storage, which is infeasible.</summary>
    <published>2016-01-07T20:56:33+00:00</published>
  </entry>
</feed>
