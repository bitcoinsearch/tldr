<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fee smoothing</title>
  <updated>2023-06-11T03:22:42.638029+00:00</updated>
  <author>
    <name>Luzius Meisser 2016-01-27 10:12:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fee smoothing</title>
    <updated>2023-06-11T03:22:42.638029+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012299.html" rel="alternate"/>
    <summary>The proposal of only paying out 10% of the collected fees to the miner who mined the block and adding the remaining 90% to the next block's collected fees is debated. The argument against it is that miners could take payment out-of-band, which would destroy some of the idea's elegance, and rules about the transactions that can be included in a block would need to be created. The Flex Cap approach, which is an area of ongoing research, could be a viable long-term solution to aligning the miner's supply incentives with the global marginal cost. Under this approach, the block size is bursted higher on a per-block basis if the miner is willing to defer a tiny portion of the current block subsidy to pay out to the miner of later blocks. The scheme proposed for flex cap involves miners buying additional space at an exponentially increasing fee, and the price of the purchased space being subtracted from the collected fees and added to the reward of the next block. Every 1000 blocks or so, the basic cap is adjusted upwards or downwards depending on whether the average fees per KB were above or below the global cost estimate. From an economic point of view, it may be more advisable to let miners vote on block size, as proposed by others, but this could allow miners to enforce a cartel among themselves and charge monopoly prices instead of competitive prices.</summary>
    <published>2016-01-27T10:12:02+00:00</published>
  </entry>
</feed>
