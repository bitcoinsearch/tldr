<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An implementation of BIP102 as a softfork.</title>
  <updated>2023-06-11T02:49:30.357895+00:00</updated>
  <author>
    <name>joe2015 at openmailbox.org 2016-01-03 03:51:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An implementation of BIP102 as a softfork.</title>
    <updated>2023-06-11T02:49:30.357895+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012188.html" rel="alternate"/>
    <summary>In an email conversation, Marco Falke and Joe explain the concept of a "generalized" soft fork. Falke notes that the approach requires nodes to be upgraded, which is not a property of a true soft fork. He also points out that non-upgraded nodes will only have the coinbase transaction and will be susceptible to double spends. Joe argues that the terminology used to describe the approach is not important, but concedes that non-upgraded nodes would not be able to verify collected fees. He suggests that allowing the new rules to add fees implicitly could be a solution. When Falke questions the benefits of a "generalized" soft fork over a hard fork, Joe acknowledges that hard forks can be cleaner, but highlights the risk of a network split between upgraded and non-upgraded clients. He argues that using a "firm" soft fork is a better option in such cases.</summary>
    <published>2016-01-03T03:51:26+00:00</published>
  </entry>
</feed>
