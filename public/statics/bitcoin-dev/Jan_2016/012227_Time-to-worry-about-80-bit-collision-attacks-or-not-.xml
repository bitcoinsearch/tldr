<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Time to worry about 80-bit collision attacks or	not?</title>
  <updated>2023-06-11T03:04:10.231380+00:00</updated>
  <author>
    <name>Rusty Russell 2016-01-11 03:57:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Time to worry about 80-bit collision attacks or	not?</title>
    <updated>2023-06-11T03:04:10.231380+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012227.html" rel="alternate"/>
    <summary>Gavin Andresen is concerned about how long it will take to launch an attack on a 2^84 ECDSA private-&gt;public key derivation, and wants to estimate the time. He thinks that the bottleneck in generating multiple script variations would be hashing. Vanitygen can generate keypairs pretty fast and there are ways to make it even faster. Antminer S7 can do 4.73 Terahash per second for $1.2k which is a double SHA, but one can assume that RIPEMD160(SHA256()) is of the same speed. According to Andresen's calculations, it would take over 200 million S7s to perform 3*2^80 in an hour which is equivalent to 766,760,562,123 seconds. If someone wanted to perform this attack for $1M, they would have to wait 27 years and hope Moore's Law holds. One of his colleagues pointed out that this attack could be used against a site like bitrated.com which publishes one side's pubkey, providing a much longer attack window.Interestingly, the bitcoin network is doing this much work every 57 days, costing around $92M. If that's all the attack costs, it's less than $1M in 10 years.</summary>
    <published>2016-01-11T03:57:15+00:00</published>
  </entry>
</feed>
