<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Draft] Allow zero value OP_RETURN in Payment Protocol</title>
  <updated>2023-06-11T03:17:11.874375+00:00</updated>
  <author>
    <name>Toby Padilla 2016-01-26 17:44:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Draft] Allow zero value OP_RETURN in Payment Protocol</title>
    <updated>2023-06-11T03:17:11.874375+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012296.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around the support for OP_RETURN, a feature that was not part of isStandard from the beginning but later became necessary to support. It was added because without it people may use more heinous methods to encode data on the blockchain. The concern over spam transactions arises as many believe that valid transactions someone willingly pays for are never spam. PaymentRequests would be an inefficient way to spam as it would require customers to initiate and pay for each transaction. Those opposed to this compromise fear that if PaymentRequests take off like wildfire, millions of people will use them, creating small transactions. However, this can be seen as a win for Bitcoin as it will help spread support for the Payment protocol. There's no need to police other people's use of the protocol, and as long as a transaction pays its fee and has a greater than dust value, there's no objection to it. Some members suggest that removing the cost of supporting OP_RETURN hurts Bitcoin, and it should not be allowed just because applications' success depends on people spamming OP_RETURN hashes of every torrent they like.</summary>
    <published>2016-01-26T17:44:48+00:00</published>
  </entry>
</feed>
