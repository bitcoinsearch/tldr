<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Better MMR Definition</title>
  <updated>2023-06-11T21:40:46.316360+00:00</updated>
  <author>
    <name>Bram Cohen 2017-02-25 06:23:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Better MMR Definition</title>
    <updated>2023-06-11T21:40:46.316360+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013624.html" rel="alternate"/>
    <summary>In an email conversation, Peter Todd and another individual discussed the efficiency of using insertion order as an index. Although the individual did not propose this idea, they mentioned its potential benefits, such as smaller indexed values resulting in less memory usage and more locality. Peter Todd commented on the individual's implementation of a merkle-set in Python, stating that it was daunting to review due to its lack of comments, but the reference implementation was less than 300 lines and extensively tested. He contrasted this with his own Python MMR implementation which was 300 lines long, well-commented, and had a 200 line explanation at the top, but had received little feedback. Peter Todd suggested that the codebase should be ported to C for accurate performance testing and that a human-readable pitch would help explain the advantages of the code. Overall, the implementation aims to improve cache coherence during operations by pulling in nearby memory instead of jumping around.</summary>
    <published>2017-02-25T06:23:20+00:00</published>
  </entry>
</feed>
