<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Generalized Commitments</title>
  <updated>2023-06-11T21:46:24.342305+00:00</updated>
  <author>
    <name>Peter Todd 2017-02-23 01:26:11</name>
  </author>
  <author>
    <name>Peter Todd 2017-02-23 01:26:11</name>
  </author>
  <author>
    <name>Bram Cohen 2017-02-23 02:56:35</name>
  </author>
  <author>
    <name>Peter Todd 2017-02-23 01:26:11</name>
  </author>
  <author>
    <name>Bram Cohen 2017-02-23 02:56:35</name>
  </author>
  <author>
    <name>Bram Cohen 2017-02-23 02:56:35</name>
  </author>
  <link href="bitcoin-dev/Feb_2017/013593_Generalized-Commitments.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013593_Generalized-Commitments.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013594_Generalized-Commitments.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013593_Generalized-Commitments.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013594_Generalized-Commitments.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013594_Generalized-Commitments.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Generalized Commitments</title>
    <updated>2023-06-11T21:46:24.342305+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013593.html" rel="alternate"/>
    <summary>Bram Cohen proposed a 'generalized commitment' concept for reducing the amount of hashing required in bitcoin-dev discussions. The proposal suggests that when one side of a node is empty and the other contains exactly two things, the secure hash of the child is adopted verbatim rather than rehashing it. This can halve the amount of hashing done and make it more resistant to malicious data but comes with some extra complexity. Cohen explains that a commitment scheme only needs to ensure that it's not possible to find two messages that map to the same commitment. Peter Todd suggests designing a scheme where the commitment to short messages is the message itself, adding just a single bit of data to the minimum serialized size of the commitment. However, sacrifices must be made for all values to be the same size, resulting in sacrificing two bits of security to allow for four values: terminal, middle, empty, and invalid. The root of a set containing a single value is just that value with the two high order bits of the first byte reset to the appropriate value. Commitments do not need to always be the same size. If message privacy is required, an explicit nonce should be implemented instead of relying on the data to not be brute-forcable. Finally, Bram Cohen notes that he is increasingly considering bit-granularity serialization schemes for these types of systems.</summary>
    <published>2017-02-23T01:26:11+00:00</published>
  </entry>
</feed>
