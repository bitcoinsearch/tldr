<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposal for utxo commitment format</title>
  <updated>2023-06-11T21:36:04.504084+00:00</updated>
  <author>
    <name>Bram Cohen 2017-02-21 22:00:23</name>
  </author>
  <author>
    <name>Bram Cohen 2017-02-21 22:00:23</name>
  </author>
  <author>
    <name>Bram Cohen 2017-02-21 22:00:23</name>
  </author>
  <link href="bitcoin-dev/Feb_2017/013590_Proposal-for-utxo-commitment-format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013590_Proposal-for-utxo-commitment-format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013590_Proposal-for-utxo-commitment-format.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposal for utxo commitment format</title>
    <updated>2023-06-11T21:36:04.504084+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013590.html" rel="alternate"/>
    <summary>The provided link shares information about the Merkle set data structure, which is a simple format and a Patricia Trie. It can be used for distributed computation requiring an audit trail and can also come in handy for utxo commitments in Bitcoin blocks. The internal hashing function used in this data structure is blake2s, which is faster than sha256 on 512-bit inputs. However, it sacrifices two bits of security to include metadata inline, reducing the CPU cost of hashing by half.This data structure has another clever feature where the secure hash of the child is adopted verbatim rather than rehashing it when one side of a node is empty and the other contains exactly two items. This reduces the amount of hashing done, makes it more resistant to malicious data, and simplifies implementation details at the cost of some extra complexity.The code for this data structure has both a simple reference implementation and a performance-optimized non-reference implementation that is more cache coherent. However, to realize the potential performance gains, it needs to be ported to C. Overall, the Merkle set data structure provides a useful tool for distributed computation and Bitcoin blocks with its efficient hashing function and clever features.</summary>
    <published>2017-02-21T22:00:23+00:00</published>
  </entry>
</feed>
