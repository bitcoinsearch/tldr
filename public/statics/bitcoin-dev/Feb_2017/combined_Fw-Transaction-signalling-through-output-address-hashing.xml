<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fw: Transaction signalling through output address hashing</title>
  <updated>2023-06-11T21:25:58.371558+00:00</updated>
  <author>
    <name>John Hardy 2017-02-05 21:06:19</name>
  </author>
  <author>
    <name>John Hardy 2017-02-05 21:06:19</name>
  </author>
  <author>
    <name>John Hardy 2017-02-05 21:06:19</name>
  </author>
  <link href="bitcoin-dev/Feb_2017/013545_Fw-Transaction-signalling-through-output-address-hashing.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013545_Fw-Transaction-signalling-through-output-address-hashing.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013545_Fw-Transaction-signalling-through-output-address-hashing.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fw: Transaction signalling through output address hashing</title>
    <updated>2023-06-11T21:25:58.371558+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013545.html" rel="alternate"/>
    <summary>In a Bitcoin-dev email thread, the idea of transaction signaling through output address hashing was discussed. The main concern raised was the probabilistic collisions that would occur at 4 characters length, but they were deemed statistically insignificant. Wallet implementation of this method would be easy and just require a loop of existing address generation until a match is found. Wallets could provide a dropdown menu showing commonly used signals or allow for write-ins. Signaling within OP_RETURN increases the tx size and cost, but using this address hashing method keeps the cost of voting off the chain, ensuring that it doesn't get passed on to everyone with the insertion of additional data. It's worth noting that CryptoVoter, a similar idea, has been introduced and deserves more attention.</summary>
    <published>2017-02-05T21:06:19+00:00</published>
  </entry>
</feed>
