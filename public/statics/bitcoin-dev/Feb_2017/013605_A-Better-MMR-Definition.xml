<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Better MMR Definition</title>
  <updated>2023-06-11T21:38:26.244400+00:00</updated>
  <author>
    <name>Bram Cohen 2017-02-23 23:13:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Better MMR Definition</title>
    <updated>2023-06-11T21:38:26.244400+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013605.html" rel="alternate"/>
    <summary>The discussion thread on the bitcoin-dev mailing list revolves around the benefits and challenges of implementing UTXO commitments in blocks. The main benefit is that it enables actual proofs of non-fraud, allowing users to prove the validity of a block based on just the previous block and can prove to a light node that a UTXO hasn't been spent yet. However, a major factor in getting UTXO commitments in blocks is performance as the txo set is much larger and unwieldy. The author believes that with appropriate format and implementation tricks, it's possible to get good enough performance to no longer be a gating factor to deployment. Despite this, there has been no feedback about the author's implementation, only general discussion about merkle sets.</summary>
    <published>2017-02-23T23:13:43+00:00</published>
  </entry>
</feed>
