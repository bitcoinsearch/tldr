<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP151 protocol incompatibility</title>
  <updated>2023-06-11T21:31:56.602746+00:00</updated>
  <author>
    <name>Jonas Schnelli 2017-02-13 10:07:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP151 protocol incompatibility</title>
    <updated>2023-06-11T21:31:56.602746+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013568.html" rel="alternate"/>
    <summary>When discussing Bitcoin Improvement Proposals (BIPs), it is important to note that not all BIPs follow the same pattern, and it is not helpful to imply that they do. Examples of BIPs that deviate from this pattern are feefilter BIP 133 and sendheaders BIP 130. Once BIP 151 is implemented, it may be appropriate to bump the protocol version, but this should only be done after implementation and deployment. In terms of denial-of-service (DOS) attacks, waste of bandwidth is a significant concern. If a peer floods a node with addr messages, the node can manage it because it understands the semantics of these messages. However, if a node is required to allow any message that it cannot understand, it has no recourse to determine whether it is under attack or if the behavior is correct for proper operation. It is important to consider how unknown message types are handled in general, as any peer can send any type of message at any time, regardless of whether it is specified in a BIP.</summary>
    <published>2017-02-13T10:07:12+00:00</published>
  </entry>
</feed>
