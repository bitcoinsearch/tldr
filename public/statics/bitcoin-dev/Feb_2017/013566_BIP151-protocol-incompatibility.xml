<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP151 protocol incompatibility</title>
  <updated>2023-05-20T00:56:37.217683+00:00</updated>
  <author>
    <name>Pieter Wuille 2017-02-13 08:47:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP151 protocol incompatibility</title>
    <updated>2023-05-20T00:56:37.217683+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013566.html" rel="alternate"/>
    <summary>On February 12, 2017, Eric Voskuil posted a message on bitcoin-dev stating that the BIP151 proposal is not actually backward compatible, despite what was stated in the proposal. The reason for this is that sending content that current nodes do not expect can lead to incompatibilities and make the implementation vulnerable to DOS attacks. Furthermore, the version handshake must be completed before the protocol level can be determined. While ignoring unknown messages may only lead to a waste of downstream bandwidth, using the protocol level for determining optional features is more elegant, simple, and does not create new attack vectors. This is because using otherwise ignored messages allows for a strict linear progression of allowed network protocol features, which becomes increasingly difficult to maintain with continued increments of the protocol version. In summary, Voskuil's message on bitcoin-dev highlights issues with the BIP151 proposal's claim of backward compatibility and suggests an alternative approach to determining optional features within the protocol.</summary>
    <published>2017-02-13T08:47:38+00:00</published>
  </entry>
</feed>
