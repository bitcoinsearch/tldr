<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Better MMR Definition</title>
  <updated>2023-06-11T21:38:15.206714+00:00</updated>
  <author>
    <name>Bram Cohen 2017-02-28 23:10:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Better MMR Definition</title>
    <updated>2023-06-11T21:38:15.206714+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013655.html" rel="alternate"/>
    <summary>In an email exchange between G. Andrew Stone and an unknown recipient, Stone raises a concern about the efficiency of lookups when prevouts are not specified by block height, tx index, output index or TXO index. The recipient suggests using a lookup table going from prevouts to txo index, which is relatively fast due to the use of a hashtable (a single cache miss) instead of a tree (logarithmic cache misses). The recipient also mentions that using txout has a purported benefit of clustering updates, resulting in less hashing and cache misses. However, they believe that the benefits are small and that transaction ordering has much larger potential for compression. This is because information about lots of things can be crammed into a single leaf node due to their small differences from each other. Additionally, simple implementation tricks have already been implemented to ensure that items near each other in the tree are also near each other in memory, providing further benefits.</summary>
    <published>2017-02-28T23:10:16+00:00</published>
  </entry>
</feed>
