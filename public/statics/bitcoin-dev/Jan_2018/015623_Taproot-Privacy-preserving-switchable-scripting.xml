<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taproot: Privacy preserving switchable scripting</title>
  <updated>2023-06-13T00:05:57.241729+00:00</updated>
  <author>
    <name>Mark Friedenbach 2018-01-23 14:39:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taproot: Privacy preserving switchable scripting</title>
    <updated>2023-06-13T00:05:57.241729+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015623.html" rel="alternate"/>
    <summary>The email thread discusses the use of merkelized abstract syntax trees (MAST) in Bitcoin. The main benefits of MAST are efficiency and privacy. The author argues that any contract with a fixed, finite participant set can be represented as an OR between an N-of-N and a more complex contract. The author introduces Taproot, a new approach to MAST that makes it indistinguishable from a normal one-party signature, without any overhead in the common case. Taproot supports any number of participants and allows the largest possible anonymity set for fixed party smart contracts by making them look like the simplest possible payments. The author suggests that the correct approach is to add support for generic features to accomplish the underlying goal in a user programmable way, and then consider ways in which common use cases can be made more efficient through output specialization. The author believes that the optimal MAST structure cannot be determined until the wider community puts it into production and explores edge cases.</summary>
    <published>2018-01-23T14:39:37+00:00</published>
  </entry>
</feed>
