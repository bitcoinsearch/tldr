<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Fix or withdraw BIP120/121?</title>
  <updated>2023-05-20T05:03:42.394711+00:00</updated>
  <author>
    <name>Kalle Rosenbaum 2018-01-26 15:52:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Fix or withdraw BIP120/121?</title>
    <updated>2023-05-20T05:03:42.394711+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015660.html" rel="alternate"/>
    <summary>In a recent communication, Kalle Rosenbaum identifies an inherent problem with BIP120, Proof of Payment. In particular, he points out that if there is a soft fork, a server that verifies PoPs will accept a PoP as valid without checking any of the new Bitcoin rules. The issue arises because a server will be fooled by a segwit transaction, since it doesn't have a witness to verify and hence will accept any PoP with an empty scriptSig. Apart from this issue, on-chain payments are no longer in demand, and interest or need for PoP as a concept seems low. Kalle admits that he has no good solution for the soft fork problem. Requiring all software using PoP to upgrade to a new PoP specification on each soft-fork is not good enough. He invites any ideas on how to fix the problem.If there is no good solution to the soft-fork issue, Kalle suggests withdrawing BIP120 and BIP121. He notes that Mycelium currently implements BIP120, but he is uncertain if any other software aside from his own implements it. He requests information about such implementations so that he can discuss them.</summary>
    <published>2018-01-26T15:52:10+00:00</published>
  </entry>
</feed>
