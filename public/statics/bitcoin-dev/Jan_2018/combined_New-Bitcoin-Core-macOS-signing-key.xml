<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New Bitcoin Core macOS signing key</title>
  <updated>2023-06-12T23:48:17.499734+00:00</updated>
  <author>
    <name>Cory Fields 2018-02-01 01:14:45</name>
  </author>
  <author>
    <name>Cory Fields 2018-01-12 05:04:44</name>
  </author>
  <author>
    <name>nullius 2018-01-12 10:14:11</name>
  </author>
  <author>
    <name>Cory Fields 2018-01-12 05:04:44</name>
  </author>
  <author>
    <name>Peter Todd 2018-01-12 08:54:12</name>
  </author>
  <author>
    <name>nullius 2018-01-12 10:14:11</name>
  </author>
  <author>
    <name>Cory Fields 2018-01-12 05:04:44</name>
  </author>
  <author>
    <name>Peter Todd 2018-01-12 08:54:12</name>
  </author>
  <author>
    <name>Cory Fields 2018-02-01 01:14:45</name>
  </author>
  <author>
    <name>Peter Todd 2018-01-12 08:54:12</name>
  </author>
  <author>
    <name>Cory Fields 2018-02-01 01:14:45</name>
  </author>
  <author>
    <name>nullius 2018-01-12 10:14:11</name>
  </author>
  <link href="bitcoin-dev/Feb_2018/015698_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015542_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015545_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015542_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015543_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015545_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015542_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015543_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2018/015698_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015543_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2018/015698_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2018/015545_New-Bitcoin-Core-macOS-signing-key.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New Bitcoin Core macOS signing key</title>
    <updated>2023-06-12T23:48:17.499734+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-February/015698.html" rel="alternate"/>
    <summary>Bitcoin Core's macOS code signing certificate has expired, necessitating the establishment of a new threshold signing scheme to handle code signing without any single point of failure. Releases will continue to be signed with a new certificate while the new threshold signing scheme is being developed. A new public key has been generated for Bitcoin Core releases starting with 0.16.0rc1 due to an error in the previously published key that was created for iPhone OS instead of macOS.Meanwhile, Peter Todd, a developer, raised concerns regarding the effectiveness of OpenTimestamps (OTS) when verifying an important certificate in the Bitcoin software. While OTS extracted a timestamped proof of existence for the BitcoinFoundation_Apple_Cert.pem file within the repo, it failed to prove who had put it there. Todd explained that if someone could create a collision between the real certificate and one for which they had the private key, they could switch them at a later date. Furthermore, Todd found a security hole related to clearsigned PGP recently. He suggests using a detached signature or piping gpg --verify -o - to grep instead of separating verification from use of data.In the bitcoin-dev mailing list, Todd shared information on how to use the `-signer` option to write the signer's certificate to a file in OpenSSL, which can then be compared to the one from the repository. He also discussed the integration of OpenTimestamps with git and its ability to attest data existed as of Oct 13, 2016, for the certificate from the repo. However, he questioned the effectiveness of the proof generated by those commands since there was no proof of who put it there. Additionally, Todd proposed solutions using PGP, such as not using clearsigning, using a detached signature, or having shell scripts written by someone with knowledge of security.The email conversation on the bitcoin-dev mailing list suggested using openssl smime to verify the certificate that was used to sign Bitcoin Core binaries. The -ignore_critical flag is required to ignore Apple specific critical extensions that OpenSSL doesn't understand, and -purpose any allows the purpose == smimesign check to be skipped since the certificate is only authorized to sign code, not arbitrary messages. However, the signature will fail to validate as the certificate has expired. If openssl doesn't have the Apple Certificate Authority in its CA list, -noverify needs to be added.To timestamp the signed message on the Bitcoin blockchain, OpenTimestamps was used. An ots file containing the timestamp proof is attached, along with a PKCS7 encoded file with the encryption key MCVVMCCCdK9a7psn2QMAkGBSsOAwIaBQCggbEw. Additionally, there is a signature in OpenDocument format named expire.txt.sig.ots. However, the URL for the attachment is not provided in the context.</summary>
    <published>2018-02-01T01:14:45+00:00</published>
  </entry>
</feed>
