<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ScriptPubkey consensus translation</title>
  <updated>2023-06-12T23:56:15.532861+00:00</updated>
  <author>
    <name>CryptAxe 2018-01-18 19:56:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ScriptPubkey consensus translation</title>
    <updated>2023-06-12T23:56:15.532861+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015582.html" rel="alternate"/>
    <summary>In a discussion about newer more efficient pubkey types, Gregory Maxwell raises the question of whether these changes would make spending already existing outputs more efficient. He explains that the redemption instructions for existing outputs have already been set and don't incorporate these new features, so people are not forced to expose their funds to new cryptosystems whose security they may not trust. However, if a more efficient system were widely used and universally accepted, it might be plausible to include in a hardfork a consensus rule that lets someone spend scriptPubkey's matching specific templates as though they were an alternative template. The main limitation is that there is some risk of breaking the security assumptions of some complicated external protocol, but this concern can largely be addressed by ample communication in advance. Overall, people should be allowed to opt-in to systems and big changes like that, rather than having developers change what their outputs mean or open them up to new security risks on their behalf.</summary>
    <published>2018-01-18T19:56:41+00:00</published>
  </entry>
</feed>
