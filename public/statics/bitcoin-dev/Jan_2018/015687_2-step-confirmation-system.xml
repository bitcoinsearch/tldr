<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>2 step confirmation system</title>
  <updated>2023-06-13T00:13:11.057021+00:00</updated>
  <author>
    <name>Weiwu Zhang 2018-01-30 01:23:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>2 step confirmation system</title>
    <updated>2023-06-13T00:13:11.057021+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015687.html" rel="alternate"/>
    <summary>The email thread discusses two major concerns regarding Bitcoin. The first concern is the fear of losing bitcoin due to a mistake while entering the address. To address this issue, the beneficiary's wallet can generate a signed payment request instead of just an address. This method ensures that the sender cannot generate a payment request for the merchant as they do not have the merchant's key. Another way to address this issue is to send the transaction to the beneficiary in a private channel instead of broadcasting it. The beneficiary will not broadcast the transaction if he would not receive money as a result of it or if he sees the transaction was not constructed correctly to his wish. This method solves another use-case: deniable payment.The second concern is about having the option to use some sort of 2-step confirmation system when dealing with people they do not know. In such cases, the escrow system can be used with or without an arbitrator. Without an arbitrator, the case usually depends on time or revealing x to a known hash. With an arbitrator, the system can be elaborately built in a sheltered model where a compromised arbitrator can only revert transactions but not steal. All of the methods mentioned in the email do not require any change to the Bitcoin network or blockchain. A wallet developer can implement all these approaches without negotiating with Bitcoin developers.</summary>
    <published>2018-01-30T01:23:13+00:00</published>
  </entry>
</feed>
