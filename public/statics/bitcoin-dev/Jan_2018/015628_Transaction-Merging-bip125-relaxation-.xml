<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transaction Merging (bip125 relaxation)</title>
  <updated>2023-05-20T05:02:25.161844+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-01-23 21:31:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transaction Merging (bip125 relaxation)</title>
    <updated>2023-05-20T05:02:25.161844+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015628.html" rel="alternate"/>
    <summary>In a recent email exchange on the bitcoin-dev mailing list, Peter Todd expressed surprise at the notion that most transactions don't have change. He argued that most use-cases result in almost all transactions having change, as it's uncommon for inputs to match the exact payment requested. However, getting no change is possible with a smart algorithm selecting coins when there are a sufficient number of outputs well under the value being paid. The number of ways n choose m combines grows exponentially, and the goal is to get close enough to the right value so that excess fees are equal to or less than the cost of change. This should include the current cost output itself as well as an estimated cost of the future signature to spend it. Achow101 and Murch have created a code to implement an efficient algorithm for finding these solutions for Bitcoin core which will hopefully be included soon.</summary>
    <published>2018-01-23T21:31:00+00:00</published>
  </entry>
</feed>
