<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transaction Merging (bip125 relaxation)</title>
  <updated>2023-06-12T23:59:42.841751+00:00</updated>
  <author>
    <name>Sjors Provoost 2018-01-28 16:43:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transaction Merging (bip125 relaxation)</title>
    <updated>2023-06-12T23:59:42.841751+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015668.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev, users suggest modifying the rules of BIP125 to allow retroactive transaction merging to be more appealing. One user suggests that merging after-the-fact is more practical than appending existing transactions. Another user proposes dropping rule 3 and only having a fee per weight unit increase from rule 4. Rule 4 could be made stricter to address concerns about relay spam. The proposal may not be backward compatible but as long as there are enough nodes that follow the new rules, it should not matter. There is no punishment for relaying transactions that violate rule 3. Regarding the issue with pushing others' txs out of the mempool, one user asks for elaboration. Another user suggests that wallets (of users who deposit coins) will cooperate with an exchange API to consolidate in-mempool transactions. A potential problem with relaxing the rules of BIP125 is the complexity involved in smarter type of merging. If the retroactive transaction merge fails, or doesn't get confirmed, it has no impact. However, the rules of BIP125 currently make it unappealing because the absolute amount of fees cannot be lowered. Therefore, some users suggest relaxing the rules to support this approach if it can be done in a pretty risk-free way.</summary>
    <published>2018-01-28T16:43:34+00:00</published>
  </entry>
</feed>
