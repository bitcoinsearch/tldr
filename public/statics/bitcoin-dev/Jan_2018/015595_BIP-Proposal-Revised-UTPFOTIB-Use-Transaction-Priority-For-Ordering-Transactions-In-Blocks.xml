<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Proposal: Revised: UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks</title>
  <updated>2023-06-12T22:46:04.552652+00:00</updated>
  <author>
    <name>Damian Williamson 2018-01-21 05:49:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Proposal: Revised: UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks</title>
    <updated>2023-06-12T22:46:04.552652+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015595.html" rel="alternate"/>
    <summary>Damian Williamson has proposed a Bitcoin Improvement Proposal called "UTPFOTIB," which stands for "Use Transaction Priority For Ordering Transactions In Blocks." The proposal aims to address the issue of transactional reliability in Bitcoin by suggesting a method that validates full transaction reliability and enables scalability of Bitcoin. The proposal suggests using transaction priority for ordering transactions in blocks to ensure that all valid transactions are confirmed in due time. However, there are two issues that need to be resolved to achieve this: the current transaction bandwidth limit and the current ad-hoc methods of including transactions in blocks resulting in variable and confusing confirmation times for valid transactions. Williamson argues that the current auction model for limited transaction bandwidth is wrong and not suitable for a reliable transaction system. He proposes a fee for priority service auction model instead. The proposed solution suggests providing each valid transaction in the mempool with an individual transaction priority before choosing transactions to include in the current block. Nodes will need to keep track of when a transaction is first seen, and a dynamic target block size should be used to make the current block. Miners will likely want to conform to the proposal since it maximizes total fees paid per block without reducing reliability. A new network service should be constructed to meet this need. Under this proposal, the mempool can grow quite large while the confirmation service continues in a stable and reliable manner. Several incentives for attackers are removed, where there is no longer multiple potential incentives for unnecessarily filling blocks or flooding the mempool with transactions, whether such transactions are fraudulent, valid or otherwise.Williamson acknowledges that the math necessary for the statistical function might be outside the scope of his formal education, so he would require someone to develop what is necessary. If it turns out that this is not ultimately possible, then the proposal would need to be abandoned since validation must be necessary. Blocks created with cheating should be too unlikely. There has been concern expressed over spam and very low fee transactions resulting in infinite block size. Williamson hopes that using dust level addresses will address this issue, especially as the value of Bitcoin grows. In the future, Bitcoin could operate with a network of dedicated full blockchain &amp; mempool servers to overcome challenges and offer several benefits, including to the operation of this proposal, especially as the RAM and storage requirements of a full node grows.Williamson has done as much with this proposal as he feels he is able so far but continues to take feedback. The BIP proposal is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. The previous threads for this proposal are available on the Bitcoin Protocol Discussion list.</summary>
    <published>2018-01-21T05:49:25+00:00</published>
  </entry>
</feed>
