<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why is deriving public key from the signature not used in Segwit?</title>
  <updated>2023-06-13T00:14:05.686878+00:00</updated>
  <author>
    <name>Aymeric Vitte 2018-01-24 10:24:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why is deriving public key from the signature not used in Segwit?</title>
    <updated>2023-06-13T00:14:05.686878+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015645.html" rel="alternate"/>
    <summary>A member of the bitcoin-dev mailing list asked why public keys are still included in SegWit witnesses, even though they can be derived from signatures. Another member responded that leaving out public keys would slow down verification, be incompatible with batch validation, not save space if hashing isn't used, and could potentially be patent-encumbered. However, another individual on the list pointed out that public keys are now included in standard P2PKH transactions as well, whereas previously they were not. The questioner asked for more information about what motivated this change and when it occurred. They also wondered which element in the code "decided" to reject transactions without public keys. The original poster provided links to their GitHub pages for Bitcoin and Zcash wallets, as well as a dynamic blocklist for torrents.</summary>
    <published>2018-01-24T10:24:55+00:00</published>
  </entry>
</feed>
