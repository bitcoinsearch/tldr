<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taproot: Privacy preserving switchable scripting</title>
  <updated>2023-06-13T00:06:36.048790+00:00</updated>
  <author>
    <name>Tim Ruffing 2018-01-24 15:38:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taproot: Privacy preserving switchable scripting</title>
    <updated>2023-06-13T00:06:36.048790+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015654.html" rel="alternate"/>
    <summary>In an email to the bitcoin-dev mailing list, Natanael raised a concern about the risk of interception and insertion of a new commitment to transactions in the blockchain. He suggested a mining policy where conflicting transactions with commitments are resolved by giving priority to the transaction with the oldest commitment. However, he acknowledged that detecting conflicting transactions with commitments older than confirmed transactions is not obvious.Later on, Tim proposed a different solution to the problem. His proposal involves committing H(classic_pk, tx) and tx to the blockchain and waiting for confirmation before revealing classic_pk in the blockchain. This way, the transaction in the first valid commitment wins, even if an attacker intercepts classic_pk. The decommitment is canonical now, which means that for all commitments, the decommitment is just classic_pk. Tim also noted that Taproot or a similar technology would be useful for outputs generated in the future since it allows for both classical and quantum-secure signature schemes.Overall, the discussion on the bitcoin-dev mailing list revolved around the risks and solutions related to interception and insertion of commitments in transactions in the blockchain. The proposals put forward by Natanael and Tim sought to minimize these risks and ensure the integrity of the blockchain.</summary>
    <published>2018-01-24T15:38:11+00:00</published>
  </entry>
</feed>
