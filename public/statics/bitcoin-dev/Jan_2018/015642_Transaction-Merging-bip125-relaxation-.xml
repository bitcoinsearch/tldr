<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transaction Merging (bip125 relaxation)</title>
  <updated>2023-06-13T00:01:07.265586+00:00</updated>
  <author>
    <name>Peter Todd 2018-01-24 07:28:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transaction Merging (bip125 relaxation)</title>
    <updated>2023-06-13T00:01:07.265586+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015642.html" rel="alternate"/>
    <summary>In a recent Bitcoin-dev discussion, Gregory Maxwell pointed out that it is quite easy to get no change with a not-dumb algorithm selecting coins if you have a decent number of outputs well under the value you're paying. The number of ways n choose m combines grows exponentially, and you only need to get close enough over the right value so that you're paying excess fees equal or less than the cost of the change. Achow101 and Murch have code to implement an efficient algorithm for finding these solutions for Bitcoin Core which will hopefully get in soon. Peter Todd responded to this by saying that most transactions do indeed have change, as it's rare for the inputs to exactly match the requested payment, but he acknowledged that Rhavar's usage patterns could be different where a large number of deposits are aggregated into a smaller number of payments. Todd also noted that his criticism was premature, especially since this use-case is particularly interesting for using tx replacement to add outputs.</summary>
    <published>2018-01-24T07:28:35+00:00</published>
  </entry>
</feed>
