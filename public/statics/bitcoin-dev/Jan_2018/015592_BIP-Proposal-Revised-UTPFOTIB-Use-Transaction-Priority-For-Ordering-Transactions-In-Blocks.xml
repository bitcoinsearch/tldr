<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Proposal: Revised: UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks</title>
  <updated>2023-06-12T22:49:00.748969+00:00</updated>
  <author>
    <name>Alan Evans 2018-01-20 14:46:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Proposal: Revised: UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks</title>
    <updated>2023-06-12T22:49:00.748969+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015592.html" rel="alternate"/>
    <summary>In January 2018, a revised BIP proposal was made to address the issue of transactional reliability in Bitcoin. The current ad-hoc methods of including transactions in blocks result in variable and confusing confirmation times for valid transactions, including those with a valid fee that may never confirm. The proposal aims to resolve this problem by suggesting a fee for priority service auction model rather than an auction model for limited bandwidth. It also suggests defining any transaction as valid with a fee of at least 0.00001000 BTC/KB as defined as the dust level.The proposal recommends providing each valid transaction with an individual transaction priority, which is a function of fee and waiting time in the transaction pool. This priority determines the likelihood of a transaction being included in the current block. The proposal aims to maximize transaction reliability, scalability, possibility for consumer and business uptake, total fees paid per block, and market determines fee paid for transaction priority. However, without a consensus as to what size dynamic block to create, enforcement of dynamic block size is not currently possible.Some people have raised concerns about miners being free to choose their own priority, which could result in cheating due to the anonymity of mining, low negative effect of a single cheating instance, and financial incentive to cheat. There have also been discussions on revising the curves used in the proposal to make it more scientific. Damian Williamson is seeking help from capable analysts/programmers to work on a BIP proposal as co-author.To overcome the transaction bandwidth limit of Bitcoin and ensure transaction reliability, the proposal offers a solution that recommends using probability in transaction priority order until the target block size is met. A new network service is suggested to meet the requirement of enabling future changes to the way blocks are constructed. Nodes must have a loose understanding of the average size of the transaction pool, and the service should accept communication of the number of valid transactions in the mempool of another valid Bitcoin node along with the Serial Node ID of the node whose value is provided.The proposal titled "Use Transaction Priority For Ordering Transactions In Blocks" by Damian Williamson outlines a solution for verifying blocks in the Bitcoin network. The proposed solution involves using a fee-based auction system where transactions with higher fees are given priority in being added to the limited transaction space per block. The proposal also suggests the possibility of using probability distribution curves to verify that all transactions included in a block conform to a certain probability, and proposes the idea of a network of dedicated full blockchain &amp; mempool servers in the future.The proposal addresses concerns about spam and low-fee transactions potentially resulting in an infinite block size and offers solutions such as using dust level addresses. The author emphasizes the necessity of finding a method to validate full transaction reliability and enable scalability in the Bitcoin network. The proposal is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</summary>
    <published>2018-01-20T14:46:41+00:00</published>
  </entry>
</feed>
