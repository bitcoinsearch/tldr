<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Raise default datacarriersize to 220 byte or higher</title>
  <updated>2023-06-12T23:24:25.237387+00:00</updated>
  <author>
    <name>mbde at bitwatch.co 2018-01-04 19:38:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Raise default datacarriersize to 220 byte or higher</title>
    <updated>2023-06-12T23:24:25.237387+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015497.html" rel="alternate"/>
    <summary>In a mailing list post, dexx proposed raising the default datacarriersize to 220 byte or higher to disincentivize the use of harmful methods to embed data into the blockchain. The proposal is aimed at making OP_RETURN scripts the cheapest way to embed data into the chain. Currently, embedding data with bare-multisig and P2SH can be cheaper in terms of effective transaction size compared to OP_RETURN with a payload limit of 80 bytes. However, both methods have been heavily used by the major two meta-protocols on top of Bitcoin: Omni and Counterparty, but both protocols started to use OP_RETRUN data embedding a long time ago. Despite this, token sends are usually done one by one, each with a single transaction, placing a heavy burden on the whole network when an exchange sends out withdrawals. Solutions for "multi-sends with multi-inputs" are available, and moving destinations into the payload for token sends has also been considered, but more space is needed, otherwise, this solution would be limited to very few recipients. During December 2017, there were roughly 210,000 Omni Layer transactions, with more than 12,000 transactions on peak days, and the numbers are growing. It's assumed that there is a similar number of Counterparty transactions, which most likely benefit from additional payload space too.</summary>
    <published>2018-01-04T19:38:23+00:00</published>
  </entry>
</feed>
