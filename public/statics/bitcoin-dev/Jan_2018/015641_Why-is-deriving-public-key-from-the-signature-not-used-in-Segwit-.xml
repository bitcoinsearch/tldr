<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why is deriving public key from the signature not used in Segwit?</title>
  <updated>2023-05-20T05:03:05.756796+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-01-24 04:25:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why is deriving public key from the signature not used in Segwit?</title>
    <updated>2023-05-20T05:03:05.756796+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015641.html" rel="alternate"/>
    <summary>In a bitcoin-dev email thread, Артём Литвинович questioned the rationale behind having both public key and signature in Segwit witness. He suggested that since the public key can be derived from the signature and a quadrant byte, leaving out the public key would have saved 33 bytes per signature. However, it was pointed out that this method is slow to verify and incompatible with batch validation. Additionally, it doesn't save space if hashing isn't used, and could potentially be patent encumbered. The reason for keeping both public key and signature in Segwit witness is not specifically stated, but it appears there are valid security, performance, and patent-related reasons for doing so.</summary>
    <published>2018-01-24T04:25:28+00:00</published>
  </entry>
</feed>
