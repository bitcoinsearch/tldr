<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Proposal: Revised: UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks</title>
  <updated>2023-06-12T22:47:04.956963+00:00</updated>
  <author>
    <name>Damian Williamson 2018-01-01 11:04:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Proposal: Revised: UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks</title>
    <updated>2023-06-12T22:47:04.956963+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015489.html" rel="alternate"/>
    <summary>Damian Williamson’s BIP Proposal, ‘UTPFOTIB - Use Transaction Priority For Ordering Transactions In Blocks’ aims to address the issue of transactional reliability in Bitcoin. The current system has valid transactions stuck in the transaction pool for extended periods or never confirm. Williamson argues that the current auction model for limited transaction bandwidth is unsuitable for a reliable transaction system. He proposes that Bitcoin should be capable of reliably and inexpensively processing casual transactions, as well as providing priority processing of fee-paying transactions.The proposal suggests providing each valid transaction in the mempool with an individual transaction priority based on the fee and time waiting values. The priority is a function of the fee (on a curve) and the time waiting in the transaction pool (also on a curve). The document also outlines the method of operation of priority and suggests using a steep curve to determine the probability of including transactions in the block.Nodes will need to keep track of when a transaction is first seen, and a dynamic target block size is suggested to make the current block. All blocks created with dynamic size should be verified to ensure conformity to a probability distribution curve resulting from the priority method. Nodes that have not yet adopted the proposal can continue to create standard fixed size unordered blocks but may not be able to validate the blockchain going forward.The proposal involves assigning a priority number to each valid transaction in the mempool based on the fee and time waiting values. Transactions for inclusion in the block are selected using probability until the target block size is met. The proposal has several pros such as maximizing transaction reliability, overcoming transaction bandwidth limit, being fully scalable, and maximizing total fees paid per block without reducing reliability. However, it could initially lower total transaction fees per block and needs to be first programmed.Before implementing the proposal, nodes need to have a loose understanding of the average size of the transaction pool. A new network service should be constructed to meet this need. The service should have an individual temporary Serial Node ID, accept communication of the number of valid transactions in the mempool of another valid Bitcoin node along with the Serial Node ID of the node whose value is provided.The proposal also offers several benefits such as removing incentives for attackers. There is no longer multiple potential incentives for unnecessarily filling blocks or flooding the mempool with transactions, whether such transactions are fraudulent, valid or otherwise.In conclusion, the proposal provides a reliable, stable fee paying transaction confirmation service and a beneficial auction. The proposal is necessary for validating full transaction reliability and enabling scalability of Bitcoin. If not this proposal, an alternative should be used.</summary>
    <published>2018-01-01T11:04:57+00:00</published>
  </entry>
</feed>
