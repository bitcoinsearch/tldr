<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed new P2P command and response: getcmds, cmdlist</title>
  <updated>2023-06-06T05:25:56.174275+00:00</updated>
  <author>
    <name>Amir Taaki 2012-06-16 09:16:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed new P2P command and response: getcmds, cmdlist</title>
    <updated>2023-06-06T05:25:56.175278+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001576.html" rel="alternate"/>
    <summary>A developer is concerned about the potential for Bitcoin's P2P protocol to become complex and vulnerable. They suggest being cautious about making changes unless absolutely necessary. Another developer points out that increasing complexity is typical during a system's initial development, but it eventually becomes standardized and cruft can be cut away. The original developer suggests implementing a minimum schedule time before adding new extensions to prevent the protocol from becoming too huge and kludgy. However, they also acknowledge that stalling could slow the long-term evolution of Bitcoin. The conversation touches on introducing state to Bitcoin's nearly stateless protocol through connection-specific filters. A capabilities command is suggested to help thin clients connect to at least one non-thin client. However, the original developer remains concerned about the protocol becoming overly complicated and potentially buggy or insecure. They suggest a capability system with large granularity rather than command-level. The interaction between protocol versions and capabilities needs to be defined as well.</summary>
    <published>2012-06-16T09:16:46+00:00</published>
  </entry>
</feed>
