<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fwd: Re: Full Clients in the future - Blockchain management</title>
  <updated>2023-06-06T04:52:32.660417+00:00</updated>
  <author>
    <name>Alan Reiner 2012-06-02 17:15:26</name>
  </author>
  <author>
    <name>Alan Reiner 2012-06-02 17:15:26</name>
  </author>
  <author>
    <name>Alan Reiner 2012-06-02 17:15:26</name>
  </author>
  <link href="bitcoin-dev/June_2012/001505_Fwd-Re-Full-Clients-in-the-future-Blockchain-management.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001505_Fwd-Re-Full-Clients-in-the-future-Blockchain-management.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001505_Fwd-Re-Full-Clients-in-the-future-Blockchain-management.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fwd: Re: Full Clients in the future - Blockchain management</title>
    <updated>2023-06-06T04:52:32.660417+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001505.html" rel="alternate"/>
    <summary>The discussion is focused on the upgrade of Armory's blockchain utilities. The main issue highlighted is that holding transaction files/pointers in RAM may not be feasible in a few years due to overwhelming standard RAM sizes. Blockchain compression is suggested as a solution to this problem. One proposal is to store all transactions as 10-byte "file-references" and store them in a multimap indexed by the first 6 bytes of the tx-hash. However, even with this approach, if there are 1 billion transactions in the blockchain, it would require 48 GB to track all the data in RAM. Alternative methods to maintain a multi-terabyte blockchain are being discussed, but no serious proposals have been made yet. Blockchain pruning methods are also mentioned in the email to prevent the accumulation of duplicated but no longer pertinent data. It is suggested that other clients using established storage mechanisms such as bdb, SQLite, etc., do not face these issues because they have been working on this problem for decades, making it a poor candidate for reinvention.In summary, the Armory team is discussing various ways to upgrade their blockchain utilities and solve the issue of overwhelming standard RAM sizes. A proposal has been made to use blockchain compression and store transactions as 10-byte "file-references". However, alternative methods are still being discussed, and blockchain pruning methods are also mentioned. Douglas Huff suggests that established storage mechanisms like bdb, SQLite, etc., may be better candidates for solving this problem due to their extensive experience in handling large amounts of data.</summary>
    <published>2012-06-02T17:15:26+00:00</published>
  </entry>
</feed>
