<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Near-term scalability</title>
  <updated>2023-05-19T03:37:52.754270+00:00</updated>
  <author>
    <name>Matt Corallo 2012-06-15 13:08:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Near-term scalability</title>
    <updated>2023-05-19T03:37:52.754270+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001536.html" rel="alternate"/>
    <summary>In a discussion on scalability and SatoshiDice, Mike Hearn summarized the agreement that having senders/buyers pay no fees is desirable although it will eventually be necessary. The ideal world would have Bitcoin scaling perfectly without any winners or losers in confirmation time. Some one-off changes were discussed to address the current situation, but de-ranking transactions that re-use addresses was not favored because it avoids the real problem. A deprioritization of rapidly-reused addresses was suggested as an option, which can be implemented by limiting the count of address re-uses by default in memory pool. Several proposals were discussed, including changing the mining code to group transactions together with their mempool dependencies, using the same fee algorithms as Bitcoin-Qt for SatoshiDice, scalability improvements, and making the block size limit float instead of picking a new arbitrary threshold. Block chain pruning was also discussed, with some concerns regarding centralization and compatibility with older clients. However, pruning may eventually be necessary for p2pool and other getmemorypool-based pool mining. Regarding the issue of huge blocks slowing down end user syncing and wasting their resources, SPV clients like MultiBit and Android Wallet already exist and will improve with time. Jeff implementing the bloom filtering p2p commands can reduce excessive bandwidth usage and parse overheads from end users. In conclusion, the proposed ideas seem reasonable for addressing scalability and other issues in the Bitcoin network.</summary>
    <published>2012-06-15T13:08:55+00:00</published>
  </entry>
</feed>
