<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed new P2P command and response: getcmds, cmdlist</title>
  <updated>2023-06-06T05:25:39.729275+00:00</updated>
  <author>
    <name>Amir Taaki 2012-06-17 16:30:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed new P2P command and response: getcmds, cmdlist</title>
    <updated>2023-06-06T05:25:39.729275+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001588.html" rel="alternate"/>
    <summary>The creator and maintainer of a full reimplementation of the Bitcoin protocol has stated that although the Bitcoin protocol is simple, it is filled with arbitrary endianness and magic numbers. The problem lies not in implementing the protocol, but in once having created a codebase, wanting to perfect and fine-tune the design. Changes to the Bitcoin protocol are more damaging than any issues with the current protocol. Although the author agrees with changes, they should be more conservative and have a longer time frame. Changes usually get added to the Satoshi client abruptly, which results in a week spent working to implement the change without proper consideration or reflection, compromising on design choices to remain compatible with the protocol. Despite this, the creator does not intend to slow down progress and tries to hedge against conservatism. Jeff Garzik responded to the above message and pointed out that for anyone maintaining a non-Satoshi codebase, the P2P protocol is already filled with all sorts of magic numbers, arbitrarily versioned binary data structures, and an unfriendly zoo of complicated and potentially buggy interactions. There is scant documentation on the wiki, making the Satoshi source code the only true reference. In comparison to other protocols, Bitcoin's P2P protocol is backwards, fragile, limited, and inflexible when it comes to parameter/extension exchange and negotiation. Jeff called the current P2P protocol "simple," but he believes that calling it so belies all the implementation details you absolutely must get right to run on mainnet today. Satoshi client devs hardly see the fragility and complexity inherent in the current legacy codebase built up over time.</summary>
    <published>2012-06-17T16:30:41+00:00</published>
  </entry>
</feed>
