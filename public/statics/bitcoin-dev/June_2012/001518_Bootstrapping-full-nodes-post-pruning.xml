<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bootstrapping full nodes post-pruning</title>
  <updated>2023-06-06T04:59:03.751798+00:00</updated>
  <author>
    <name>Mike Hearn 2012-06-10 23:06:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bootstrapping full nodes post-pruning</title>
    <updated>2023-06-06T04:59:03.751798+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
    <summary>The discussion revolves around the issue of bootstrapping a newly installed node for Bitcoin. A node that has pruned its block chain cannot serve the chain to new nodes, thus creating a challenge for new nodes to bootstrap. To address this concern, there are three suggested options. Firstly, it is proposed to have special archival nodes that never prune and encourage people to run them. Secondly, it is recommended to ship a post-pruning block chain and transaction index with the client downloads so that the client starts up already bootstrapped. The third option is a combination of both approaches. Some users may keep unpruned chains, but many find it easiest to use the pre-indexed files. However, there is some disagreement over approach (2) as some individuals, like Greg, are not in favor of it due to the absence of indexing overhead. Despite this, it has the advantage of speeding up the startup process for new users. It is, therefore, important to find a solution that can balance the benefits and drawbacks of each approach to ensure that new nodes can be easily bootstrapped.</summary>
    <published>2012-06-10T23:06:50+00:00</published>
  </entry>
</feed>
