<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New P2P commands for diagnostics, SPV clients</title>
  <updated>2023-06-06T05:02:00.152614+00:00</updated>
  <author>
    <name>Jeff Garzik 2012-06-13 20:46:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New P2P commands for diagnostics, SPV clients</title>
    <updated>2023-06-06T05:02:00.152614+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001526.html" rel="alternate"/>
    <summary>The IRC discussion covered the additional needs of lightweight clients and proposed new P2P commands with associated behavior changes. The proposed commands include filterinit, filterload, filterclear, filteradd, and mempool. Filterinit initializes a per-connection bloom filter with given parameters. Filterload input serialized bloom filter table metadata and data, while filterclear removes any filtering associated with the current connection. Filteradd adds a single hash to the bloom filter. Mempool lists TX's in remote node's memory pool.Filterload and filteradd enable special behavior changes for mempool and existing P2P commands. Only transactions matching the bloom filter will be announced to the connection, and only matching transactions will be sent inside serialized blocks. A lightweight client would issue 'filterload', sync up with blocks, then use 'mempool' to sync up to current TX's. The 'mempool' command is thought to be useful as a diagnostic, even if a bloom filter is not applied to its output. A bloom filter match would need to notice activity on existing coins (via CTxIn-&gt;prevout) and activity on a bitcoin address (via CTxOut).</summary>
    <published>2012-06-13T20:46:37+00:00</published>
  </entry>
</feed>
