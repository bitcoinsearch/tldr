<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Near-term scalability</title>
  <updated>2023-06-06T05:17:50.274151+00:00</updated>
  <author>
    <name>Amir Taaki 2012-06-15 18:38:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Near-term scalability</title>
    <updated>2023-06-06T05:17:50.274151+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001555.html" rel="alternate"/>
    <summary>The discussion centered around the scalability and user experience concerns in Bitcoin. There was a suggestion that forcing users to switch addresses per received payment to work around a bad fee system would not be a wise decision. The post also noted that miners have an incentive to keep block sizes low so that their blocks propagate, and managing the blockchain is not something that user clients should be doing. The network only needs a few thousand nodes to function fairly, and there are no artificial barriers to entry beyond the base cost.The writer proposed a fault-tolerant Byzantine system in which we can trust data from a blockchain service and only accept data with multiple confirms from each connected service to calculate the probability of being fed corrupt data, assuming a fixed chance per server.Regarding scalability, Stefan Thomas suggested that the existing economic incentives won't manifest unless somebody translates them into code. On the miner side, he suggests making the block size limit configurable with a relatively high default, and the block size limit should also be a soft rather than a hard limit. On the user side, he suggests displaying the fee on the Send Coins dialog and allowing users to choose a different fee per transaction. The writer thinks address reuse will not change the amount of transactions, and it will be harder to read information straight out of the blockchain.Lastly, the writer suggests that free transactions on the open network will simply not be possible in the long run. There may be miners in partnership with wallet providers that let you submit feeless transactions based on maybe a captcha or some ads.During a meeting, the issue of fees in Bitcoin was discussed, and it was agreed that having senders/buyers pay no fees is psychologically desirable, but eventually, somebody, somewhere will be paying fees to use Bitcoin. The group proposed several solutions to address this issue, including changing the mining code to group transactions together with their mempool dependencies and then calculating all fees as a group. Another suggestion was for SatoshiDice to use the same fee algorithms as Bitcoin-Qt to avoid paying excessive fees and queue-jumping.Scalability improvements were also discussed, and it was suggested that making the block size limit float is better than picking an arbitrary threshold. Additionally, there was discussion on implementing block chain pruning, but concerns were raised about centralization. However, the group felt that there are technical ways to implement it that would not require a change of trust requirements.The group proposed several solutions to address the issue of fees in Bitcoin, including changes to the mining code and using the same fee algorithms as Bitcoin-Qt. They also discussed scalability improvements and implementing block chain pruning while addressing concerns about centralization. It was noted that SPV clients like MultiBit and Android Wallet already exist and will get better with time, which will help address the issue of huge blocks slowing down end user syncing and wasting their resources.</summary>
    <published>2012-06-15T18:38:20+00:00</published>
  </entry>
</feed>
