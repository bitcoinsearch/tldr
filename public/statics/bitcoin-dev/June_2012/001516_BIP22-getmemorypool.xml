<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP22/getmemorypool</title>
  <updated>2023-05-19T00:38:29.095043+00:00</updated>
  <author>
    <name>Pieter Wuille 2012-06-10 09:03:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP22/getmemorypool</title>
    <updated>2023-05-19T00:38:29.096061+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001516.html" rel="alternate"/>
    <summary>Pieter Wuille, a Bitcoin developer, posted in the bitcoin-development mailing list about his concerns with the BIP22 protocol. He believes it is important to have a stable and flexible API for negotiating block generation standardized. However, too few people seem to understand the details of BIP22 and its intended use cases. Wuille would like to see the standard simplified, with fewer optional features and ways of specifying the same behavior.Wuille suggests creating a new block template with several fields such as bits, previousblockhash, version, curtime, maxtimeoff, maxtimeoff, expires, sigoplimit, sizelimit, subsidy, coinbaseaux, coinbaseoutputs, and transactions. He also suggests submitting an object containing a hex serialized block header, hex serialized coinbase transaction, and a list of txids. The return value will be either true or a string describing the problem. Wuille asks if there are any important use cases that he is missing.</summary>
    <published>2012-06-10T09:03:58+00:00</published>
  </entry>
</feed>
