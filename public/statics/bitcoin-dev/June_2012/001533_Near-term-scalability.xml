<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Near-term scalability</title>
  <updated>2023-06-06T05:12:59.843983+00:00</updated>
  <author>
    <name>Mike Hearn 2012-06-15 11:29:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Near-term scalability</title>
    <updated>2023-06-06T05:12:59.843983+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001533.html" rel="alternate"/>
    <summary>The discussion on scalability and SatoshiDice was summarized after a meeting held on IRC. It was agreed that in the ideal world, Bitcoin would scale perfectly and there would be no need for some "winners" and "losers" regarding confirmation time. However, due to the current situation, it was proposed that transactions should be grouped together with their mempool dependencies, and all fees calculated as a group. This proposal allows a transition to a "receiver pays" model for fees and makes sense since it's always the receiver who wants confirmations. Another advantage of this proposal is that it simplifies usage for end-users who primarily buy rather than sell. The disadvantages are that it can result in extra transactions that exist only for adding fees, and it requires a more modern payment protocol than the direct-IP protocol Satoshi designed.It was also suggested that SatoshiDice should use the same fee algorithms as Bitcoin-Qt to avoid paying excessive fees and queue-jumping. Scalability improvements were also discussed, and it was agreed that they seem like a no-brainer. Making the block size limit float was better than picking a new arbitrary threshold. On the forums, Matt stated that blockchain pruning was a no-go because "it makes bitcoin more centralized". There are technical ways to implement it such that there is no change of trust requirements. For the case of huge blocks slowing down end-user syncing and wasting their resources, SPV clients like MultiBit and Android Wallet already exist and will get better with time.</summary>
    <published>2012-06-15T11:29:51+00:00</published>
  </entry>
</feed>
