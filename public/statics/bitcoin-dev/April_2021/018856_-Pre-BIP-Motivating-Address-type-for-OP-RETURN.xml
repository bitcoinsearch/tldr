<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Motivating Address type for OP_RETURN</title>
  <updated>2023-06-14T20:21:32.506378+00:00</updated>
  <author>
    <name>Zac Greenwood 2021-04-24 23:37:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Motivating Address type for OP_RETURN</title>
    <updated>2023-06-14T20:21:32.506378+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-April/018856.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list has turned to the idea of introducing a non-transaction data structure that allows for storing data on-chain while maximizing payload size versus on-chain size. The proposal suggests ensuring that using such data structure is almost as expensive in use per payload-byte as the next-cheapest alternative, which currently is using OP_RETURN with the help of weight units. The conversation also addresses concerns around the 10,000-byte limit applied when EvalScript is run and abuse of bech32m addressed outputs. The benefits of OP_RETURN include more data allowed in scriptSig (up to 80 bytes) versus 40 bytes for a BIP141 payload and exemption from the dust limit. However, there are also concerns over the potential for block chain graffiti. The conversation includes a demonstration of creating an 11,000 byte OP_RETURN on regtest.</summary>
    <published>2021-04-24T23:37:56+00:00</published>
  </entry>
</feed>
