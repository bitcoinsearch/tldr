<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Update on "Speedy" Trial: The circus rolls on</title>
  <updated>2023-06-14T19:59:44.385174+00:00</updated>
  <author>
    <name>David A. Harding 2021-04-08 21:56:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Update on "Speedy" Trial: The circus rolls on</title>
    <updated>2023-06-14T19:59:44.385174+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-April/018758.html" rel="alternate"/>
    <summary>The recent debate over how to implement Taproot in the Bitcoin network saw a proposal by developer Jeremy Rubin for a coin toss to decide between two competing methods, MTP and heights. However, it was revealed that the idea actually came from another developer, Dave Harding, who has used the method before in other discussions. The decision to use a coin toss was made because both methods had tradeoffs that could not be resolved, and different people gave different weights to these tradeoffs. Although the coin toss was not ultimately needed due to a compromise solution being found, Harding believes it is still a useful tool for coordinating work on a solution when there is disagreement about which option is best. While some may view this as an example of geeks arguing over minutia, Harding hopes that those waiting for Taproot to be implemented will recognize that the activation method has nothing to do with Taproot itself. He also expresses hope that progress can be made on the Speedy Trial and that miners will soon be willing to signal for Taproot. Finally, while he looks forward to ending this chapter in Bitcoin's history of soft fork activations, Harding is open to continued discussion about better activation mechanisms for future deployments even before Taproot reaches activation.</summary>
    <published>2021-04-08T21:56:05+00:00</published>
  </entry>
</feed>
