<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Delegated signatures in Bitcoin within existing rules, no fork required</title>
  <updated>2023-06-14T19:23:16.018421+00:00</updated>
  <author>
    <name>Jeremy 2021-03-16 06:16:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Delegated signatures in Bitcoin within existing rules, no fork required</title>
    <updated>2023-06-14T19:23:16.018421+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018654.html" rel="alternate"/>
    <summary>In this email conversation, ZmnSCPxj and JeremyRubin discuss various ideas related to Bitcoin transaction delegation. One idea discussed is the use of multiple delegates with independent scripts to enforce disparate conditions. This can be useful in cases where one delegate requires a relative height lock while another requires a relative time lock. Another idea discussed is sequenced contingent delegation, which involves constructing a specific TXID to delegate coins, making their delegation contingent on some other contract reaching a particular state. However, this model requires coordination between the main and observing contracts as each coin delegate can only be claimed once. Lastly, they discuss redelegating, where A delegates to S, who then delegates to S', allowing the original owner to still control the coin.</summary>
    <published>2021-03-16T06:16:23+00:00</published>
  </entry>
</feed>
