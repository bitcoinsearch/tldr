<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Delegated signatures in Bitcoin within existing rules, no fork required</title>
  <updated>2023-06-14T19:24:06.485101+00:00</updated>
  <author>
    <name>Jeremy 2021-03-17 06:30:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Delegated signatures in Bitcoin within existing rules, no fork required</title>
    <updated>2023-06-14T19:24:06.485101+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018679.html" rel="alternate"/>
    <summary>The conversation between Jeremy Rubin and ZmnSCPxj discusses the advantages of using SIGHASH_NONE and SIGHASH_SINGLE for partial funds delegations. This allows the delegator to dynamically choose certain factors like a change output, which cannot be achieved by simply handing over the privkey. Additionally, layered encryption can be used to delegate to multiple parties using Checksig scripts and presigned transactions. However, this may compromise privacy, and in situations where privacy is a goal, the delegation can contact the original signer for cooperation. A hybrid approach could also be used, where delegates are provided with a default sighash_all txn and a modifiable sighash_none/single, allowing them to decide what is best to use. Another interesting point discussed is the subset of cases where it is desirable to have privacy from the original script holder. Overall, the conversation delves into various aspects and use-cases of delegation and highlights its advantages and limitations.</summary>
    <published>2021-03-17T06:30:23+00:00</published>
  </entry>
</feed>
