<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Delegated signatures in Bitcoin within existing rules, no fork required</title>
  <updated>2023-06-14T19:23:55.407255+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-03-16 06:09:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Delegated signatures in Bitcoin within existing rules, no fork required</title>
    <updated>2023-06-14T19:23:55.407255+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018653.html" rel="alternate"/>
    <summary>The email discusses three different mechanisms for delegating coins in a Bitcoin transaction. The first mechanism, multiple delegates, involves signing a transaction with several delegate outputs to enforce multiple conditions. For example, one delegate output may require a relative height lock while another requires a relative time lock. The second mechanism, sequenced contingent delegation, involves constructing a specific TXID that delegates coins contingent on some other contract reaching a specific state. This model requires coordination between the main and observing contracts as each coin delegate can only be claimed one time. The third mechanism, redelegating, involves A delegating to S, S delegating to S', and delaying the on-chain movement of the coin until S' wants to do something with it. The script `A || S || S'` allows the original owner to still control the coin.</summary>
    <published>2021-03-16T06:09:56+00:00</published>
  </entry>
</feed>
