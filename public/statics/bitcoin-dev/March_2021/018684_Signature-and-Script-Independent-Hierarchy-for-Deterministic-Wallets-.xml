<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Signature and Script Independent Hierarchy for Deterministic Wallets.</title>
  <updated>2023-06-14T19:25:41.660589+00:00</updated>
  <author>
    <name>Craig Raw 2021-03-17 07:26:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Signature and Script Independent Hierarchy for Deterministic Wallets.</title>
    <updated>2023-06-14T19:25:41.660589+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018684.html" rel="alternate"/>
    <summary>The proposal to encode script type in the derivation is being questioned as output descriptors are becoming more prevalent. However, this approach places additional burden on users to backup correctly and may require tedious methods such as stamping onto metal. Two options have been suggested: 1) Use derivation paths that do not encode the script type and educate users to backup output descriptors in addition to their seed words or 2) Use a standard set of derivation paths that encode the script type, ensuring fund recovery even if users do not back it up by checking against common derivations. Option 1 is technically cleaner but less practical as output descriptors are technical and longer form. In response to the proposal, Robert Spigler suggests using descriptor wallets for multisignature and single signature wallets. To backup a multisignature wallet, each cosigner stores their extended private key and the wallet descriptor. For single signature wallets, the same applies but only one signature is needed. Spigler argues that using descriptors is a cleaner way to handle wallet creation and backup by separating the keys and scripts layers and eliminating redundant information.However, there is a tradeoff as the proposal mixing discoverable and non-discoverable scripts in the same derivation scheme could turn all scripts into being non-discoverable. This means that during recovery from seed, the wallet would have to check all script types for all account indices, which becomes more expensive with new script types. While the workaround is to backup both seed words and output script descriptors, it is less user-friendly than backing up just a seed but more generic and extendable.</summary>
    <published>2021-03-17T07:26:50+00:00</published>
  </entry>
</feed>
