<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A design for Probabilistic Partial Pruning</title>
  <updated>2023-06-14T18:39:02.264730+00:00</updated>
  <author>
    <name>Keagan McClelland 2021-03-01 20:55:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A design for Probabilistic Partial Pruning</title>
    <updated>2023-06-14T18:39:02.264730+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018516.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around the proposal of allowing pruned nodes to add more archives by keeping a sequentially uninterrupted number of recent blocks. The motivation behind this change is to make it accessible to more users rather than requiring higher node requirements. Some users run nodes for private wallet usage, so retaining sequential sets of blocks is important to maintain their privacy. However, linear block scans do not leak privacy details the same way bloom filters do. Additionally, there is no requirement for the blocks to be in sequential sets, and uniform randomness will automatically take care of the density problem. Libbitcoin v4 already downloads and stores blocks in parallel, but pruning is considered counterproductive due to its complexity and the exponential growth of storage costs with the chain.</summary>
    <published>2021-03-01T20:55:10+00:00</published>
  </entry>
</feed>
