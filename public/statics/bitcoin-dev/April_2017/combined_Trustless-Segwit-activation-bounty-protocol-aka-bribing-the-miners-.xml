<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Trustless Segwit activation bounty protocol (aka. bribing the miners)</title>
  <updated>2023-06-12T00:35:15.554343+00:00</updated>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:25:15</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-27 20:10:03</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-04-27 21:05:47</name>
  </author>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:25:15</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-27 20:10:03</name>
  </author>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:25:15</name>
  </author>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:41:17</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-04-27 21:05:47</name>
  </author>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:41:17</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-04-27 21:05:47</name>
  </author>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:41:17</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-27 20:10:03</name>
  </author>
  <author>
    <name>Matt Bell 2017-04-27 17:48:16</name>
  </author>
  <author>
    <name>Antoine Le Calvez 2017-04-27 19:45:54</name>
  </author>
  <author>
    <name>Matt Bell 2017-04-27 17:48:16</name>
  </author>
  <author>
    <name>Antoine Le Calvez 2017-04-27 19:45:54</name>
  </author>
  <author>
    <name>Matt Bell 2017-04-27 17:48:16</name>
  </author>
  <author>
    <name>Antoine Le Calvez 2017-04-27 19:45:54</name>
  </author>
  <link href="bitcoin-dev/April_2017/014242_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014245_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014246_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014242_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014245_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014242_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014243_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014246_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014243_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014246_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014243_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014245_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014241_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014244_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014241_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014244_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014241_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014244_Trustless-Segwit-activation-bounty-protocol-aka-bribing-the-miners-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Trustless Segwit activation bounty protocol (aka. bribing the miners)</title>
    <updated>2023-06-12T00:35:15.554343+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014242.html" rel="alternate"/>
    <summary>The Bitcoin community is currently discussing a possible way to activate Segwit sooner by incentivizing miners through a trustless contract protocol. Contributors can pledge to a Segwit bounty and choose a future height where Segwit may be activated, a bounty contribution amount, and generate three private keys (k1, k2, and k3) and corresponding pubkeys (K1, K2, and K3). The proposal includes the creation of three private keys and corresponding pubkeys, the creation of a Funding Transaction with two outputs, and the creation of a Segwit Assertion Transaction and Bounty Payout Transaction. After setup, miners can find Funding Transactions confirmed on the chain and verify the other two transactions are correct and have valid signatures. Once the chain reaches height H-1, if Segwit has activated, miners can claim the bounty payout by including the Segwit Assertion and Bounty Payout transactions in their block H. If Segwit has not activated at height H, Input 1 of the Bounty Payout is not valid since it spends a P2WPKH output, preventing the miner from including the Bounty Payout transaction in the block. It is noted that if SegWit has not been activated at height H, Input 1 of the Bounty Payout will be considered invalid as it spends a P2WPKH output. This is because P2WPKH becomes an "anyone can spend" output in such a case.It is important to note that SegWit is a soft fork and all SegWit transactions must be interpreted as valid by old nodes. Therefore, if SegWit has not been activated, it will have consequences for the validity of certain transactions. During a discussion on bitcoin-dev, Matt Bell brought up the topic of transactions without any outputs, where all funds are paid to the miner. However, it was pointed out that a transaction must have at least one output according to validation.cpp in the Bitcoin GitHub repository. The same effect could be achieved by adding an OP_RETURN output with 0 satoshis.The proposal suggests a win-win scenario for contributors since Segwit activating will likely increase the price of Bitcoin, which gives a positive return if the price increases enough. In a discussion about creating bounties for softforks and hardforks, it was pointed out that unless there is a softfork first, it is not possible to create a softfork bounty in a decentralized way. However, creating a hardfork bounty is simple by making sure the transaction violates existing rules. The idea of inverting the logic was suggested, where an economic agent wishing to push for a softfork can select block heights H1 and H2, where H1 is before the activation of the proposed softfork and H2 is after. If a transaction is valid at H1 but invalid at H2, they can offer a bounty for the first person to create such a transaction.</summary>
    <published>2017-04-27T18:25:15+00:00</published>
  </entry>
</feed>
