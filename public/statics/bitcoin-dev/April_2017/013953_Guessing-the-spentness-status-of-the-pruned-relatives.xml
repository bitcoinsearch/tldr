<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Guessing the spentness status of the pruned relatives</title>
  <updated>2023-06-11T23:28:18.083788+00:00</updated>
  <author>
    <name>praxeology_guy 2017-04-02 01:10:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Guessing the spentness status of the pruned relatives</title>
    <updated>2023-06-11T23:28:18.083788+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/013953.html" rel="alternate"/>
    <summary>In an email thread related to using the MMR data structure for txo commitments, a user named bfd at cock.lu replied to praxeology_guy stating that if a wallet is unaware of spends of its own coins, there are bigger problems going on. The user suggested the topic of committed bloom filters as a solution to similar issues without needing an ever-growing list of hundreds of millions of spent outputs. Praxeology_guy responded saying that wallets could maintain the changing MMR proof for their old coins but they also need to know the spentness status of close relatives in the MMR tree to construct a valid MMR proof that their own coin is not spent. Bitcoin nodes could keep a spentness status list where each bit corresponds to whether a txo in the MMR is spent. This could make it so that disconnected wallets didn't have to guess the pruned relative spentness status when it reconnects to the network and help prevent DoS attacks. However, praxeology_guy mistakenly forgot to change the subject back to "A Better MMR Definition" when emailing to the dev list instead of directly to Peter.</summary>
    <published>2017-04-02T01:10:53+00:00</published>
  </entry>
</feed>
