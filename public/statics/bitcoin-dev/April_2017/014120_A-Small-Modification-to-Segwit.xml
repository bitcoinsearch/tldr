<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Small Modification to Segwit</title>
  <updated>2023-06-12T00:00:16.175553+00:00</updated>
  <author>
    <name>David Vorick 2017-04-09 23:51:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Small Modification to Segwit</title>
    <updated>2023-06-12T00:00:16.175553+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014120.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list in April 2017, Erik Aronesty suggested that a change in proof-of-work (PoW) could be part of a longer-term roadmap for Bitcoin, with the goal of keeping the cryptocurrency on commodity hardware and out of the hands of centralized manufacturing. He proposed ramping down reliance on SHA-256 and ramping up proven np-complete graph-theoretic or polygon manipulation PoW algorithms. He argued that a level-playing field is critical to preventing centralization from becoming a defining feature of Bitcoin, and that regular high-consensus PoW changes might even be necessary for good maintenance of cryptocurrencies in general. Jared Lee Richardson, responding to the discussion, shared his personal experience with another altcoin that had attempted to use an ASIC-resistant PoW algorithm. He argued that it's only a matter of time before an "ASIC resistant" algorithm gets its own ASICs and that more complicated algorithms lead to more secretive ASIC technology development. He also pointed out that multi-megawatt GPU farms have already formed in areas with low energy costs, and he did not believe that centralization of mining could be prevented. Aronesty responded to Richardson by stating that the real bottleneck today is the amount of capex required to achieve optimal mining. While he supported PoW research that investigates better PoW, he did not believe that any obvious strategies were known yet to substantially improve on computation-heavy hashcash.</summary>
    <published>2017-04-09T23:51:29+00:00</published>
  </entry>
</feed>
