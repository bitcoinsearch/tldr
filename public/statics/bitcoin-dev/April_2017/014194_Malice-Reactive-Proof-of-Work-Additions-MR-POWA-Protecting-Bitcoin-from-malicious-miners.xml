<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Malice Reactive Proof of Work Additions (MR POWA): Protecting Bitcoin from malicious miners</title>
  <updated>2023-06-11T22:15:39.321769+00:00</updated>
  <author>
    <name>Natanael 2017-04-17 22:34:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Malice Reactive Proof of Work Additions (MR POWA): Protecting Bitcoin from malicious miners</title>
    <updated>2023-06-11T22:15:39.321769+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014194.html" rel="alternate"/>
    <summary>In a bitcoin-dev message, Erik Aronesty expressed his regret over the inability to make Proof-of-Work (PoW) dynamic enough to prevent specialized hardware and allow only GPU/FPGA. He suggested using a variant of Keccak where the sponge size increases with additional zero bits required. However, for this to work, SHA3 would have to be compromised, or else it would resist specialized hardware. SHA3 already has a mode called SHAKE, an extensible output function (XOF), which is like a hash with arbitrary output length.A possible solution to changing PoW could be an algorithm that's moderately processing heavy, resists partial state reuse, and has an existing reference implementation for hardware that's close in performance to the theoretical ideal implementation. Anything relying on memory or other expensive components is likely to fail eventually as fast memory becomes more compact, cheaper, and closer to the cores. To level the playing field in ASIC manufacturing, there shouldn't be any fancy tricks to deploy to give one player an unfair advantage. The competition should mostly be about packing similar gate designs closely and energy efficiency.Finally, the nonce in the header should be larger if possible, reducing the incentive to mess with the entropy elsewhere in blocks.</summary>
    <published>2017-04-17T22:34:55+00:00</published>
  </entry>
</feed>
