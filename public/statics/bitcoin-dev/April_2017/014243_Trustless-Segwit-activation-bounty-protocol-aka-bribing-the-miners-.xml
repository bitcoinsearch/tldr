<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trustless Segwit activation bounty protocol (aka. bribing the miners)</title>
  <updated>2023-06-12T00:34:08.899100+00:00</updated>
  <author>
    <name>Alex Mizrahi 2017-04-27 18:41:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trustless Segwit activation bounty protocol (aka. bribing the miners)</title>
    <updated>2023-06-12T00:34:08.899100+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014243.html" rel="alternate"/>
    <summary>At a certain height H, if Segwit has not been activated, Input 1 of the Bounty Payout becomes invalid as it spends a P2WPKH output, which prevents miners from including the Bounty Payout transaction in their block. However, the output of the Segwit Assertion transaction can still be claimed as it is treated as anyone-can-spend. Despite being a small amount, miners who are aware of the Bounty Payout Transaction will try to include both transactions, valid on both SW and non-SW chains by definition of SW being a soft fork. By setting the timelock of BPT to (H+1), miners of Block H might not be the same as the miner of Block (H+1) and thus cannot guarantee grabbing the bounty. However, there is still a chance that the same miner will mine both blocks, making it game-theoretically sensible to insert SAT into the block since the expected payoff is positive. Ultimately, miners may still grab these bounties regardless of segwit activation.</summary>
    <published>2017-04-27T18:41:17+00:00</published>
  </entry>
</feed>
