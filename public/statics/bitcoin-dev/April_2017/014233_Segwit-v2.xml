<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Segwit v2</title>
  <updated>2023-06-12T00:30:53.083240+00:00</updated>
  <author>
    <name>praxeology_guy 2017-04-26 08:51:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Segwit v2</title>
    <updated>2023-06-12T00:30:53.083240+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014233.html" rel="alternate"/>
    <summary>A proposal has been made to tweak the BIP 141's version bit assignment for SegWit v2. The proposed changes are not critical, but could be an improvement if a new deployment is necessary. The first suggested change is to change the dummy marker to 0xFF instead of 0 to avoid confusion with incomplete zero-input transactions. The second suggestion is to relax the consensus rules on when witness data is allowed for an input in combination with scriptSig and any scriptPubKey. Praxeology Guy suggests a more future proof Commitment Extension Methodology that uses fewer bytes and eliminates arbitrary storage locations for the "witness reserved value." The proposed methodology includes a variable length array of extension identifiers and roots. Additionally, he suggests implementing the Policy ID 'replay attack" prevention that increases each wtx length by 1 byte and can be reduced in a block by clustering Policy ID ranges in the coinbase or guessing the Policy ID. Finally, witness data would sign on the Policy ID, preventing replay if at least one branch adopted a new Policy ID.</summary>
    <published>2017-04-26T08:51:51+00:00</published>
  </entry>
</feed>
