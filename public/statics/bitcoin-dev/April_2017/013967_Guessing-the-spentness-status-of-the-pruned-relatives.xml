<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Guessing the spentness status of the pruned relatives</title>
  <updated>2023-06-11T23:27:47.812305+00:00</updated>
  <author>
    <name>Bram Cohen 2017-04-03 03:13:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Guessing the spentness status of the pruned relatives</title>
    <updated>2023-06-11T23:27:47.812305+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/013967.html" rel="alternate"/>
    <summary>The discussion on the scalability of Bitcoin transactions continued on the bitcoin-dev mailing list where praxeology_guy highlighted that using spentness bits scales linearly in comparison to swapping digest leafs with empties which can scale logarithmically increasing storage requirements. The limitation of 8 to 12 layers corresponds to an MMR proof length of 512 to 768 bytes if a 32 byte hash and spentness bits are used. In response to this, a participant explained that making the memory commitments smaller would increase CPU requirements and proof size, so it would be reasonable to make MMRs of the bitfield or insertion index data structure but they aren't needed immediately if ever. Full nodes can cache the top bunch of layers to make the proofs smaller or remember a root per block for all the insertions contained therein.</summary>
    <published>2017-04-03T03:13:52+00:00</published>
  </entry>
</feed>
