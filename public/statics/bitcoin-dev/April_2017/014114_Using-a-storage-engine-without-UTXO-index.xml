<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Using a storage engine without UTXO-index</title>
  <updated>2023-06-11T23:52:23.146198+00:00</updated>
  <author>
    <name>Tomas 2017-04-08 23:58:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Using a storage engine without UTXO-index</title>
    <updated>2023-06-11T23:52:23.146198+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014114.html" rel="alternate"/>
    <summary>Eric Voskuil and Tomas have been discussing the implementation details of Bitcrust and libbitcoin V2/V3 on a mailing list. Eric questioned about the UTXO growth and network protocol, to which Tomas replied that Bitcrust simply scans the tree and has no need for the outputs when a block comes in, nor does it require reorgs, making the design simpler. They also discussed soft forks and parallel validation and how it is not difficult to do. Tomas mentioned that the hash table store he described can fully navigate the block tree and transaction DAG, since the stored tx, parent, and point hashes are also natural keys and each link is navigable in constant time, and it stores both confirmed and unconfirmed transactions in the same store. Eric acknowledged Tomas's approach and found it interesting enough to dive deeper but also mentioned that it seems sufficiently different from Bitcrust to merit competing on (eventual) results instead of the complicated theory alone.</summary>
    <published>2017-04-08T23:58:02+00:00</published>
  </entry>
</feed>
