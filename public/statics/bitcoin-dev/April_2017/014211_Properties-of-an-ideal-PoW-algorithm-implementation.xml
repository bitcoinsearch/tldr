<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Properties of an ideal PoW algorithm &amp; implementation</title>
  <updated>2023-06-12T00:29:48.476488+00:00</updated>
  <author>
    <name>Bram Cohen 2017-04-19 17:43:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Properties of an ideal PoW algorithm &amp; implementation</title>
    <updated>2023-06-12T00:29:48.476488+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014211.html" rel="alternate"/>
    <summary>The author of the context suggests using a repeated hashing method to prevent lossy implementations and relying on a single, simple crypto primitive such as blake2b. This primitive is conservative due to its large block size, which prevents asicboost-style attacks and eliminates the need for building logic for multiple blocks. Memory hard functions are currently effective but fail catastrophically when they do, limiting their use to hardware from a single vendor. The best PoW function for commodity mining hardware is repeatedly hashing with blake2b ten or a hundred times. Despite this, the author believes that hard forking the PoW function is a bad idea.</summary>
    <published>2017-04-19T17:43:03+00:00</published>
  </entry>
</feed>
