<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Segwit v2</title>
  <updated>2023-06-12T00:32:19.984519+00:00</updated>
  <author>
    <name>Luke Dashjr 2017-04-20 20:28:52</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-26 19:31:38</name>
  </author>
  <author>
    <name>praxeology_guy 2017-04-26 08:51:51</name>
  </author>
  <author>
    <name>Luke Dashjr 2017-04-26 20:01:10</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-26 20:09:34</name>
  </author>
  <author>
    <name>Luke Dashjr 2017-04-26 20:01:10</name>
  </author>
  <author>
    <name>Luke Dashjr 2017-04-20 20:28:52</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-26 19:31:38</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-04-26 21:34:29</name>
  </author>
  <author>
    <name>praxeology_guy 2017-04-27 02:18:57</name>
  </author>
  <author>
    <name>praxeology_guy 2017-04-26 08:51:51</name>
  </author>
  <author>
    <name>Luke Dashjr 2017-04-26 20:01:10</name>
  </author>
  <author>
    <name>praxeology_guy 2017-04-27 02:18:57</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-26 19:31:38</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-04-26 21:34:29</name>
  </author>
  <author>
    <name>praxeology_guy 2017-04-27 02:18:57</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-26 20:09:34</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-04-26 21:34:29</name>
  </author>
  <author>
    <name>Luke Dashjr 2017-04-20 20:28:52</name>
  </author>
  <author>
    <name>praxeology_guy 2017-04-26 08:51:51</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-26 20:09:34</name>
  </author>
  <link href="bitcoin-dev/April_2017/014220_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014236_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014233_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014237_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014238_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014237_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014220_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014236_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014239_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014240_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014233_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014237_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014240_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014236_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014239_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014240_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014238_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014239_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014220_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014233_Segwit-v2.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014238_Segwit-v2.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Segwit v2</title>
    <updated>2023-06-12T00:32:19.984519+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014220.html" rel="alternate"/>
    <summary>In April 2017, Luke Dashjr and Johnson Lau engaged in an email exchange regarding the use of scriptSig and witness in Bitcoin transactions. Dashjr noted that scriptSig can do certain things that witness cannot do currently, such as adding additional conditions under the signature. However, he suggested that scriptSig could be made obsolete after segwit provides an alternative way to achieve this. Another member of the mailing list responded stating that they were unsure about what Dashjr was referring to since scriptSigs are always stripped from the transaction before the sigHash is made.Johnson Lau proposed a change in commitment structure that is backwards compatible. His proposal is to merge two arrays, which will result in a more simple format but harder to compress. The format includes OP_RETURN, Push the following 36 bytes, Commitment header, Commitment hash, Extension roots and optional data. He provided an example of an extension root with size=2 and ext.id=0 and 1. Later, when all miners upgrade, they could stop using ext.id=1 and avoid putting unnecessary values in scriptSig.Dashjr also suggested making minor tweaks to the BIP 141's version bit assignment for SegWit v2, which would be an improvement but not critical. The first suggested change is to replace the dummy marker with 0xFF instead of 0 due to the ambiguity created by using 0. The second recommended change involves relaxing the consensus rules on when witness data is allowed for an input. Instead, Luke suggests allowing it in combination with scriptSig and with any scriptPubKey, and consider these cases to be "upgrade-safe" policy ignoring. The purpose of this change is to be more flexible to any future softforks.Praxeology Guy suggested a more future proof Commitment Extension Methodology that uses fewer bytes and eliminates arbitrary storage locations for the "witness reserved value." The proposed methodology includes a variable length array of extension identifiers and roots. Additionally, he suggests implementing the Policy ID 'replay attack" prevention that increases each wtx length by 1 byte and can be reduced in a block by clustering Policy ID ranges in the coinbase or guessing the Policy ID. Finally, witness data would sign on the Policy ID, preventing replay if at least one branch adopted a new Policy ID. The proposed changes to scriptSig and witness were discussed alongside Johnson Lau's proposal in an email exchange between Luke Dashjr and Johnson Lau. While Lau preferred to keep the dummy marker and not change the commitment structure as suggested by another post, Dashjr thought that the dummy marker could be non-consensus critical so long as the hashing replaces it with a 0. They also talked about restricting witness to IsPushOnly() scriptPubKey, but Dashjr did not see any benefit in doing so since miners could still malleate transactions and add garbage to the blocks.A proposal has been made to tweak the BIP 141's version bit assignment for SegWit v2. The first suggested change is to change the dummy marker to 0xFF instead of 0 to avoid confusion with incomplete zero-input transactions. The second suggestion is to relax the consensus rules on when witness data is allowed for an input in combination with scriptSig and any scriptPubKey. Thoughts on the proposals were requested from the mailing list participants.</summary>
    <published>2017-04-20T20:28:52+00:00</published>
  </entry>
</feed>
