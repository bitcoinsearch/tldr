<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>I do not support the BIP 148 UASF</title>
  <updated>2023-06-12T00:10:50.335717+00:00</updated>
  <author>
    <name>praxeology_guy 2017-04-14 18:33:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>I do not support the BIP 148 UASF</title>
    <updated>2023-06-12T00:10:50.335717+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014155.html" rel="alternate"/>
    <summary>Chris suggests that instead of rejecting all blocks that do not signal segwit, only those that do not signal but contain segwit transactions should be rejected. He questions the reasoning behind rejecting a block that only has pre-segwit transactions. Praxeology Guy responds by stating that he has requested an alternative to avoid unnecessarily orphaning blocks and agrees with Chris's suggestion. In response to a question about old blocks containing SegWit transactions, it is explained that if a transaction tries to spend a new SegWit format txo in an old block, protocol rules would be broken, particularly for SegWit activated nodes. Old nodes do not have code that can spend SegWit format txos, which may lead to a fork. The assumption of 148 is that irrespective of what happens, there will be a fork, so it is better to do it in a controlled manner before someone creates an invalid SegWit block. It is recommended to implement a boilerplate replay attack prevention just in case the SegWit delayers are not bluffing.</summary>
    <published>2017-04-14T18:33:39+00:00</published>
  </entry>
</feed>
