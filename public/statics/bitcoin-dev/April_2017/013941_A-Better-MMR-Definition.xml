<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Better MMR Definition</title>
  <updated>2023-06-11T21:40:05.937225+00:00</updated>
  <author>
    <name>praxeology_guy 2017-04-01 10:18:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Better MMR Definition</title>
    <updated>2023-06-11T21:40:05.937225+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/013941.html" rel="alternate"/>
    <summary>Peter Todd has given his approval of the MMR structure that allows wallets to keep their MMR proof and txo index instead of requiring the entire network to maintain an index on txids w/ plain old utxo snapshots. He suggests that if a parent node has a single fully spent child node, its hash is equal to its other child's hash. Peter raises concerns about the performance of recalculating all of the node hashes on old spends but believes it wouldn't be an issue with a long enough delay policy. He also mentions issues with people keeping their MMR proofs up to date and discovering received txos before they get pruned.Peter asks about the process for removing old utxos from the utxo set and placing them into the MMR and whether a longer delay would be better as long as the utxo doesn't get too big. He suggests making a new commitment on every 6*24 blocks or so to reduce the number of times the same nodes are re-hashed while not having much impact on security.Peter also enquires about re-orgs and restoration of previous leaf and inner nodes and asks about current thoughts on block size weighting for MMR proofs, suggesting to count the extra byte length that full nodes need to relay as similar to SegWit witness data.</summary>
    <published>2017-04-01T10:18:12+00:00</published>
  </entry>
</feed>
