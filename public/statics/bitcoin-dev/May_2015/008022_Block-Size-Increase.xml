<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Block Size Increase</title>
  <updated>2023-06-09T19:34:35.842494+00:00</updated>
  <author>
    <name>Mark Friedenbach 2015-05-08 20:40:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Block Size Increase</title>
    <updated>2023-06-09T19:34:35.842494+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008022.html" rel="alternate"/>
    <summary>The discussion in this email thread revolves around the issue of how to handle transactions that have low fees and therefore may take a long time to confirm or may get stuck in limbo. One suggestion is to create all transactions with an expiration time starting with a low fee, then replacing with new transactions that have a higher fee as time passes. Users can pick the fee curve they desire based on the transaction priority they want to advertise to the network. This would ensure that transactions are never left hanging for days, and probably not even for hours. Another argument is against placing hard limits on block size as a way to create fee pressure. Instead, it is suggested to increase the 1MB block size limit as the simplest way to avoid transactions propagating, hanging in limbo for days, and then failing. Additionally, improved transaction selection for blocks could be used to discourage low fees and create fee pressure. These could involve hybrid priority/fee selection so low fee transactions see degraded performance instead of failure. It is argued that fee pressure is the right way to economize on scarce resources, but hard limits on block size are an incredibly disruptive way to go about this and will severely negatively impact users' experience. The worst scenario that needs to be avoided is having transactions propagate, hang in limbo for days, and then fail.</summary>
    <published>2015-05-08T20:40:50+00:00</published>
  </entry>
</feed>
