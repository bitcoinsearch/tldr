<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Consensus-enforced transaction replacement via sequence numbers</title>
  <updated>2023-06-09T21:41:06.813602+00:00</updated>
  <author>
    <name>Tier Nolan 2015-05-28 17:21:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Consensus-enforced transaction replacement via sequence numbers</title>
    <updated>2023-06-09T21:41:06.813602+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008327.html" rel="alternate"/>
    <summary>The email conversation discusses the scenario of a single direction channel from Alice to Bob. Alice funds the channel and can take back her coins after a relative locktime of 150 blocks while Bob is unable to do so. To protect Bob, a refund transaction is created with a scriptPubKey that allows Alice to spend the output after 150 blocks but also allows both Alice and Bob to spend the output without delay with both signatures. Bob has a transaction that pays him 0.01BTC and Alice 0.99BTC from the refund transaction and is signed by Alice but still requires his signature, thus only Bob can make the transaction valid. However, if Bob refuses to sign the final transaction when Alice decides to close the channel, she can just broadcast the refund transaction and get 1BTC while Bob gets nothing. The email also explains how to apply a locktime path to a transaction using OP_CHECKLOCKTIMEVERIFY. Finally, it is mentioned that channels do not provide protection against fraud where Bob can claim his slice of the output without delivering services to Alice.</summary>
    <published>2015-05-28T17:21:34+00:00</published>
  </entry>
</feed>
