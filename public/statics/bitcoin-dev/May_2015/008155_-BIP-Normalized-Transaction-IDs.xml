<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP] Normalized Transaction IDs</title>
  <updated>2023-05-19T20:23:32.876668+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-05-13 18:40:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP] Normalized Transaction IDs</title>
    <updated>2023-05-19T20:23:32.876668+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008155.html" rel="alternate"/>
    <summary>In an email exchange between Christian Decker and Pieter Wuille, they discuss the advantages and disadvantages of the proposed SIGHASH change versus the normalized transaction ID. Decker expresses concern about the hackish nature of the SIGHASH proposal, citing that it is a substantial change to the way signatures are verified and adds more data to the script, which has to be stored as part of the transaction. In contrast, the normalized transaction ID is a cleaner and simpler long-term solution, even though it requires a hard-fork. Wuille clarifies that the SIGHASH proposal only adds a new CHECKSIG operator to script, which removes the scriptSigs from transactions before hashing and replaces the txids in txins by their ntxid. It does not add any data to transactions and it is a softfork because it only impacts scripts which actually use the new CHECKSIG operator. Wallets that do not support signing with this new operator would not give out addresses that use it. Wuille agrees with the advantage of not needing to monitor transactions afterward for malleated inputs but warns of the deployment costs associated with upgrading every single piece of Bitcoin software on the planet.Wuille also highlights that the SIGHASH approach may be useful in the short term as it does not require a hard fork. However, the normalized transaction ID is a cleaner and simpler long-term solution, despite requiring a hard-fork and the whole world to change their software to effectively use it. Lastly, Wuille raises concerns about what blocks commit to and whether old transaction IDs will still be used, as any relayer on the network can invalidate a block by changing the txids without committing to the scriptSig data in blocks.</summary>
    <published>2015-05-13T18:40:34+00:00</published>
  </entry>
</feed>
