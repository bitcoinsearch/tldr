<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Consensus-enforced transaction replacement via sequence numbers</title>
  <updated>2023-06-09T21:40:46.839330+00:00</updated>
  <author>
    <name>Mark Friedenbach 2015-05-27 01:50:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Consensus-enforced transaction replacement via sequence numbers</title>
    <updated>2023-06-09T21:40:46.839330+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008283.html" rel="alternate"/>
    <summary>Sequence numbers were originally created as a means of transaction replacement for multi-party transaction construction, such as micropayment channels. However, the lack of enforcement of the rule that miners include the most recent transaction in their blocks makes it impossible to rely on a transaction replacement policy. This issue can be resolved by giving sequence numbers new consensus-enforced semantics as a relative lock-time. In this way, one may construct bidirectional micropayment channels where each change of direction increments sequence numbers to make the transaction valid prior to any previously exchanged transactions. Additionally, this enables the implementation of the discussed relative-form of CHECKLOCKTIMEVERIFY through checking transaction data only and not requiring contextual information such as block height or timestamp. An example implementation of this concept is available on Github as a policy change to the mempool processing of Bitcoin Core.</summary>
    <published>2015-05-27T01:50:29+00:00</published>
  </entry>
</feed>
