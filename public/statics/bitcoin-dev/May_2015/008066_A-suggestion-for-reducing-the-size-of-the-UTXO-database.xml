<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A suggestion for reducing the size of the UTXO database</title>
  <updated>2023-06-09T20:27:37.324172+00:00</updated>
  <author>
    <name>Jeff Garzik 2015-05-10 14:33:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A suggestion for reducing the size of the UTXO database</title>
    <updated>2023-06-09T20:27:37.324172+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008066.html" rel="alternate"/>
    <summary>The issue of UTXO growth and how to manage it has been a topic of discussion in the Bitcoin community. This growth occurs due to the creation of many unspent outputs that are not used until some point in the future, resulting in an increase in the size of the UTXO database. One solution suggested is to design wallets that consolidate unspent outputs. Currently, wallets select only the minimum number of unspent outputs when building a transaction to keep the transaction size low and avoid high fees. However, selecting all the UTXOs from a particular address or wallet when building a transaction and sending the required amount to the payee while sending the rest back to the same address or a change address as a single output could limit the growth of the UTXO database over time.Another strategy discussed is picking highly common denominations of bitcoins, aggregating them to obtain these denominations, and then using several consolidation targets in a wallet to avoid over-aggregation problems. This approach allows for merge avoidance, easy coinjoin where many hide in the noise, and wallet dust de-fragmentation while maintaining privacy. There were also discussions about spending unconfirmed outputs, the security model required, and how to compute the probability that an unconfirmed-spend will be confirmed. The idea of fork/merge design was also debated, although it has big privacy implications and is far from bitcoin's design. Jeff Garzik, a Bitcoin core developer and open source evangelist, sent an email promoting a dashboard for monitoring servers and applications across physical-virtual-cloud environments to the Bitcoin-development mailing list. The dashboard offers support for over 50 applications and provides performance metrics, stats, and reports for actionable insights. Additionally, it offers deep dive visibility with transaction tracing using APM Insight. Garzik is also affiliated with BitPay, Inc., a payment service provider that accepts Bitcoin.</summary>
    <published>2015-05-10T14:33:56+00:00</published>
  </entry>
</feed>
