<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin-development Digest, Vol 48, Issue 41</title>
  <updated>2023-06-09T20:24:44.864333+00:00</updated>
  <author>
    <name>Damian Gomez 2015-05-08 22:13:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin-development Digest, Vol 48, Issue 41</title>
    <updated>2023-06-09T20:24:44.864333+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008027.html" rel="alternate"/>
    <summary>The email thread revolves around various issues related to Bitcoin development, including the proposed block size increase of up to 20MB. However, some argue that this could be a disruptive solution to the fee pressure problem. One suggested approach is to have transactions that pay too low a fee fail immediately or experience degraded performance, with long delays in confirmation but eventual success. This would encourage users to pay higher fees in the future.Another topic discussed is Softfork signaling improvements. Pieter's new proposal for allowing multiple soft forks to be deployed simultaneously was mentioned, but no information on where it was posted was provided. Additionally, Damian Gomez suggested the possibility of having a blockchain within 200-300 bytes that can attach nuanced data and keep proliferating the blockchain. The goal behind this is to add encryption standards like DH algorithm keys to increase the system's integrity level, which is currently controlled by the protocol through TxnOut script and the public key coming from the location of the proof-of-work.The discussion also covers potential solutions to the low transactions per second (tps) problem. Damian suggests that a higher rate than the current standard of 92 bytes could allow for GPUs like CUDA to perform its standard operations of 1216 flops to mechanize a new personal identity within the chain that also attaches an encrypted instance of a further categorical variable. He believes that the current best fit block size is between 200-300 bytes, depending on excitement level.In response to the thread, Raystonn suggests that replace by fee is a better approach to fixing the low tps problem, as it will eventually replace zombie transactions with potentially much higher fees as the feature takes hold in wallets throughout the network. However, he acknowledges that this does not fix the low tps problem and could even make it worse. Furthermore, Mark Friedenbach points out that replace by fee is no longer reorg-safe, as transactions can expire during a reorg, invalidating any transaction built on the now-expired transaction.</summary>
    <published>2015-05-08T22:13:21+00:00</published>
  </entry>
</feed>
