<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Block Size Increase Requirements</title>
  <updated>2023-06-09T19:55:43.677687+00:00</updated>
  <author>
    <name>Joseph Poon 2015-05-07 23:24:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Block Size Increase Requirements</title>
    <updated>2023-06-09T19:55:43.677687+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/007971.html" rel="alternate"/>
    <summary>The email conversation between Matt Corallo and Joseph Poon discusses the need for a discussion on how to approach the problem of block size increase in Bitcoin. Corallo expresses the need for real free pressure already on the network starting to develop when they commit to hardforking in a year. He believes that long-term incentives within the system need better conclusions. Poon agrees that the long-term fee incentive structure needs to be more granular, and he thinks designing sane defaults is a good path for any possible transition. It seems especially reasonable to maintain fee pressure for normal transactions during a hard-fork transition. A separate discussion about this is starting on CAE-z3OXnjayLUeHBU0hdwU5pKrJ6fpj7YPtGBMQ7hKXG3Sj6hw at mail.gmail.com. Poon suggests some kind of coinbase voting protocol for soft-cap enforcement, which will orphan out any transaction that violates the rules. The Lightning Network's security model in the long-term may rely on a multi-tier soft-cap. Poon thinks pretty much everyone agrees that the 1MB block cap will eventually be a problem, and while people may disagree with when that will be and how it'll play out, he thinks they are all in agreement that discussion about it is a good idea, especially when it comes to resolving blocking concerns. The discussion on how a hypothetical blocksize increase will occur and the necessary blocking/want-to-have features/tradeoffs seems to be a great way to approach this problem.</summary>
    <published>2015-05-07T23:24:35+00:00</published>
  </entry>
</feed>
