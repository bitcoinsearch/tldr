<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Block Size Increase</title>
  <updated>2023-05-19T20:04:41.781841+00:00</updated>
  <author>
    <name>Matt Corallo 2015-05-06 22:12:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Block Size Increase</title>
    <updated>2023-05-19T20:04:41.781841+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/007869.html" rel="alternate"/>
    <summary>Gavin Andresen has recently been advocating for increasing the maximum block size, but there hasn't been any discussion on this topic in several years. The block size question has many technical tradeoffs to consider, and a consensus in this kind of technical community should be a basic requirement for any serious commitment to blocksize increase. However, the fact that it is not being discussed in a technical community publicly anywhere is rather disappointing. Matt, at the risk of starting a flamewar, provides bait to get some responses and hope the discussion opens up into an honest comparison of the tradeoffs here. Personally, Matt is strongly against any commitment to a block size increase in the near future. Long-term incentive compatibility requires that there be some fee pressure, and that blocks be relatively consistently full or very nearly full. The well-funded Bitcoin ecosystem continues building systems which rely on transactions moving quickly into blocks while pretending these systems scale. Instead of working on technologies which bring Bitcoin's trustlessness to systems which scale beyond a blockchain's necessarily slow and (compared to updating numbers in a database) expensive settlement, the ecosystem as a whole continues to focus on building centralized platforms and advocate for changes to Bitcoin which allow them to maintain the status quo.</summary>
    <published>2015-05-06T22:12:14+00:00</published>
  </entry>
</feed>
