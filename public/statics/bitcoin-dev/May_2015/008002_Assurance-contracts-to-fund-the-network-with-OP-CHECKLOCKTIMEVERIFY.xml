<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Assurance contracts to fund the network with OP_CHECKLOCKTIMEVERIFY</title>
  <updated>2023-06-09T20:01:56.300167+00:00</updated>
  <author>
    <name>Tier Nolan 2015-05-08 14:56:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Assurance contracts to fund the network with OP_CHECKLOCKTIMEVERIFY</title>
    <updated>2023-06-09T20:01:56.300167+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008002.html" rel="alternate"/>
    <summary>The discussion revolves around the problem of incentivizing transaction verification. AC or anti-cheat mechanism does not solve the problem as it only works if people gain directly from the payment. For instance, in tax payment, no one gains from paying it, and negative outcomes like jail for tax fraud have to be enforced to enable it. Bitcoin solves this problem through an enforced subsidy, and the issue of how to incentivize transaction verification without subsidy remains unsolved. People need to study more economics and game theory instead of debating low-level encodings. The process involves pledgers creating transactions using a specific template and broadcasting them. The p2p protocol could be modified to allow this or a separate system could be used. Once enough users add pledges, a valid transaction can be broadcast and eventually included in the blockchain. The OP_CHECKLOCKTIMEVERIFY opcode ensures that the 50BTC output cannot be spent until block 1 million, after which it becomes completely unprotected. If the transaction hasn't been completed by block 999,900 due to insufficient pledgers, they can withdraw their pledge by spending the coin(s) they intended to use for the pledge.</summary>
    <published>2015-05-08T14:56:35+00:00</published>
  </entry>
</feed>
