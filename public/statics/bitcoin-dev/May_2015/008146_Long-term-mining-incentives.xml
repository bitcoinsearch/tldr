<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Long-term mining incentives</title>
  <updated>2023-06-09T20:40:55.597957+00:00</updated>
  <author>
    <name>Alex Mizrahi 2015-05-13 14:26:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Long-term mining incentives</title>
    <updated>2023-06-09T20:40:55.597957+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008146.html" rel="alternate"/>
    <summary>The concept of finding an alternative route for the information is the main idea of weak subjectivity, which is used in PoS to prevent "long term reversals" and protect against "total isolation" attacks. The argument that PoW is better than PoS because it doesn't depend on weak subjectivity is wrong because any practical implementation of PoW will also have to rely on weak subjectivity to be secure against isolation attacks. The security model of PoW-based consensus relies on connecting to at least one honest node, but users who use Bitcoin Core as a piece of software do not care about the security model and expect it to work. However, if there are realistic scenarios in which it fails, then users should be made aware of the problem, and preventative measures should be taken.The problem with everyone using the same check is that the source can be compromised, which cannot be solved in a 100% decentralized and automatic way. Non-decentralized trust-based solutions can be used, such as refusing to work if none of the well-known nodes are accessible. It is also common practice to manually check sha256sum after downloading the package, and checking block hashes against some source can become a common practice as well. These security measures are additive, making it exponentially harder to defeat multiple measures such as isolating a node, hijacking one of the well-known nodes, and hijacking a block explorer site user checks hashes against.</summary>
    <published>2015-05-13T14:26:52+00:00</published>
  </entry>
</feed>
