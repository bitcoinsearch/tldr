<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed alternatives to the 20MB step function</title>
  <updated>2023-06-09T20:05:33.941196+00:00</updated>
  <author>
    <name>Tier Nolan 2015-05-09 13:49:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed alternatives to the 20MB step function</title>
    <updated>2023-06-09T20:05:33.941196+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008043.html" rel="alternate"/>
    <summary>In an email exchange from May 9, 2015, Gavin Andresen discusses the potential benefits of building in UTXO set cost. By doing so, UTXO database entries would be worth something in addition to the bitcoin held within. A user's client could display how many entries they own, and when sending money to a merchant, they could demand the merchant indicate a slot to pay to. The user could then send an ANYONE_CAN_PAY partial transaction to guarantee they have at least as many UTXOs as before. However, this discussion creates an incentive to bloat the UTXO set right now, which could be limited by charting a path for UTXO set growth and making blocks invalid if they exceed that limit. Additionally, Gmaxwell's suggested formula for calculating transaction size based on UTXO creation and consumption has little effect on behavior because it only results in a 2% size penalty. Finally, Andresen suggests that if blocks are greater than 32MB, there would need to be an update to how blocks are broadcast, so a hard upper limit of 31MB or even just the previously suggested 20MB could suffice.</summary>
    <published>2015-05-09T13:49:53+00:00</published>
  </entry>
</feed>
