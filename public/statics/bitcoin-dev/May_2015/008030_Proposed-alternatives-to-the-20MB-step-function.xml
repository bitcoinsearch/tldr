<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed alternatives to the 20MB step function</title>
  <updated>2023-06-09T20:07:57.525267+00:00</updated>
  <author>
    <name>Aaron Voisine 2015-05-08 22:43:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed alternatives to the 20MB step function</title>
    <updated>2023-06-09T20:07:57.525267+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008030.html" rel="alternate"/>
    <summary>The email thread discusses the proposal to raise the block size limit in Bitcoin. Mark Friedenbach highlights the risks associated with infrastructure scaling, centralization pressures and the delay in developing a constraint-based fee economy if the block size is raised without any feedback mechanism. He suggests having a dynamic block size limit controller that applies a cost to raising the block size to preserve decentralization and long-term stability features. The proposed solution allows block size to increase within the confines of a self-supporting fee economy. The incentive structure created by this solution constrains the maximum allowed block size to be within a range supported by fees on the network, providing an emergency relief valve that can only be used at significant cost. The email thread also presents several ideas for determining the hard block size limit, including basing it on the actual block sizes over some trailing sampling period, determining it through a vote of the miners or making it a function of the blockchain length. However, Mark Friedenbach's proposal relies on a miner-selected difficulty that adjusts the maximum block size for that block by a function of the difference in difficulty, making raising the block size have a real cost associated with it.</summary>
    <published>2015-05-08T22:43:14+00:00</published>
  </entry>
</feed>
