<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Consensus-enforced transaction replacement via sequence numbers</title>
  <updated>2023-06-09T21:38:21.411306+00:00</updated>
  <author>
    <name>Tier Nolan 2015-05-28 15:57:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Consensus-enforced transaction replacement via sequence numbers</title>
    <updated>2023-06-09T21:38:21.411306+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008321.html" rel="alternate"/>
    <summary>The discussion is about the use cases of relative lock time verify (RLTV) and its implementation in Bitcoin. It is suggested that most cases for RLTV are to guarantee that the other party has a chance to react, and 8191 blocks should be more than enough for this purpose. The absolute version is just as good for long term, depending on the use case. There is a proposal to keep some of the bytes for other uses in the serialization of the transaction, leaving the top 2 bytes fully free to be set to anything. It is also suggested that if the MSB of the bottom 2 bytes is set, then that activates the rule and the top 2 bytes are ignored. The question is asked whether there are any use-cases which need a RLTV of more than 8191 blocks delay that cannot be covered by the absolute version.</summary>
    <published>2015-05-28T15:57:15+00:00</published>
  </entry>
</feed>
