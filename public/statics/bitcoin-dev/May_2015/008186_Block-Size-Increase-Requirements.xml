<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Block Size Increase Requirements</title>
  <updated>2023-06-09T19:57:55.976417+00:00</updated>
  <author>
    <name>Tier Nolan 2015-05-16 11:29:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Block Size Increase Requirements</title>
    <updated>2023-06-09T19:57:55.976417+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008186.html" rel="alternate"/>
    <summary>The email conversation discusses the idea of mitigating the delay in transaction confirmations by counting them differently. The proposal suggests that confirmations should only come from blocks following the miners' stricter rule set, which would mean that if a merchant sees a payment for the first time in a block that meets their size restrictions but not the miners', then they would count it as unconfirmed. This would result in a confirm penalty for less strict blocks. Merchants who don't upgrade end up having to wait longer to hit confirmations. However, if they get deep enough in the chain, the client should probably count them as being confirmed anyway, even if they don't meet the client nodes' expectation of the miners' block size limit. The conversation also suggests that any parameters that have miner/merchant differences should be modifiable (but only upwards) in the command line. The email ends with a humorous suggestion that this could be called a "semi-hard fork" and a recommendation for users to add "minermaxblocksize=4MB" to their bitcoin.conf file to speed up transactions.</summary>
    <published>2015-05-16T11:29:14+00:00</published>
  </entry>
</feed>
