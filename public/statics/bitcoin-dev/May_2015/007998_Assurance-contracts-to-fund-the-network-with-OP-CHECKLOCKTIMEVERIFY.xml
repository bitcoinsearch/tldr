<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Assurance contracts to fund the network with OP_CHECKLOCKTIMEVERIFY</title>
  <updated>2023-06-09T20:01:01.776784+00:00</updated>
  <author>
    <name>Tier Nolan 2015-05-08 14:15:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Assurance contracts to fund the network with OP_CHECKLOCKTIMEVERIFY</title>
    <updated>2023-06-09T20:01:01.776784+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/007998.html" rel="alternate"/>
    <summary>The context discusses the process of creating transactions and broadcasting them. Pledgers create transactions using a template and broadcast it while the p2p protocol could be modified to allow this or be a separate system. The transaction includes inputs, outputs, and signatures with SIGHASH_ANYONE_CAN_PAY that allows other people to add additional inputs without making the signature invalid. The aim is to add enough pledges from other users to create a valid transaction that can be broadcasted to the main network and once included in the blockchain, it is locked in. The transaction includes an OP_CHECKLOCKTIMEVERIFY opcode that means the 50BTC output cannot be spent until block 1 million, and once block 1 million arrives, the output is completely unprotected. In case the transaction hasn't been completed by block 999,900, the pledgers can spend the coins they were going to use for their pledge, which invalidates those inputs and withdraws from the pledge. Furthermore, the context discusses a scenario where a pledger says that they will only pay 0.01BTC if the miner gets a reward of 50BTC. It highlights the tragedy of the commons problem where everyone has an incentive to wait until the last minute to pledge, making it not perfect.</summary>
    <published>2015-05-08T14:15:05+00:00</published>
  </entry>
</feed>
