<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Cost savings by using replace-by-fee, 30-90%</title>
  <updated>2023-06-09T21:19:45.960727+00:00</updated>
  <author>
    <name>s7r 2015-05-27 19:28:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Cost savings by using replace-by-fee, 30-90%</title>
    <updated>2023-06-09T21:19:45.960727+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008302.html" rel="alternate"/>
    <summary>In an email exchange, s7r inquires about the differences between Bitcoin Core's (official/default) 0.10.x and Peter Todd's custom branch of replace by fee mempool behavior. Todd clarifies that the latter allows a user to change anything in a transaction as long as it has at least one same input, thus linking it to another previously signed transaction with lower fees and substituting it in the mempool. He explains that First Seen Safe Replace by Fee (FSF-RBF) mempool behavior only allows users to add inputs and/or increase the value of outputs and will be maintained by him in yet another branch, but not in default/official bitcoin core. S7r asks how the client knows which transaction needs to be replaced in the mempool if FSF-RBF lets users change transactions in the manner described above since the transaction ID naturally changes and quite a lot of parameters from the transaction structure can change. Todd does not answer this question in the given context. S7r also asks what real use cases exist for RBF, to which Todd explains that standard RBF lets users change anything, and FSS RBF lets them modify inputs and add outputs and/or make the value of outputs higher. Todd notes that any significant change to mempool policy like RBF is unlikely to be incorporated into the Bitcoin Core v0.10.x branch because it would be too large a change for a minor, mostly bugfix, release. However, he already maintains a standard RBF branch for v0.10.x and has been asked by a major miner to backport FSS RBF for v0.10.x as well.</summary>
    <published>2015-05-27T19:28:55+00:00</published>
  </entry>
</feed>
