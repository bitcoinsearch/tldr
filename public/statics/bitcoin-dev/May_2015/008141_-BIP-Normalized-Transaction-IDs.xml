<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP] Normalized Transaction IDs</title>
  <updated>2023-06-09T20:56:39.721482+00:00</updated>
  <author>
    <name>Christian Decker 2015-05-13 12:48:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP] Normalized Transaction IDs</title>
    <updated>2023-06-09T20:56:39.721482+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008141.html" rel="alternate"/>
    <summary>A proposal for a BIP to normalize transaction IDs has been suggested in order to address transaction malleability and facilitate higher level protocols. The normalized transaction ID is an alias that is calculated by removing the scriptSig before computing the hash, which ensures that only data whose integrity is also guaranteed by the signatures influences the hash. This would automatically invalidate the signature if anything causes the normalized ID to change. The detailed writeup can be found on GitHub. It is a simple alternative that not only solves transaction malleability but also simplifies higher level protocols as it allows for the use of template transactions upon which sequences of transactions can be built before signing them. Although this proposal requires a hardfork and old clients would not find the prevTx identified by the normalized transaction ID, it seems that hardforks are no longer the dreaded boogeyman nobody talks about. The details of how the hardfork is to be done have been left out, as it does not matter and there may be a good mechanism to apply a bunch of hardforks concurrently in the future. The proposal is not set in stone at this point and improvements are welcome.</summary>
    <published>2015-05-13T12:48:04+00:00</published>
  </entry>
</feed>
