<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Relative CHECKLOCKTIMEVERIFY (was CLTV proposal)</title>
  <updated>2023-06-09T18:48:50.679381+00:00</updated>
  <author>
    <name>Jorge Timón 2015-05-05 19:19:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Relative CHECKLOCKTIMEVERIFY (was CLTV proposal)</title>
    <updated>2023-06-09T18:48:50.679381+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/007865.html" rel="alternate"/>
    <summary>In a discussion about Mark Friedenbach's nSequence-based RCLTV proposal, Jorge Timón attempted to explain an additional way to make the timestamp compatible with it. However, he was not entirely sure of the details and did not want to confuse others. Nonetheless, he noted that ACLTV can also work with timestamps. The discussion regarding timestamps is separate from the RCLTV proposal itself. Btc Drak responded to Timón's explanation by clarifying that Mark's RCLTV proposal does not require fixing and is completely reorg safe. It keeps script validation independent from utxo and works by checking that the nSequence of the input is lower than a relative_height parameter. Additionally, there is a new check at the transaction level that confirms that the sum of the height plus the nSequence of each input is less than the relative height parameter. This assumes the use of heights and not timestamps. Drak questioned whether dropping timestamps would apply only to RCLTV or also to CLTV. He argued that timestamps are necessary for absolute CLTV in order to make trust fund use cases practical, such as allowing funds to be spent on one's 18th birthday, for example. The exact date on which a block will be mined in the future is unpredictable if it is far enough in the future.</summary>
    <published>2015-05-05T19:19:00+00:00</published>
  </entry>
</feed>
