<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A way to create a fee market even without a block size limit (2013)</title>
  <updated>2023-06-09T20:34:57.231862+00:00</updated>
  <author>
    <name>Stephen 2015-05-11 05:31:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A way to create a fee market even without a block size limit (2013)</title>
    <updated>2023-06-09T20:34:57.231862+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008079.html" rel="alternate"/>
    <summary>The email thread discusses the tie between the block size debate and creating a fee market. The author argues that there already exists a marketplace for block space, but miners are not being competitive enough. He suggests that altering consensus rules to force a marketplace for fees/block space should not be the way forward, and that the market should develop on its own. Sergio Lerner proposes a new way to create a fee market that does not depend on the block chain limit. His proposal requires a hardfork but has minimum impact in the code and economics. The solution is to require that the set of fees collected in a block has a dispersion below a threshold, using the Coefficient of Variation. This means that if there are many transactions containing high fees in a block, free transactions cannot be included. Spamming users would need to use higher fees only if the remaining users in the community raise their fees. The proposal would also help solve the tragedy-of-the-commons fee problem. Increasing the block size would prevent miners from filling the block with spamming txs and destroying the market that is being created. The system may require more complex algorithms to find the optimum tx subset, but this could stimulate researchers to develop better tx selection algorithms.</summary>
    <published>2015-05-11T05:31:09+00:00</published>
  </entry>
</feed>
