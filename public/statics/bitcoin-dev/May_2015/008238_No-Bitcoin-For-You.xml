<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>No Bitcoin For You</title>
  <updated>2023-06-09T21:05:44.382737+00:00</updated>
  <author>
    <name>Thy Shizzle 2015-05-26 03:02:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>No Bitcoin For You</title>
    <updated>2023-06-09T21:05:44.382737+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008238.html" rel="alternate"/>
    <summary>The debate about increasing the block size of Bitcoin has been ongoing, with some advocating for a larger block size to increase transaction capacity, while others argue that it could negatively impact network bandwidth and slow down propagation times. Jim Phillips, who is in favor of faster confirmation times, believes that increasing the amount of transactions in blocks is important and that the network is currently closest to being restricted by network bandwidth. He argues that even on a 2Mbps connection, he can handle up to 17x larger block sizes if he relays to ten peers. While decreasing the time to create blocks may be a short-term solution, eventually, the block size will have to increase as the demand for transactions grows. Phillips suggests expanding capacity by increasing the block size to 20MB, which would increase capacity by 20-fold, and then bumping it up again in a few years when the average block size is over 15MB. He also suggests that miners can decide how much they want to charge for fees to accommodate the costs of bigger blocks, rather than crippling the network. Although there are concerns about the negative impact on network bandwidth, Phillips believes that by the time we exceed the capacity gained by the decrease in block time, we can look to bump up block size because hopefully 20mbps connections will be baseline by then.</summary>
    <published>2015-05-26T03:02:00+00:00</published>
  </entry>
</feed>
