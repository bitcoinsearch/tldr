<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CLTV opcode allocation; long-term plans?</title>
  <updated>2023-06-09T19:28:20.314796+00:00</updated>
  <author>
    <name>Jorge Tim√≥n 2015-05-12 19:16:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CLTV opcode allocation; long-term plans?</title>
    <updated>2023-06-09T19:28:20.314796+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008111.html" rel="alternate"/>
    <summary>The email thread starts with a discussion on whether to use OP_CLTV as is or add a parameter to it, making it more flexible. The author of the original message isn't convinced about either option and states that they can always use the trick with the last opcode to get new opcodes for future use. Peter Todd responds by suggesting that adding a parameter to OP_CLTV would be the most economical use of NOPs, and presents how it could be implemented. He acknowledges that this change would require some work to update all the existing tests and example codes and to update the BIP, but believes that it's not too big of a deal. Btc Drak agrees with this proposed change, and suggests that it should be made in time for the feature freeze. Todd then posts a link to the pull request with the suggested changes. The email ends with an advertisement for a monitoring support tool.</summary>
    <published>2015-05-12T19:16:46+00:00</published>
  </entry>
</feed>
