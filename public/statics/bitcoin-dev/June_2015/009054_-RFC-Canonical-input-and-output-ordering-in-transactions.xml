<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] Canonical input and output ordering in transactions</title>
  <updated>2023-06-09T22:17:47.573877+00:00</updated>
  <author>
    <name>Kristov Atlas 2015-06-24 22:09:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] Canonical input and output ordering in transactions</title>
    <updated>2023-06-09T22:17:47.573877+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009054.html" rel="alternate"/>
    <summary>Kristov Atlas has proposed a new Bitcoin Improvement Proposal (BIP 69) to improve transaction ordering in Bitcoin. BIP 69 has been implemented by Electrum and Rusty has adapted his original canonical ordering proposal implementation for Bitcoin Core's wallet client to fit Kristov's proposal. However, there are still objections to the proposal, mainly concerning some transactions' inability to comply with the BIP due to input and/or put index dependencies and concerns that setting a standard now for transactions that is not apparently random ordering from the perspective of passive blockchain observers will mean that such transactions stand out, which may be undesirable. Kristov suggests that apparently-random but owner-verifiable ordering is doable and discusses a variety of schemes that could work. However, he acknowledges that many wallet clients may not want to implement the BIP if they have to maintain a sorting key, and it may be difficult for users to detect anomalies in BIP compliance except for the sorting key holder. If there is market demand for it, a separate sorting key-based proposal could be written which can compete with this BIP and over time successfully deprecate it.</summary>
    <published>2015-06-24T22:09:32+00:00</published>
  </entry>
</feed>
