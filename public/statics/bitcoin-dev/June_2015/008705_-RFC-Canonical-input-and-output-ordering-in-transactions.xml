<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] Canonical input and output ordering in transactions</title>
  <updated>2023-06-09T22:18:10.230562+00:00</updated>
  <author>
    <name>Rusty Russell 2015-06-15 21:01:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] Canonical input and output ordering in transactions</title>
    <updated>2023-06-09T22:18:10.230562+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008705.html" rel="alternate"/>
    <summary>Mark Friedenbach suggests a special exemption for compact commitments via mid-state compression. The use case involves an OP_RETURN output sorted last, with the last N bytes serving as a commitment, and a proof of the commitment using mid-state compression to elide the beginning of the transaction. However, it is challenging to create a clean exemption without requiring an advertisement of sort-order exemptions. Despite this challenge, outputs can be sorted by the first byte minus 107 (or 0 if script is zero length) and the remainder of the script in lexicographical order. This method would place OP_RETURN outputs last. Peter Todd's more general best-effort language could also be used, as OP_RETURN transactions cannot be hidden to look like something else, so non-canonical ordering will not be an issue.</summary>
    <published>2015-06-15T21:01:04+00:00</published>
  </entry>
</feed>
