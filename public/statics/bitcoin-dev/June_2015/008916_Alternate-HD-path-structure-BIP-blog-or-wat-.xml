<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Alternate HD path structure: BIP, blog, or wat?</title>
  <updated>2023-06-10T00:03:05.338084+00:00</updated>
  <author>
    <name>Matt @ Envrin Group 2015-06-20 01:58:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Alternate HD path structure: BIP, blog, or wat?</title>
    <updated>2023-06-10T00:03:05.338084+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008916.html" rel="alternate"/>
    <summary>In an email exchange between two people named Matt, the use of a proposed path structure in HD wallets was discussed. The proposed path structure separates the concept of network and coin type. This would be useful when importing a wallet into an application and checking addresses derived below a specific path for balances against a specific blockchain. However, a concern was raised about the relevance of storing all the variables of the path structure in the wallet database since there is no way to retrieve the path used from just the address. It was suggested that using m/account'/change/index if using hardened child keys or m/change/index if not, would be more appropriate as the wallet will still function the exact same way. It was also mentioned that multisig HD wallet imports may require master keys and a list of account paths instead of a list of addresses due to the possibility of a new address being derived between exporting and importing the wallet data.</summary>
    <published>2015-06-20T01:58:46+00:00</published>
  </entry>
</feed>
