<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] Canonical input and output ordering in transactions</title>
  <updated>2023-06-09T22:18:27.299586+00:00</updated>
  <author>
    <name>Mark Friedenbach 2015-06-06 04:46:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] Canonical input and output ordering in transactions</title>
    <updated>2023-06-09T22:18:27.299586+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008488.html" rel="alternate"/>
    <summary>In June 2015, Rusty Russell proposed a Bitcoin Improvement Proposal (BIP) that provides a canonical ordering of inputs and outputs when creating transactions. The motivation behind this proposal was to avoid trivial linkage analysis by randomizing the outputs of transactions created by most bitcoin wallet implementations. However, such implementations have made mistakes in this area in the past. Using a canonical ordering has the same effect but is simpler, more obvious if incorrect, and can be eventually enforced by IsStandard() and even a soft-fork to enforce it. The specification provided by Russell stated that inputs should be ordered by index (lower value first) and txid (little endian order, lower byte first). Outputs should be ordered by amount (lower value first) and script (starting from first byte, lower byte first, shorter wins). Any single wallet is already free to implement this, but if other wallets do not, it would reduce privacy by making those transactions stand out. Thus, a BIP is appropriate, especially if this were to become an IsStandard() rule once widely adopted.The reference implementation for this proposal can be found here: https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering.</summary>
    <published>2015-06-06T04:46:17+00:00</published>
  </entry>
</feed>
