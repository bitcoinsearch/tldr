<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] IBLT block testing implementation</title>
  <updated>2023-06-10T00:43:14.691086+00:00</updated>
  <author>
    <name>Kalle Rosenbaum 2015-06-25 21:02:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] IBLT block testing implementation</title>
    <updated>2023-06-10T00:43:14.691086+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009090.html" rel="alternate"/>
    <summary>Rusty Russell has developed a model for using Invertible Bloom Lookup Tables (IBLT) to communicate blocks between peers. The model is designed to be as flexible as possible, making few assumptions on transaction selection policy and relying on similarity in mempools, with some selection hints. The selection hints are minimum fee-per-byte and bitmaps of included-despite-that and rejected-despite-that. The former covers things like child-pays-for-parent and the priority area.  The latter covers other cases like Eligius censoring "spam", bitcoin version differences, etc. It performs reasonably well on a 100 block sample in bitcoin-corpus. There is more work to do, and more investigation to be done, but Rusty doesn't expect more than a 25% reduction in this "ideal minimum" result. Kalle Rosenbaum previously investigated IBLTs with Rusty last year.</summary>
    <published>2015-06-25T21:02:25+00:00</published>
  </entry>
</feed>
