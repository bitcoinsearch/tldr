<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>A possible solution for the block size limit: Detection and rejection of bloated blocks by full nodes.</title>
  <updated>2023-05-19T20:52:53.487169+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-06-30 23:45:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>A possible solution for the block size limit: Detection and rejection of bloated blocks by full nodes.</title>
    <updated>2023-05-19T20:52:53.487169+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009291.html" rel="alternate"/>
    <summary>The block size debate revolves around the concern that if block size is increased, malicious miners may publish unreasonably large "bloated" blocks by generating a plethora of private, non-propagated transactions and including them in the block they solve. However, these bloated blocks can easily be detected by other miners and full nodes as they will contain a very high percentage of transactions that aren't found in the nodes' own memory pools. This signature can be exploited to allow nodes to reject these bloated blocks. A threshold would be set by nodes on the allowable number of non-mempool transactions allowed in a solved block; if a block contains more than this threshold of non-mempool transactions, it is rejected. The problem with this approach is that 100% exact behavior for every node on the network is required in their decision to reject a particular block. Therefore, there is a need for a 100% mempool synchronization across all nodes; otherwise, an attempted double spend could result in a fork in the network because some nodes saw it and some didn't. If there were 100% mempool synchronization, a blockchain wouldn't be needed because "first to enter mempool" could be used as a validity criterion. The author suggests that if this idea works, the block size limitation could be completely removed.</summary>
    <published>2015-06-30T23:45:09+00:00</published>
  </entry>
</feed>
