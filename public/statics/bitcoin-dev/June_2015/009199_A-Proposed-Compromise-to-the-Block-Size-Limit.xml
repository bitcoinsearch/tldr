<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Proposed Compromise to the Block Size Limit</title>
  <updated>2023-06-10T01:18:35.904493+00:00</updated>
  <author>
    <name>Adam Back 2015-06-28 10:07:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Proposed Compromise to the Block Size Limit</title>
    <updated>2023-06-10T01:18:35.904493+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009199.html" rel="alternate"/>
    <summary>In a forum post from June 2015, Raystonn explained that nodes are limited to 133 connections, after which they will see no further increase in load. The load is only affected by transaction rate, not by the number of connections. Some people have been concerned about larger blocks resulting in exponential growth of work, but this is based on a wrong assumption of quadratic system level increase.Decentralization is planned to scale down once the 133 connection limit is hit, but some people assume that the number of economically dependent full nodes will increase, resulting in O(n^2) scaling. However, decentralization is crucial to Bitcoin's security properties, and simplistic thinking about an ever-increasing block size is destructive and not in line with the principles of Bitcoin. To improve decentralization, we can use bandwidth and relay improvements to get some increase in throughput and work on pooling protocols to phase out artificial centralization. Educating people to use full nodes they depend on is also important for security.Better scaling algorithms need to be found, and people are working on lightning-like systems to achieve this. While Gavin's proposal to reclaim some throughput from network advances is reasonable, his parameters are too high for too long for basic safety or prudence. Instead, we should focus on improving decentralization and using off-chain systems like lightning while understanding the constraints and avoiding arguments to break Bitcoin to "scale."</summary>
    <published>2015-06-28T10:07:40+00:00</published>
  </entry>
</feed>
