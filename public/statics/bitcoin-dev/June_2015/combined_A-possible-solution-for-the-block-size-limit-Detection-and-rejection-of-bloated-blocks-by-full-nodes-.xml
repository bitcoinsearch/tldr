<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A possible solution for the block size limit: Detection and rejection of bloated blocks by full nodes.</title>
  <updated>2023-06-10T01:51:54.760652+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-06-30 23:45:09</name>
  </author>
  <author>
    <name>Luke Dashjr 2015-06-30 23:43:17</name>
  </author>
  <author>
    <name>Jeremy 2015-07-01 02:52:16</name>
  </author>
  <author>
    <name>Peter Grigor 2015-06-30 23:41:29</name>
  </author>
  <author>
    <name>Pieter Wuille 2015-06-30 23:45:09</name>
  </author>
  <author>
    <name>Jeremy 2015-07-01 02:52:16</name>
  </author>
  <author>
    <name>Peter Grigor 2015-06-30 23:41:29</name>
  </author>
  <author>
    <name>Pieter Wuille 2015-06-30 23:45:09</name>
  </author>
  <author>
    <name>Peter Grigor 2015-06-30 23:41:29</name>
  </author>
  <author>
    <name>Luke Dashjr 2015-06-30 23:43:17</name>
  </author>
  <author>
    <name>Jeremy 2015-07-01 02:52:16</name>
  </author>
  <author>
    <name>Luke Dashjr 2015-06-30 23:43:17</name>
  </author>
  <link href="bitcoin-dev/June_2015/009291_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009290_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009292_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009289_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009291_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009292_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009289_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009291_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009289_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009290_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009292_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/009290_A-possible-solution-for-the-block-size-limit-Detection-and-rejection-of-bloated-blocks-by-full-nodes-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A possible solution for the block size limit: Detection and rejection of bloated blocks by full nodes.</title>
    <updated>2023-06-10T01:51:54.760652+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009291.html" rel="alternate"/>
    <summary>The block size debate in the world of cryptocurrency centers around the concern that if block size is increased, malicious miners may publish unreasonably large "bloated" blocks by generating a plethora of private, non-propagated transactions and including them in the block they solve. However, these bloated blocks can easily be detected by other miners and full nodes as they will contain a very high percentage of transactions that aren't found in the nodes' own memory pools. This signature can be exploited to allow nodes to reject these bloated blocks. A threshold would be set by nodes on the allowable number of non-mempool transactions allowed in a solved block; if a block contains more than this threshold of non-mempool transactions, it is rejected.There is a need for 100% mempool synchronization across all nodes on the network for this approach to work as attempted double spend could result in a fork in the network because some nodes saw it and some didn't. If there were 100% mempool synchronization, a blockchain wouldn't be needed because "first to enter mempool" could be used as a validity criterion. If this idea works, the block size limitation could be entirely removed, as suggested by the author.Peter Grigor believes that these bloated blocks could be easily detected by other miners and full nodes by containing a high percentage of transactions not found in their own memory pools. This signature can be used to reject bloated blocks. A threshold could be set on the allowable number of non-mempool transactions allowed in a solved block, and if a block exceeds this threshold, it would be rejected. However, Luke suggests that this idea can be defeated simply by broadcasting the bloat beforehand.A proposal has been made to phase shift transaction fees by one block in order to prevent miners from putting in a bunch of transactions for free. The idea is that a miner would orphan a block that didn't properly reward them, making it very costly for the miner to do so. The phase can be adjusted to different amounts and spread over multiple blocks or even randomly selected at the time of mining from a pool of un-fee claimed blocks. However, this approach requires 100% mempool synchronization across all nodes on the network to reject a particular block. Otherwise, an attempted double spend could result in a fork in the network because some nodes saw it and some did not.In summary, the block size debate in cryptocurrency is centered around the fear of malicious miners publishing unreasonably large "bloated" blocks if block size is increased. Proposed solutions include setting a threshold by nodes on the allowable number of non-mempool transactions allowed in a solved block and phase shifting transaction fees by one block. However, both approaches require 100% mempool synchronization across all nodes on the network to prevent forks in the network due to attempted double spend. If successfully implemented, these ideas could mean that the block size limitation could be entirely removed.</summary>
    <published>2015-06-30T23:45:09+00:00</published>
  </entry>
</feed>
