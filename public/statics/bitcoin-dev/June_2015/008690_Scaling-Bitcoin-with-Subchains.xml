<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scaling Bitcoin with Subchains</title>
  <updated>2023-05-19T20:41:09.000391+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-06-15 17:09:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scaling Bitcoin with Subchains</title>
    <updated>2023-05-19T20:41:09.000391+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008690.html" rel="alternate"/>
    <summary>The issue of scalability in the Bitcoin network is a persistent one. The SPV security model has been suggested as a solution, with the recommendation to increase the block size and utilize an SPV client, which only downloads transactions deemed important. This would allow for infinite scalability. However, even with SPV security, validation still relies on others being able to validate, leading to potential issues with sidechains and larger block sizes making validation more difficult.In terms of sidechains, they do not offer a useful compromise between validation and non-validation, and instead add complexity and delays. While some people believe that heavily pruned nodes are sufficient for network security, this comes with risks such as the potential for denial of service attacks and inequality between data centers and regular users. Without access to the full history of blocks, it becomes difficult to prove that what was noticed with pruned nodes is actually what happened.While some may argue that decentralization means running a noisy desktop in restricted spaces, it is possible to run a full node remotely. However, even 10 MB blocks may be too much for true decentralization. Ultimately, a proper system is necessary, and criticism of proposed scaling methods is welcome.</summary>
    <published>2015-06-15T17:09:42+00:00</published>
  </entry>
</feed>
