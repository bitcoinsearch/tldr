<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Draft BIP : fixed-schedule block size increase</title>
  <updated>2023-06-10T00:28:15.370506+00:00</updated>
  <author>
    <name>Patrick Strateman 2015-06-22 21:39:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Draft BIP : fixed-schedule block size increase</title>
    <updated>2023-06-10T00:28:15.370506+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009017.html" rel="alternate"/>
    <summary>In a Bitcoin Development mailing list, Peter Todd raised a question regarding the stability of block height to work with and if block timestamps aren't chronological in order, what would happen if a block following a size increase trigger is back in the past before the size increase. Gavin Andresen responded by proposing that comparing the timestamp against the median time, which is guaranteed by the protocol rules to monotonically advance, could solve the issue. However, he acknowledged that this will complicate the implementation quite a bit. Instead, Gavin mostly implemented a variant that replaced the MAX_BLOCK_SIZE constant with a function that took both a timestamp and a block height. He further pointed out that digging out the block height or calculating the median timestamp for the block would involve changing quite a few functions in the call-chain or acquiring the cs_main lock to consult the current best chain.</summary>
    <published>2015-06-22T21:39:07+00:00</published>
  </entry>
</feed>
