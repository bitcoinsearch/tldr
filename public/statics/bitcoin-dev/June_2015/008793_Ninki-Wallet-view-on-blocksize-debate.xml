<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ninki Wallet view on blocksize debate</title>
  <updated>2023-06-09T23:35:36.672075+00:00</updated>
  <author>
    <name>Stephen Morse 2015-06-18 14:53:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ninki Wallet view on blocksize debate</title>
    <updated>2023-06-09T23:35:36.672075+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008793.html" rel="alternate"/>
    <summary>In this context, the discussion is about how wallets calculate the fee that must be paid to miners and whether they adjust automatically when transactions take a long time to be confirmed. Additionally, the response of wallets when transactions are not mined successfully, such as when blocks are full, is also being discussed. The writer urges Gavin to withdraw from the current standoff and work with the Bitcoin core developers via the existing BIP process. While the proposed solution of convincing miners and services to switch to Bitcoin-XT is not ideal, it is recognized that it is done out of urgency, as changes take a long time to roll out, and we should start them before it's too late.The debate is centered around what is more risky: a consensus hard fork or letting Bitcoin exceed its imposed capacity limits. The former could result in many services not being compatible and even loss of funds. Conversely, the latter could result in software failures, instability, and inability to transact. It is emphasized that both are dangerous and could result in a significant loss of public confidence. Two potential short-term solutions have been proposed: (1) all miners and wallet developers need to upgrade to support first-safe RBF to allow for double spending one's own transactions when they lack sufficient fees to merit confirmations, or (2) implementing either Gavin's or Jeff Garzik's proposal to change the consensus parameters around the block size limit. The writer hopes that if #2 is not the right way to go (even though everyone agrees that we will need to increase the block size limit eventually anyway), then Ben should start working hard on implementing #1 so that his wallet software can handle hitting capacity limits gracefully.</summary>
    <published>2015-06-18T14:53:46+00:00</published>
  </entry>
</feed>
