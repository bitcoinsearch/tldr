<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for Proof of Payment</title>
  <updated>2023-05-19T20:32:10.436602+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-06-16 19:48:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for Proof of Payment</title>
    <updated>2023-05-19T20:32:10.436602+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008754.html" rel="alternate"/>
    <summary>The discussion revolves around the limitation of creating a 40-byte OP_RETURN. The limitation comes from a relay policy in full nodes, not a limitation is wallet software. PoPs are not relayed on the network. The purpose of the PoP is to ensure that only the person who paid for it can use it during that time. There is an argument against this idea as the original payer can also hand the private keys in his wallet to someone else, who would then become able to create PoPs for the service. Using a token does not change anything, except it can be provided to the payer - instead of relying on creating an implicit identity based on who seems to have held particular private keys in the past. A suggestion was made for an extension to the payment protocol that gives you (or your wallet) a token in return for paying, and that knowledge of that token is used to gain access to the services you provide. However, the token would then be reusable and susceptible to theft.It should be noted that the nonce is limited because of the OP_RETURN output being limited to 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce. Furthermore, the proposal is not compatible with CoinJoin and the likes. The receiver should not care who paid or how; he should care what was paid for. Finally, people using PoP should be aware of its limitations and act accordingly.</summary>
    <published>2015-06-16T19:48:54+00:00</published>
  </entry>
</feed>
