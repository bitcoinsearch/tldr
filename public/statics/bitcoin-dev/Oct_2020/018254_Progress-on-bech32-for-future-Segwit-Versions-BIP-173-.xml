<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
  <updated>2023-05-20T23:58:35.308177+00:00</updated>
  <author>
    <name>Pieter Wuille 2020-10-19 22:55:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
    <updated>2023-05-20T23:58:35.309177+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-October/018254.html" rel="alternate"/>
    <summary>In a Bitcoin mailing list, Pieter Wuille discussed how to approach implementing changes to witness version 1 (v1) addresses. He noted that currently no v1 receivers exist and questioned whether software and infrastructure supporting sending to v1 addresses will upgrade before such receivers appear. Rusty Russell raised concerns about trailing typos causing issues for non-upgraded software under option 1. Wuille agreed that option 2, which requires using new witness version/length combinations, would mean that systems are likely to be fixed the first time someone tries a v1 send. However, it is possible that non-upgraded software won't get fixed at all, resulting in receiver software having to wait a few years longer before being able to start giving out v1 addresses.Wuille suggested that there may be other uses for extra bytes, such as per-UTXO flags, but even then, he couldn't see why they'd need to be known until they're spent. He added that fewer bytes could be bad for fungibility since multisig would be dangerous. Both Wuille and Russell acknowledged that their thinking may change significantly over time.In response to Wuille's question about what codebases/services/infrastructure exists today that supports sending to v1 BIP173 addresses, Russell offered a BIP341 witness v1 address and suggested spamming it from as many things as possible.</summary>
    <published>2020-10-19T22:55:50+00:00</published>
  </entry>
</feed>
