<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Is BIP32's chain code needed?</title>
  <updated>2023-06-14T15:46:30.634570+00:00</updated>
  <author>
    <name>Christopher Allen 2020-10-05 20:34:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Is BIP32's chain code needed?</title>
    <updated>2023-06-14T15:46:30.634570+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-October/018232.html" rel="alternate"/>
    <summary>The response to a question regarding Bitcoin Improvement Proposals (BIPs) related to turning a master seed into the master key has led to a discussion on the importance of interoperability and avoiding vendor lock-in. While some vendors wanted to use 128 bits of entropy instead of 256 bits, a compromise was made at that time. However, recent proposals such as SLIP-39 and Lightning Labs' seed mnemonics have caused interoperability and lock-in issues. The Blockchain Commons and a small community of airgapped wallet developers have worked on a closely related specification called SSKR that uses the same seed-&gt;master key technique as BIP32 to prevent lock-in. The issue with metadata in addition to the seed for Lightning Labs' mnemonics is also being addressed to maximize round-trip interoperability with multiple wallet vendors and tools for conversion to legacy formats. Despite potential alternative methods to derive additional keys hierarchically, the importance of preserving the process of turning a master seed into the master key remains crucial to avoid such issues.</summary>
    <published>2020-10-05T20:34:48+00:00</published>
  </entry>
</feed>
