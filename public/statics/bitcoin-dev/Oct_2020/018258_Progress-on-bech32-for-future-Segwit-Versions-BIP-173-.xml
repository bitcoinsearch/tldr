<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
  <updated>2023-06-14T16:06:27.945413+00:00</updated>
  <author>
    <name>David A. Harding 2020-10-20 10:29:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
    <updated>2023-06-14T16:06:27.945413+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-October/018258.html" rel="alternate"/>
    <summary>In a recent email exchange, Rusty Russell shared the results of Mike Schmidt's testing of various software and services with v1 addresses using the original BIP341 specification. The tests were carried out around the time of the Bitcoin Core 0.19.0 release that allowed relaying of v1+ segwit addresses. Some notable findings include abra not supporting Bech32, binance failing front-end javascript validation, bitgo encountering errors during the sending process, and bitmex also not supporting Bech32. Bitrefill failed address validation, while bitstamp didn't allow Bech32 addresses due to character limits in the text input. Coinbase failed address validation client-side in the UI, and electrum encountered an error message during broadcasting of transactions. Purse and river managed to create and broadcast transactions, but samourai and wasabi failed on validation of the address. Xapo allowed users to create segwit v1 transactions in the UI, but the transaction would get stuck as pending for an indeterminate period of time.</summary>
    <published>2020-10-20T10:29:52+00:00</published>
  </entry>
</feed>
