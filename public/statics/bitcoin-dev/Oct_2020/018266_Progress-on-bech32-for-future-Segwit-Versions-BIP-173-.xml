<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
  <updated>2023-05-20T23:58:12.040639+00:00</updated>
  <author>
    <name>Pieter Wuille 2020-10-28 00:20:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
    <updated>2023-05-20T23:58:12.040639+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-October/018266.html" rel="alternate"/>
    <summary>Pieter proposed an alternative to length restrictions suggested by Russell in a GitHub pull request. He suggests using a variant proposed by Sipa unless the first byte is 0. Pieter also discusses the introduction of a new checksum scheme and the importance of considering its error detection capabilities. He notes that it's possible to take a new-style address with a constant M=0x3FFFFFFF, make 3 substitution errors, and obtain an old-style address. Furthermore, inserting/deleting errors can be restricted to patterns that require 6 fixed characters, which implies a probability of 2^-30 assuming uniformly random characters. Pieter suggests that M=0x3ffeffff has both these properties. He plans to do more analysis and update his gist. Overall, Pieter's proposal seems to be a better choice for the new checksum scheme.</summary>
    <published>2020-10-28T00:20:40+00:00</published>
  </entry>
</feed>
