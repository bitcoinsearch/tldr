<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full node "tip" function</title>
  <updated>2023-06-12T00:36:54.501844+00:00</updated>
  <author>
    <name>Natanael 2017-05-08 21:44:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full node "tip" function</title>
    <updated>2023-06-12T00:36:54.501844+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014281.html" rel="alternate"/>
    <summary>On May 8th, 2017, Sergio Demian Lerner announced his upcoming solution to encourage full nodes to store the blockchain based on Proof-of-Unique-Blockchain-Storage (PoUBS). However, some members of the bitcoin-dev community expressed doubts about the feasibility of such a system. They argued that it would not be possible to prove securely that a node is holding its own copy of the blockchain, as any proof of independence would need to rely on unique capabilities per node. Even challenge-response protocols could only prevent honest nodes from being unwitting backends to dishonest transparent proxy nodes. Additionally, latency bounding protocols could not stop an attacker from putting multiple seemingly independent nodes in front of the same backend with one single copy of the blockchain. The best solution suggested was to force someone to hold multiple copies locally on multiple hardware units to not run out of memory I/O when creating proofs for multiple remote nodes. This could be achieved by using memory-heavy functions for the proof of storage, which would force quick random access. However, somebody who was willing to put enough RAM in a server rack to hold the full blockchain could still easily pretend to be multiple regular nodes with independent copies. Any kind of attempt at forcing the full copy of the blockchain to be in memory close to the CPU would either rule out most nodes from passing or would be cheatable.</summary>
    <published>2017-05-08T21:44:41+00:00</published>
  </entry>
</feed>
