<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP39 (mnemonic seeds) Unicode normalization compatibility issue</title>
  <updated>2023-06-12T00:50:56.341169+00:00</updated>
  <author>
    <name>Zach Lym 2017-05-17 17:01:04</name>
  </author>
  <author>
    <name>Zach Lym 2017-05-17 17:01:04</name>
  </author>
  <author>
    <name>Zach Lym 2017-05-17 17:01:04</name>
  </author>
  <link href="bitcoin-dev/May_2017/014348_BIP39-mnemonic-seeds-Unicode-normalization-compatibility-issue.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014348_BIP39-mnemonic-seeds-Unicode-normalization-compatibility-issue.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014348_BIP39-mnemonic-seeds-Unicode-normalization-compatibility-issue.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP39 (mnemonic seeds) Unicode normalization compatibility issue</title>
    <updated>2023-06-12T00:50:56.341169+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014348.html" rel="alternate"/>
    <summary>Zach Lym has raised concerns about the Unicode normalization pass in the password section of BIP39, which is a Bitcoin Improvement Proposal. He pointed out that while the section mandates normalization, it does not prohibit unassigned character points. This could be problematic because newer drafts of Unicode may alter the output of normalization passes. If a user assigned a password using a wallet linked to Unicode 9 but input a code point reserved in Unicode 10, updating the wallet to Unicode 10 could incorrectly remap that code point.In addition to this concern, Zach mentioned an RFC specifying a different normalization procedure. The links to BIP39, the Unicode report on stabilized strings, and the relevant RFC are provided in the message. It is important to consider these issues when developing and implementing password systems in order to ensure their security and accuracy. By taking into account these concerns, developers can create more robust and reliable password systems that are better able to withstand potential changes in Unicode standards.</summary>
    <published>2017-05-17T17:01:04+00:00</published>
  </entry>
</feed>
