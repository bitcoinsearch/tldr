<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Validationless mining without transactions</title>
  <updated>2023-06-12T00:50:42.439221+00:00</updated>
  <author>
    <name>Gregory Maxwell 2017-05-15 23:30:59</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-15 23:30:59</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-15 23:30:59</name>
  </author>
  <link href="bitcoin-dev/May_2017/014340_Validationless-mining-without-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014340_Validationless-mining-without-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014340_Validationless-mining-without-transactions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Validationless mining without transactions</title>
    <updated>2023-06-12T00:50:42.440220+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014340.html" rel="alternate"/>
    <summary>In a conversation on IRC, Gregory Maxwell and Anthony Towns discussed various ideas related to the validation of blocks in Bitcoin mining. One suggestion was to incentivize the use of validated blocks by making them count for more chainwork when choosing which chain to build on. However, this could create another way for a block to be invalid without a compact fraud proof. They also discussed the idea of miners generating useful blocks while doing validationless mining, rather than only creating empty blocks. The advantages and disadvantages of this approach were discussed, including the trade-offs between speed and trust.The potential for adversarial miners to withhold blocks or transactions, known as "selfish mining," was also discussed. It was suggested that requiring a valid merkle tree before accepting a PoW could solve transaction withholding, but this may be challenging due to the need for fast relay. The efficiency of coding gain in the fast relay network was found to be variable, with room for improvement. The possibility of adapting the fast relay protocol into a p2p environment was also mentioned, although it was noted that this approach may be kludgy.The focus of the conversation was on optimizing block relay while minimizing bandwidth usage and maximizing efficiency. Suggestions included using block network coding techniques to send data without the need for requests and implementing a protocol that only sends blocks with previously seen transactions. However, these approaches have drawbacks such as slow decoding times and multiple round trips to resolve missing transactions. The existing blocksonly mode achieves bandwidth optimal transport, but only if unconfirmed transactions are not important. Additionally, there were discussions around the benefits and drawbacks of ordering requirements and sorted indexes. Overall, the goal was to find ways to optimize block relay while minimizing bandwidth usage and maximizing efficiency.Finally, the conversation touched on technical details such as the switch from 32-bit faux IDs to 63 bits in the reimagination, keying with the previous block's hash, and the use of predictive algorithms to download only high-fee transactions. Gregory Maxwell asked to share the discussion publicly so that others could benefit from the insights shared. Throughout the discussion, technical details were provided and links were shared to relevant resources and discussions.</summary>
    <published>2017-05-15T23:30:59+00:00</published>
  </entry>
</feed>
