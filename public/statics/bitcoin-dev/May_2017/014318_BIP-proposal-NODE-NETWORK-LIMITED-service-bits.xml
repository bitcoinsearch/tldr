<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP proposal: NODE_NETWORK_LIMITED service bits</title>
  <updated>2023-06-12T00:44:51.526000+00:00</updated>
  <author>
    <name>Aymeric Vitte 2017-05-11 20:36:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP proposal: NODE_NETWORK_LIMITED service bits</title>
    <updated>2023-06-12T00:44:51.526000+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014318.html" rel="alternate"/>
    <summary>The discussion in the Bitcoin-dev mailing list seems to be lacking a serious level of approximation, with many strange calculations and useless papers that do not contribute much to the conversation. One suggestion was made to not make pruning the default option, as it is not currently useful for scaling full nodes. The topic then shifted to defining the service bits for historical blocks, with some suggesting leaving both bits undefined while others proposed using Gregory's proposal of a minimum of 2016*2 blocks. The reason for choosing 49 days was also discussed, which allows SPV peers to be offline for a month and still catch up with a peer pruned to a datadir of around 10GB. There was also confusion about whether Core guarantees the 288 blocks post-segwit activation. Additionally, it was noted that light clients who are not checking the nServiceFlags from a relayed addr-message may unwillingly connect to a pruned peer and ask for filtered blocks below their pruned depth. Finally, links were shared for simple Zcash and Bitcoin wallets, torrent blocklists, and anti-spy software.</summary>
    <published>2017-05-11T20:36:33+00:00</published>
  </entry>
</feed>
