<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Rolling UTXO set hashes</title>
  <updated>2023-06-12T00:50:27.486789+00:00</updated>
  <author>
    <name>Pieter Wuille 2017-05-15 20:01:14</name>
  </author>
  <author>
    <name>Peter Todd 2017-05-16 11:01:04</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-16 18:20:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-15 23:04:01</name>
  </author>
  <author>
    <name>Peter Todd 2017-05-16 11:01:04</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-23 20:43:45</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-15 20:01:14</name>
  </author>
  <author>
    <name>Peter R 2017-05-15 20:53:45</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-15 23:04:01</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-15 23:59:58</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-16 00:15:58</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-16 18:20:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-23 04:47:48</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-15 23:04:01</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-16 18:17:19</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-23 04:47:48</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-15 23:59:58</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-16 18:17:19</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-16 18:20:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-23 20:43:45</name>
  </author>
  <author>
    <name>Peter Todd 2017-05-16 11:01:04</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-16 18:17:19</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-23 04:47:48</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-23 20:43:45</name>
  </author>
  <author>
    <name>Peter R 2017-05-15 20:53:45</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-05-15 23:59:58</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-16 00:15:58</name>
  </author>
  <author>
    <name>Pieter Wuille 2017-05-15 20:01:14</name>
  </author>
  <author>
    <name>Peter R 2017-05-15 20:53:45</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-16 00:15:58</name>
  </author>
  <link href="bitcoin-dev/May_2017/014337_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014342_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014347_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014339_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014342_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014402_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014337_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014338_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014339_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014341_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014346_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014347_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014383_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014339_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014345_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014383_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014341_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014345_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014347_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014402_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014342_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014345_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014383_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014402_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014338_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014341_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014346_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014337_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014338_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014346_Rolling-UTXO-set-hashes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Rolling UTXO set hashes</title>
    <updated>2023-06-12T00:50:27.487788+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014337.html" rel="alternate"/>
    <summary>Developers on the bitcoin-dev mailing list recently discussed the most efficient way to construct UTXO commitments, with a focus on lightweight nodes being able to validate the hash without accessing the entire UTXO set. Pieter Wuille suggested using SHA512 with 256-bit truncated output as secp256k1 X coordinate or key to seed a ChaCha20 PRNG, while Gregory Maxwell preferred a txid||outnumber hash, which can be validated by lightweight nodes.Rolling UTXO set hashes were also proposed as a solution for efficiently comparing UTXO sets, although Pieter Todd cautioned that more analysis was needed before reducing the responsibilities of full nodes. The discussion also touched upon proposals to change the serialization of transaction outputs (txouts) and UTXO commitment schemes. Peter Todd argued that previous schemes did not require miners to generate a commitment and did not need a soft-fork to deploy, but all required a network-wide choice to be useful. Compact membership proofs were necessary in most cases, but Pieter suggested exploring other options prior to making a consensus change. Additionally, Pieter proposed a discussion on computing a UTXO set hash that is efficient to update but does not support any compact proofs of existence or non-existence.Two methods were presented for efficient addition and deletion: MuHash and ECMH. Both these approaches provide security against k-sum solving, but MuHash requires fast modular multiplication/inverse implementation while ECMH is more complicated to implement from scratch. Preliminary benchmarks showed that both approaches take low enough time to make it reasonable for full nodes and/or other software to always maintain one of them and effectively have a rolling cryptographical checksum of the UTXO set at all times. A proposal for computing a UTXO set hash that supports comparing two UTXO sets but not compact proofs of existence or non-existence was discussed among developers on bitcoin-dev mailing list. The rolling set hash can replace Bitcoin Core's gettxoutsetinfo RPC's hash computation and assist in the implementation of fast sync methods with known good blocks/UTXO sets and database consistency checking.The commitment to UTXO data has been an old advantage for lite nodes, but compact membership proofs are required for most arguments. A rise in interest in full block lite clients for privacy reasons may complement the usage of membership proofless solutions. The bitcoin-dev mailing list has been discussing the benefits of a commitment to UTXO data for lite nodes. This commitment would allow lite nodes to download UTXO sets from any full node and verify them by verifying only block headers starting from genesis. However, it requires a consensus change and compact membership proofs for most of the arguments. Pieter Wuille suggested gaining experience with an operation before implementing it as audibility and engineering reasons require the merkle tree root of transactions to be in addition to the commitment rather than instead of it. Proof of work needs to commit to the witness data; otherwise, there are chances of DOS attacks where people provide malleated blocks that have invalid witnesses. Another suggestion was to commit to the UTXO of the previous block and the merkle tree root of the transactions in the current block to reduce SPV mining. It is believed that this would help a miner to scan received new blocks to create the UTXO set of the previous block. However, it is not confirmed if this understanding is correct or if there are any subtleties missed regarding this approach.</summary>
    <published>2017-05-15T20:01:14+00:00</published>
  </entry>
</feed>
