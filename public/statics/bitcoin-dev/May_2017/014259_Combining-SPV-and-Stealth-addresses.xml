<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Combining SPV and Stealth addresses</title>
  <updated>2023-05-20T02:10:54.773134+00:00</updated>
  <author>
    <name>Henning Kopp 2017-05-04 12:51:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Combining SPV and Stealth addresses</title>
    <updated>2023-05-20T02:10:54.773134+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014259.html" rel="alternate"/>
    <summary>The author discusses the combination of Stealth Addresses with Simplified Payment Verification (SPV) protocol, but has not arrived at a satisfying conclusion. SPV allows thin clients to put their public keys in a bloom filter and request Merkle proofs from full nodes for transactions related to those keys, thus providing privacy to the client. On the other hand, Stealth Addresses enable receiver privacy by allowing the sender to derive a one-time pubkey for the recipient to recover the payment. The author's idea is to combine these two methods so that stealth addresses can be used on smartphones without losing privacy. However, the full node needs the private scanning key d to check if a transaction belongs to a pubkey (Q,R), which raises privacy concerns. The author provides some ideas, such as modifying the scheme to keep d private, but this does not suffice as there is no way to recompute d from the equation. Multiparty computation may be possible but is costly. The author rules out search functionality without leaking the search pattern. The post ends with a challenge to the community for better ideas.</summary>
    <published>2017-05-04T12:51:39+00:00</published>
  </entry>
</feed>
