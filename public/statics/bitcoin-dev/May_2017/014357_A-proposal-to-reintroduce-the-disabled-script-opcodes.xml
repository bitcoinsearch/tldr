<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal to reintroduce the disabled script opcodes</title>
  <updated>2023-06-12T00:52:44.885806+00:00</updated>
  <author>
    <name>Hampus Sj√∂berg 2017-05-19 13:13:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal to reintroduce the disabled script opcodes</title>
    <updated>2023-06-12T00:52:44.885806+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014357.html" rel="alternate"/>
    <summary>Re-enabling old OP-codes in Bitcoin requires a hard fork. However, if SegWit is enabled, new OP-codes can be allocated via a soft fork by introducing a new version of Script. The Elements alpha project has experimented with re-enabling the old OP-codes. A bug found in Core software back in 2010 led to denial-of-service attacks due to the software crashing on some machines while executing a script. According to Mark Boldyrev, the removed opcodes should be reintroduced along with a standardized behavior definition. These opcodes would enhance the flexibility of scripts and allow sophisticated native smart contracts to be created. Additionally, when execution of an opcode results in an arithmetic error, such as OP_DIV with a zero divisor, the script should exit and fail. The string splice opcodes should also check their arguments for correctness, etc.</summary>
    <published>2017-05-19T13:13:03+00:00</published>
  </entry>
</feed>
