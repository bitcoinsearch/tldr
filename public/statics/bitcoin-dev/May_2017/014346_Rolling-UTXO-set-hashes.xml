<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Rolling UTXO set hashes</title>
  <updated>2023-06-12T00:49:22.258466+00:00</updated>
  <author>
    <name>ZmnSCPxj 2017-05-16 00:15:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Rolling UTXO set hashes</title>
    <updated>2023-06-12T00:49:22.258466+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014346.html" rel="alternate"/>
    <summary>The discussion on bitcoin-dev mailing list revolves around the advantages of commitment to UTXO data for lite nodes. The commitment allows lite nodes to download UTXO sets from any full node and verify them by verifying only block headers starting from genesis. However, it requires a consensus change and compact membership proofs for most of the arguments. Pieter has suggested gaining experience with an operation without committing to it before implementing it. For audibility and engineering reasons, the merkle tree root of transactions needs to be in addition to the commitment rather than instead of it. This is because proof of work needs to commit to the witness data. If not, there are chances of DOS attacks where people provide malleated blocks that have invalid witnesses. Another suggestion is to commit to the UTXO of the previous block and the merkle tree root of the transactions in the current block. It is believed that this would help reduce SPV mining as a miner would need to scan received new blocks to create the UTXO set of the previous block. However, it is not confirmed if this understanding is correct or if there are any subtleties missed regarding this approach.</summary>
    <published>2017-05-16T00:15:58+00:00</published>
  </entry>
</feed>
