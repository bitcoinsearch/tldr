<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Method for Computing Merkle Roots of Annotated Binary Trees</title>
  <updated>2023-06-12T01:06:32.757669+00:00</updated>
  <author>
    <name>Bram Cohen 2017-05-23 06:06:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Method for Computing Merkle Roots of Annotated Binary Trees</title>
    <updated>2023-06-12T01:06:32.757669+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014384.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev email group, Russell O'Connor describes the SHA256 compression function that takes a 256-bit value for the previous chunk in a chain, or an initial vector in the case of the first chunk, and a 512-bit chunk of data. The total compression is done from 768-bits to 256-bits. This property makes it useful primitive for building Merkle Trie. O'Connor suggests that in his construction, values are already hashed down to 256 bits when they are passed in, and the tags include three states for either side: empty, unary or middle. Six possible tags are needed for this approach. He also believes that this approach improves performance by skipping the unary hashes and there appears to be no downside in leveraging this trick as long as tags are cheap.</summary>
    <published>2017-05-23T06:06:07+00:00</published>
  </entry>
</feed>
