<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Rolling UTXO set hashes</title>
  <updated>2023-06-12T00:49:29.453195+00:00</updated>
  <author>
    <name>Rusty Russell 2017-05-23 04:47:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Rolling UTXO set hashes</title>
    <updated>2023-06-12T00:49:29.453195+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014383.html" rel="alternate"/>
    <summary>A discussion has taken place on the bitcoin-dev mailing list regarding a proposed change to transaction outputs (txout) serialization, specifically how txouts are hashed. The first approach is very minimal and has no normative data structures at all. The second approach reuses existing primitives. Gregory Maxwell prefers the second approach as it allows simple validation without knowing the UTXO set itself. He suggests a simple txid||outnumber hash which can be validated by even lightweight nodes. If more information is serialized, such as amount or scriptPubKey, then the UTXO set size needed to validate the utxohash is smaller but in a SegWit world, that is actually bigger. Finally, Maxwell mentions that an alternative could be to use txid^outnumber, but he doesn't think that saves any real time and may cause other issues.</summary>
    <published>2017-05-23T04:47:48+00:00</published>
  </entry>
</feed>
