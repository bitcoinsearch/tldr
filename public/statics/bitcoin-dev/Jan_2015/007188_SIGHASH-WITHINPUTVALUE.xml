<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_WITHINPUTVALUE</title>
  <updated>2023-06-09T15:58:20.912889+00:00</updated>
  <author>
    <name>slush 2015-01-23 15:40:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_WITHINPUTVALUE</title>
    <updated>2023-06-09T15:58:20.912889+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007188.html" rel="alternate"/>
    <summary>There is a proposal called SIGHASH_WITHINPUTVALUE that provides an optional way to sign input values with TxOut scripts. The signature assumes that input 0 is X BTC, input 1 is Y BTC, and so on. This proposal is a hardfork but is non-intrusive and works with all existing coins in the network. Existing software doesn't have to use it if they don't want to upgrade their signers. The proposal increases the options for online-offline communication channels, which is a win for security. QR codes don't work because of the possibility of having to transfer megabytes over the channel, and no way for the signer to control that size. With this change, it's possible for the signer to control the size of each chunk of data to guarantee it fits in, say, a QR code (even if it means breaking it up into a couple smaller transactions). Marek also agrees that such stuff should be implemented at some point; however, he would probably not vote for doing a hard fork just for this change. Most of the soft-fork variations required the coins being spent to have originated in a special way. In other words, it would only work if the coins had entered the wallet with some special, modified TxOut script. So, it wouldn't work with existing coins, and would require senders to update their software to reshape the way they send transactions to be compatible with our goals.</summary>
    <published>2015-01-23T15:40:39+00:00</published>
  </entry>
</feed>
