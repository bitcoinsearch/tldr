<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: why Google Protocol Buffers for encoding?</title>
  <updated>2023-06-09T15:30:07.497216+00:00</updated>
  <author>
    <name>Angel Leon 2015-01-28 17:17:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: why Google Protocol Buffers for encoding?</title>
    <updated>2023-06-09T15:30:07.497216+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007226.html" rel="alternate"/>
    <summary>The discussion revolves around the implementation of BIP70 and whether to allow both serializations or keep it as is. One of the goals of BIP70 was to support TREZOR and similar devices, which requires keeping the amount of code they need to run as small as possible. Doing it the way Nicolas Dorier suggested would mean increasing cost, complexity, and decreasing security. The embedding of certificates in BIP70 has a very good reason as it makes the signed payment request verifiable by third parties. BitcoinJ can use Android, JRE, Windows, and Mac certificate stores, and there is code to do iOS using Apple APIs. WinRT is a minority platform, and platforms that support HTTPS but not certificate handling are rare. There are pros and cons to bundling a custom root store, and Java can do OCSP checks. Implementing an OCSP stapling extension to BIP70 would be a better solution.</summary>
    <published>2015-01-28T17:17:54+00:00</published>
  </entry>
</feed>
