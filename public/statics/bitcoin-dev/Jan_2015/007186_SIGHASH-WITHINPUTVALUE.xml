<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_WITHINPUTVALUE</title>
  <updated>2023-06-09T15:56:27.779749+00:00</updated>
  <author>
    <name>Alan Reiner 2015-01-23 15:24:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_WITHINPUTVALUE</title>
    <updated>2023-06-09T15:56:27.779749+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007186.html" rel="alternate"/>
    <summary>On January 23, 2015, slush wrote to the Bitcoin development mailing list about the progress and/or discussion on SIGHASH_WITHINPUTVALUE proposal. The proposal is a hardfork that allows users to sign input values with the TxOut scripts, making it easier to transfer megabytes over communication channels. The signature says "I sign this transaction assuming that input 0 is X BTC, input 1 is Y BTC...." With this change, it's possible for the signer to control the size of each chunk of data to guarantee it fits in a QR code (even if it means breaking it up into a couple smaller transactions).Slush highlighted that this proposal is becoming an issue as hardware wallets become more widespread. He mentioned TREZOR, which streams and validates some complex transaction, and using the proposed solution, such signature would be a matter of few seconds. This could simplify the firmware, reducing security risks.Unfortunately, there was no soft-fork way to achieve this benefit without changing the way coins were originated in a special way. In other words, it wouldn't work with existing coins, and it would require senders to update their software to reshape the way they send transactions to be compatible with the goals of the proposal. However, the proposal is non-intrusive, doesn't change any TxOut scripts, and doesn't change any tx/block parsing (besides verification). Existing software doesn't have to use it if they don't want to upgrade their signers. The proposal increases the options for online-offline communication channels, which is also a win for security. It simplifies HW as well. Alan strongly encourages this proposal to be considered for inclusion at some point.</summary>
    <published>2015-01-23T15:24:17+00:00</published>
  </entry>
</feed>
