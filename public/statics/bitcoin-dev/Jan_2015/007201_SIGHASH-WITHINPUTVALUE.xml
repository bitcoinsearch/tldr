<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_WITHINPUTVALUE</title>
  <updated>2023-06-09T15:57:53.190154+00:00</updated>
  <author>
    <name>slush 2015-01-23 17:40:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_WITHINPUTVALUE</title>
    <updated>2023-06-09T15:57:53.190154+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007201.html" rel="alternate"/>
    <summary>The discussion revolves around dynamic memory allocation and restrictions to the number of inputs or outputs. The current solution is slow, but there are no limitations on the transaction size. However, embedded systems have significant memory restrictions, which is why TREZOR uses a powerful MCU that can handle validations and hash calculations. With SIGHASH_WITHINPUTVALUE or similar solutions, the hardware cost can be reduced significantly. In response to Gregory Maxwell's query, it is suggested to stream in the input txid:vouts that are spent, then stream the actual inputs, hash them, and extract their value without any other verification. A table of txid:vout-&gt;value can be built, followed by the actual transaction to be signed. This approach should have O(inputs) hashing and communications overhead.</summary>
    <published>2015-01-23T17:40:54+00:00</published>
  </entry>
</feed>
