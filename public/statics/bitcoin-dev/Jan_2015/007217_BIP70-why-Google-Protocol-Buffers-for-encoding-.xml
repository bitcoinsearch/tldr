<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: why Google Protocol Buffers for encoding?</title>
  <updated>2023-06-09T15:29:20.481271+00:00</updated>
  <author>
    <name>Jeff Garzik 2015-01-28 16:04:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: why Google Protocol Buffers for encoding?</title>
    <updated>2023-06-09T15:29:20.481271+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007217.html" rel="alternate"/>
    <summary>The task of writing JSON-to-schema marshalling code is tedious and error-prone. Protobufs and its modern competitors, such as msgpack, provide native type support that must be hacked into JSON or XML. These designs are engineered to avoid bugs routinely found in JSON parsing code, which inevitably arise due to the amount of code and effort involved in JSON input sanity checking. This issue has been seen in bitcoind with JSON-RPC. Cross-platform abstraction libraries exist to solve challenges related to different APIs and types representing a X509 certificate. There is no obligation to use the OS root store, and it may be beneficial to take a snapshot of Mozilla/Apple/MSFT stores and load it in an app to avoid cases where BIP70 requests work on some platforms and not others. Using a third-party service to convert things to JSON is one of the least obvious and highest-effort solutions and may be a bizarre hack around lack of features in the runtime being used.</summary>
    <published>2015-01-28T16:04:58+00:00</published>
  </entry>
</feed>
