<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_WITHINPUTVALUE</title>
  <updated>2023-05-19T19:47:37.719991+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-01-23 16:52:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_WITHINPUTVALUE</title>
    <updated>2023-05-19T19:47:37.719991+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007200.html" rel="alternate"/>
    <summary>In an email conversation between slush and an unknown party on January 23, 2015, the topic of a hard fork was discussed as a potential solution to a problem with transaction verification. Slush asked for references to support this solution, expressing that they were not aware of any. The unidentified individual responded by explaining that in order to sign transactions with hundreds of inputs on a device with limited memory capabilities, all previous transactions would need to be streamed into the device for every signed input. This would result in roughly 200^2 transaction verifications for 200 inputs to sign, which is very slow but does not limit the device for any particular size of signed transaction. The unidentified individual went on to clarify their understanding of the situation, stating that they believed streaming in the input txid:vouts and then the actual inputs (which would just be hashed and value extracted without any other verification) would allow them to build a table of txid:vout-&gt;value, and finally the actual transaction to be signed. This process should have O(inputs) hashing and communications overhead, and the unidentified individual questioned whether there was a step they were missing.</summary>
    <published>2015-01-23T16:52:28+00:00</published>
  </entry>
</feed>
