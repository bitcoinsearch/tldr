<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: why Google Protocol Buffers for encoding?</title>
  <updated>2023-06-09T15:28:38.633567+00:00</updated>
  <author>
    <name>Matt Whitlock 2015-01-19 19:19:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: why Google Protocol Buffers for encoding?</title>
    <updated>2023-06-09T15:28:38.633567+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007127.html" rel="alternate"/>
    <summary>Richard Brady, a user inquired about the reason behind the choice of Google Protocol Buffers for payment request encoding in BIP-0070. Although compact binary encoding is important, there are other standard choices available such as ASN.1, which has been around for decades and even has an XML encoding directly convertible to/from the binary encoding with the schema. In practice, the encoding used in BIP70 doesn't matter much, but it's perplexing that Protobuf re-solves a problem solved 40 years ago by ASN.1. Performance is not a strong driver behind the choice of Google Protocol Buffers since payment requests are not broadcast, and the data is crammed into a binary format before attaching it to a non-binary format. Human readability on-the-wire, availability of open-source libraries and APIs for parsing/manipulating/generating, easy hand-crafting of test messages for debugging, easier-to-read and write standards containing examples, thorough specification by independent standards bodies, and being a family are some great things about protocols/encodings like HTTP/JSON/XML.Richard's background is in SIP/VoIP, and he thinks that could be a fascinating use case for this protocol, which he hopes to work on.</summary>
    <published>2015-01-19T19:19:50+00:00</published>
  </entry>
</feed>
