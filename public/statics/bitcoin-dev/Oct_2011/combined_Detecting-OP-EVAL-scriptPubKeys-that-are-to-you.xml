<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Detecting OP_EVAL scriptPubKeys that are to you</title>
  <updated>2023-06-04T21:00:00.013713+00:00</updated>
  <author>
    <name>Mike Hearn 2011-10-25 10:49:11</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-26 15:00:48</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-28 10:24:21</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-25 13:21:30</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-25 14:49:45</name>
  </author>
  <author>
    <name>Alan Reiner 2011-10-25 16:47:34</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-26 14:03:20</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-27 09:08:53</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-31 08:50:49</name>
  </author>
  <author>
    <name>Mike Hearn 2011-10-25 10:49:11</name>
  </author>
  <author>
    <name>Alan Reiner 2011-10-25 16:47:34</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-26 15:00:48</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-27 09:08:53</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-28 10:24:21</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-31 08:50:49</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-25 13:21:30</name>
  </author>
  <author>
    <name>Alan Reiner 2011-10-25 16:47:34</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-26 14:03:20</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-27 07:32:16</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-29 17:01:00</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-31 08:50:49</name>
  </author>
  <author>
    <name>Mike Hearn 2011-10-25 10:49:11</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-26 15:00:48</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-27 07:32:16</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-29 17:01:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-25 14:49:45</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-27 09:08:53</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-28 10:24:21</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-29 17:01:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-10-25 13:21:30</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-25 14:49:45</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-26 14:03:20</name>
  </author>
  <author>
    <name>Michael Grønager 2011-10-27 07:32:16</name>
  </author>
  <link href="bitcoin-dev/Oct_2011/000688_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000694_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000706_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000689_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000690_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000691_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000693_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000696_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000713_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000688_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000691_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000694_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000696_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000706_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000713_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000689_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000691_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000693_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000695_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000711_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000713_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000688_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000694_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000695_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000711_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000690_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000696_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000706_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000711_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000689_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000690_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000693_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000695_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Detecting OP_EVAL scriptPubKeys that are to you</title>
    <updated>2023-06-04T21:00:00.013713+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000688.html" rel="alternate"/>
    <summary>In an email conversation from 2011, Gavin Andresen and others discussed the use of hashing functions in Bitcoin for creating public keys from private keys and verifying transactions. OP_EVAL was proposed as an optional tool for multi-signature transactions, but regular OP_CHECKMULTISIG could still be used if there were concerns about detecting transactions in the block relevant to the user's wallet. The importance of secure communication between parties in the exchange process was emphasized, as without direct communication or negotiation, recipients cannot expect to receive funds. Alternative methods of transmitting funds without disclosing addresses were also discussed, such as generating a series of secondary keys or creating a private key on the recipient's behalf. Overall, the email conversation highlighted the technicalities involved in using Bitcoin and the need for secure communication and negotiation between parties in the exchange process.In this email conversation from 2011, various topics related to OP_EVAL and multi-signature transactions were discussed. It was suggested that OP_EVAL should be an optional tool for multi-signature transactions, and regular OP_CHECKMULTISIG can still be used if preferred. The importance of keeping the subscripts/mappings in the wallet forever just like private keys was emphasized. A button to add such a script/mapping to the wallet was suggested, but it was acknowledged that users may fail to perform regular maintenance tasks. The complexity involved in multi-signing transactions using OP_EVAL was also discussed, along with the need for out-of-band communication to set up escrow contracts. Additionally, the idea of creating a new type of bitcoin address built on top of OP_EVAL was proposed, which would be easy for existing infrastructure to support. Lastly, the issue of being able to extract transactions to/from private keys was raised, with some arguing that it shouldn't matter whether the address is HASH(public key) or HASH(op_eval_script).In this discussion, Michael Grønager expresses his concerns regarding mapping cryptographic keys to assets. He argues that the script used is required to identify funds and knowing it is necessary for clients to identify funds. However, he opposes using OP_EVAL as it breaks an intrinsic logic of uint160s and transactions which has been clean so far. Additionally, he opposes Checkmultisig as a standard transaction type due to serious misunderstandings regarding the bijection between hash160s and public keys and one between ECC private keys and spendable transactions. He fears that the misunderstanding will moot the flexibility of the script system, rendering every script that doesn't look like a direct mapping of hash160-&gt;pubkey-&gt;payee broken. Gavin Andresen suggests that one way to gain the advantages of op_eval without it is through the burdensome address, which could just be added to the URI scheme and would still only be a click away. He proposes creating a new type of bitcoin address built on top of OP_EVAL, but Michael raises concerns about endless expansions of bitcoin addresses that each, depending on a leading 1, 2, 3... means a quite specific script inside the OP_EVAL. In the discussion, Gregory Maxwell points out that the solution proposed by Gavin Andresen may not be satisfying. He explains that it's already the case that one can take one of your disclosed public keys and create an infinite series of secondary keys out of it for which only you could decode.In an email conversation from 2011, Michael Grønager discussed the importance of being able to extract transactions to and from private keys. This feature is currently used in blockexplorer, bitcoin-js, and his own implementation for thin clients. If a standard multikey payment was introduced that hides or overly complicates the address, it would be a major problem for these projects. However, they would still be able to extract identifying information using the same procedure, just with additional bytes generated by the wallet holder included in the process. Grønager questioned why this would be a problem if the former method was not. Grønager argued that the current bitcoin addresses are (for all practical purposes) a one-to-one mapping between a pubkey and uint160. This means that your wallet is defined solely by your private keys (from which you can extract pubkeys and then uint160 btc-addresses). This also enables you to make a uint160 to tx mapping on a server (like on blockexplorer) and use a thin client to query for transactions just from a list of uint160 (whether it holds the private keys behind them or not).In the case of a multisig transaction, the new use of the uint160, namely as a mapping of ripemd160(something extra and hash256(pubkey)) is introduced. This means that this clean mapping is broken. Your will have an extra "public key" being the "something extra", and there is no easy way to do the mapping from a list of private keys to public keys to uint160s that will result in the new condensed uint160, except if you also have the knowledge of the script that was used.G</summary>
    <published>2011-10-25T10:49:11+00:00</published>
  </entry>
</feed>
