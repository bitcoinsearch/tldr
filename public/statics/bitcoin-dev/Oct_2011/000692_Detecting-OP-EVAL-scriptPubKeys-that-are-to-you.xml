<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Detecting OP_EVAL scriptPubKeys that are	to you</title>
  <updated>2023-06-04T21:00:17.366352+00:00</updated>
  <author>
    <name>Michael Gr√∏nager 2011-10-26 08:58:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Detecting OP_EVAL scriptPubKeys that are	to you</title>
    <updated>2023-06-04T21:00:17.366352+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000692.html" rel="alternate"/>
    <summary>The ability to extract transactions only from private keys is an important feature that can be easily accomplished in the standard transactions by using a vector. This feature is currently used in blockexplorer, bitcoin-js and other implementations for thin clients. While it is possible to construct payment schemes to hide payments, such as using hashes from classic novels or sending private keys offline, they are considered either exotic or intentionally hidden and not a problem. However, if a standard multikey payment was introduced that hides the address, it would be a major problem for the aforementioned projects. The proposed OP_EVAL is an optional tool for multi-signature transactions, but users can still use the regular OP_CHECKMULTISIG if they are concerned about privacy. The subscripts/mappings are just as important as regular private keys and should be kept in the wallet forever. It is suggested that there should be a button on the main client that allows users to add OP_EVAL scripts/mappings to their wallet easily. However, this invites a breach of one of the core rules of user interfaces: if the functionality is dependent on the user performing some regular maintenance task, you better be prepared for all users to fail at doing it.</summary>
    <published>2011-10-26T08:58:45+00:00</published>
  </entry>
</feed>
