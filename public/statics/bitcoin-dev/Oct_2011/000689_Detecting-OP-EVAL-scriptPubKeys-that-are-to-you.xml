<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Detecting OP_EVAL scriptPubKeys that are to you</title>
  <updated>2023-06-04T20:55:59.596658+00:00</updated>
  <author>
    <name>Gavin Andresen 2011-10-25 13:21:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Detecting OP_EVAL scriptPubKeys that are to you</title>
    <updated>2023-06-04T20:55:59.596658+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000689.html" rel="alternate"/>
    <summary>Mike Hearn, a Bitcoin developer, asked about detecting a transaction in a block that is relevant to one's wallet that uses OP_EVAL. He asked if the detection requires pre-calculating every possible hash that may appear. Gavin Andresen, another developer, suggested giving the hash to whoever pays and stores the hash-script mapping upon payment. The only use case for checking every possible hash is when one loses their wallet and has no hash-script mappings. However, for other people's use cases, they can ask which public keys are involved, add them back into the wallet, and use the "addmultisigaddress" RPC interface. For cases where all keys belong to the user, an automatic backup or "-rescan" equivalent is necessary should the mappings get lost.</summary>
    <published>2011-10-25T13:21:30+00:00</published>
  </entry>
</feed>
