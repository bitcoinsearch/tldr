<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Detecting OP_EVAL scriptPubKeys that are to you</title>
  <updated>2023-05-18T22:26:38.787954+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-10-25 14:49:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Detecting OP_EVAL scriptPubKeys that are to you</title>
    <updated>2023-05-18T22:26:38.787954+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000690.html" rel="alternate"/>
    <summary>In an email conversation from 2011, Gavin Andresen discussed the process of exchanging Bitcoin. He mentions that when a user wants to receive payment through Bitcoin, they should give their hash to the payer and store the hash-script mapping. The hashing function is used for several purposes in Bitcoin, including creating public keys from private keys and verifying transactions. Andresen also notes that if someone finds this solution unsatisfying, there are other ways to transmit funds without disclosing addresses. For example, he could create a series of secondary keys out of a disclosed public key which only the recipient could decode. Alternatively, he could generate a private key on the recipient's behalf and send funds there. In both cases, the recipient would need to perform the same procedure or have received the private key from the sender to access the funds. Therefore, if someone did not obtain the recipient's address through direct communication or negotiation, they cannot expect the recipient to receive the funds. This email conversation highlights the technicalities involved in using Bitcoin and the importance of secure communication between parties in the exchange process.</summary>
    <published>2011-10-25T14:49:45+00:00</published>
  </entry>
</feed>
