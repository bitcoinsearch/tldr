<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Multi-sig tx execution ideas</title>
  <updated>2023-06-04T21:03:56.089927+00:00</updated>
  <author>
    <name>Alan Reiner 2011-10-28 22:28:30</name>
  </author>
  <author>
    <name>Alan Reiner 2011-10-28 22:28:30</name>
  </author>
  <author>
    <name>Alan Reiner 2011-10-28 22:28:30</name>
  </author>
  <link href="bitcoin-dev/Oct_2011/000708_Multi-sig-tx-execution-ideas.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000708_Multi-sig-tx-execution-ideas.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000708_Multi-sig-tx-execution-ideas.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Multi-sig tx execution ideas</title>
    <updated>2023-06-04T21:03:56.089927+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000708.html" rel="alternate"/>
    <summary>Alan has posted BIP 0010 on gist and the aim of this proposal is to suggest a standard method for proposing how to spend multi-sig TxOuts and collect signatures without requiring an understanding of BTC under-the-hood. Alan believes that even moderately-interested users could figure out this process without a third-party, and an installed program that automatically detects .txdp files could bring this functionality to even more users. He has invited suggestions for discussion/improvement on the proposal. Gavin has suggested using Base64 instead of hex for block-encoding but Alan prefers Base58 as developers already have it in their codebase. The separation of fields by underscore characters could be changed to spaces to make it easier for C++ to read them in using stream operators "&gt;".</summary>
    <published>2011-10-28T22:28:30+00:00</published>
  </entry>
</feed>
