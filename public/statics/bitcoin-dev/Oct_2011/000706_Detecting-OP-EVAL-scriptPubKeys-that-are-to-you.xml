<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Detecting OP_EVAL scriptPubKeys that are to you</title>
  <updated>2023-06-04T20:55:47.746809+00:00</updated>
  <author>
    <name>Michael Gr√∏nager 2011-10-28 10:24:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Detecting OP_EVAL scriptPubKeys that are to you</title>
    <updated>2023-06-04T20:55:47.746809+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000706.html" rel="alternate"/>
    <summary>The author suggests that the use of op_eval may not be necessary for secure wallet creation and sender payment. They propose using a burdensome address or adding it to the URI scheme, which would only be a click away. The author also expresses concern about the bijection between hash160s and public keys, and ECC private keys and spendable transactions. They question whether keeping the notion of transactions between addresses is necessary or if they should start to unfold the richness of scripting. The author argues against the use of OP_EVAL due to the difficulty in defining a set of data from which all possible transactions can be obtained. They believe this would require transactions to be announced by the sender, which they find problematic. Finally, the author suggests that encoding special addresses could be confusing and challenges their aesthetic.</summary>
    <published>2011-10-28T10:24:21+00:00</published>
  </entry>
</feed>
