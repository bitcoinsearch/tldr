<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New BIP: Dealing with dummy stack element malleability</title>
  <updated>2023-06-11T19:57:42.327898+00:00</updated>
  <author>
    <name>Johnson Lau 2016-09-02 04:40:58</name>
  </author>
  <author>
    <name>Johnson Lau 2016-09-04 12:29:37</name>
  </author>
  <author>
    <name>Peter Todd 2016-09-02 05:47:14</name>
  </author>
  <author>
    <name>Peter Todd 2016-09-02 05:47:14</name>
  </author>
  <author>
    <name>Johnson Lau 2016-09-02 04:40:58</name>
  </author>
  <author>
    <name>Tom Harding 2016-09-02 17:10:40</name>
  </author>
  <author>
    <name>Johnson Lau 2016-09-04 12:29:37</name>
  </author>
  <author>
    <name>Peter Todd 2016-09-02 05:47:14</name>
  </author>
  <author>
    <name>Tom Harding 2016-09-02 17:10:40</name>
  </author>
  <author>
    <name>Tom Harding 2016-09-02 17:10:40</name>
  </author>
  <author>
    <name>Johnson Lau 2016-09-04 12:29:37</name>
  </author>
  <author>
    <name>Johnson Lau 2016-09-02 04:40:58</name>
  </author>
  <link href="bitcoin-dev/Sept_2016/013096_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013100_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013097_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013097_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013096_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013099_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013100_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013097_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013099_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013099_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013100_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2016/013096_New-BIP-Dealing-with-dummy-stack-element-malleability.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New BIP: Dealing with dummy stack element malleability</title>
    <updated>2023-06-11T19:57:42.328898+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-September/013096.html" rel="alternate"/>
    <summary>On September 1st, 2016, Johnson Lau proposed the deployment of a BIP (Bitcoin Improvement Proposal) named "segwit" using "version bits" BIP9 and using bit 1 with the same parameters as BIP141 and BIP143. The proposed changes aim to fix the malleability of extra stack element for OP_CHECKMULTISIG and OP_CHECKMULTISIGVERIFY. Signature malleability allows any relay node on the network to transform the signature in transactions without requiring access to relevant private keys. To address this issue, a new consensus rule called "NULLDUMMY" is deployed that requires the dummy element to be the empty byte array. Anything else will make the script evaluate to false immediately, thereby increasing security.This BIP will be deployed by "version bits" BIP9 using the same parameters for BIP141 and BIP143, with the name "segwit" and using bit 1. The reference client has produced compatible signatures from the beginning, and the NULLDUMMY rule has been enforced as relay policy by the reference client since v0.10.0. There have been no transactions violating these requirements being added to the chain since at least August 2015. However, it is possible to create a scriptPubKey where that conversion is not possible. Additionally, the original author of NULLDUMMY expressed gratitude for its introduction into a soft-fork.The discussion revolves around whether it is appropriate to bundle two independent softforks in one release and the associated burden of testing and maintenance. Testing needs to be done for four scenarios: both not activated, only NULLDUMMY activated, only SEGWIT activated, and both activated. A non-negligible percentage of miners are hard-coding the block version number, which increases the risks of softfork transition as miners may not enforce what they are signaling. Making 2 independently softforks would double the risks, and NULLDUMMY alone is not worth the risks.On September 2, 2016, Tom Harding via bitcoin-dev questioned why the two independent softforks should be bundled together and suggested that miners should have the opportunity to vote on them independently. On the same day, Johnson Lau announced the deployment of BIP9 using the same parameters for BIP141 and BIP143, with the name "segwit" and using bit 1. For Bitcoin mainnet, the BIP9 start time is midnight TBD UTC and BIP9 timeout is also midnight TBD UTC. For Bitcoin testnet, the BIP9 start time is midnight May 1, 2016 UTC and BIP9 timeout is midnight May 1, 2017 UTC.In addition to the proposed changes in segwit, a new rule is specified to fix the design flaw in OP_CHECKMULTISIG and OP_CHECKMULTISIGVERIFY. These operations consume an extra stack element, known as the "dummy element," after signature validation. However, this dummy element is not inspected and can be replaced by any value without invalidating the script. This creates a vulnerability for non-segregated witness transactions, where signature malleability can change the transaction ID and invalidate any unconfirmed child transactions.To address this issue, BIP147 proposes enforcing the NULLDUMMY rule as relay policy for segregated witness (BIP141) transactions. This will change the wtxid and may reduce the efficiency of compact block relay (BIP152). The implementation for the reference client is available at https://github.com/bitcoin/bitcoin/pull/8636. BIP147 will be deployed using the same parameters as BIP141 and BIP143 with the name "segwit" and using bit 1. The reference client has produced compatible signatures from the beginning, and the NULLDUMMY rule has been enforced as relay policy by the reference client since v0.10.0.It's worth noting that there have been no transactions violating these requirements being added to the chain since at least August 2015. Furthermore, every non-compliant signature can easily be converted into a compliant one, so there is no loss of functionality by this requirement. Overall, BIP147 aims to improve the security of Bitcoin transactions by addressing a potential vulnerability in the OP_CHECKMULTISIG and OP_CHECKMULTISIGVERIFY operations.</summary>
    <published>2016-09-02T04:40:58+00:00</published>
  </entry>
</feed>
