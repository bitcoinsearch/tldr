<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Simple tx ID malleability fix, opcode proposal: OP_TXHASHVERIFY</title>
  <updated>2023-06-11T19:59:42.997850+00:00</updated>
  <author>
    <name>Luke Dashjr 2016-09-17 21:10:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Simple tx ID malleability fix, opcode proposal: OP_TXHASHVERIFY</title>
    <updated>2023-06-11T19:59:42.997850+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-September/013117.html" rel="alternate"/>
    <summary>A proposed solution to transaction ID malleability in Bitcoin was suggested by Rune K. Svendsen via bitcoin-dev mailing list. The solution involves introducing a new opcode called OP_TXHASHVERIFY, which would only work if added to a scriptSig as the very first operation and would abort if the hash of the transaction with all OP_TXHASHVERIFY operations removed does not match what has been pushed on the stack. This would add 34 bytes per input but is considered a simple solution until something better like SegWit becomes available. However, a reply from Luke suggested that it may be more trouble than SegWit to deploy and would not completely fix the problem as anyone malleating the transaction could simply update the hash before this opcode.</summary>
    <published>2016-09-17T21:10:26+00:00</published>
  </entry>
</feed>
