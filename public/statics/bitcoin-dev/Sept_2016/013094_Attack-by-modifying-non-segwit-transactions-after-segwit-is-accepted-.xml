<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Attack by modifying non-segwit transactions after segwit is accepted ?</title>
  <updated>2023-05-19T23:51:12.861853+00:00</updated>
  <author>
    <name>Johnson Lau 2016-09-01 11:29:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Attack by modifying non-segwit transactions after segwit is accepted ?</title>
    <updated>2023-05-19T23:51:12.861853+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-September/013094.html" rel="alternate"/>
    <summary>In this context, Sergio Demian Lerner clarifies that Johnson Lau explained how a check in the code prevents an attack that was discussed on Reddit. He mentions that there is no real attack and emphasizes that the subject of the thread has a question mark, indicating that he is asking for clarification from the community rather than asserting the existence of a vulnerability. Lerner acknowledges that the segwit code is complex and some key parts of the consensus code are spread over source files. Johnson Lau responds to Lerner's post, stating that adding witness data to a non-segwit script is invalid by consensus and provides links to relevant code. Lau also notes that his pull request will detect such violation early and ban the peer. Another approach suggested by Lau is to run the scripts of all incoming transactions, which is not too bad as utxos have already been fetched, making it a major part of validation. Overall, the discussion revolves around the complexities of the segwit code and ways to prevent potential attacks or vulnerabilities. The importance of raising questions and seeking clarification from the community when necessary is highlighted. Relevant links to code and pull requests are provided for further reference.</summary>
    <published>2016-09-01T11:29:29+00:00</published>
  </entry>
</feed>
