<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fast Merkle Trees</title>
  <updated>2023-06-12T18:35:22.130256+00:00</updated>
  <author>
    <name>Peter Todd 2017-09-07 05:55:57</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 15:51:14</name>
  </author>
  <author>
    <name>Johnson Lau 2017-09-12 11:44:48</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 01:59:54</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 15:43:52</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 20:04:30</name>
  </author>
  <author>
    <name>Johnson Lau 2017-09-12 11:44:48</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 01:59:54</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 02:20:06</name>
  </author>
  <author>
    <name>Peter Todd 2017-09-07 05:55:57</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 01:59:54</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 15:43:52</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 02:20:06</name>
  </author>
  <author>
    <name>Peter Todd 2017-09-07 05:55:57</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 17:42:13</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 18:55:25</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 15:51:14</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 17:42:13</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 18:55:25</name>
  </author>
  <author>
    <name>Johnson Lau 2017-09-12 11:44:48</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 02:20:06</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 17:42:13</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 18:55:25</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 20:04:30</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 15:43:52</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-09-07 15:51:14</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-09-07 20:04:30</name>
  </author>
  <link href="bitcoin-dev/Sept_2017/014940_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014944_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014987_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014935_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014943_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014960_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014987_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014935_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014938_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014940_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014935_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014943_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014938_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014940_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014951_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014956_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014944_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014951_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014956_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014987_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014938_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014951_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014956_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014960_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014943_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014944_Fast-Merkle-Trees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/014960_Fast-Merkle-Trees.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fast Merkle Trees</title>
    <updated>2023-06-12T18:35:22.130256+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014940.html" rel="alternate"/>
    <summary>Fast Merkle Trees are designed without distinction between leaf nodes and internal nodes, which poses a security risk as it invites vulnerabilities. A counterparty can include specially crafted "scripts" masquerading as leaves that can also be interpreted as fake internal nodes. This allows the counterparty to build an inclusion proof and reveal the evil code that they had designed into the MAST at a deeper level.Arbitrary data can be stored in Fast Merkle Tree leaves, including the Merkle root of another Fast Merkle Tree. By storing an inner Fast Merkle Tree root inside the (explicit) leaf of an outer Fast Merkle Tree, the application can verify an Inclusion Proof of the inner Fast Merkle Tree Root in the outer Fast Merkle Tree Root and then verify a second Inclusion Proof of the desired data in the inner Faster Merkle Tree Root. Russell O'Connor suggests that the fast hash for internal nodes needs to use an IV that is not the standard SHA-256 IV and instead should use some other fixed value, which should itself be the SHA-256 hash of some fixed string such as "BIP ??" or "Fash SHA-256". Peter Todd agrees with Russell O'Connor's proposal but adds that designs should not create new hash functions using custom IVs and suggests using bog-standard SHA256 and making a fixed first block to allow optimized implementations to start with the fixed midstate.Mark Friedenbach discusses a specific instance of a general problem where third-party scripts cannot be trusted. The attack described involves finding a collision between double-SHA256(innocuous) and fast-SHA256(fast-SHA256(fast-SHA256(double-SHA256(malign) || r2) || r1) || r0). However, due to the double-SHA256 construction, the attack couldn't be accomplished without breaking SHA256 completely. Friedenbach explained the procedure for getting a collision between innocuous and malign scripts. To prevent attacks like these, multi-party wallet level protocols for jointly constructing scriptPubKeys should require a 'delinearization' step that proves knowledge of information necessary to complete each part of the script, as part of proving the safety of a construct. Additionally, it is suggested to modify the scheme to use a different IV for hash tree updates which would prevent even implausible attacks.A recent attack on Bitcoin's MAST protocol has been identified, in which an attacker can grind r2 until the result of fast-SHA256(double-SHA256(malign) || r2) contains the correct first couple of bytes for the script header and the opcode for a 33-byte push. Although difficult to actualize this into a practical attack that escalates the attacker's capabilities, it becomes easier if the attacker can get the other party to agree to a MAST policy that is nothing more than a CHECKSIG over a key they presumably control.In conclusion, the context discusses the vulnerabilities in the design of Fast Merkle Trees and the proposal to use a fixed IV value for the fast hash of internal nodes to prevent attacks. It also highlights the potential security breach in Bitcoin Improvement Proposal (BIP) tree structure and the need for modified schemes to prevent such attacks. By taking measures such as requiring a delinearization step and modifying the IV for hash tree updates, attacks on Bitcoin's MAST protocol can be prevented, ensuring its safety.</summary>
    <published>2017-09-07T05:55:57+00:00</published>
  </entry>
</feed>
