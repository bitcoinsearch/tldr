<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>proposal: extend WIF format for segwit</title>
  <updated>2023-06-12T18:50:05.899460+00:00</updated>
  <author>
    <name>AJ West 2017-09-17 14:42:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>proposal: extend WIF format for segwit</title>
    <updated>2023-06-12T18:50:05.899460+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015020.html" rel="alternate"/>
    <summary>In a discussion on the Bitcoin developer mailing list, user AJ West interjects and questions whether wallet software should attempt to error-correct private keys. The concern is that if the software does this, users might unknowingly copy the error on when backing up their paper wallets. Thomas Voegtlin responded to Pieter Wuilleâ€™s comment on checksum computation for bech32 format, saying that ambiguity in WIF format is holding him back from releasing a segwit-capable version of Electrum. Voegtlin believes it is unacceptable to use the current WIF format with segwit scripts, and sees only two options: disable private key export in Electrum Segwit wallets until a common WIF extension is agreed on, or define his own WIF extension for Electrum. While defining his own format makes sense for xpub/xprv format, it makes less sense for WIF as it is mostly used to import/sweep keys from other wallets. Voegtlin would like to know what other wallet developers plan to do, especially Core.</summary>
    <published>2017-09-17T14:42:52+00:00</published>
  </entry>
</feed>
