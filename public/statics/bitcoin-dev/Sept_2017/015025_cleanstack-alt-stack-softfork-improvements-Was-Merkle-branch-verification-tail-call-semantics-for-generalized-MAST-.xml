<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>cleanstack alt stack &amp; softfork improvements (Was: Merkle branch verification &amp; tail-call semantics for generalized MAST)</title>
  <updated>2023-05-20T03:59:26.609130+00:00</updated>
  <author>
    <name>Mark Friedenbach 2017-09-19 07:33:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>cleanstack alt stack &amp; softfork improvements (Was: Merkle branch verification &amp; tail-call semantics for generalized MAST)</title>
    <updated>2023-05-20T03:59:26.609130+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015025.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list had a discussion on Sep 19, 2017, where Mark Friedenbach suggested that tail-call semantics could be maintained if the alt stack is used for transferring arguments to the policy script. However, Luke Dashjr pointed out that this could be considered a bug in the cleanstack rule. The cleanstack rule was introduced as a consensus rule to prevent denial of service vulnerability by a third party who could add data to the witness stack since witness data is not covered by a checksig. Cleanstack currently prohibits extra items on the stack; however, there is no reason to prohibit extra items on the altstack because those items can only arrive there purposefully. There are other solutions to this problem that could have been taken, such as committing to the number of items or maximum size of the stack as part of the sighash data. Arguably for a future script version upgrade one of these other approaches should be taken to allow for shorter tail-call scripts.</summary>
    <published>2017-09-19T07:33:54+00:00</published>
  </entry>
</feed>
