<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fwd:  "Compressed" headers stream</title>
  <updated>2023-06-12T15:14:14.932324+00:00</updated>
  <author>
    <name>Peter Todd 2017-09-04 14:06:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fwd:  "Compressed" headers stream</title>
    <updated>2023-06-12T15:14:14.932324+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014904.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev, Gregory Maxwell pointed out that there are several ways to reduce the number of bytes needed for block headers. These include reducing the frequency of changing the bits field, setting the timestamp to be no less than the median of the last 11 blocks and usually only slightly more than the last one, and noting that the block version is usually one of the last few. However, these improvements are just a constant factor. The compact SPV proofs described in the appendix of the sidechains whitepaper create log scaling proofs, but they only prove total work, not validity. OpenTimestamps plans to have infrastructure for trusted validity attestations. Timestamping has security issues when done via proof-of-work, since miners can set block times backwards, which could weaken security further. It is important to understand the risks before implementing compact SPV proofs. It may also be possible to reduce initial download bandwidth by shipping a known-good sum-merkle-tree tip hash with the software.</summary>
    <published>2017-09-04T14:06:44+00:00</published>
  </entry>
</feed>
