<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merkle branch verification &amp; tail-call semantics for generalized MAST</title>
  <updated>2023-06-12T18:20:05.222813+00:00</updated>
  <author>
    <name>Mark Friedenbach 2017-09-30 23:51:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merkle branch verification &amp; tail-call semantics for generalized MAST</title>
    <updated>2023-06-12T18:20:05.222813+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015142.html" rel="alternate"/>
    <summary>Luke Dashjr, a Bitcoin Core developer, raised concerns about the safety of a BIP (Bitcoin Improvement Proposal) for tail-call execution semantics, which doesn't count sigops toward the block sigop limit. He questioned if it was safe and how long it would take to verify a malicious block with nearly 4MB of sigops only. He acknowledged the difficulty in supporting the sigop limit and suggested reducing the time needed to verify such blocks by including a new per input rule that reduces it to ~1s without cutting off any non-attack script. Dashjr also noted that secp256k1 is now fast enough that there is no need for a separate sigop limit. The BIP proposal and code are available on GitHub.</summary>
    <published>2017-09-30T23:51:49+00:00</published>
  </entry>
</feed>
