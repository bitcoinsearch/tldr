<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merkle branch verification &amp; tail-call semantics for generalized MAST</title>
  <updated>2023-06-12T18:19:56.744693+00:00</updated>
  <author>
    <name>Peter Todd 2017-09-13 09:41:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merkle branch verification &amp; tail-call semantics for generalized MAST</title>
    <updated>2023-06-12T18:19:56.744693+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014999.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Mark Friedenbach addressed concerns of denial-of-service attacks if there were no block size limit. He argued that bad blocks constructed using other vulnerabilities would cause more problems than removing the limit, highlighting that 4MB of secp256k1 signatures takes just 10 seconds to validate on his five-year-old laptop. In response, Karl Johan Alm suggested implementing a per UTXO tally and charging additional fees for respending an invalid op count, which would penalize the attacker proportionately to the wasted ops when the UTXO is next included in another transaction. However, Peter Todd noted that this approach was similar to Ethereum's and raised concerns about how nodes would verify that transactions were penalized correctly and how consensus could fail if the DoS attack was significant enough.</summary>
    <published>2017-09-13T09:41:07+00:00</published>
  </entry>
</feed>
