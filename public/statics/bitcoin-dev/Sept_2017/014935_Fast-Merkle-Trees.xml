<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fast Merkle Trees</title>
  <updated>2023-06-12T18:32:44.127278+00:00</updated>
  <author>
    <name>Russell O'Connor 2017-09-07 01:59:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fast Merkle Trees</title>
    <updated>2023-06-12T18:32:44.127278+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014935.html" rel="alternate"/>
    <summary>The issue with the fast hash for internal nodes is that it needs to use an IV that is not the standard SHA-256 IV. Instead, it needs to use some other fixed value, which should itself be the SHA-256 hash of some fixed string such as "BIP ???" or "Fast SHA-256". Currently, someone can claim a leaf node as an internal node by creating a proof that provides a phony right-hand branch claiming to have hash 0x80000..0000100, which is really the padding value for the second half of a double SHA-256 hash. Peter Todd had previously schooled the author on a similar issue in the past. The proposed solution can be found in the Fast Merkle Trees BIP and code provided in the links.</summary>
    <published>2017-09-07T01:59:54+00:00</published>
  </entry>
</feed>
