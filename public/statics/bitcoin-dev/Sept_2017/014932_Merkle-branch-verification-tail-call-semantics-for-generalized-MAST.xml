<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merkle branch verification &amp; tail-call semantics for generalized MAST</title>
  <updated>2023-06-12T18:22:11.472053+00:00</updated>
  <author>
    <name>Mark Friedenbach 2017-09-07 00:38:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merkle branch verification &amp; tail-call semantics for generalized MAST</title>
    <updated>2023-06-12T18:22:11.472053+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014932.html" rel="alternate"/>
    <summary>Mark Friedenbach, a Bitcoin developer, has proposed two new script features to be added to the Bitcoin protocol through soft-fork activation. These features are MERKLE-BRANCH-VERIFY (MBV) and tail-call execution semantics. MBV allows script authors to force redemption to use values selected from a pre-determined set committed to in the scriptPubKey while tail-call execution semantics provide a single level of recursion into a subscript, allowing for more flexibility. Together, these features enable tree signatures and a generalized MAST for constructing private smart contracts. They also bring privacy and fungibility improvements to users of counter-signing wallet/vault services. Friedenbach believes that implementing these features is simple enough, and the use cases compelling enough that they could BIP 8/9 rollout of these features in relatively short order, perhaps before the end of the year. He has written three BIPs to describe these features and their associated implementation, which are open for public review and discussion. The BIPs are Fast Merkle Trees, MERKLEBRANCHVERIFY, and Tail-call execution semantics. However, Friedenbach notes that there should be a multi-element MBV opcode that allows verifying multiple items extracted from a single tree. It is not yet clear how MBV could be modified to support this without sacrificing important properties or whether a separate multi-MBV opcode is necessary.</summary>
    <published>2017-09-07T00:38:55+00:00</published>
  </entry>
</feed>
