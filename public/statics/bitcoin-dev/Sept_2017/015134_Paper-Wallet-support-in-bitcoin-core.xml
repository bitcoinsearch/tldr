<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Paper Wallet support in bitcoin-core</title>
  <updated>2023-06-12T21:24:08.205904+00:00</updated>
  <author>
    <name>Dan Libby 2017-09-30 07:06:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Paper Wallet support in bitcoin-core</title>
    <updated>2023-06-12T21:24:08.205904+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015134.html" rel="alternate"/>
    <summary>In a discussion on the Bitcoin development mailing list, Jonas Schnelli stated that client implementations as proposed should be directed to the bitcoin-core-dev mailing list or Github. To this, Luke Dashjr agreed and extended concerns about BIP39 plaintext paper backups, stating that private keys should be generated and used offline on trusted hardware and OS. However, the existing behavior of the Bitcoin Core wallet generates keys and is intended for use in online environments. The proposed RPC call would generate a key/address that would not be stored in the internal wallet, allowing users to store it offline or use it as they wish. It never stores the key or address to disk and is useful when run on an offline device connected to a non-networked printer. The crux of the matter is trust; if full node operators have already trusted Bitcoin Core developers and dev/release practices, why should they trust software in minimal offline hardware/OS? Additionally, users should be able to view or export private keys, and backups should be encrypted and footgun-safe, which can be implemented by whichever software calls the proposed RPC APIs.</summary>
    <published>2017-09-30T07:06:42+00:00</published>
  </entry>
</feed>
