<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Horizontal scaling of blockchain</title>
  <updated>2023-05-20T03:38:13.570012+00:00</updated>
  <author>
    <name>Cserveny Tamas 2017-09-01 12:47:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Horizontal scaling of blockchain</title>
    <updated>2023-05-20T03:38:13.570012+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014895.html" rel="alternate"/>
    <summary>The writer is contemplating how to scale blockchain. One of the main problems is that adding more miners only increases their share of block rewards, but not the speed of transactions. The current chain is single threaded, so horizontal scaling may be an option if the problem can be partitioned. The number of partitions would start with a low number, but could increase later. There are two partitioning key alternatives: ordering on inputs or ordering on transaction ids. In the former case, transactions would need to be mined per input address partition. In the latter case, transactions would be partitioned by their TX-id. Both methods would affect block reward and complexity, which needs to be adjusted. Activating partitions could be done gradually according to a schedule. It would be easy to create new partitions, but closing them might be more complex in the case of TX partitioned transactions. The writer acknowledges that there are pros and cons to both partition keys and asks for opinions on the matter.</summary>
    <published>2017-09-01T12:47:08+00:00</published>
  </entry>
</feed>
