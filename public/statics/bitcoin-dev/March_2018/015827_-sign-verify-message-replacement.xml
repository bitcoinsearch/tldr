<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>{sign|verify}message replacement</title>
  <updated>2023-06-13T01:01:32.390153+00:00</updated>
  <author>
    <name>Damian Williamson 2018-03-15 10:15:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>{sign|verify}message replacement</title>
    <updated>2023-06-13T01:01:32.390153+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015827.html" rel="alternate"/>
    <summary>In a Bitcoin-dev mailing list, Karl Johan Alm proposed to write a replacement for the message signing tools that are currently broken for all but the legacy 1xx addresses. The approach suggested by Pieter Wuille is to do a script-based approach. The proposal is to add a new structure called SignatureProof which is a simple scriptSig and witnessProgram container that can be serialized. The structure is passed out from or into the signer/verifier with two RPC commands: sign and verify. Luke Dashjr suggests that the signature format should not only support "proof I receive at this address" but also "proof of funds" since it is a popular misuse of the current message signing which does not actually prove funds at all. It needs to be capable of signing for multiple inputs. Preferably, it should also avoid disclosing the public key for existing or future UTXOs. However, it may not be possible without something MAST-like first.</summary>
    <published>2018-03-15T10:15:17+00:00</published>
  </entry>
</feed>
