<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>{sign|verify}message replacement</title>
  <updated>2023-05-20T05:17:26.909252+00:00</updated>
  <author>
    <name>Pieter Wuille 2018-03-26 08:53:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>{sign|verify}message replacement</title>
    <updated>2023-05-20T05:17:26.909252+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015848.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev, Karl Johan Alm proposed to write a replacement for the message signing tools that are currently broken for all but legacy 1xx addresses. The proposal is to add a new structure called SignatureProof which is a simple scriptSig &amp; witnessProgram container that can be serialized and passed out from/into the signer/verifier. However, Pieter Wuille suggested adding more logic to deal with softforks and compatibility. A solution could be to include a version number in the signature which corresponds to a set of validation flags. This way, when the version number is something a verifier doesn't know, it can be reported as inconclusive. RPC commands such as sign and verify are discussed, with the suggestion to extend the existing signmessage/verifymessage RPC to fall back to the existing signature algorithm for legacy addresses while using the script-based approach for all others. In response to a suggestion by Alm, Pieter stated that the prehashed option isn't needed since it could be used to trick someone into signing off on an actual transaction.</summary>
    <published>2018-03-26T08:53:23+00:00</published>
  </entry>
</feed>
