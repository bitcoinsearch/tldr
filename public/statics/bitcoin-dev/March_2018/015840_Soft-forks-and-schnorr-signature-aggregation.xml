<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Soft-forks and schnorr signature aggregation</title>
  <updated>2023-06-13T01:05:57.011671+00:00</updated>
  <author>
    <name>Andrew Poelstra 2018-03-21 12:45:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Soft-forks and schnorr signature aggregation</title>
    <updated>2023-06-13T01:05:57.011671+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015840.html" rel="alternate"/>
    <summary>In a recent email thread on the bitcoin-dev mailing list, Anthony Towns proposed that an upgrade to Bitcoin should focus solely on Schnorr signatures, Taproot, MAST and re-enabling opcodes instead of interactive signature aggregation. Andrew Poelstra agreed, noting that aggregate signatures complicate blind signature protocols such as partially-blind swaps. This is because they break the assumption that "one signature can spend at most one UTXO," meaning that blind signers cannot determine how many coins they are authorizing with a given signature, even if they have ensured that the key they are using only controls UTXOs of a fixed value. Poelstra suggests this issue could be resolved with creative use of zero-knowledge proofs, but highlights the complexity of signature aggregation compared to other upgrades.</summary>
    <published>2018-03-21T12:45:21+00:00</published>
  </entry>
</feed>
