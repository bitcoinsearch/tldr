<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>version.relay behavior change</title>
  <updated>2023-06-13T00:57:32.497821+00:00</updated>
  <author>
    <name>Eric Voskuil 2018-03-16 08:27:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>version.relay behavior change</title>
    <updated>2023-06-13T00:57:32.497821+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015834.html" rel="alternate"/>
    <summary>The email thread starts with Eric Voskuil reporting that Satoshi:0.15.0 nodes and later no longer seem to be following the version.relay=false flag (BIP37). Andrew Chow suggests that these nodes may not actually be forked from Bitcoin Core, but rather fake nodes that do not follow the protocol and can set any user agent they want, including Bitcoin Core's user agents. He recommends dropping peers for protocol noncompliance as the best solution. Eric Voskuil responds, stating that he does not see any problem in the relevant Core sources, and that they have synced against a Core node locally without seeing the issue. He suspects that it is Core due to its commonness and consistent user agents. However, he cannot determine what sort of nodes they are seeing as there is no easy way to tell. The behavior started infrequently with 0.14.0 peers and has become more common over time. Eric considers reinstating the behavior of dropping peers that do not comply with the protocol. Andrew Chow replies, suggesting that the behavior may be a bug rather than an intentional change if what Eric is seeing is true. He asks for specific details on how to reproduce the issue. This email thread takes place on the bitcoin-dev mailing list.</summary>
    <published>2018-03-16T08:27:47+00:00</published>
  </entry>
</feed>
