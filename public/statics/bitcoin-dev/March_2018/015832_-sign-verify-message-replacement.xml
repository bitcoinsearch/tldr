<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>{sign|verify}message replacement</title>
  <updated>2023-06-13T01:00:15.247121+00:00</updated>
  <author>
    <name>Greg Sanders 2018-03-16 01:59:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>{sign|verify}message replacement</title>
    <updated>2023-06-13T01:00:15.247121+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015832.html" rel="alternate"/>
    <summary>The conversation on the bitcoin-dev mailing list revolves around a potential solution for proving present possession of funds without sacrificing fungibility or hot/cold wallet separation. One proposal suggests using a FORKID in a transaction, allowing for a mempool acceptance test that returns true even if the signature is not valid as per Bitcoin consensus, but only due to the FORKID. This would enable any wallet to support this method with generic FORKID support. Another suggestion is to include time conditions under which the funds may be spent, with an optional nLockTime and nSequence. The default SIGHASH_ALL would likely be used for simplicity, but a byte may need to be appended to the end of the signature for encoding checks to pass. There is some discussion on whether or not the sighash flag affects the outcome of verification.</summary>
    <published>2018-03-16T01:59:45+00:00</published>
  </entry>
</feed>
