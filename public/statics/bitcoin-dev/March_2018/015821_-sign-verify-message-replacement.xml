<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>{sign|verify}message replacement</title>
  <updated>2023-05-20T05:17:45.156344+00:00</updated>
  <author>
    <name>Anthony Towns 2018-03-14 16:12:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>{sign|verify}message replacement</title>
    <updated>2023-05-20T05:17:45.156344+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015821.html" rel="alternate"/>
    <summary>On March 14, 2018, Karl Johan Alm proposed a message signing tool replacement that would be script-based to overcome the current issue of only legacy 1xx addresses being supported. Pieter Wuille had suggested this approach which could be easily implemented in Bitcoin Core. The proposal includes adding a new structure called SignatureProof which is a simple scriptSig &amp; witnessProgram container that can be serialized and passed out from/into the signer/verifier. It also includes two RPC commands: ‘sign’ generates a signature proof for using the same method that would be used to spend coins sent to an address and ‘verify’ deserializes and executes the proof using a custom signature checker whose sighash is derived from an address. A concern was raised about soft forks making old nodes accept invalid message signatures as valid, but it was suggested by aj that checking for standardness of the spending script and reporting non-standard scripts as invalid outright or highly questionable should prevent confusion as long as soft forks are only making nonstandard behaviours invalid.</summary>
    <published>2018-03-14T16:12:11+00:00</published>
  </entry>
</feed>
