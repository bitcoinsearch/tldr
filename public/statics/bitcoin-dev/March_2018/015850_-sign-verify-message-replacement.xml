<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>{sign|verify}message replacement</title>
  <updated>2023-06-13T00:59:54.600375+00:00</updated>
  <author>
    <name>Karl Johan Alm 2018-03-27 08:09:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>{sign|verify}message replacement</title>
    <updated>2023-06-13T00:59:54.600375+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015850.html" rel="alternate"/>
    <summary>Pieter Wuille has suggested including a version number in the signature that corresponds to a set of validation flags. If a verifier doesn't know the version number, it can be reported as inconclusive. Another solution is to verify twice, once with all consensus rules and once with standardness rules. If both are valid, the signature is valid; if both are invalid, the signature is invalid; if they're different, then the signature validation is reported as inconclusive. Pieter thinks that double verify approach seems promising. In response to RPC commands, Pieter suggests extending the existing signmessage/verifymessage RPC. The legacy behavior could be depended on somewhere, so adding legacy mode or simply doing the old way for 1xx is sufficient. Regarding the message signing functionality, Pieter warns about the danger of using prehashed messages since it could be used to trick someone into signing an actual transaction. Therefore, it's better to always forcibly prefix "Bitcoin signed message" to avoid unintentionally signing something.</summary>
    <published>2018-03-27T08:09:41+00:00</published>
  </entry>
</feed>
