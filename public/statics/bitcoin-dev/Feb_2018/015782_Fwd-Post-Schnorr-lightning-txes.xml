<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fwd:  Post-Schnorr lightning txes</title>
  <updated>2023-06-13T00:49:23.493061+00:00</updated>
  <author>
    <name>Bryan Bishop 2018-02-20 22:42:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fwd:  Post-Schnorr lightning txes</title>
    <updated>2023-06-13T00:49:23.493061+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-February/015782.html" rel="alternate"/>
    <summary>Bitcoin developer Anthony Towns recently shared his thoughts on the post-Schnorr transactions for Lightning Network via the lightning-dev mailing list. He discussed four main scenarios for closing a channel and how to solve them using Schnorr signature. Additionally, he suggested doing HTLCs via Schnorr. Towns explained his idea of payment hash using elliptic curve private keys and changing them at each hop to make it harder to correlate steps in a payment route. Moreover, he proposed an idea of outsourcing channel monitoring by partially signing with A(i) and allowing the monitoring service to catch fraudulent transactions.The email delves into various aspects of lightning network implementation. It suggests distributing funds to specific addresses according to the channel balance and HTLC balance with each in-flight HTLC paying A or B on success. The author also recommends using obscured channel state ids, SIGHASH_SINGLE, ANYONECANPAY, and pay2pubkey(hash) for fund distribution transaction outputs. Furthermore, the author recommends discarding old transaction info and HTLC parameters once they are not relevant to the current channel state. Channel monitoring can be outsourced efficiently with as little as a signature per state. However, there is no plausible way of doing constant space outsourced channel monitoring without some sort of SIGHASH_NOINPUT. Lastly, the email suggests penalizing disappearance as well as misbehavior by adding a transaction that B pre-signs, spending the commitment tx A holds, giving all the channel funds to A but only after a very large CSV timeout. Overall, this email provides valuable insights into the Lightning Network's implementation and how Schnorr signature can be used to improve it.</summary>
    <published>2018-02-20T22:42:19+00:00</published>
  </entry>
</feed>
