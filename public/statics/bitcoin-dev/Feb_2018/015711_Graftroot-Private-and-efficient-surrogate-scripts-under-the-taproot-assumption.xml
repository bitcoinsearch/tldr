<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Graftroot: Private and efficient surrogate scripts under the taproot assumption</title>
  <updated>2023-06-13T00:24:26.914911+00:00</updated>
  <author>
    <name>Jeremy 2018-02-09 07:42:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Graftroot: Private and efficient surrogate scripts under the taproot assumption</title>
    <updated>2023-06-13T00:24:26.914911+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-February/015711.html" rel="alternate"/>
    <summary>The discussion on Bitcoin-dev mailing list is focused on the case where a delegate is signed conditional on another delegate being signed. The participants suggest that internally something like segwit is required so that one side's delegation can be referred to by a signature-stable identity. However, they do not have a suggestion for a good way to do this at present. Another point raised in the discussion is the introduction of functionality that makes a script invalid after a certain time, which can exclude old delegates by timing/block height arguments or even pre-sign delegates for different periods of time. This construction allows unilateral key rotation without invalidating the interests of other parties in the existing multisig and does not require any on-chain transaction, only storing the signed delegation.</summary>
    <published>2018-02-09T07:42:52+00:00</published>
  </entry>
</feed>
