<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Graftroot: Private and efficient surrogate scripts under the taproot assumption</title>
  <updated>2023-05-20T05:07:57.125376+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-02-24 18:58:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Graftroot: Private and efficient surrogate scripts under the taproot assumption</title>
    <updated>2023-05-20T05:07:57.125376+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-February/015790.html" rel="alternate"/>
    <summary>In a recent email conversation on the bitcoin-dev mailing list, Daniel Edgecumbe proposed that binding grafts to a particular transaction does not necessarily require aggregation. He suggests that signing H(txid, script) instead of H(script) could potentially work, but he is unsure if this would break aggregation. However, knowing the txid in advance is required for this method to work. In cases where the txid is already known, a graftroot sighash flag can handle it, but usually, it is not known. Signing a transaction spending the multisig coin to the graft is an alternative solution, but it is not atomic and cannot support scalability or privacy. Additionally, it does not work if the graft was not created after the fact. The aggregation approach has the advantageous property of working just in time even on grafts created in advance.</summary>
    <published>2018-02-24T18:58:59+00:00</published>
  </entry>
</feed>
