<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transition to post-quantum</title>
  <updated>2023-06-13T00:28:58.006147+00:00</updated>
  <author>
    <name>Tristan Hoy 2018-02-12 21:32:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transition to post-quantum</title>
    <updated>2023-06-13T00:28:58.006147+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-February/015723.html" rel="alternate"/>
    <summary>Tristan Hoy, a Bitcoin researcher, has proposed a strategy to mitigate the potential effects of a post-quantum attack on Bitcoin. Hoy's research focuses on identifying what such an attack would look like and how to prepare for it. Hoy identifies that none of the recommended post-quantum DSAs are scalable and committing to a specific post-quantum DSA would be premature as the field is rapidly advancing. Solution 3 in his draft proposes changing key generation only, which allows balances to be transferred into a post-quantum DSA address space securely. Wallet providers would implement the change. However, Tristan highlights some issues with Tim Ruffing's post-quantum address recovery approach. In a post-quantum world, the second "d" type transaction is completely forgeable, making it vulnerable to front-running. An adversary capable of breaking ECDSA needs only listen for these transactions, obtain "classic_sk," and then use a higher fee or relationship with a miner to turn the original "d" transaction into a double-spend, sending all funds to the adversary. PQ DSA is required to prevent front-running, and no commit-reveal scheme will be secure without one. Moreover, if Tristan's approach is rolled out today, it will effectively double transaction volumes. Solutions 2 and 3 in his article modify the address generation process to solve this problem.</summary>
    <published>2018-02-12T21:32:35+00:00</published>
  </entry>
</feed>
