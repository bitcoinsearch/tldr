<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-16T18:45:57.707543+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-03 01:08:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-16T18:45:57.707543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021735.html" rel="alternate"/>
    <summary>On June 2, 2023, Joost Jager sent a message to bitcoin-dev about the benefits of making the taproot annex available in a non-structured form. The immediate advantages of this move are clear since it allows developers to use the taproot annex without delay and take advantage of its features today. However, Dave asked Joost what features and benefits are available today and if there is some other way to use the annex that would be beneficial to users of Bitcoin. Greg Sanders wants to use annex data with LN-Symmetry but that's dependent on a soft fork of SIGHASH_ANYPREVOUT. According to Joost, the taproot annex could allow putting arbitrary data into a witness without having to commit to that data beforehand. But it would only increase the efficiency of witness stuffing like ordinal inscriptions by only 0.4%, which means around 2 bytes saved per 520 bytes pushed, and it'd still be required to create an output in order to spend it.</summary>
    <published>2023-06-03T01:08:01+00:00</published>
  </entry>
</feed>
