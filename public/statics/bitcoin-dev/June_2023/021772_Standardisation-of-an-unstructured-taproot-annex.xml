<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-18T12:19:40.338527+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-16 11:26:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-18T12:19:40.339488+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021772.html" rel="alternate"/>
    <summary>In an email exchange, Joost proposes a potential policy for annex-vaults that would be in line with existing work and enable future extensibility. The proposed policy includes an opt-in annex for every input (even if empty), a Tlv format as defined in https://github.com/bitcoin/bips/pull/1381, and only allows tlv record 0 - unstructured data. However, there is a limit on the maximum size of the value which is proposed to be 256 bytes to protect opt-in users. Joost notes that the current limit of 126 bytes in https://github.com/bitcoin-inquisition/bitcoin/pull/22 isn't sufficient for these types of vaults. If there are two presigned txes (unvault and emergency), those signatures would already take up 2*64=128 bytes. Then you also want to store 32 bytes for the ephemeral key itself as the key can't be reconstructed from the schnorr signature. The remaining bytes could be used for a third presigned tx and/or additional vault parameters. Joost asks if there are any practical objections to making the annex standard under the conditions listed above.</summary>
    <published>2023-06-16T11:26:34+00:00</published>
  </entry>
</feed>
