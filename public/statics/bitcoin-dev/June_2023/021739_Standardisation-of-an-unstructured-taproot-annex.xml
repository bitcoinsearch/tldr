<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-16T18:44:10.871405+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-03 09:14:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-16T18:44:10.871405+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021739.html" rel="alternate"/>
    <summary>In a conversation between Joost and Greg Sanders, the topic of discussion was annex malleability vector. The discussion revolved around the fact that BIP341/342 signature hashes do not cover other inputs' annex fields, which could lead to malicious parties making signed transactions into maximum-sized transaction packages, causing griefing. While solutions such as making annex usage opt-in or imposing size limitations may initially appear effective, they may also inadvertently foster a false sense of security, as they lack alignment with economic incentives. Relying solely on policy enforcement merely transfers responsibility to the miners, without necessarily aligning their incentives with the broader network health. It may thus be more prudent to permit the utilization of the annex without restrictions, inform developers of its inherent risks, and acknowledge that Bitcoin, in its present state, might not be ideally suited for certain types of applications.</summary>
    <published>2023-06-03T09:14:27+00:00</published>
  </entry>
</feed>
