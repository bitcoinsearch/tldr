<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Few questions regarding ListTransaction</title>
  <updated>2023-06-13T01:28:38.154619+00:00</updated>
  <author>
    <name>Karl-Johan Alm 2018-04-11 10:00:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Few questions regarding ListTransaction</title>
    <updated>2023-06-13T01:28:38.154619+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-April/015891.html" rel="alternate"/>
    <summary>In an email conversation between ZmnSCPxj and Karl-Johan Alm, ZmnSCPxj clarifies that miners can completely ignore nSequence when putting transactions in blocks. This means that if there are two conflicting unconfirmed transactions with different fees, miners can include the one with higher fee even if it came later than the one with lower fee. Therefore, "full replace-by-fee" where nSequence is ignored for purposes of replace-by-fee is expected to become the norm, and wallets should be designed to only trust transactions with confirmations. The convention of nSequence=0xFFFFFFFF meaning opt-out of RBF is only followed by full nodes running standard bitcoind, and nothing prevents miners from running a patched version that ignores this rule. Peter Todd, who is part of the bitcoin-dev mailing list, mentions that full replace-by-fee appears to be used by a significant minority of miners, and that his full-replace-by-fee tree ignores the convention of nSequence=0xFFFFFFFF. His tree also does preferential peering to ensure it's well connected with like-minded peers and the whole network.</summary>
    <published>2018-04-11T10:00:45+00:00</published>
  </entry>
</feed>
