<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>KETAMINE: Multiple vulnerabilities in SecureRandom(), numerous cryptocurrency products affected.</title>
  <updated>2023-06-13T01:26:06.577010+00:00</updated>
  <author>
    <name>Jason Davies 2018-04-10 08:51:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>KETAMINE: Multiple vulnerabilities in SecureRandom(), numerous cryptocurrency products affected.</title>
    <updated>2023-06-13T01:26:06.577010+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-April/015880.html" rel="alternate"/>
    <summary>In an email, Jason Davies explains his findings on a vulnerability disclosure that did not contain information about the library in question. He reveals that the vulnerability might be referring to a pre-2013 version of jsbn, a JavaScript crypto library which before it used the CSRNG in the Web Crypto API, tried to use nsIDOMCrypto. However, as modern browsers don't have window.crypto.random defined, Bitcoin wallets using a pre-2013 version of jsbn may not be using a CSPRNG when run on a modern browser. Furthermore, even with the latest version (v1.4) of jsbn, it still does not use high-quality entropy for Internet Explorer because getRandomValues is provided under window.msCrypto for that browser. Even though a CSPRNG is used, the library passes the output of the CSPRNG through RC4 which generates biased bits, leading to possible private key recovery. Davies also notes that Chrome used RC4 for crypto.getRandomValues at one point in 2015.</summary>
    <published>2018-04-10T08:51:51+00:00</published>
  </entry>
</feed>
