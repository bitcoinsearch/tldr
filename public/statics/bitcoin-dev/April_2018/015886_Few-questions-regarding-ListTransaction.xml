<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Few questions regarding ListTransaction</title>
  <updated>2023-06-13T01:29:31.209341+00:00</updated>
  <author>
    <name>Karl-Johan Alm 2018-04-11 05:21:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Few questions regarding ListTransaction</title>
    <updated>2023-06-13T01:29:31.209341+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-April/015886.html" rel="alternate"/>
    <summary>In an email thread on the bitcoin-dev mailing list, Maksim Solovjov posed two questions related to transaction confirmations. The first question asked what it means for a transaction with zero confirmations to be trusted or not. The response was that a zero-confirmation transaction is considered trusted if it meets certain criteria including being final, not in a reorged block, and having all inputs from the sender. The second question asked when a transaction can have -1 confirmations (conflicted) and what it means to have a conflicted transaction. A transaction is considered conflicted if there exists another transaction that spends the same inputs. If a transaction receives -N confirmations, it means that it was initially mined in a block but that block was orphaned away because a different transaction was mined in a new block, resulting in the original transaction becoming a double spend. This situation can arise due to transaction malleability or double spending.</summary>
    <published>2018-04-11T05:21:10+00:00</published>
  </entry>
</feed>
