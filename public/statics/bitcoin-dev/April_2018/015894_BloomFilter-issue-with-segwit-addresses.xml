<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BloomFilter issue with segwit addresses</title>
  <updated>2023-06-13T01:32:27.116470+00:00</updated>
  <author>
    <name>Andreas Schildbach 2018-04-13 15:32:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BloomFilter issue with segwit addresses</title>
    <updated>2023-06-13T01:32:27.116470+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-April/015894.html" rel="alternate"/>
    <summary>Anton, a developer on the bitcoinj mailing list, has brought to attention a compatibility issue between segwit and BIP37 (Bloom Filtering). The issue pertains only to P2WPKH and transactions without change outputs. In such cases, inputs and outputs contain no data elements that would cause a match for the filter. The public key, which would match, goes to the witness but not to the input. As a solution, it was suggested to include an OP_RETURN output with a matching public key in such transactions. Anton confirmed that this workaround is working, however, some of the size improvements of segwit are nullified by this workaround. It is being pondered if Bitcoin Core would be willing to extend the BIP37 matching rules such that data elements in the witness are also matched against.</summary>
    <published>2018-04-13T15:32:15+00:00</published>
  </entry>
</feed>
