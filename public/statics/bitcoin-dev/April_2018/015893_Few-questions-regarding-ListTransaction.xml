<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Few questions regarding ListTransaction</title>
  <updated>2023-06-13T01:28:48.608422+00:00</updated>
  <author>
    <name>Maksim Solovjov 2018-04-11 19:58:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Few questions regarding ListTransaction</title>
    <updated>2023-06-13T01:28:48.608422+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-April/015893.html" rel="alternate"/>
    <summary>In a recent discussion on the bitcoin-dev mailing list, ZmnSCPxj clarified that miners can ignore nSequence when adding transactions to blocks, and unconfirmed transactions are not recorded in blocks. This means that if there are conflicting transactions with different fees, miners can include the one with the higher fee even if they learned about the other one first. As a result, "full replace-by-fee", where nSequence is ignored for replace-by-fee purposes, is expected to become the norm. The convention of nSequence=0xFFFFFFFF meaning opt-out of RBF is only followed by full nodes running standard bitcoind. Miners can run patched bitcoind that ignores this rule and connect with similar peers who also ignore it. Peter Todd mentioned that his full-replace-by-fee tree ignores nSequence=0xFFFFFFFF and does preferential peering to ensure it's well connected with likewise peers and thus the whole network.</summary>
    <published>2018-04-11T19:58:45+00:00</published>
  </entry>
</feed>
