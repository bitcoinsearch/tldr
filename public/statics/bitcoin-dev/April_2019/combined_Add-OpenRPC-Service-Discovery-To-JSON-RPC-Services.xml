<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Add OpenRPC Service Discovery To JSON-RPC Services</title>
  <updated>2023-06-13T18:08:06.583644+00:00</updated>
  <author>
    <name>Shane Jonas 2019-04-03 20:48:24</name>
  </author>
  <author>
    <name>Shane Jonas 2019-04-03 20:48:24</name>
  </author>
  <author>
    <name>Shane Jonas 2019-04-03 20:48:24</name>
  </author>
  <link href="bitcoin-dev/April_2019/016835_Add-OpenRPC-Service-Discovery-To-JSON-RPC-Services.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016835_Add-OpenRPC-Service-Discovery-To-JSON-RPC-Services.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016835_Add-OpenRPC-Service-Discovery-To-JSON-RPC-Services.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Add OpenRPC Service Discovery To JSON-RPC Services</title>
    <updated>2023-06-13T18:08:06.583644+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-April/016835.html" rel="alternate"/>
    <summary>The Bitcoin RPC Interface is being proposed to be standardized similar to how bitcoin wallets have BIPs. The absence of a standard interface leads to issues when clients do not provide getblock or work in different ways, which can result in unintended consequences. Standardizing the interface would allow for documentation generation, RPC client generation, and testing interfaces across implementations.A proposal for this standardization has been made on Github and includes an example for Bitcoin. By normalizing the interface, it will ensure that all clients operate in the same manner and prevent any potential issues from arising. It will also make it easier for developers to create new clients that interact with the Bitcoin network.In summary, the Bitcoin RPC Interface is undergoing a proposal for normalization, which will establish a standard interface and prevent any issues that may arise from clients operating differently. This standardization will make it easier for developers to create new clients and ensure consistency across implementations.</summary>
    <published>2019-04-03T20:48:24+00:00</published>
  </entry>
</feed>
