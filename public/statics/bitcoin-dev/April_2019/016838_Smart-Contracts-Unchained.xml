<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Smart Contracts Unchained</title>
  <updated>2023-06-13T18:09:14.903629+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-04-04 01:55:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Smart Contracts Unchained</title>
    <updated>2023-06-13T18:09:14.903629+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-April/016838.html" rel="alternate"/>
    <summary>Smart contracts are widely used in blockchain technology, but they have traditionally been implemented as part of the consensus rules of a blockchain. This often requires creating a new blockchain or sidechain to an existing one. However, a new proposal suggests an alternative method that does not require launching a separate blockchain or sidechain. This new approach can achieve similar security levels to federated sidechains, but it also offers additional benefits to privacy and smart-contract-patching. The proposal involves using Bitcoin's script language to implement the smart-contract functionality. By doing so, users can create their own custom transaction types without having to modify Bitcoin's core code. The proposed method uses a combination of OP_CHECKLOCKTIMEVERIFY (CLTV) and OP_CSV (CHECKSEQUENCEVERIFY) to create a new transaction type called "Vault Transactions". These transactions allow users to lock funds for a specified period and then release them only if certain conditions are met. This is useful for applications such as time-locked payments and escrow services. Furthermore, the new method allows for the creation of "Patchable Smart Contracts", which can be updated by users without requiring a hard fork of the blockchain. This is achieved through the use of a "patching transaction" which modifies the original smart contract. Overall, this proposal offers a new and innovative approach to implementing smart contracts without the need for a separate blockchain or sidechain. It provides enhanced security and privacy features while also allowing for the creation of patchable smart contracts.</summary>
    <published>2019-04-04T01:55:06+00:00</published>
  </entry>
</feed>
