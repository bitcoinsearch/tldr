<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Improving Pre and Post Merging Abilities With Rewriting Core In Python</title>
  <updated>2023-06-13T18:24:03.576120+00:00</updated>
  <author>
    <name>Hampus Sjöberg 2019-04-26 09:38:03</name>
  </author>
  <author>
    <name>Achow101 2019-04-23 15:23:27</name>
  </author>
  <author>
    <name>Hampus Sjöberg 2019-04-26 09:38:03</name>
  </author>
  <author>
    <name>Peter Todd 2019-04-27 03:32:27</name>
  </author>
  <author>
    <name>Ahmer Regos 2019-04-23 08:16:28</name>
  </author>
  <author>
    <name>Achow101 2019-04-23 15:23:27</name>
  </author>
  <author>
    <name>Hampus Sjöberg 2019-04-26 09:38:03</name>
  </author>
  <author>
    <name>Ahmer Regos 2019-04-23 08:16:28</name>
  </author>
  <author>
    <name>Peter Todd 2019-04-27 03:32:27</name>
  </author>
  <author>
    <name>Ahmer Regos 2019-04-23 08:16:28</name>
  </author>
  <author>
    <name>Achow101 2019-04-23 15:23:27</name>
  </author>
  <author>
    <name>Peter Todd 2019-04-27 03:32:27</name>
  </author>
  <link href="bitcoin-dev/April_2019/016895_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016893_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016895_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016896_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016890_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016893_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016895_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016890_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016896_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016890_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016893_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2019/016896_Improving-Pre-and-Post-Merging-Abilities-With-Rewriting-Core-In-Python.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Improving Pre and Post Merging Abilities With Rewriting Core In Python</title>
    <updated>2023-06-13T18:24:03.576120+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-April/016895.html" rel="alternate"/>
    <summary>A proposal to rewrite the Bitcoin codebase in Python for better pre and post merging abilities, faster operations, and improved understandability has been made. However, there are concerns that rewriting the entire codebase from C/C++ to Python would introduce many bugs and be a huge undertaking with almost no benefit. In addition, Python is less efficient than C/C++. While individuals are welcome to port it to Python themselves, Bitcoin Core will not be changing languages for the entire codebase.Ahmer Regos from Regain Beaches is proposing the rewriting of Bitcoin codebase in Python. The proposed rewrite aims to improve pre and post merging abilities, faster operations, and better understandability. Python is a fast language with C support, good syntax, and readability for everyone unlike C++. Ahmer Regos believes that coordinating the transformation operation would be beneficial and getting rid of C++ would be a positive change.In response to the discussion on the Bitcoin-dev mailing list, Peter Todd, the maintainer of python-bitcoinlib, expressed his opinion that using Python for security-critical codebases like Bitcoin is not advisable as it is too easy to make mistakes. Instead, he recommended Rust as a language that offers significant benefits, particularly in its type system and handling of immutability. While Todd's preference for Rust does not preclude other languages being used for similar projects, he believes it fits well with his programming style.Hampus also raised concerns about rewriting the codebase in another language. He believes that a consensus critical system like Bitcoin would be exposed to even greater risks if everything was rewritten in another language. Furthermore, he highlights that consensus problems between Bitcoin Core-versions have already occurred. The email conversation was shared on the bitcoin-dev mailing list on April 23, 2019.</summary>
    <published>2019-04-26T09:38:03+00:00</published>
  </entry>
</feed>
