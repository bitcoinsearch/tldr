<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>IsStandard</title>
  <updated>2023-06-13T18:28:49.800559+00:00</updated>
  <author>
    <name>Aymeric Vitte 2019-04-29 09:30:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>IsStandard</title>
    <updated>2023-06-13T18:28:49.800559+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-April/016899.html" rel="alternate"/>
    <summary>In a Bitcoin-dev mailing list discussion, Aymeric Vitte asks what transactions are considered standard and non-standard without having to read the core code. Luke Dashjr responds that IsStandard is just one of the functions which implement the node's policy and it allows many things for which there is no standard, and can vary freely from node to node without breaking consensus. He also mentions that it should not be given much attention when defining new standards. Instead, it makes more sense to document actual standards instead of documenting IsStandard beyond the code. In response to this, ZmnSCPxj suggests that there is no restriction on what can go in the standard output script, whether legacy or segwit, and provides an example of a scriptSig with the matching segwit address/program. However, a user named OK is still confused and asks why the recovery solution where the scriptsig includes the matching segwit address/program was not a standard transaction, citing the past example of BCH coins being wrongly sent to a segwit address.</summary>
    <published>2019-04-29T09:30:39+00:00</published>
  </entry>
</feed>
