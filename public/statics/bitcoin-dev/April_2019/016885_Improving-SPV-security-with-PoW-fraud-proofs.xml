<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving SPV security with PoW fraud proofs</title>
  <updated>2023-06-13T18:18:07.329652+00:00</updated>
  <author>
    <name>Ruben Somsen 2019-04-20 03:26:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving SPV security with PoW fraud proofs</title>
    <updated>2023-06-13T18:18:07.329652+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-April/016885.html" rel="alternate"/>
    <summary>In a discussion between Ruben Somsen and ZmnSCPxj, the topic of UTXO sets was raised. ZmnSCPxj stated that there is no safe way to use UTXO sets without identifying who is telling you those sets are valid or making it expensive to lie. The first option requires trust and is weaker than SPV, while the second requires committing to a proof-of-work. Ruben Somsen suggested that an alternative to UTXO set commitments could be the old fraud proofs idea for segwit. Miners would commit to the location of the UTXOs being spent, allowing full nodes to succinctly prove invalidity to SPV clients. However, ZmnSCPxj argued that in order to validate block N, all UTXOs spent by transactions in block N must be valid, and the non-existent fraud proof can only be validated by loading the block of the UTXO purported to be spent and every block between that and the current block being verified, i.e. fullnode.</summary>
    <published>2019-04-20T03:26:03+00:00</published>
  </entry>
</feed>
