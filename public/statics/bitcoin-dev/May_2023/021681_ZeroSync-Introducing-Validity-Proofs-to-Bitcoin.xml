<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ZeroSync: Introducing Validity Proofs to Bitcoin</title>
  <updated>2023-06-16T18:29:14.751208+00:00</updated>
  <author>
    <name>Robin Linus 2023-05-12 16:03:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ZeroSync: Introducing Validity Proofs to Bitcoin</title>
    <updated>2023-06-16T18:29:14.751208+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021681.html" rel="alternate"/>
    <summary>In a conversation between Weiji and Robin, the latter explains his plans to implement a SNARK verifier on Bitcoin's base layer. However, he clarifies that this is a long-term option that will take years, and for now, they plan to experiment with Simplicity on the Liquid sidechain when it gets activated. Weiji informs Robin that he proposed a new opcode OP_ZKP to enable the Bitcoin network to verify zkp proofs, which requires a soft fork. Robin acknowledges the proposal but mentions that it is hard to establish consensus over some particular kind of op_snark_verify opcode because there are many competing proof systems with different trade-offs. He goes on to explain that STARKs are great for a chain state proof as they are scalable and allow for processing huge circuits; however, he would not favor STARKs for an on-chain verifier because there are other proof systems, such as Plonky2, with much smaller proof sizes. Robin also highlights that once they have any verifier, they can use it to wrap other proofs. Finally, Robin invites Weiji to join their Telegram group if he would like to chat about SNARKs on Bitcoin.</summary>
    <published>2023-05-12T16:03:06+00:00</published>
  </entry>
</feed>
