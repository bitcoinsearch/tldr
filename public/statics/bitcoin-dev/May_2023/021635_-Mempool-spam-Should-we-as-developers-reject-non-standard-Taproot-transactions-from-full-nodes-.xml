<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Mempool spam] Should we as developers reject non-standard Taproot transactions from full nodes?</title>
  <updated>2023-06-16T18:17:42.786445+00:00</updated>
  <author>
    <name>Erik Aronesty 2023-05-08 20:59:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Mempool spam] Should we as developers reject non-standard Taproot transactions from full nodes?</title>
    <updated>2023-06-16T18:17:42.787446+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021635.html" rel="alternate"/>
    <summary>The Bitcoin network has been experiencing congestion due to side projects such as BRC-20 having high volume, making real Bitcoin transactions expensive and slow. One suggestion to prevent this is to reject any transaction where the fee is higher than the sum of the outputs. However, this would prevent reasonable transfers of value and attempted Lightning channel closes during fee spikes. A response to this suggestion was that it impinges on a valid use case, and requires a consensus rule change. The purpose of paying an on-chain transaction fee greater than the amount receiving could possibly serve is unclear, as there seems to be no non-theoretical benefits to facilitating dust transactions. One possible benefit may be to prevent the other party from having access to the funds should the channel expire. An alternative solution to preventing congestion is to go at the "incentive/economic layer" rather than pointlessly forcing BRC-20 and ordinal users to obfuscate their transactions. By providing a permanent incentive to keep something off of Bitcoin, we can prevent things like real-estate ownership, NFTs, or anything else that isn't using Bitcoin as money from being stored on-chain. It's not desirable to keep these things off of Bitcoin, but if it is, the only sure way to disincentivize it is to go at it in this way or a similar way. All opcode validation suggestions are just silly, as ordinals can time their fork to the same moment and store data in a less efficient, but still functional, way using any number of mechanisms.</summary>
    <published>2023-05-08T20:59:05+00:00</published>
  </entry>
</feed>
