<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Mempool spam] Should we as developers reject non-standard Taproot transactions from full nodes?</title>
  <updated>2023-06-16T18:16:45.223697+00:00</updated>
  <author>
    <name>Michael Folkson 2023-05-08 17:13:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Mempool spam] Should we as developers reject non-standard Taproot transactions from full nodes?</title>
    <updated>2023-06-16T18:16:45.223697+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021627.html" rel="alternate"/>
    <summary>A recent discussion on the bitcoin-dev mailing list has sparked conversation around potential solutions to the current congestion in the Bitcoin mempool. Ali Sherief suggests that side projects such as BRC-20 are causing high volumes of transactions and pricing out real bitcoin transactions, disrupting the harmony of Bitcoin transactions. He proposes taking action through BIPs and/or commits into the Bitcoin Core codebase to curtail the loophole in BIP 342 which has allowed these unintended consequences. However, Erik Aronesty responds by suggesting that it is probably easier to reject any transaction where the fee is higher than the sum of the outputs. Michael Folkson joins the conversation, questioning the impact of this proposal on valid use cases such as closing a Lightning channel during a protracted fee spike. He argues that preventing perfectly reasonable transfers of value would require a consensus rule change. While some may have criticisms about censoring transactions, Sherief believes it is necessary to find a solution that fits everyone's common ground. He suggests that the community indirectly allowed this congestion to happen, and thus has a responsibility to ensure it cannot happen again using Taproot.</summary>
    <published>2023-05-08T17:13:20+00:00</published>
  </entry>
</feed>
