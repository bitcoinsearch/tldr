<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - proposal: new opcode OP_ZKP to enable ZKP-based spending authorization</title>
  <updated>2023-06-16T18:05:31.026351+00:00</updated>
  <author>
    <name>Weiji Guo 2023-04-28 08:29:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-04-30 02:15:50</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-04 15:31:22</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-04 17:13:09</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-05 23:06:51</name>
  </author>
  <author>
    <name>Weiji Guo 2023-04-28 08:29:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-06 02:51:33</name>
  </author>
  <author>
    <name>Weiji Guo 2023-04-28 08:29:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-02 15:01:01</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-01 12:46:30</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-01 12:46:30</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-02 15:01:01</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-06 02:51:33</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-04-30 02:15:50</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-04 15:31:22</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-04 17:13:09</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-05 23:06:51</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-04-30 02:15:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-02 15:01:01</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-04 15:31:22</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-04 17:13:09</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-05 23:06:51</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-01 12:46:30</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-06 02:51:33</name>
  </author>
  <link href="bitcoin-dev/April_2023/021592_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2023/021595_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021612_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021613_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021617_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2023/021592_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021614_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2023/021592_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021608_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021598_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021598_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021608_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021614_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2023/021595_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021612_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021613_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021617_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2023/021595_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021608_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021612_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021613_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021617_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021598_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021614_proposal-new-opcode-OP-ZKP-to-enable-ZKP-based-spending-authorization.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - proposal: new opcode OP_ZKP to enable ZKP-based spending authorization</title>
    <updated>2023-06-16T18:05:31.026351+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021592.html" rel="alternate"/>
    <summary>Bitcoin is considering a proposal for a new opcode, OP_ZKP, to enable zero-knowledge based spending authorization. The proposal covers how it works, security concerns, dealing with system limitations, scalability, ZKP scheme, and curve choices, potential uses, and ecology implications. This would make the Bitcoin script Turing complete, allowing various applications such as payment channels, stablecoins, decentralized exchanges, and DeFi. To ensure security, spending conditions are bound to certain UTXO set, amount, and recipients using the hash of all this information as public input to the proof. Verification keys could be put into configurations and only their hash used in the scriptPubKey to deal with system limitations. Groth16-BN254 is suggested as an initial choice for ZKP schemes and curve choices. There are challenges to overcome, such as maintaining off-network UTXO entries with high security. Ecology implications have also been discussed, with some proofs requiring significant computational power to generate.Weiji, a Bitcoin contributor, has proposed the use of ZKPs in Bitcoin transactions and suggests that specialized computing power vendors could optimize ZKP computations. The verification cost was previously estimated to be high, but Weiji reports that Groth16 verification can be as fast as 1ms while Plonk verification is around 1.6ms. ZKP transactions could be put into the mempool and be open to aggregation by some vendor, but full nodes should verify these transactions as well. Some transactions are meant to be off-chain, such as smart contracts that aggregate many related transactions in an OP_ZKP transaction. In the future, thousands of active smart contracts based on OP_ZKP could exist, each block containing a few hundred OP_ZKP transactions.The issue discussed in this context is the potential attack on non-aggregated transactions. An anonymous attacker can flood the fullnode mempool network with large numbers of non-aggregated transactions and confirm a single aggregated transaction with a lower feerate than what it put in the several non-aggregated transactions. To prevent this attack, transactions that could appear in the mempool should be made non-aggregatable with other transactions. Similarly, cross-input ZKP aggregation would be acceptable but not cross-transaction ZKP aggregation.In a conversation between Weiji and ZmnSCPxj, the possibility of an attack on the fullnode mempool network was discussed. The attack involves flooding the network with non-aggregated transactions and then confirming a single aggregated transaction with a lower feerate in cooperation with a miner. However, ZmnSCPxj argues that this is not a feasible attack as it would require generating proofs for 1000 transactions and paying upfront for 1000*X. Additionally, the aggregation vendor would need to spend more computing power doing the aggregation and take (1000*X - Y) as profit, while the miner receives Y. To prevent overload on the free mempool service, there needs to be a separate, paid aggregator outside the mempool. If aggregation is paid for, it would be sufficient to stop the attack.To prevent an attack on non-aggregated transactions, transactions that could appear in the mempool should be made non-aggregatable with other transactions in the mempool. Signature aggregation is allowed within a single blockchain-level transaction but not across transactions, preventing the attack. It is recommended to disallow aggregation of ZKPs once a transaction is in a form that could potentially hit the mempool and to require paid services for aggregation outside of the unpaid, free mempool.In another conversation between Weiji and ZmnSCPxj, the need to consider system limitations regarding verification keys potentially exceeding the MAX_SCRIPT_ELEMENT_SIZE (520 bytes) was discussed. There is a need to adjust weight units for propagation of verification keys, similar to how `scriptPubKey`s and amounts are included in block data and weighted accordingly. If verification keys are permanent, they should be weighted heavier than `scriptPubKey`s and amounts as UTXOs can theoretically be deleted later by spending them while any data that must be permanently stored in a database must correspondingly be weighted higher. Additionally, if ZKP witnesses translate to higher resource consumption compared to ECC signatures, the weighting of ZKP witnesses should also be higher. They will carry out some benchmarking to recommend a reasonable weight when they start to develop a GitHub PR.Overall, the proposal of OP_ZKP has the potential to revolutionize Bitcoin and enable various applications but requires further discussion and consideration before implementation. Service providers could work with miners to speed up transaction generation or propose a bundle of transactions to be included in a block. Another challenge is figuring out a systematic way for one smart contract to call another, either on-chain or assisted-off-chain through cross-contract APIs and incentivizing computation power vendors. Additionally, some transactions are meant to be off-chain, and those aggregated transactions should not be transmitted within the Bitcoin network and could even be invalid Bitcoin transactions. Usually, the smart contract operator or its community could host</summary>
    <published>2023-04-28T08:29:10+00:00</published>
  </entry>
</feed>
