<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ark: An Alternative Privacy-preserving Second Layer Solution</title>
  <updated>2023-06-16T18:31:21.345013+00:00</updated>
  <author>
    <name>Ali Sherief 2023-05-25 12:12:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ark: An Alternative Privacy-preserving Second Layer Solution</title>
    <updated>2023-06-16T18:31:21.345013+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021715.html" rel="alternate"/>
    <summary>The email thread discusses a proposed Ark protocol for making unconditioned and conditional payments, using atomic transactions that can be settled on-chain or off-chain. The protocol involves Alice, a service provider, broadcasting an unconfirmed transaction every 5 seconds that pays three outputs: Change Output, Connector Output, and Commitment Output. Bob deposits 1 BTC with Alice by sending an unsigned PSBT, which she updates with a commitment output that refunds Bob the 1 BTC and a connector output with a minimum value. Bob can either unilaterally withdraw his funds after a 24-hour delay or collaboratively withdraw them with Alice. Bob can also trade commitments with Alice within four weeks or make unconditioned or conditional payments to Carol. If Bob double-spends a transaction whose funds were later used in a payment to Carol, then Carol loses the money. To prevent this, Alice will want to prove to users that no funds they receive in a payment derive from any deposit less than safe_confirmation_depth blocks. Users are not well-protected during reorgs, so it is suggested that settling transactions on L1 as final after 3 to 6 blocks, similar to how miners cannot spend coinbase transactions for 100 blocks, could mitigate the issue.</summary>
    <published>2023-05-25T12:12:43+00:00</published>
  </entry>
</feed>
