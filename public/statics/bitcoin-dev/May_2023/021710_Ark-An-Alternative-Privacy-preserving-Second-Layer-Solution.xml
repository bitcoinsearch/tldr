<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ark: An Alternative Privacy-preserving Second Layer Solution</title>
  <updated>2023-06-16T18:32:39.155770+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-05-24 00:45:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ark: An Alternative Privacy-preserving Second Layer Solution</title>
    <updated>2023-06-16T18:32:39.155770+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021710.html" rel="alternate"/>
    <summary>In this email exchange on the bitcoin-dev mailing list, ZmnSCPxj explains the risks of designing a non-custodial L2 payment system and why competent coders test their code for footguns before deploying in production. He also highlights the dangers of relying on 0-conf transactions, both in Lightning and in the case of swap-ins. In particular, he notes that while users can pay lightning invoices with their zero-conf vTXOs, ASPs can double-spend their pool transaction and prevent recipients from actually being able to rely on any received funds existing until the next pool transaction is confirmed. On the other hand, in the collaborative case, once confirmed, the LSP can no longer attack you.</summary>
    <published>2023-05-24T00:45:49+00:00</published>
  </entry>
</feed>
