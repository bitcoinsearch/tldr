<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Witness script validation to reject arbitrary data</title>
  <updated>2023-06-16T18:24:56.127362+00:00</updated>
  <author>
    <name>Peter Todd 2023-05-08 23:55:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Witness script validation to reject arbitrary data</title>
    <updated>2023-06-16T18:24:56.127362+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021633.html" rel="alternate"/>
    <summary>The current discussion on bitcoin-dev mailing list is about the limitation of inscriptions protocol which only allows inserting data between OP_FALSE and OP_IF flags. The author suggests implementing a validation check to reject witness scripts that have arbitrary data between these two flags so that inscriptions can be rejected while still allowing all the benefits of taproot. However, the responder argues that blocking such use cases is hopeless and there are endless ways to embed arbitrary data in Bitcoin transactions. The current flood of inscription txs is very small and could have easily used other data encoding techniques. Additionally, the purpose of the current flood of BRC-20 inscriptions - the creation of a new set of assets via an auction - doesn't even require any data to be embedded in the chain at all. It could have been implemented with perfectly normal transactions indistinguishable from any other transaction.</summary>
    <published>2023-05-08T23:55:57+00:00</published>
  </entry>
</feed>
