<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ark: An Alternative Privacy-preserving Second Layer Solution</title>
  <updated>2023-06-16T18:32:18.863639+00:00</updated>
  <author>
    <name>G. Andrew Stone 2023-05-23 22:06:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ark: An Alternative Privacy-preserving Second Layer Solution</title>
    <updated>2023-06-16T18:32:18.863639+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021708.html" rel="alternate"/>
    <summary>A member of the bitcoin-dev mailing list requested for a detailed architecture write-up that includes mechanisms like bitcoin scripts, transactions, and L2 protocols. In response, Burak Keceli explained how ASPs may fail to forward Lightning payments on the broader network after being replaced in-mempool transactions. However, he also noted that this is not an issue if the HTLC(s) are forwarded before double-spending the pool transaction. He then highlighted the collaborative feature of Ark, which allows users to pay lightning invoices with their zero-conf vTXOs without waiting for on-chain confirmations. In contrast, swap-ins require users to wait for on-chain confirmations before revealing their preimage of the HODL invoice to avoid double-spending their zero-conf HTLC.</summary>
    <published>2023-05-23T22:06:02+00:00</published>
  </entry>
</feed>
