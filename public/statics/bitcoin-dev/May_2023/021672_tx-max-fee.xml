<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>tx max fee</title>
  <updated>2023-06-16T18:23:08.950992+00:00</updated>
  <author>
    <name>Andrew Baine 2023-05-11 15:20:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>tx max fee</title>
    <updated>2023-06-16T18:23:08.950992+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021672.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around changing the "max fee" of a transaction to output amounts. The proposal is to reject any transaction where the fee is higher than the sum of the outputs. However, it is argued that this rule can easily be worked around by adding inputs from one's own wallet or borrowing them and returning them with interest. Another use case for paying more fees than outputs is to incentivize honest mining during a state-level censorship attack. It is suggested that instead of changing the "max fee" rule, a better solution would be to introduce op_ctv which allows many users to pool fees and share a single utxo. It is noted that even if the "max fee" rule were changed, it could still be avoided by splitting the transaction into multiple transactions, each paying one satoshi per virtual byte. Furthermore, it is explained that maintaining balances and using change addresses would not be a deterrent as the transactions could be prepared upfront as part of the protocol and released all at once. This can be achieved through HD wallets, which only require storing a single key and generating addresses as needed.</summary>
    <published>2023-05-11T15:20:43+00:00</published>
  </entry>
</feed>
