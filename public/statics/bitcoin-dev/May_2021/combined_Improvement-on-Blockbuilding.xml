<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Improvement on Blockbuilding</title>
  <updated>2023-06-14T22:13:27.595592+00:00</updated>
  <author>
    <name>Murch 2021-05-25 14:27:06</name>
  </author>
  <author>
    <name>Antoine Riard 2021-05-29 06:32:53</name>
  </author>
  <author>
    <name>Murch 2021-05-25 14:27:06</name>
  </author>
  <author>
    <name>Antoine Riard 2021-05-29 06:32:53</name>
  </author>
  <author>
    <name>Murch 2021-05-25 14:27:06</name>
  </author>
  <author>
    <name>Jorge Timón 2021-05-29 15:04:57</name>
  </author>
  <author>
    <name>Antoine Riard 2021-05-29 06:32:53</name>
  </author>
  <author>
    <name>Jorge Timón 2021-05-29 15:04:57</name>
  </author>
  <author>
    <name>Jorge Timón 2021-05-29 15:04:57</name>
  </author>
  <link href="bitcoin-dev/May_2021/019020_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019039_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019020_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019039_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019020_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019040_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019039_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019040_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2021/019040_Improvement-on-Blockbuilding.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Improvement on Blockbuilding</title>
    <updated>2023-06-14T22:13:27.595592+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-May/019020.html" rel="alternate"/>
    <summary>A group of developers has suggested an alternative algorithm to improve the current Bitcoin Core block building algorithm. Their proposed approach, called Candidate Set-based Block Building (CSB), groups multiple descendant transactions with their shared ancestors to form a more attractive transaction set for block inclusion. This is in contrast to the current straightforward greedy algorithm that evaluates each transaction's effective fee rate in the context of its unconfirmed ancestors. Experimental data shows that CSB performs better than the current algorithm on more than 94% of blocks and 99% during times of high congestion.The developers note that LP solvers did slightly better than their proposed algorithm but at the cost of longer running times. However, Greg Maxwell's past research suggests that better running times are possible with LP solvers. The full details of the proposal can be found in a document provided by the developers, and they welcome any comments, criticisms, or suggestions. The research code for the proposed algorithm is also available on Github.Although CSB may improve feerate performance if transaction graphs with multiple disjunctive branches become regular in the future, there are concerns about potential DoS attacks due to its complexity and increased computation requirements. There is also the issue of malicious miners using hard-to-traverse CPFP constellations to prevent competitors from assembling block templates or slowing down their computation. It remains to be seen how much CSB makes such attacks possible/efficient.Antoine raises some questions and concerns about the proposal, including whether CSB feerate performance will improve as transaction graphs with multiple disjunctive branches become more regular in the future. He also brings up the issue of encouraging the creation of additional transactions for the sole purpose of bumping stuck ancestors if miners generally became DPFA-sensitive. As ASB's ancestor set and CSB's candidate set, a fee bidder would have to pay the feerate to cover the new transaction fields, high enough to catch up with the already-present feerate set. It might be more fee-rate efficient to RBF the first child, but there is a replacement feerate penalty to consider.</summary>
    <published>2021-05-25T14:27:06+00:00</published>
  </entry>
</feed>
