<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Improvement on Blockbuilding</title>
  <updated>2023-05-21T02:36:01.474023+00:00</updated>
  <author>
    <name>Murch 2021-05-25 14:27:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Improvement on Blockbuilding</title>
    <updated>2023-05-21T02:36:01.474023+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-May/019020.html" rel="alternate"/>
    <summary>A suggestion has been made to improve the current Bitcoin Core block building algorithm by a group of developers. They propose an alternative algorithm that considers grouping multiple descendant transactions with their shared ancestors to form a more attractive transaction set for block inclusion. The current straightforward greedy algorithm overlooks such situations and only evaluates each transaction's effective fee rate in the context of its unconfirmed ancestors. To illustrate, four transactions A, B, C, and D are used as an example along with their fee rates and weights. B is a descendant of A, C is a descendant of B, and D is a descendant of A. The current algorithm would consider {A,B,C} best with an effective fee rate of 10, while the suggested algorithm would also consider {A,B,C,D} which has an effective fee rate of 11. Experimental data shows that the proposed algorithm performs better than the current algorithm on more than 94% of blocks and 99% during times of high congestion.The full details of the proposal can be found in a document provided by the developers, and they welcome any comments, criticisms, or suggestions. The research code for the proposed algorithm is also available on Github. The developers note that LP solvers did slightly better than their proposed algorithm but at the cost of longer running times. However, Greg Maxwell's past research suggests that better running times are possible with LP solvers.</summary>
    <published>2021-05-25T14:27:06+00:00</published>
  </entry>
</feed>
