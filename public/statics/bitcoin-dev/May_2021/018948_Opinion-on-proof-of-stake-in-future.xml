<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Opinion on proof of stake in future</title>
  <updated>2023-06-14T21:15:22.598909+00:00</updated>
  <author>
    <name>Erik Aronesty 2021-05-17 16:58:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Opinion on proof of stake in future</title>
    <updated>2023-06-14T21:15:22.598909+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-May/018948.html" rel="alternate"/>
    <summary>Verifiable Delay Functions (VDFs) are a cryptographic tool that can be used to regulate block times in a proof-of-burn blockchain. However, they require active participation of a single verifier, which in this case is the Bitcoin network as a whole. The verification input could be based on some difficult-to-game property of the last N blocks, such as the hash of the last 100 block-ids. The VDF is calculated by all eligible proof-of-burn miners and is used to prevent timing issues. Although VDFs typically lead to a CPU-speed monopoly, this would only be helpful for block latency in a proof-of-burn chain. Block height would be calculated by eligible-miner-burned-coins, so the monopoly could be easily avoided. There has been some prior work on blind/uncensorable burns. A miner would reveal the VDF and proof-of-burn as part of a block, and nodes would select the block with a valid VDF and the highest qualified proof-of-burn.Despite most burns running at a loss and no way to predict the next winning burn, the VDF provides timing, making it not worse than Bitcoin's existing system. Some promising developments with VDFs make it possible to solve block regulation problems without requiring brute-force search proof-of-work. More information about VDFs can be found in a Medium article provided in the context link.</summary>
    <published>2021-05-17T16:58:59+00:00</published>
  </entry>
</feed>
