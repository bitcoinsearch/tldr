<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for an Informational BIP</title>
  <updated>2023-06-14T21:47:18.655484+00:00</updated>
  <author>
    <name>Tobias Kaupat 2021-05-09 22:53:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for an Informational BIP</title>
    <updated>2023-06-14T21:47:18.655484+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-May/018912.html" rel="alternate"/>
    <summary>The email conversation between Tobias and Chris revolves around the latter's proposal for an optional method of producing a BIP39 passphrase, using only BIP39 'mnemonic' seed words. This method is referred to as a 'quantum' passphrase and is described in detail in the email. The 'quantum' passphrase offers an exponential increase in the level of protection, as that offered by the original BIP39 mnemonic seed words (â‰ˆ2048^23 possible combinations). With existing computer capabilities, this level of protection is far greater than required; however, it does provide a sufficient level of protection for each separate layer of a two-factor Bitcoin wallet, should any one layer be accidentally exposed. The well-established practice of preserving up to 24 seed words for the purpose of reproduction of a Bitcoin wallet suffers from a major flaw: exposure of these mnemonic seed words can cause catastrophic loss of funds without adequate multi-factor protection. Whilst it is recognised that a number of multi-factor solutions are available (including the standard BIP39 passphrase, and hardware wallet multi-signature functionality), this proposal aims to provide an extremely safe and secure 'low-tech' option that requires minimal (non-destructive) adjustments to the seed words. The email also discusses issues such as plausible deniability, compatibility with BIP39, and the 'chicken-egg' problem. Furthermore, the email highlights the advantages of the 'quantum' passphrase over existing methods of multi-factor protection. The large amount of data required to produce a 'quantum' passphrase (up to 96 characters long) encourages the physical backup of the passphrase.Generating the 'quantum' passphrase involves following just four (non-destructive) BIP39-compatible rules. In essence, the 'quantum' passphrase is simply a single string of all 24 seed words, set out using the above rules. Chris welcomes productive technical discussion on his proposal.</summary>
    <published>2021-05-09T22:53:51+00:00</published>
  </entry>
</feed>
