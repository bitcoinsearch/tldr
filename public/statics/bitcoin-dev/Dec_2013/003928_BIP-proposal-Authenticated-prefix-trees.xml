<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP proposal: Authenticated prefix trees</title>
  <updated>2023-06-07T22:41:00.341631+00:00</updated>
  <author>
    <name>Mark Friedenbach 2013-12-20 11:21:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP proposal: Authenticated prefix trees</title>
    <updated>2023-06-07T22:41:00.341631+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003928.html" rel="alternate"/>
    <summary>In this email, Mark proposes the application-oriented BIPs to Jeremy. Stateless validation and mining involve prefixing transaction and block messages with proofs of their UTxO state changes. Ultimate blockchain compression involves consensus over an address index, which can be queried over the p2p network by lightweight nodes. The structure of the index is an authenticated prefix tree, and the results of such a query are an inclusion proof. Both document time-stamping and merged mining use the same structure: a prefix tree whose root hash value is committed to a pruneable output of the coinbase transaction. Mark believes that these BIPs directly affect interoperability of the bitcoin protocol and clients which use these applications. He released this BIP first to get some feedback on the structure itself, which will be used by all of the application-specific BIPs which follow. The purpose of a BIP as Mark sees it is to standardize details which affect interoperability between clients. Even if none of the applications involved protocol changes, he still thinks BIPs like this would be of value in that they serve to standardize things which are or will seek to become commonly used and widely implemented.Jeremy finds the proposals interesting and asks whether the BIP can stand alone without specific changes to the protocol or end-user accessible features defined within it. It seems like an extremely useful data structure, but as he understands it, the purpose of BIPs is defining interoperability points, not implementation details. Unless the tree itself is becoming part of the protocol, its specification, test vectors, and reference implementation can live elsewhere. However, he would love to read about BIPs which use this tree to accomplish some amazing scalability or security benefits.</summary>
    <published>2013-12-20T11:21:38+00:00</published>
  </entry>
</feed>
