<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Floating fees and SPV clients</title>
  <updated>2023-06-07T21:36:59.233001+00:00</updated>
  <author>
    <name>Peter Todd 2013-12-03 11:31:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Floating fees and SPV clients</title>
    <updated>2023-06-07T21:36:59.233001+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003776.html" rel="alternate"/>
    <summary>In this email conversation, Mike Hearn proposes some changes to Bitcoin transactions. The first change is to include output value in the signature of v2 transactions (this proposal has been on forums for a while), which will allow fee data to be cross-checked against input signatures. Secondly, there are proposals for a new transaction format that commits to transaction inputs and outputs via a merkle tree, committed to via the merge-mine standard. This makes the discussion around trying to figure out transaction fees based on transaction irrelevant if you suppose a soft-fork. Mike also notes that it is desirable for another related soft-fork to include a sorted list of txids and/or H(scriptPubKey)â€™s in a block, as it would be easy and low-bandwidth for SPV nodes to get proof of inclusion or exclusion. Propagation failures are not a major problem if transactions can be rebroadcast with new, higher fees; propagation failures can be detected easily and quickly. Finally, anti-sybil techniques that create long-term identities can show that a peer lied about the data required for fee estimates anyway.</summary>
    <published>2013-12-03T11:31:17+00:00</published>
  </entry>
</feed>
