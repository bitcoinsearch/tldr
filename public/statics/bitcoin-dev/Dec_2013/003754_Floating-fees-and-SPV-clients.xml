<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Floating fees and SPV clients</title>
  <updated>2023-06-07T21:42:18.576508+00:00</updated>
  <author>
    <name>Mike Hearn 2013-12-01 13:41:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Floating fees and SPV clients</title>
    <updated>2023-06-07T21:42:18.576508+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003754.html" rel="alternate"/>
    <summary>The idea of bumping up the fee for an unconfirmed transaction can be risky as malicious nodes could send reject messages to wallets and attach ridiculously high fees. This could result in double spending against itself, leading to complexity in wallet GUI and imbalanced balance. Though it could help if all nodes reject a transaction, the UI flows for that would still be confusing. Moreover, due to mempool skew, estimated fees may not propagate cleanly everywhere, leading to unpredictable failures to enter the mempools which could lead to double spending and slow confirmations. Wallet authors may be tempted to add 10% to the estimated fee to avoid this but if popular wallets do the same thing, it could lead to an infinite upward spiral. Therefore, just pushing the complexity onto the merchant side is not a solution.</summary>
    <published>2013-12-01T13:41:52+00:00</published>
  </entry>
</feed>
