<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: MERGE transaction/script/process for forked chains</title>
  <updated>2023-06-07T22:33:20.822585+00:00</updated>
  <author>
    <name>Troy Benjegerdes 2013-12-17 22:41:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: MERGE transaction/script/process for forked chains</title>
    <updated>2023-06-07T22:33:20.822585+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003910.html" rel="alternate"/>
    <summary>The author seeks feedback on the equivalent of merging forks in distributed version control systems for Bitcoin or other cryptocurrencies. They pose a scenario where they are 'islanded' from the internet but still want to trade Bitcoin, and suggest that local miners could facilitate this until reconnected. The author further explains the concept of Merge transactions, wherein a miner looks at a forked blockchain and includes both chains if no double-spends exist. However, in case of a buggy client or a double-spend transaction, a merge conflict arises, requiring human intervention. To address this issue, the author suggests broadcasting a MERGE request with a transaction fee sufficient to cover reconciling the double-spends and incentivizing a miner to do extra work to merge.</summary>
    <published>2013-12-17T22:41:30+00:00</published>
  </entry>
</feed>
