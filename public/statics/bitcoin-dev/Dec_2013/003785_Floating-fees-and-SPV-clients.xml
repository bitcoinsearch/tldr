<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Floating fees and SPV clients</title>
  <updated>2023-06-07T21:33:34.899192+00:00</updated>
  <author>
    <name>Jamie McNaught 2013-12-03 13:20:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Floating fees and SPV clients</title>
    <updated>2023-06-07T21:33:34.899192+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003785.html" rel="alternate"/>
    <summary>The author of the post is a C/C++ software engineer who has been pitching Bitcoin to merchants and end-users for the past few months. While he agrees with transparency in fees, he notes that users generally dislike fees and suggests an optional uint64 minfee that senders should deduct from the total paid to the receiver. He also asks how the receiver/merchant can enforce these fee requests. In response to the post, Peter Todd stresses the importance of transparency in fees from a marketing perspective. He believes that being upfront and honest about Bitcoin transaction fees will demystify the system and give people confidence to tell others about the cost-advantages of Bitcoin. Todd also notes that informing users of estimated costs to send a transaction in a reasonable amount of time is reasonable. Taylor Gerring voices concern over the idea of having two classes of transactions and argues that transactions should work the same regardless of who is on the receiving end. Mike Hearn suggests that it may be acceptable for receivers to not always receive exactly what they requested, at least for person-to-business transactions. However, he acknowledges that any fee at all for person-to-person transactions can be confusing because users expect to receive the full amount they sent.</summary>
    <published>2013-12-03T13:20:11+00:00</published>
  </entry>
</feed>
