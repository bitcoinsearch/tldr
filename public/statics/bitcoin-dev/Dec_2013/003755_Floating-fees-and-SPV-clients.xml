<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Floating fees and SPV clients</title>
  <updated>2023-06-07T21:42:33.096892+00:00</updated>
  <author>
    <name>Andreas Schildbach 2013-12-01 16:50:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Floating fees and SPV clients</title>
    <updated>2023-06-07T21:42:33.096892+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003755.html" rel="alternate"/>
    <summary>In this post, Mike Hearn suggests that apps can offer to increase the fee for a transaction that has not yet been confirmed. However, there are risks associated with this approach that he is not familiar with due to lack of experience with game theory. In terms of the user interface, Hearn suggests measuring the time pending transactions have not been broadcast-confirmed and counting blocks they missed being included to provide statistics via bitcoinj. Additionally, he suggests implementing a “Revoke” button for outgoing transactions if it is clear they will never be confirmed, which could replace the transaction with a new one if a “Top up fee” button were also implemented. Despite the possibility of a double spend, this wouldn't matter as long as only one of the two transactions gets into the chain.</summary>
    <published>2013-12-01T16:50:10+00:00</published>
  </entry>
</feed>
