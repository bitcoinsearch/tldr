<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Forcenet: an experimental network with a new header format</title>
  <updated>2023-06-11T20:45:23.319983+00:00</updated>
  <author>
    <name>Tier Nolan 2016-12-14 16:26:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Forcenet: an experimental network with a new header format</title>
    <updated>2023-06-11T20:45:23.319983+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013377.html" rel="alternate"/>
    <summary>In this email exchange, Johnson Lau suggests a better way for fraud proofs by making the sum tree as an independent tree with a separate commitment, and define a special type of softfork. One of the problems with fraud proofs is withholding by miners, so it is important that proof of publication/archive nodes check that the miners are actually publishing their blocks. If the data is placed in another tree, then care needs to be taken that the merkle path information can be obtained for that tree. When the softfork is activated, the legacy full node will stop validating the sum tree, which doesnâ€™t really degrade the security by more than a normal softfork. Signature aggregation will make the problem of the weight ratio bigger as one signature may spend thousands of sigop. The weight and sigop count could be transmitted as variable length integers. On an unrelated note, the two costs could be combined into a unified cost. It sums up sigops, block size, block cost (that is "weight" right?) and fees.</summary>
    <published>2016-12-14T16:26:58+00:00</published>
  </entry>
</feed>
