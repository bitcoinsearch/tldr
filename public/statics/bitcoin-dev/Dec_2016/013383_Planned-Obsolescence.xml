<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Planned Obsolescence</title>
  <updated>2023-06-11T20:56:52.498422+00:00</updated>
  <author>
    <name>Ethan Heilman 2016-12-15 22:44:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Planned Obsolescence</title>
    <updated>2023-06-11T20:56:52.498422+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013383.html" rel="alternate"/>
    <summary>The Bitcoin community is concerned about nodes running vulnerable versions of bitcoind. Such nodes may be susceptible to known exploits, which raises the question of how difficult it would be to crawl the network to find exploitable nodes and what percentage of the network is running vulnerable versions. Additionally, older nodes may become ripe for an eclipse attack because they are partitioned from newer nodes if they have a version below MIN_PEER_PROTO_VERSION. The solution proposed is that after a grace period, obsolete nodes should still connect and transmit blockheaders, but stop sending full-blocks and transactions to alert the operator that something is wrong and prompt them to upgrade. There is also a discussion surrounding planned obsolescence in each new version of Bitcoin Core to avoid fragmentation and more predictable protocol improvement processes. However, this introduces anti-features that can be easily removed and therefore may not be effective. A simpler solution may be to stop maintaining and giving support for older versions as developers are rarely interested in fixing bugs for very old versions.</summary>
    <published>2016-12-15T22:44:55+00:00</published>
  </entry>
</feed>
