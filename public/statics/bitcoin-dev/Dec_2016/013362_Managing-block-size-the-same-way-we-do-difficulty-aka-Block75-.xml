<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Managing block size the same way we do difficulty (aka Block75)</title>
  <updated>2023-06-11T20:51:51.628764+00:00</updated>
  <author>
    <name>Andrew Johnson 2016-12-11 20:38:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Managing block size the same way we do difficulty (aka Block75)</title>
    <updated>2023-06-11T20:51:51.629763+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013362.html" rel="alternate"/>
    <summary>In a discussion on the Bitcoin-dev mailing list, a user pointed out that miners could create thousands of transactions paying to themselves and not broadcast them to the network. The fees would be collected by the miner because the transactions are included in a block that they had mined. This attack would be free of cost if the network isn't heavily partitioned. However, this sort of attack would not last long as other miners would have an incentive to intentionally orphan blocks that contained a large number of transactions that their nodes were unaware of. The user also argued that even if bandwidth continually increased and disk space costs decreased, the hard limit of the maximum block size cannot grow to an unlimited value due to the validation cost in time for each block. For the health of the network, any node should be able to download and validate a block before the next block gets mined. The user suggested that a permanent solution is preferred rather than increasing the max block size dynamically, which they considered as "kicking the can down the road".</summary>
    <published>2016-12-11T20:38:27+00:00</published>
  </entry>
</feed>
