<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pay to signature hash as a covenant</title>
  <updated>2023-06-15T20:19:33.665305+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-05-03 09:35:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pay to signature hash as a covenant</title>
    <updated>2023-06-15T20:19:33.665305+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020412.html" rel="alternate"/>
    <summary>The writer proposes using covenants without consensus changes by requiring a specific signature. They suggest using P2PK and legacy signatures but note that Schnorr signatures will be more flexible and allow more use cases. The proposal is to use P2WSH with a redeemScript including OP_CHECKSIG, which would pre-commit to a particular transaction depending on the SIGHASH flags of the fixedSignature. The post-COVID congestion control application proposed for OP_CTV could work in the absence of OP_CTV. A purported OP_CHECKSIGHASHVERIFY which accepts a SIGHASH flag and a hash, and checks that the sighash of the transaction is equal to the hash, would be more efficient and would not differ much from OP_CTV. This technique should work with Tapscripts inside Taproot, but the fixedPubKey cannot be the same as the internal Taproot key.</summary>
    <published>2022-05-03T09:35:31+00:00</published>
  </entry>
</feed>
