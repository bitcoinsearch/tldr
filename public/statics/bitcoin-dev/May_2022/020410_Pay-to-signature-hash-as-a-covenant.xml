<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Pay to signature hash as a covenant</title>
  <updated>2023-05-22T19:55:45.391910+00:00</updated>
  <author>
    <name>vjudeu at gazeta.pl 2022-05-03 07:37:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Pay to signature hash as a covenant</title>
    <updated>2023-05-22T19:55:45.391910+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020410.html" rel="alternate"/>
    <summary>The author of the context is exploring the possibility of using covenants in a pay-to-public-key (P2PK) scenario without requiring any consensus changes. They are experimenting with P2PK and legacy signatures, but believe that Schnorr signatures will be more flexible and allow for more use cases. They propose a "pay to signature" script using OP_SWAP and OP_CHECKSIG, but acknowledge that it is insecure. They suggest replacing it with a signature hash, which would be untouched, and discuss the flexibility of signatures over public keys. The author believes that if the right signature with the correct sighashes were used, it could be possible to disable key recovery and require a specific public key, which could restrict the destination address. They are open to ideas on how to complete this puzzle and suggest combining it with OP_CHECKSIGADD or wrapping it in multisig.</summary>
    <published>2022-05-03T07:37:20+00:00</published>
  </entry>
</feed>
