<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Conjectures on solving the high interactivity issue in payment pools and channel factories</title>
  <updated>2023-06-15T19:58:33.751058+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-05-10 16:45:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Conjectures on solving the high interactivity issue in payment pools and channel factories</title>
    <updated>2023-06-15T19:58:33.751058+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020456.html" rel="alternate"/>
    <summary>In an email exchange between Billy and ZmnSCPxj, the issue of partitioning was discussed. ZmnSCPxj argued that there are issues with the kind of partitioning being talked about, citing the fact that Lightning works because all participants sign all offchain states, which ensures that relevant state for each participant isn't changed to their detriment. He, however, suggested two techniques for solving this problem. One of the techniques involves creating sub-pools that can be used by sub-pool participants later without the whole group's involvement. The other technique involves reducing the disruption if any one pool participant is down by having each sub-pool have only two participants each. Billy responded by asking if this wasn't just basically channel factories. ZmnSCPxj agreed and further explained that a large multi-participant pool with sub-pools is just a channel factory for a bunch of channels. He then expressed his liking for the idea because it has good tradeoffs.</summary>
    <published>2022-05-10T16:45:19+00:00</published>
  </entry>
</feed>
