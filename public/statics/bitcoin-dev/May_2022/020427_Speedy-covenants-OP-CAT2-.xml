<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Speedy covenants (OP_CAT2)</title>
  <updated>2023-05-22T19:59:21.919850+00:00</updated>
  <author>
    <name>Jorge Tim√≥n 2022-05-06 22:30:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Speedy covenants (OP_CAT2)</title>
    <updated>2023-05-22T19:59:21.919850+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020427.html" rel="alternate"/>
    <summary>The OP_CAT has been removed and there have been speculations that it was because of its potential to enable covenants. While there were no technical concerns with the OP, covenants were previously deemed too risky due to certain attacks they could enable. However, opinions on the benefits versus the dangers have changed as more use cases have been considered. Re-enabling OP_CAT would require a hard fork, but creating a new OP_CAT2 that does the same thing would only need a soft fork. The speedy covenants proposal has been implemented for the longest time and is simpler than other covenant proposals. It should be easier to deploy in a speedy manner. However, some argue that the simplicity proposal is the best among all the covenant proposals, including speedy covenants. This proposal introduces a complete new scripting language that is better in many senses. Despite its name, the simplicity proposal is harder to review and test than other proposals. Overall, there are arguments both for and against deploying speedy covenants and the simplicity proposal in Bitcoin.</summary>
    <published>2022-05-06T22:30:01+00:00</published>
  </entry>
</feed>
