<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Wallet policies for descriptor wallets</title>
  <updated>2023-06-15T20:24:32.588383+00:00</updated>
  <author>
    <name>Salvatore Ingala 2022-05-17 08:44:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Wallet policies for descriptor wallets</title>
    <updated>2023-06-15T20:24:32.588383+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020492.html" rel="alternate"/>
    <summary>The author of a wallet policy proposal has provided some additional practical examples and clarifications based on feedback received. They demonstrate that it is easy to convert from wallet policies to descriptors and back, and argue that aliases are better left out of descriptors in real-world usage. The post includes a gist with demos of conversions from wallet policies to descriptors and back, and notes that while software wallets may prefer working directly with wallet policies, automated tools for conversion could aid interoperability with tools that do not adopt wallet policies. The post also provides several examples of miniscript policies, along with the corresponding miniscript descriptors, wallet templates, and vectors of keys that comprise the complete "wallet policy". The examples include either of two keys (equally likely), either of two keys but one more likely than the other, a 3-of-3 that turns into a 2-of-3 after 90 days, the BOLT #3 received HTLC policy, a taproot complex script (2-of-2 with cold backup and timelocked inheritance), and a taproot complex script with MuSig2. The examples use the `/**` notation as a shortcut for `//*`.</summary>
    <published>2022-05-17T08:44:53+00:00</published>
  </entry>
</feed>
