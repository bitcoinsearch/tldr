<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Speedy covenants (OP_CAT2)</title>
  <updated>2023-06-15T20:33:21.313629+00:00</updated>
  <author>
    <name>Jorge Tim√≥n 2022-05-07 13:27:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Speedy covenants (OP_CAT2)</title>
    <updated>2023-06-15T20:33:21.313629+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020436.html" rel="alternate"/>
    <summary>The discussion revolves around the removal of OP_CAT from Bitcoin and its association with covenants. The reason for the removal of OP_CAT was due to its behavior leading to 2^N memory usage. Covenants were first expressed as a possibility during discussions around P2SH when the problem of k-of-n multisignature arose. The sender is paying for the security of the receiver, which was considered unfair. Thus, `OP_EVAL` and the P2SH concept was conceived. `OP_EVAL` could be used to create recursive scripts by quining using `OP_CAT`, but people were talking about re-enabling it somehow by restricting the output size of `OP_CAT`. Because of concerns related to recursive covenants, the modern P2SH is now "just a template" with an implicit `OP_EVAL` of the redeemScript but without any `OP_EVAL` being actually enabled.</summary>
    <published>2022-05-07T13:27:16+00:00</published>
  </entry>
</feed>
