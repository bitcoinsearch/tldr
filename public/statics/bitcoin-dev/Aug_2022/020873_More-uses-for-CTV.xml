<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>More uses for CTV</title>
  <updated>2023-06-15T23:46:47.356761+00:00</updated>
  <author>
    <name>Jeremy Rubin 2022-08-19 21:01:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>More uses for CTV</title>
    <updated>2023-06-15T23:46:47.356761+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020873.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around the advantages of Commitment Transaction Verification (CTV) compared to presigned transactions for trustless collaboration between multiple parties. While CTV is considered the most parsimonious way to settle into a single output, presigned transactions have their own benefits, such as payment using P2WPKH output and better privacy enhancement. In-script commitments can be done using a non-secret point, reducing the amount of state that needs to be stored, and it can be deterministic. For large protocol trees, savings can be substantial. Rene has demonstrated that latency in generating state transitions has a significant cost to the efficiency of routing. Back-filling is another option where the best of both versions can be used by lazily backfilling with an equivalent p2wpkh version. The size limitation on coinbase outputs limits the number of participants in mining pools, but paying into batches of channels can compress payouts without a custodial relationship, as shown in a blog post by Jeremy Rubin.</summary>
    <published>2022-08-19T21:01:25+00:00</published>
  </entry>
</feed>
