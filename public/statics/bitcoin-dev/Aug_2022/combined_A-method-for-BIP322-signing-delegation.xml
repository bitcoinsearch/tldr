<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A method for BIP322 signing delegation</title>
  <updated>2023-06-15T23:45:10.037855+00:00</updated>
  <author>
    <name>Ali Sherief 2022-08-16 04:38:47</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-22 07:56:12</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-14 04:25:33</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-19 06:23:38</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-22 07:56:12</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-22 07:56:12</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-14 04:25:33</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-14 04:25:33</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-19 06:23:38</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-16 04:38:47</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-16 04:38:47</name>
  </author>
  <author>
    <name>Ali Sherief 2022-08-19 06:23:38</name>
  </author>
  <link href="bitcoin-dev/Aug_2022/020855_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020884_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020853_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020868_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020884_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020884_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020853_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020853_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020868_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020855_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020855_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020868_A-method-for-BIP322-signing-delegation.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A method for BIP322 signing delegation</title>
    <updated>2023-06-15T23:45:10.037855+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020855.html" rel="alternate"/>
    <summary>This post discusses two proposals related to BIP322. The first proposal aims to solve the problem of Proof of Payment in P2P transactions by using a P2WSH 2-of-2 multisig approach, which allows both parties to sign a BIP322 message from their respective addresses and publish both signatures on the blockchain. This solution helps to prove who paid whom, making it verifiable to the public.The second proposal aims to solve the delegation problem in BIP322 by using a multisig approach that makes possible delegatees known at signing time. This involves using a 1-of-N standard P2WPKH multisig, where N is the number of people who can create the signature and their respective public keys are included in the script. The challenge solution in "to_sign" is then replaced with a witness stack containing n ... 1 0, and the signature is generated as if it were for a real P2WPKH-multisig transaction.This proposal offers several advantages including no recursive transactions, provable address verification, no new algorithms or opcodes introduced, no soft-fork required, and signature fraud is still impossible to carry out. However, there are some disadvantages such as everyone knowing the public keys of delegators, which compromises privacy; but this is considered a non-issue in light of the signature fraud problem. Furthermore, Taproot is not widely deployed in applications yet.To avoid revealing unspent public keys, some have suggested writing this delegation scheme in TapScript. Single leaf k-of-n multisig is functionally identical to "Using a single OP_CHECKSIGADD-based script" described in BIP 0342, footnote 5, but it won't hide the non-signing public keys. That leaves multi-leaf k-of-k multisig, which swells as k increases, but for the purposes of delegation, K will always be 1 because we only utilize 1-n multisig signatures as per the previous message.Both proposals are built on Jeremy Rubin's transaction delegation post and allow for various purposes such as Lightning Network, CoinJoin, Mixers, and Silent Payments. The FAQ section clarifies how the delegation works and how to verify a delegated BIP322 transaction if the address-hash is private. Input from others, particularly from luke-jr who participated in the original Github discussion on delegation, is requested.</summary>
    <published>2022-08-16T04:38:47+00:00</published>
  </entry>
</feed>
