<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Regarding BIP322 edge cases</title>
  <updated>2023-06-15T23:41:57.524438+00:00</updated>
  <author>
    <name>vjudeu at gazeta.pl 2022-08-10 02:59:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Regarding BIP322 edge cases</title>
    <updated>2023-06-15T23:41:57.524438+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020846.html" rel="alternate"/>
    <summary>During a discussion on the bitcoin-dev mailing list, user Ali Sherief brought up some TODO items from an older copy of the BIP322 draft. The items included how the protocol interacts with "Silent Transactions," whether an invalid opcode should be introduced to allow only certain proof types, and how to delegate to another scriptPubKey for better privacy and compatibility with CoinJoin/Lightning. Sherief suggested placing one of the NOPs at the beginning of a script to activate proof parsing mode, in order to limit which opcodes scriptPubKeys can use to sign. He also proposed a subsection for Silent Transactions that could operate using its scriptPubKey. However, he was not convinced that adding an opcode would be necessary since real transactions are obtained through P2P-obtained blocks. Finally, Sherief was unsure about what to do regarding the delegation to another scriptPubKey, but suggested using a MAST with two Merkle branches to specify the original signer's scriptPubKey and delegated signer's scriptPubKey.</summary>
    <published>2022-08-10T02:59:46+00:00</published>
  </entry>
</feed>
