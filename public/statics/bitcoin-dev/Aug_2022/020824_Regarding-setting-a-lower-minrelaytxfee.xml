<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Regarding setting a lower minrelaytxfee</title>
  <updated>2023-06-15T23:24:45.214535+00:00</updated>
  <author>
    <name>Billy Tetrud 2022-08-04 01:21:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Regarding setting a lower minrelaytxfee</title>
    <updated>2023-06-15T23:24:45.214535+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020824.html" rel="alternate"/>
    <summary>Peter Todd suggests that there is no need for a dust limit with full blocks and that blocks should remain full indefinitely. However, if a dust limit were to be implemented, it should not be a simple constant but determined by the mempool environment, such as defining the dust limit to be the 5th percentile lowest fee in the last 100 blocks or the 1st percentile. This way, as the value of Bitcoin fluctuates, the dust limit would automatically adjust to compensate. Aaradhya Chauhan asks whether it would be possible and feasible in the future. Vjudeu states that it is possible to find nodes that accept low-fee transactions and that some statistics show that zero to one satoshi per virtual byte transactions could take more space than other transactions. Miners can choose to accept these transactions or leave money on the table. For now, the de-facto standard is one satoshi per virtual byte, but there is no hard consensus rule. Nodes can behave differently, and fees are not part of the consensus, so they can be freely adjusted by each node. Regarding attaching work to low fee transactions, Peter Todd suggests that it is a way to rate-limit access to a broadcast network used by a small minority of nodes. It's completely okay to change the PoW algorithm in the highly unlikely event someone bothers to build an ASIC for it since it's not a consensus system. Multiple versions of the scheme can run in parallel.</summary>
    <published>2022-08-04T01:21:51+00:00</published>
  </entry>
</feed>
