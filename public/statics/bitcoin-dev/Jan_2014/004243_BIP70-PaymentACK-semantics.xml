<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: PaymentACK semantics</title>
  <updated>2023-06-08T00:50:39.316302+00:00</updated>
  <author>
    <name>Mike Hearn 2014-01-28 17:33:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: PaymentACK semantics</title>
    <updated>2023-06-08T00:50:39.316302+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004243.html" rel="alternate"/>
    <summary>The discussion revolves around the issue of when to broadcast a payment through Bitcoin to ensure payment atomicity. It is agreed that broadcasting should only be an issue if the payment fails, which is rare and usually due to the imperfect fungibility of bitcoins. The idea of not broadcasting unless necessary seems like an optimization that can reduce pain without much additional complexity. BitPay currently has a support system where you can file a ticket if you pay the bitcoins and they don't recognize it or the transaction never confirms. If the wallet software is doing automatic CoinJoin, then typically one or several of the other participants will broadcast the transaction as soon as it is complete. However, if the spec said that wallets must not broadcast until they receive a PaymentACK (if a payment_url is specified), then you'd have to violate the spec to do CoinJoin. The issue of users running out of unspent txouts in their wallets and the lack of payment atomicity is also discussed.</summary>
    <published>2014-01-28T17:33:28+00:00</published>
  </entry>
</feed>
