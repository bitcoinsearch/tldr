<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: PaymentACK semantics</title>
  <updated>2023-06-08T00:51:18.393024+00:00</updated>
  <author>
    <name>Mike Hearn 2014-01-28 13:24:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: PaymentACK semantics</title>
    <updated>2023-06-08T00:51:18.393024+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004241.html" rel="alternate"/>
    <summary>The discussion is about broadcasting transactions in CoinJoin. Delaying the broadcast of a transaction after inputs are signed can add complexity to implementation. Some wallets may not broadcast at all and instead try to submit via the payment URL. If the submission fails, the transaction is never committed to the wallet, but the coins remain with the user. Real-time CoinJoin can be achieved by building the transaction together and submitting it via payment URL and broadcasting it as well. In case of any issues with the payment such as an expired request or non-standard transaction, manual sorting out would be required with the merchant.</summary>
    <published>2014-01-28T13:24:34+00:00</published>
  </entry>
</feed>
