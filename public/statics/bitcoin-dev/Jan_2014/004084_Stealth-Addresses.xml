<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stealth Addresses</title>
  <updated>2023-06-07T23:42:09.379963+00:00</updated>
  <author>
    <name>Peter Todd 2014-01-14 14:15:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stealth Addresses</title>
    <updated>2023-06-07T23:42:09.379963+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004084.html" rel="alternate"/>
    <summary>In an email exchange, Jeremy Spilman and Peter Todd discussed the implementation of stealth addresses for Payment Protocol. The concept of an address being "instructions on how to generate a txout/tx that results in me getting Bitcoins" is valuable and can be used not only for Payment Protocol but also outside it. Todd suggests replacing all static address text with new 'href=bitcoin:xSTL...' URIs so that people can easily use stealth addresses for P2P payments. The identity of who you are paying becomes important with stealth addresses, and the signature binding the identity to the address is a one-time offline process. Todd strongly suggests defining a reasonable stealth address spec, keeping in mind that it may need to be upgraded in the future and shouldn't be limited to exactly 2-of-2 CHECKMULTISIG. Todd argues that stealth addresses should be added to the Output message rather than the PaymentDetails field because the outputs being requested have this property, not the payment itself. He suggests using addresses in the Output message rather than raw scriptPubKeys and making a stealth address type or a BIP32-chain-code address type as needed. Finally, Todd agrees with Spilman that multiple different stealth payments within a single wallet to the same merchant/pubkeys should be identifiable as such.</summary>
    <published>2014-01-14T14:15:17+00:00</published>
  </entry>
</feed>
