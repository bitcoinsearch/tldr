<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: PaymentACK semantics</title>
  <updated>2023-06-08T00:51:08.182878+00:00</updated>
  <author>
    <name>Andreas Schildbach 2014-01-27 15:20:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: PaymentACK semantics</title>
    <updated>2023-06-08T00:51:08.182878+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004217.html" rel="alternate"/>
    <summary>In an email thread from January 27, 2014, Gavin Andresen discussed the purpose of PaymentACK in the context of payment processing. The main function of PaymentACK is to provide reassurance to customers that their payment request has been received and will be processed accordingly. In cases where the payment request is found to be syntactically incorrect or invalid, a PaymentACK with a message indicating the problem should be sent to the customer as a response.One participant in the email thread raised a question about whether it was necessary to always respond with an ack, even if the payment request was problematic, to which Andresen clarified that an ack should always be sent regardless. However, the participant suggested that the specification should explicitly state that sending a nack would result in closing the connection without sending an ack.Finally, the same participant commented on the name of the message, suggesting that PaymentResponse would be more appropriate than PaymentACK to provide greater clarity on its purpose.</summary>
    <published>2014-01-27T15:20:39+00:00</published>
  </entry>
</feed>
