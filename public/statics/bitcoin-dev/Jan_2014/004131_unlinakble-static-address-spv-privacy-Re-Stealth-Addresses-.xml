<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>unlinakble static address? &amp; spv-privacy (Re: Stealth Addresses)</title>
  <updated>2023-06-08T00:11:24.860456+00:00</updated>
  <author>
    <name>Troy Benjegerdes 2014-01-16 18:19:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>unlinakble static address? &amp; spv-privacy (Re: Stealth Addresses)</title>
    <updated>2023-06-08T00:11:24.860456+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004131.html" rel="alternate"/>
    <summary>The author of the given context believes that privacy in Bitcoin is a major social engineering problem. They state that people should be able to choose how much privacy they want to trade for computation and bandwidth, but warn that if most users opt for high elimination probability, it will affect everyone's privacy as the statistical effects are accumulative. The author predicts that once network flow analysis incorporates this feature, the result will be pretty close to privacy game over and it will undo most of the hard-won privacy benefits of CoinJoin. Furthermore, the author questions who is marketing privacy and how to validate privacy providers as there may be scamprivacy providers that drive the market price of privacy down to zero similar to scamcoins. They also question who is paying for the cost of privacy in terms of network, development, and bandwidth. The author estimates that 85% of real users do not care about an abstract privacy ideal, but rather want payments to work and to download cat pictures. They suggest that if regular address reuse is deprecated and the top 1% of Bitcoin wealth owners who own 95% of miners want privacy, it could lead to "OccupyBitcoin" and an altcoin that encourages plain old regular address reuse and transparency. Finally, the author wonders if this stuff still works if regular address reuse is a transparency feature and not a bug.</summary>
    <published>2014-01-16T18:19:26+00:00</published>
  </entry>
</feed>
