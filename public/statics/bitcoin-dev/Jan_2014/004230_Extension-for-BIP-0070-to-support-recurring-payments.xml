<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Extension for BIP-0070 to support recurring payments</title>
  <updated>2023-06-08T01:56:35.441674+00:00</updated>
  <author>
    <name>Stephane Brossier 2014-01-28 02:36:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Extension for BIP-0070 to support recurring payments</title>
    <updated>2023-06-08T01:56:35.441674+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004230.html" rel="alternate"/>
    <summary>Stéphane proposes an extension to the Payment Protocol (bip-0070) to address recurring payments in Bitcoin. With a growth in the subscription economy, many companies are embracing this model. Bitcoin is growing into a mainstream currency, hence bip-0070; therefore, it is logical to define a protocol to address that need. Stéphane has been working on an open-source billing platform called Kill Bill for a few years and recently came up with a prototype to do recurring billing in Bitcoin. The workflow would look similar to the one from bip-0070 but with some additions. The flow could be summarized as follows: 1. Wallet gets a RecurringPaymentRequestAuth which describes the nature of the future recurring payments2. The Customer would get prompted from the wallet to authorize it.3. The wallet would then poll the Merchant server (startup time, and/or well-defined frequency) and potentially merchant would start issuing a PaymentRequest); the role of the wallet is to ensure that PaymentRequest is within the bounds of what was accepted by the customer-- amount, frequency,.. If it is, then it would make the Payment the same way it works for bip-0070.Stéphane asks if the community would be interested in such a proposal. They are willing to provide more details and implementation with bitcoinj as a wallet and Kill Bill as a merchant server.</summary>
    <published>2014-01-28T02:36:34+00:00</published>
  </entry>
</feed>
