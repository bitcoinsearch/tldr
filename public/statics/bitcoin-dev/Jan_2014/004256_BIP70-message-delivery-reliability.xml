<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70 message delivery reliability</title>
  <updated>2023-06-08T02:10:38.122949+00:00</updated>
  <author>
    <name>Mike Hearn 2014-01-30 11:59:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70 message delivery reliability</title>
    <updated>2023-06-08T02:10:38.122949+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004256.html" rel="alternate"/>
    <summary>The discussion revolves around the functioning of bitcoinj and how it commits a transaction to the wallet only when the server accepts the payment message and ACKs it. If there is an error in submitting or an internal server issue, the tx would not be retried, resulting in a failed payment. Pieter Wuille suggests that the protocol should do everything possible to prevent transactions from confirming without delivering the payment message, suggesting retrying with exponential backoff. Chuck believes that discussing failure situations beforehand is essential rather than trying to patch solutions later. Mike Hearn talks about evolving PaymentRequest/Payment/PaymentACK in the right direction and getting practical experience with what they have so far. The conversation highlights the need for careful consideration of the current implementation's weaknesses and addressing them before evolving the protocol further.</summary>
    <published>2014-01-30T11:59:05+00:00</published>
  </entry>
</feed>
