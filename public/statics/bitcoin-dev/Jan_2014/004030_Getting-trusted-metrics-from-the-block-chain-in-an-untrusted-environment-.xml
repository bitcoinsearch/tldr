<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Getting trusted metrics from the block chain in an untrusted environment ?</title>
  <updated>2023-06-07T23:56:51.793124+00:00</updated>
  <author>
    <name>Clément Elbaz 2014-01-08 22:29:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Getting trusted metrics from the block chain in an untrusted environment ?</title>
    <updated>2023-06-07T23:56:51.793124+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004030.html" rel="alternate"/>
    <summary>The email conversation is between Clément Elbaz and a group of people. Clément needs to design a program that requires metrics computed from the Bitcoin block chain. However, his program will run on lightweight/embedded hardware and does not provide enough resources to set up a trusted node along with it. He trusts the global Bitcoin network but no individual node. Therefore, he needs a way to ask an untrusted Bitcoin node to compute some 'metric request' on his behalf and having the result of that metric request validated by the network. Clément suggests using an alternate, small and fixed-length 'metric request block chain' to store structures defined as [metric request | current block number when request was made | hash of the response] instead of financial transactions. These structures are verifiable so it could work the same way as a regular financial blockchain. It should not be part of the main Bitcoin protocol but could be a plugin interacting with the data managed by the fullnode bitcoin software.Metrics requests can be expensive to compute and validate, so it would make sense to pay a fee every time you ask one. Clément is looking for available or work-in-progress projects that would fit this need or he would do it himself if there is none.</summary>
    <published>2014-01-08T22:29:15+00:00</published>
  </entry>
</feed>
