<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stealth Addresses</title>
  <updated>2023-06-07T23:35:20.616867+00:00</updated>
  <author>
    <name>Jeremy Spilman 2014-01-13 09:13:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stealth Addresses</title>
    <updated>2023-06-07T23:35:20.616867+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004050.html" rel="alternate"/>
    <summary>The email thread discusses the implementation of Bitcoin's payment protocol (PP) and whether to fully support sending payments to a new standard address type. The use of addresses is deemed meaningless by Mike Hearn, who believes that PP allows merchants to provide human-readable text for transactions instead of addresses. Gavin Andresen agrees with Hearn and suggests making it easy for non-geeks to use stealth addresses. The basic PaymentRequest&gt;PaymentDetails expects an "output" of one or more TxOuts with script and amount. A fallback address will be included in the output for backward compatibility, with Q and Q2 in an extension field. The email also outlines screenshots and user interaction/flow for the PP. The current implementation shows "Pay To" and "Memo" on the Send screen, but the memo is not saved or visible after sending a payment. The Transaction Display could potentially show either the stealth multisig or the pubkeys derived from the TxOut, and sample code is expected to follow.</summary>
    <published>2014-01-13T09:13:08+00:00</published>
  </entry>
</feed>
