<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>instant confirmation via payment protocol backwards compatible proto buffer extension</title>
  <updated>2023-06-08T23:58:43.596813+00:00</updated>
  <author>
    <name>Daniel Rice 2014-06-16 15:09:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>instant confirmation via payment protocol backwards compatible proto buffer extension</title>
    <updated>2023-06-08T23:58:43.596813+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/006033.html" rel="alternate"/>
    <summary>The issue of double spends is one of the biggest remaining issues in the protocol of Bitcoin. This is why the entire BIP extension is a band-aid for double spends. If the double spends are not resolved, there will be a million instant providers in the long run, and if double spends are resolved, then this BIP extension is completely unnecessary. Solving doublespends could involve putting both transactions into the new block as proof of double spend, but the bitcoins would not be sent to the outputs of either transaction. They would instead be treated like a fee and given to the block solver node, which would give miners the needed incentive and tools to end doublespends instead of being forced to favor one transaction over the other. It is suggested that if the user always submits the details of their instantness provider, it would make sense, UX wise. However, this may not work, so another less scalable design may be necessary to support it. The user sending the name and signature of their "instant provider" every time would be more scalable, but may not be compatible with the provider charging extra fees for "instantness". Ultimately, the merchant cares about the purchasing experience with optional paid-for third party anti-double-spend protection, not the sender. Therefore, it makes no sense for the sender to pay for double spend protection for the merchant.</summary>
    <published>2014-06-16T15:09:01+00:00</published>
  </entry>
</feed>
