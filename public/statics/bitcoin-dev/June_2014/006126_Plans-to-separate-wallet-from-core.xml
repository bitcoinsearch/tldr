<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Plans to separate wallet from core</title>
  <updated>2023-06-09T00:27:12.055837+00:00</updated>
  <author>
    <name>Mike Hearn 2014-06-24 09:11:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Plans to separate wallet from core</title>
    <updated>2023-06-09T00:27:12.055837+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/006126.html" rel="alternate"/>
    <summary>Bitcoind already supports SPV (Simplified Payment Verification) mode, which allows bitcoinj clients to work. However, the current wallet code does not use SPV mode and instead integrates directly with the full mode main loop without talking P2P internally. If one wants to separate the wallet code from the full node, using SPV mode would be the way to do it. The question is whether this separation is worth the potentially huge amount of time it could take and what benefits it brings. The maintainer of a primarily wallet library argues that there's plenty of work to do on core consensus code, and making Bitcoin Core into a competitive wallet would be an additional burden.Electrum is used as shorthand for "something a bit like the P2P network, but with trusted remote servers which build additional databases and thus support additional commands."</summary>
    <published>2014-06-24T09:11:03+00:00</published>
  </entry>
</feed>
