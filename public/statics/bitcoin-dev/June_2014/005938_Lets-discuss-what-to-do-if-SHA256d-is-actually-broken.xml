<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lets discuss what to do if SHA256d is actually broken</title>
  <updated>2023-06-08T23:31:50.057169+00:00</updated>
  <author>
    <name>Ethan Heilman 2014-06-03 11:51:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lets discuss what to do if SHA256d is actually broken</title>
    <updated>2023-06-08T23:31:50.057169+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005938.html" rel="alternate"/>
    <summary>The article explains the potential consequences of an attack on the mining difficulty algorithm and how it may impact the security properties of a cryptographic hash function. If someone discovers a method that makes discovering new blocks far easier, it may or may not be implementable by the current SHA256 ASIC hardware. If it is usable, there will be a brief period of overproduction followed by an adjustment in difficulty. However, if the attack is so severe that difficulty can't scale and we run out of leading zeroes, then the SHA256 collision resistance is broken, and everyone would need to switch to new hardware immediately to avoid creating irreconcilable forks in the blockchain.On the other hand, if the attack isn't usable, miners must switch to new ASICs regardless, and the hash function can be changed without resistance. Suppose the Bitcoin community wants to switch hash functions for some unspecified reason and has lead time to do so. In that case, miners could find two blocks, one computed using SHA256 and the other using the new hash function, allowing a semi-predictable roadmap to switch infrastructure away from SHA256.During a discussion, Luke Dashjr pointed out that if SHA256d is broken, Bitcoin would fail entirely, as attackers could fabricate past blocks entirely. However, weakening of collision resistance does not violate the typical security properties of a cryptographic hash function.</summary>
    <published>2014-06-03T11:51:45+00:00</published>
  </entry>
</feed>
