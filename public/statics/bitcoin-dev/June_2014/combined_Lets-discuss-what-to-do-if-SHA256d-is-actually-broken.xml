<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lets discuss what to do if SHA256d is actually broken</title>
  <updated>2023-06-08T23:34:28.124333+00:00</updated>
  <author>
    <name>Ethan Heilman 2014-06-03 11:51:45</name>
  </author>
  <author>
    <name>Kevin 2014-06-03 14:43:39</name>
  </author>
  <author>
    <name>Rusty Russell 2014-06-03 12:45:23</name>
  </author>
  <author>
    <name>Charlie 'Charles' Shrem 2014-06-04 01:38:04</name>
  </author>
  <author>
    <name>Rusty Russell 2014-06-03 12:45:23</name>
  </author>
  <author>
    <name>Charlie 'Charles' Shrem 2014-06-04 01:38:04</name>
  </author>
  <author>
    <name>xor 2014-06-03 04:29:55</name>
  </author>
  <author>
    <name>Luke Dashjr 2014-06-03 04:52:39</name>
  </author>
  <author>
    <name>Ethan Heilman 2014-06-03 11:51:45</name>
  </author>
  <author>
    <name>Ethan Heilman 2014-06-03 11:51:45</name>
  </author>
  <author>
    <name>Kevin 2014-06-03 14:43:39</name>
  </author>
  <author>
    <name>Rusty Russell 2014-06-05 06:09:15</name>
  </author>
  <author>
    <name>Kevin 2014-06-03 14:43:39</name>
  </author>
  <author>
    <name>Ashley Holman 2014-06-03 15:12:12</name>
  </author>
  <author>
    <name>xor 2014-06-03 04:29:55</name>
  </author>
  <author>
    <name>Rusty Russell 2014-06-05 06:09:15</name>
  </author>
  <author>
    <name>xor 2014-06-03 04:29:55</name>
  </author>
  <author>
    <name>Luke Dashjr 2014-06-03 04:52:39</name>
  </author>
  <author>
    <name>Ashley Holman 2014-06-03 15:12:12</name>
  </author>
  <author>
    <name>Rusty Russell 2014-06-05 06:09:15</name>
  </author>
  <author>
    <name>Rusty Russell 2014-06-03 12:45:23</name>
  </author>
  <author>
    <name>Charlie 'Charles' Shrem 2014-06-04 01:38:04</name>
  </author>
  <author>
    <name>Luke Dashjr 2014-06-03 04:52:39</name>
  </author>
  <author>
    <name>Ashley Holman 2014-06-03 15:12:12</name>
  </author>
  <link href="bitcoin-dev/June_2014/005938_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005939_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005945_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005946_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005945_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005946_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005935_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005936_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005938_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005938_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005939_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005962_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005939_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005940_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005935_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005962_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005935_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005936_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005940_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005962_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005945_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005946_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005936_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005940_Lets-discuss-what-to-do-if-SHA256d-is-actually-broken.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lets discuss what to do if SHA256d is actually broken</title>
    <updated>2023-06-08T23:34:28.125334+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005938.html" rel="alternate"/>
    <summary>The potential consequences of SHA256d being broken in the Bitcoin network have been discussed extensively. If this algorithm were to be broken, it would pose significant issues for miners who have invested millions in hardware designed specifically for mining Bitcoin using this algorithm. In response to this concern, Rusty Russell suggested chaining SHA256d with a new hash function, allowing ASIC owners to continue using their existing hardware while also allowing for a smooth transition to the new algorithm. However, implementing this solution would require significant work. Rusty Russell proposed a gradual transition scheme in the event of an anticipated weakening of SHA256, using solve-SHA256-then-solve-SHA3, with the difficulty of SHA256 ramping down and SHA3 ramping up over the transition period. The hard part was estimating what the SHA3 difficulty should be over time, but Rusty's solution was to adjust only the SHA3 target on every second difficulty change.Since SHA256d is a cryptographic hash function used by Bitcoin to secure and validate transactions, breaking this function would render the entire system vulnerable to attacks such as double-spending or manipulation of transaction histories. If a method was discovered that made it easier to discover new blocks, the miners would need to switch to new ASICs and the hash function could be changed without resistance. However, if the attack was so bad that difficulty couldn't scale, and they ran out of leading zeros, then the SHA256 collision resistance would be broken.In case of a sudden breakdown of SHA256, an agreement would have to be reached regarding the honest blockchain before the trouble started, and from there, a new hash function could be used. Luke Dashjr pointed out that if SHA256d was broken, Bitcoin would fail entirely, and the possibility of fabricating past blocks entirely was also discussed. If the Bitcoin community wanted to switch to a new hash function, one way to do this would be to require miners to find two blocks, one computed using SHA256 and the other computed using the new hash function. This would provide miners with a semi-predicable roadmap to shift their infrastructure away from SHA256.While these discussions took place in 2014 and the Bitcoin network has continued to operate without experiencing a major security breach related to SHA256d, the ongoing development of new technologies and potential vulnerabilities underscores the importance of maintaining strong security protocols within the cryptocurrency ecosystem. The possibility of SHA-256 being broken gradually or suddenly was also discussed, along with the implications of gradual breakdowns on orderly transitions.</summary>
    <published>2014-06-03T11:51:45+00:00</published>
  </entry>
</feed>
