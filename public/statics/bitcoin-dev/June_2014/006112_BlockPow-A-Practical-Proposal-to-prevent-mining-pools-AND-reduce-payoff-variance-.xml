<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BlockPow: A Practical Proposal to prevent mining pools AND reduce payoff variance:</title>
  <updated>2023-06-09T00:23:13.527208+00:00</updated>
  <author>
    <name>Mark Friedenbach 2014-06-19 17:17:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BlockPow: A Practical Proposal to prevent mining pools AND reduce payoff variance:</title>
    <updated>2023-06-09T00:23:13.527208+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/006112.html" rel="alternate"/>
    <summary>Sergio Lerner has proposed a setting that can prevent mining pools and reduce variance in payoffs. The proposal requires increasing the block-rate by at least 20 times and changing the Bitcoin Proof-of-Work (PoW) while allowing current Bitcoin ASICs to work. The proposed BlockPow is a kind of PoW that only prevents mining pools for certain cryptocurrency settings based on concepts similar to parmacoin. The proposal discourages mining pools by increasing bandwidth requirements, which makes it expensive for pool administrators to serve miners with fresh block templates. In contrast, solo miners working without a pool can earn 6% more than pool miners if block fees are 10% of the block reward. To make the method work for Bitcoin, the block rate should be reduced to at least one minute, and blocks should be kept at least 10 Mbytes. Alternatively, Bitcoin could follow the NimbleCoin way and reduce the block interval to five seconds. However, the basic BlockPoW used in this proposal is incompatible with Bitcoin ASICs as is but can be made partially compatible with some tweaks.The proposal replaces the hashMerkleRoot and hashPrevBlock fields with ChildBlock and ScatteredBlockBytes fields. ChildBlock is the hash of a message that stores the old hashMerkleRoot and hashPrevBlock, while ScatteredBlockBytes is a pseudo-random subset of bytes taken from the block template being mined. When a miner scans all the 32bit nonce space, a new hashMerkleRoot must be created to increase the extra-nonce field or update the time. A new subset of pseudo-random 32 block bytes must be collected when this happens. Alternatively, ScatteredBlockBytes is replaced by a field BlockHash defined as H( full-block-with-zero-nonce ). The header must be at the beginning of the block to force the re-hash. The proposed method to discourage mining pools only works as long as the time it takes to transmit a block is comparable to the block interval time, which should not be a problem if the cryptocurrency becomes popular. Overall, Sergio Lerner's proposal aims to prevent mining pools and reduce payoff variance, discouraging pool administrators from keeping a secret mid-state of the hash function to prevent block stealing while forcing miners to know the block in the inner mining loop. The proposed method requires an infrastructure that makes use of getblocktemplate technology to perform local transaction selection.</summary>
    <published>2014-06-19T17:17:50+00:00</published>
  </entry>
</feed>
