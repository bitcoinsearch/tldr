<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Possible attack: Keeping unconfirmed transactions</title>
  <updated>2023-05-19T19:00:37.178429+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-06-06 22:27:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Possible attack: Keeping unconfirmed transactions</title>
    <updated>2023-05-19T19:00:37.178429+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005986.html" rel="alternate"/>
    <summary>The context discusses a possible attack on Bitcoin transactions where an unconfirmed transaction is saved by the receiver for a few days and then relayed back to the network or mined using their own hash power. The attacker can store an unconfirmed transaction sent by the payer and later relay it to the network or mine it directly with their own hash power, thus taking possession of the bitcoins without the knowledge of the payer. The Payment Protocol does not prevent this attack as Alice, the receiver, relays the transaction to the network. However, according to Toshi Morita, Alice cannot intercept the transaction and prevent the rest of the network from seeing it. It is recommended to reuse one of the inputs when reissuing a transaction that didn't go through earlier to avoid simultaneous confirmation of both.</summary>
    <published>2014-06-06T22:27:44+00:00</published>
  </entry>
</feed>
