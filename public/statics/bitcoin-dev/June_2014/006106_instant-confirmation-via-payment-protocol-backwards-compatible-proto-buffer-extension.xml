<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>instant confirmation via payment protocol backwards compatible proto buffer extension</title>
  <updated>2023-06-09T00:01:12.021490+00:00</updated>
  <author>
    <name>Natanael 2014-06-18 20:47:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>instant confirmation via payment protocol backwards compatible proto buffer extension</title>
    <updated>2023-06-09T00:01:12.021490+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/006106.html" rel="alternate"/>
    <summary>On June 17, 2014, Isidor Zeuner asked Mike Hearn why not all nodes report attempted double spends through the node network instead of involving miners. He further suggested that waiting for 10-60 seconds (instead of 10 minutes) before confirming a payment can make merchants more sure that a double spend attack was not tried. However, Isidor raised the concern that an attacker may still carry out a double spend attack during this forced delay time, making the attack less successful but not impossible.In response to Isidor's concerns, it has been suggested that with 2-of-2 multisignature notaries, the doublespend would be published and propagated together as evidence of the notary being malicious. However, there should be no direct penalty in the Bitcoin protocol itself. If a transaction needs to be replaced honestly because of being wrong or not confirming, then there should be some means of showing the second transaction is "legitimate." One method could be through showing that the original recipients have signed off on it, indicating they agree it should be reversed. If the original recipient cannot be reached to sign, then either not replacing the transaction or the notary trying to prove the replacing transaction was legitimate would be the only options.</summary>
    <published>2014-06-18T20:47:20+00:00</published>
  </entry>
</feed>
