<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trying to patch Core ZMQ "rawtx" topic to only publish unconfirmed transactions: How?</title>
  <updated>2023-06-15T03:01:50.207127+00:00</updated>
  <author>
    <name>0xB10C 2021-11-29 09:32:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trying to patch Core ZMQ "rawtx" topic to only publish unconfirmed transactions: How?</title>
    <updated>2023-06-15T03:01:50.207127+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019611.html" rel="alternate"/>
    <summary>In a Bitcoin Core pull request, a new function called NotifyMempoolTransaction() has been added to notify CZMQNotificationInterface about TransactionAddedToMempool. This function calls the publisher with the rawmempooltx topic. The author of the pull request mentions that a mempool transaction publisher with both the raw transaction and transaction fee would also be useful but would require changes to the chain notifications in interfaces/chain.h. A link to the pull request as well as to the relevant lines of code on GitHub is provided in the message.Meanwhile, on the Bitcointalk forum, a user named Ali Sherief reports experiencing an issue where the ZeroMQ topic "rawtx" emits a raw transaction not only when it appears on the mempool, but also once it's already confirmed, causing software to add txids, addresses, etc. a second time inside arrays. Array de-duping is not a viable solution long-term, so Ali attempts to instruct Core to only publish unconfirmed bitcoin transactions. However, according to a Bitcoin Stack Exchange post, it is not possible to configure this from a configuration or command-line option and requires editing the source code directly. Ali is unsure which function to patch for their own build and wonders if the pblock check suggested by Jonas Schnelli several years ago is still applicable in the present day.</summary>
    <published>2021-11-29T09:32:15+00:00</published>
  </entry>
</feed>
