<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof of Payment</title>
  <updated>2023-06-09T18:30:33.799777+00:00</updated>
  <author>
    <name>Kalle Rosenbaum 2015-04-27 12:35:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof of Payment</title>
    <updated>2023-06-09T18:30:33.800778+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007829.html" rel="alternate"/>
    <summary>The context discusses various potential use cases for proof of payment (PoP) in the Bitcoin network. One example is waiting in comfort, where a user can send payment ahead of time and collect goods after X confirmations. Another use case is authorized pickup, where hot wallet software used by related parties can facilitate the use of 1 of N multisig funds for purchasing goods and services. Non-monetary gifts can also be facilitated through PoP by exporting spent keys to a beneficiary, enabling them to claim gifts. Contingent services can also be offered, where a third party conditions an action on a payment made from one party to another. The concept of PoP can be generalized beyond actual payments to prove that a transaction could be created. However, it would require modifications to ensure that these proofs are not mined and spent to fees or intercepted in cases involving reorganizations. Changing the version number on the PoP to something other than 1 or using a high lock_time are suggested as possible solutions. Overall, PoP seems complementary to BIP70 according to the author.</summary>
    <published>2015-04-27T12:35:27+00:00</published>
  </entry>
</feed>
