<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Bitcoin core 0.11 planning</title>
  <updated>2023-05-19T20:04:13.559167+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-04-28 11:01:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Bitcoin core 0.11 planning</title>
    <updated>2023-05-19T20:04:13.559167+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007842.html" rel="alternate"/>
    <summary>In an email thread on the Bitcoin-development mailing list, Peter Todd suggested that softforks should not necessarily be bound to Bitcoin Core major releases. Instead, minor releases could be used if they don't require large code changes. Todd pointed out that at the current rate, the soonest we'll see CHECKLOCKTIMEVERIFY implemented on Bitcoin will be something like summer 2016, a year and a half after it got adopted on Viacoin and a few other alts whose names he forgot. He recommended that the shortest path to adoption would be to release a v0.12 with just a CLTV soft-fork as soon as the BIP66 softfork triggers. Todd believes that the main reason to accelerate CLTV is scalability. The only viable scalability improvements possible in the short/medium term that don't entirely rely on trusting third parties are payment channel-based, and while there's a working payment channel scheme, Jeremy Spilman's refund tx-based system, it is fairly complex, needs good and immediate backups, and is susceptible to tx malleability. CLTV fixes those issues robustly. On the same thread, Wladimir J. van der Laan proposed the following schedule for Bitcoin Core version 0.11: Soft translation string freeze on May 1, feature freeze and string freeze on May 15, split off 0.11 branch and tag and release 0.11.0rc1 on June 1, and release 0.11.0 final on July 1. Unlike former releases, which were protracted for months, van der Laan recommended that this release be more strict about the dates. Anything that wonâ€™t make it to 0.11 will be postponed to the next release scheduled for the end of the year.</summary>
    <published>2015-04-28T11:01:00+00:00</published>
  </entry>
</feed>
