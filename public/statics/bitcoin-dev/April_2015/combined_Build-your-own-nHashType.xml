<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Build your own nHashType</title>
  <updated>2023-06-09T19:06:55.258193+00:00</updated>
  <author>
    <name>Stephen Morse 2015-04-09 14:10:43</name>
  </author>
  <author>
    <name>Mike Hearn 2015-04-09 14:45:35</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-04-15 03:34:50</name>
  </author>
  <author>
    <name>Peter Todd 2015-04-09 17:28:09</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-10 02:56:20</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-04-15 03:34:50</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-08 19:50:02</name>
  </author>
  <author>
    <name>Mike Hearn 2015-04-09 11:29:43</name>
  </author>
  <author>
    <name>Peter Todd 2015-04-18 23:33:52</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-04-09 14:22:52</name>
  </author>
  <author>
    <name>Peter Todd 2015-04-09 17:28:09</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-10 02:56:20</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-08 19:50:02</name>
  </author>
  <author>
    <name>Mike Hearn 2015-04-09 14:45:35</name>
  </author>
  <author>
    <name>Peter Todd 2015-04-18 23:33:52</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-09 14:10:43</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-04-09 14:22:52</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-08 19:50:02</name>
  </author>
  <author>
    <name>Mike Hearn 2015-04-09 11:29:43</name>
  </author>
  <author>
    <name>Peter Todd 2015-04-18 23:33:52</name>
  </author>
  <author>
    <name>Mike Hearn 2015-04-09 11:29:43</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-09 14:10:43</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-04-09 14:22:52</name>
  </author>
  <author>
    <name>Mike Hearn 2015-04-09 14:45:35</name>
  </author>
  <author>
    <name>Peter Todd 2015-04-09 17:28:09</name>
  </author>
  <author>
    <name>Stephen Morse 2015-04-10 02:56:20</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-04-15 03:34:50</name>
  </author>
  <link href="bitcoin-dev/April_2015/007774_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007775_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007789_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007777_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007785_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007789_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007771_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007773_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007802_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007776_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007777_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007785_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007771_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007775_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007802_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007774_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007776_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007771_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007773_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007802_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007773_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007774_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007776_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007775_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007777_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007785_Build-your-own-nHashType.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007789_Build-your-own-nHashType.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Build your own nHashType</title>
    <updated>2023-06-09T19:06:55.259185+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007774.html" rel="alternate"/>
    <summary>The discussions and proposals around changing sighash flags for Bitcoin transactions are varied and complex. Stephen Morse proposes changes to nHashType that would allow transaction signers to specify what is to be serialized for the signature hash, which would almost make malleability a non-issue. However, concerns exist about creating too many options and extending into a choose-your-own-adventure with too many options to count. Developers discuss eliminating some flags that do not make sense and reducing the total number to 17. Auto forwarding is debated as a feature, but better solutions for key management exist. The concern is that if an address ever receives coins again, it could enable replay attacks by sending the money to the same place it was sent before. There is a debate on whether auto forwarding could be a useful feature. However, signing different data for each input makes it hard to avoid such attacks.Other topics of discussion include the use of OP_CODESEPARATOR to implement efficient payword schemes and signing code to run as part of verifying the signature. There are debates around the potential dangers of certain combinations and how to avoid replay attacks. Jeff Garzik highlights the potential issues with slow transaction verification speed and suggests that part of the soft-fork could be to consume sigops in new CHECKSIG mechanisms. Peter Todd proposes a more general mechanism with easy-to-test modular opcodes that would result in a much easier and simpler to test CHECKSIG facility than a dozen new flags.Despite the demand for giant contracts, it remains unclear whether users would actually engage in such transactions. The bottleneck of hashing transaction data once per input is also questioned in the context of large transactions such as big assurance contracts with thousands of inputs and multiple megabytes in size. In a discussion on #bitcoin-wizards, Bitcoin Core developer Mike Hearn suggested that OP_CODESEPARATOR could be used to implement efficient payword schemes. He also claimed that early on you could have used it to do some really useful after-the-fact signing delegation by wrapping an IF ENDIF.A proposal has been made to allow a transaction signer to explicitly specify what is to be serialized for the signature hash. The aim of this proposal is to make nHashType general enough so that new sighash flags won't be needed every time a new use case arises. If implemented into Bitcoin via a soft fork, malleability would almost become a non-issue and hardware wallets could sign securely without having to download or process each transaction it spends from. This proposal can be found on Github at https://github.com/scmorse/bitcoin-misc/blob/master/sighash_proposal.md and feedback on it is welcome.</summary>
    <published>2015-04-09T14:10:43+00:00</published>
  </entry>
</feed>
