<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-05-20T18:07:30.573071+00:00</updated>
  <author>
    <name>Johnson Lau 2018-11-22 20:52:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-05-20T18:07:30.574071+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016498.html" rel="alternate"/>
    <summary>The discussion on the Bitcoin-dev mailing list revolves around finding a replacement for OP_CODESEPARATOR, which is slowing down script processing as it takes O(script-size) time. One suggestion is to add an internal counter that increments on every control flow operator and has the signature cover the value of this counter. Alternatively, a Merklized Script tree of the same depth could replace a sequence of OP_IF ... OP_ENDIF. MAST in taproot makes OP_IF mostly redundant, and to maximize fungibility, people should be encouraged to use MAST instead of further complicating the protocol by improving the functionality of OP_IF. However, at script creation time, computing a Merkle root of depth 'n' takes exponential time, and benchmarks or estimates are needed to know how long it takes to compute a Merkle root of various depths on typical consumer hardware.</summary>
    <published>2018-11-22T20:52:54+00:00</published>
  </entry>
</feed>
