<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Multi party Schnorr Rust implementation</title>
  <updated>2023-06-13T15:46:22.418735+00:00</updated>
  <author>
    <name>Omer Shlomovits 2018-11-28 08:13:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Multi party Schnorr Rust implementation</title>
    <updated>2023-06-13T15:46:22.418735+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016510.html" rel="alternate"/>
    <summary>The author of an email on the Bitcoin-dev mailing list is inquiring about non-interactive threshold signatures. The current best solution appears to be taking the DKG from GG18 without Paillier and the DLog PoK, using it for the threshold Schnorr DKG and for the ephemeral key distributed generation. This will cause the loss of robustness but will be more efficient. The purpose of using threshold security is to replace hardware security. The assumption is that it is better to trust that no more than t out of n different machines will get corrupted at the same time than to trust one secure hardware. Candidates for non-interactive threshold signatures do not seem to exist. The author provides links to whitepapers and implementations for reference.</summary>
    <published>2018-11-28T08:13:08+00:00</published>
  </entry>
</feed>
