<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-06-13T15:25:13.604911+00:00</updated>
  <author>
    <name>Bob McElrath 2018-11-28 14:04:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-06-13T15:25:13.604911+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016513.html" rel="alternate"/>
    <summary>The Bitcoin development community is exploring various possibilities to provide feedback on the best way of implementing a covenant/vault, given the uncertainty about which features will be deployed on mainnet. Three ways have been proposed so far; Pay-to-Timelock Signed Transaction (P2TST), OP_CHECKOUTPUTVERIFY and OP_CHECKSIGFROMSTACK. The OP_CHECKSIGFROMSTACK mechanism is being prototyped using Liquid/Elements. Johnson Lau suggested that covenants could be made using OP_CHECKSIGFROMSTACK or OP_PUSHTXDATA in light of bip-schnorr, which intentionally disallows certain use cases. Bob McElrath has been working on an experimental wallet that implements Bitcoin Covenants/Vaults following a blog post he wrote 2 years ago, using P2TST. This interacts with NOINPUT as it requires no pubkey dependency and SIGHASH_SCRIPTMASK removes any circular dependency. McElrath is excited to combine this idea with Taproot/Graftroot/g'Root.</summary>
    <published>2018-11-28T14:04:13+00:00</published>
  </entry>
</feed>
