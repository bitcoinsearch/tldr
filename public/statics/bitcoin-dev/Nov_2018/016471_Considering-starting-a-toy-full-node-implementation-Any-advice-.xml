<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Considering starting a toy full-node implementation. Any advice?</title>
  <updated>2023-06-13T15:16:30.476424+00:00</updated>
  <author>
    <name>Артём Литвинович 2018-11-07 13:20:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Considering starting a toy full-node implementation. Any advice?</title>
    <updated>2023-06-13T15:16:30.476424+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016471.html" rel="alternate"/>
    <summary>In a message to the bitcoin-dev mailing list, an individual stated their intention to develop a toy full-node implementation for educational purposes. They asked for advice on which resources to use as a reference for the protocol, where to start, and whether there were any other general tips for such endeavors. In response, Artem advised the individual to start small and aim for small steps, such as connecting to nodes and downloading blocks. They also suggested that the individual not write off making a wallet or mining, as they can provide good understanding of keys and transactions. Furthermore, Artem warned that the individual should expect to work with huge and varied sets of data and that new exploitable signatures are unlikely to be found due to bots constantly scanning the chain for weak keys and signatures. Finally, Artem provided references, such as bitcoin.org/en/developer-reference, en.bitcoin.it/wiki/Protocol_documentation, and github.com/bitcoin/bips, and wished the individual luck and fun in their project.</summary>
    <published>2018-11-07T13:20:00+00:00</published>
  </entry>
</feed>
