<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A new Bitcoin implementation integrated with Core Lightning</title>
  <updated>2023-06-16T03:57:45.842155+00:00</updated>
  <author>
    <name>niftynei 2023-04-24 16:06:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A new Bitcoin implementation integrated with Core Lightning</title>
    <updated>2023-06-16T03:57:45.842155+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021587.html" rel="alternate"/>
    <summary>The email thread discusses the decoupling of CLN from the block source and how it allows for a separation of concerns. Bitcoin core, on the other hand, implements a broad swath of functionality, which limits opportunities for building block sources for different projects. There is an opportunity to "comingle" the peering of LN gossip and block data networks, but this has not been seriously pursued by the LN side. Separating the peering functions of bitcoin-core into a more composable/reusable piece would be a good first step towards this goal. Michael suggests that with upcoming proposed changes to default policy, a tighter coupling between the full node and the Lightning node could make sense. He thinks that having two separate P2P networks and protocols wouldn't make much sense in a world where transaction fees were much higher and every full node would also want to be a Lightning node. He also suggests focusing on Knots style consensus compatible forks of Core with limited additional functionality. Michael mentions his long-term idea of a bare bones Knots style Bitcoin implementation integrated with Core Lightning, but the dysfunction on the Bitcoin Core project is making him take the idea more seriously. He believes that the current way the Bitcoin Core project is being managed is not how an open-source project should be managed, with little discussion happening publicly and decisions being made behind closed doors or private IRC channels. However, Core Lightning seems to manage its project effectively in the open, although it doesn't have as many contributors or usage as Bitcoin Core. Michael proposes floating the idea of merging Bitcoin Core and Core Lightning to hear from people who are familiar with the entirety of the codebases. Although it would be an ambitious long-term project, he thinks it would be nice to focus on some ambitious projects given the lull in soft fork activation chaos.</summary>
    <published>2023-04-24T16:06:59+00:00</published>
  </entry>
</feed>
