<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A new Bitcoin implementation integrated with Core Lightning</title>
  <updated>2023-06-16T03:57:29.151110+00:00</updated>
  <author>
    <name>Michael Folkson 2023-04-19 10:54:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A new Bitcoin implementation integrated with Core Lightning</title>
    <updated>2023-06-16T03:57:29.151110+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021571.html" rel="alternate"/>
    <summary>The discussion in this email thread revolves around the proposed default policy changes for Lightning in Bitcoin and the potential benefits of integrating full nodes and Lightning nodes. The lack of a centralized resource for reviewing these proposed changes is acknowledged, with most discussions not taking place in public channels and developers not taking the BIP process seriously. However, the original poster provides some resources for review, including a Bitcoin StackExchange post and Bitcoin Core PR review clubs. The idea of integrating full nodes and Lightning nodes is debated, with one participant noting that separation of concerns makes sense to manage complexity, but the potential benefits of a tighter coupling between the two networks are also discussed. The potential effort required for such integration is also considered, with one participant questioning whether such effort would be better spent on separating the consensus logic. Finally, the idea of creating Knots-style consensus compatible forks of Core is also mentioned as an alternative to integrating full nodes and Lightning nodes, but its feasibility is questioned due to the difficulty of achieving consensus across different implementations.</summary>
    <published>2023-04-19T10:54:10+00:00</published>
  </entry>
</feed>
