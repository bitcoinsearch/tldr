<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RGB protocol announcement</title>
  <updated>2023-06-16T17:15:56.983518+00:00</updated>
  <author>
    <name>Dr Maxim Orlovsky 2023-04-18 23:16:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RGB protocol announcement</title>
    <updated>2023-06-16T17:15:56.983518+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021564.html" rel="alternate"/>
    <summary>In an email to Harding, Maxim Orlovsky discusses the issue of a proposed setup for RGB that he believes doesn't make sense. He explains that anything additional won't work for BTC unless it is lifted into a new layer. To fulfill the described setup, Bob has to create a new RGB contract featuring BTC* and providing specific conditions. The structure of the contract would be genesis and a "state extension." Normal flow with state transitions and witness bitcoin transactions would start only when Alice would like to spend that BTC*. Communications between Alice and Bob can happen wherever they want, including on decentralized networks like LN or using their RGB Nodes which will communicate through the RGB RPC protocol. Orlovsky also addresses the question of BTC* creation and states that there are two designs developed over years. One is for Lightning channels, which has the same level of trustlessness as pure BTC in LN. The other is on-chain "lifting," which is semi-trusted. Orlovsky also touches on Ruben Somsen's letter about the problem of non-publishable conditional statements being insecure in multiparty protocols, built by Lightning Labs after they had studied RGB. In conclusion, Orlovsky expects that Lightning Labs would try to take the solution he has described above and do another fundraising with the motto of transforming their product into “smart contracts on Lightning.”</summary>
    <published>2023-04-18T23:16:05+00:00</published>
  </entry>
</feed>
