<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Conjectures on solving the high interactivity issue in payment pools and channel factories</title>
  <updated>2023-06-15T19:57:18.561845+00:00</updated>
  <author>
    <name>Antoine Riard 2023-04-18 03:38:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Conjectures on solving the high interactivity issue in payment pools and channel factories</title>
    <updated>2023-06-15T19:57:18.561845+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021560.html" rel="alternate"/>
    <summary>The first part of the discussion focuses on the issue of interactivity and its impact on off-chain updates in Bitcoin. The liveliness/interactivity requirements increase with the number of users, making it difficult for casual users to participate. However, separating signing updates and monitoring the blockchain can effectively address this issue. The post discusses different security models for addressing the double-spend issue of off-chain Bitcoin transactions, highlighting two main models: prophylactic and corrective. A third solution is also discussed that uses separate control transactions and value transactions.The Tunable-Penalty Factory protocol is given as an example of a solution that allows incorrect transactions to be put on-chain and require another user to block them. Additionally, a revocation mechanism is proposed that could be attached to any equivocating branch of transactions, allowing single honest users to punish the publication in case of malicious coalitions. However, the penalty mechanism that allows a "wronged" user to take some or all of a dishonest user's funds could be exploited by a malicious coalition.The final context provided is brief and incomplete, only mentioning that an email was sent using a secure email service called Proton Mail and includes an HTML attachment that has been scrubbed. Without further information, it is impossible to generate a detailed summary.</summary>
    <published>2023-04-18T03:38:57+00:00</published>
  </entry>
</feed>
