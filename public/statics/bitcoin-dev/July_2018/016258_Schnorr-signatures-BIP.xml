<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Schnorr signatures BIP</title>
  <updated>2023-05-20T17:20:52.288080+00:00</updated>
  <author>
    <name>Pieter Wuille 2018-07-14 21:20:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Schnorr signatures BIP</title>
    <updated>2023-05-20T17:20:52.288080+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016258.html" rel="alternate"/>
    <summary>In a recent email exchange, Sjors Provoost asked several questions about the verification and signing process for Schnorr signatures. In response, it was explained that using compressed key serialization for verification is the easiest choice since public keys can have either even or odd Y coordinates and changing this would break existing key generation mechanisms. When it comes to choosing between (e,s) and (R,s) for signature encoding, there is hardly any benefit for choosing the former over the latter in elliptic curve-based Schnorr. For batch verification, randomization factors are generated independently by the verifier to prevent attackers from cancelling out valid signatures with invalid ones. As for the random number used for signing, while the BIP requires signers to use deterministically generated nonces, it cannot be enforced by the verifier due to privacy implications. Finally, some clarifications were made regarding the motivation behind standardized signatures, the typical message format, and some minor issues pointed out in a pull request.</summary>
    <published>2018-07-14T21:20:48+00:00</published>
  </entry>
</feed>
