<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Multiparty signatures</title>
  <updated>2023-05-20T17:24:59.032565+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-07-09 16:58:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Multiparty signatures</title>
    <updated>2023-05-20T17:24:59.032565+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016233.html" rel="alternate"/>
    <summary>In a recent email exchange, Erik Aronesty questioned the level of security assumptions in the proposed Schnorr construction for multiparty signing compared to Musig. Musig provides instructions on using the original schnorr construction for multiparty signing, which is secure against participants adaptively choosing their keys. It works as preprocessing on the keys and then continues with the naive protocol. The verifier is the same. However, going back to using a cryptographic hash, it seems that the suggested approach is "use naive interpolation of schnorr signatures". This approach can be used with the verifier proposed in the BIP but is insecure against adaptive key choice and potentially adaptive R choice. Picking interpolation locations with the hash of each key isn't sufficient to prevent cancellation attacks due to the remarkable power of Wagner's algorithm.</summary>
    <published>2018-07-09T16:58:38+00:00</published>
  </entry>
</feed>
