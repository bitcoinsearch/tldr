<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>URI scheme with optional bech32 address</title>
  <updated>2023-06-13T04:00:10.972769+00:00</updated>
  <author>
    <name>vv01f 2018-07-24 23:44:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>URI scheme with optional bech32 address</title>
    <updated>2023-06-13T04:00:10.972769+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016266.html" rel="alternate"/>
    <summary>A team of developers is working on a walleting application to generate bech32 and P2WPKH-nested-in-P2SH addresses. However, the payee cannot know in advance the technological capabilities of the payer, so a solution could be to encode both bech32 and P2SH addresses in a Bitcoin URI, with legacy wallets only seeing the P2SH address and new wallets able to see and use the bech32 address for transactions. To keep compatibility with BIP21, the 'path' field of the URI can be used for the P2WPKH-nested-in-P2SH address, while a new field (e.g. 'bech32') can be used for the bech32 address. The assumption is that wallets using this scheme will monitor incoming transactions on both addresses. The order of attributes should remain irrelevant, with clients checking all attributes of the same name. It is unclear if there is any precedence for the multiple use of an attribute in URI schemes.</summary>
    <published>2018-07-24T23:44:35+00:00</published>
  </entry>
</feed>
