<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalised taproot</title>
  <updated>2023-05-20T17:27:56.302587+00:00</updated>
  <author>
    <name>Anthony Towns 2018-07-13 01:51:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalised taproot</title>
    <updated>2023-05-20T17:27:56.302587+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016249.html" rel="alternate"/>
    <summary>A proposal for recursive taproot, using Pedersen Commitments, has been made. The proposal combines the taproot structure with a second generator in the curve to construct a point from two secrets, making it possible to create a pubkey point that can be spent by either signing directly or revealing extra conditions. To keep two sets of things secret, the proposal allows users to hide whether there are any lower layers until the merkle-tree of scripts is hit, and to not reveal the conditions corresponding with any of the keys other than the key being spent with. The proposal is as space-efficient as basic taproot and potentially more efficient than using a merkle tree with taproot when there are three spending paths. The author suggests deploying schnorr/taproot/mast first and adding graftroot/aggregation later, followed by generalised taproot at the same time as graftroot/aggregation.</summary>
    <published>2018-07-13T01:51:57+00:00</published>
  </entry>
</feed>
