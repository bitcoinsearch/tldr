<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>URI scheme with optional bech32 address</title>
  <updated>2023-05-20T17:31:17.414290+00:00</updated>
  <author>
    <name>Federico Tenga 2018-07-24 12:05:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>URI scheme with optional bech32 address</title>
    <updated>2023-05-20T17:31:17.414290+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
    <summary>A team is working on a walleting application that generates a bech32 address when receiving from a bech32 compatible wallet and a P2WPKH-nested-in-P2SH address when receiving for a legacy wallet. However, it is impossible for the payee to know in advance the technological capabilities of the payer. To solve this issue, the team proposed encoding both addresses in a Bitcoin URI, with the bech32 address being ignored by legacy wallets. The assumption is that wallets using this scheme will monitor incoming transactions on both addresses. To keep compatibility with BIP21, the field of the URI can be used for the P2WPKH-nested-in-P2SH address, and a new field can be used to encode the bech32 address. The team did not find any proposals addressing the same issue and is asking if anyone has already proposed something similar and if there are any major drawbacks to their proposal.</summary>
    <published>2018-07-24T12:05:27+00:00</published>
  </entry>
</feed>
