<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Multiparty signatures</title>
  <updated>2023-06-13T03:53:39.033724+00:00</updated>
  <author>
    <name>Dan Robinson 2018-07-09 15:57:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Multiparty signatures</title>
    <updated>2023-06-13T03:53:39.033724+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016232.html" rel="alternate"/>
    <summary>A proposed non-interactive multisig scheme based on threshold hash and Shamir polynomial interpolation was discussed on the bitcoin-dev mailing list. The scheme involves each party having a public key g*x', where x' is their private key, and rolling a random k' to compute r' = g*k'. A share of r' is broadcasted and used in lagrange interpolation across shares to compute g*k, e' = H(M) * r' and s' = k'-x*e'. The share of signature is (s', e'). Verification is the same as Schnorr, but only after using interpolation to get the needed (s, e, g*x) from shares of s', e' and g*x'. Security assumptions are that H(M) * r does not reveal any information about k, which relies on the same discrete logarithm assumptions as Bitcoin itself. The scheme has fewer moving parts than musig and may have a smaller attack surface because it's not additive and instead uses Shamir combination. While the proposal seems useful, a complete writeup is needed before considering its inclusion in Bitcoin.</summary>
    <published>2018-07-09T15:57:07+00:00</published>
  </entry>
</feed>
