<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Multiparty signatures</title>
  <updated>2023-06-13T03:53:14.563556+00:00</updated>
  <author>
    <name>Erik Aronesty 2018-07-08 18:23:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Multiparty signatures</title>
    <updated>2023-06-13T03:53:14.563556+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016220.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Erik Aronesty suggested changing the "e" term in the schnorr algorithm to hash of message (elligator style) to the power of r, rather than using concatenation. However, Tim Ruffing responded by asking how s = x*e would be computed if e is an element of group G and if Erik was aware of a threshold signature scheme for Schnorr signatures that already enables what he wants. Nevertheless, it was pointed out that the proposed change does not require the hash to be treated as a group member for signing and everything else about the algorithm works the same, only that it enables signatures to be computed much more simply.</summary>
    <published>2018-07-08T18:23:45+00:00</published>
  </entry>
</feed>
