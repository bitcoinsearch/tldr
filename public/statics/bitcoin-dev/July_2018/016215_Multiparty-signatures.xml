<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Multiparty signatures</title>
  <updated>2023-05-20T17:26:40.432966+00:00</updated>
  <author>
    <name>Erik Aronesty 2018-07-08 14:19:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Multiparty signatures</title>
    <updated>2023-05-20T17:26:40.432966+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016215.html" rel="alternate"/>
    <summary>The discussion revolves around the use of schnorr signatures in a more space-efficient manner. The suggestion is to change the "e" term in the algorithm to the hash of the message, to the power of r, rather than concatenation. It is argued that this change would not affect the security of the system as an attacker would still need to know k to compromise the private key. This change would enable m of n devices to sign a transaction without any of them knowing a private key. Each device can roll a random number as a share and the interpolation of that becomes the private key. The public shares can be broadcast and combined, and signature shares can also be broadcast and combined. The end result is that it is possible for an arbitrary set of devices to create a perfectly secure public-private key pair without the private key being anywhere.</summary>
    <published>2018-07-08T14:19:52+00:00</published>
  </entry>
</feed>
