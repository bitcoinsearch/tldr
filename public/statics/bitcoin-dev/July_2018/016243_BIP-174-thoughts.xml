<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 174 thoughts</title>
  <updated>2023-05-20T17:05:54.333559+00:00</updated>
  <author>
    <name>Pieter Wuille 2018-07-11 18:27:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 174 thoughts</title>
    <updated>2023-05-20T17:05:54.333559+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016243.html" rel="alternate"/>
    <summary>In a recent email exchange among developers, it was suggested to add a statement to the Partially Signed Bitcoin Transaction (PSBT) specification to explain that the result of combining two PSBTs from independent participants should be functionally equivalent to processing the original PSBT by A and then B in a sequence. The rationale behind this is that Combiners can always be replaced with just a different topology of data flow. In terms of conflicts between values, the Combiner which picks arbitrarily will not end up with something worse than what is already needed to deal with. Furthermore, an attacker can always drop the fields you don't understand before giving you the PSBT, making your behavior identical to one where you'd have ignored those fields in the first place. However, some are reluctant to sign an input with unknown data. Thus, signers are allowed to implement any policy they like about what they accept in signing.</summary>
    <published>2018-07-11T18:27:11+00:00</published>
  </entry>
</feed>
