<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 174 thoughts</title>
  <updated>2023-05-20T17:08:35.217388+00:00</updated>
  <author>
    <name>Achow101 2018-07-04 18:35:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 174 thoughts</title>
    <updated>2023-05-20T17:08:35.217388+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016198.html" rel="alternate"/>
    <summary>In an email, Matejcik raises concerns about the proposed Bitcoin Improvement Proposal (BIP) regarding strictness and security. The first concern is that the current resolution strategy for choosing from duplicate keys when combining is not a good one. They suggest changing it to "in case of conflicts, software MUST reject the conflicting PSBTs" or explaining why picking at random is safe. Rejecting PSBTs with conflicting values for the same key cannot be done because there could be two completely valid signatures for the same pubkey. Allowing combiners to choose any value also allows for intelligent combiners to choose the correct values in case of conflicts.The second concern is that there should be a clear strategy for signers when unknown fields are encountered. They suggest implementing the rule that signers will not sign an input with any unknown fields present. Finally, they suggest some minor points such as spelling out explicitly that if a field definition states that the key data is empty, an implementation must enforce this and reject PSBTs that contain non-empty data. Additionally, they recommend changing the wording of the "Combiner can detect inconsistencies" section to prescribe what the combiner is allowed to do rather than describe what it is capable of doing.</summary>
    <published>2018-07-04T18:35:16+00:00</published>
  </entry>
</feed>
