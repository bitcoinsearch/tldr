<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Setting the record straight on Proof-of-Publication</title>
  <updated>2023-06-09T14:46:39.905786+00:00</updated>
  <author>
    <name>Gareth Williams 2014-12-12 12:25:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Setting the record straight on Proof-of-Publication</title>
    <updated>2023-06-09T14:46:39.905786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/006983.html" rel="alternate"/>
    <summary>In an email exchange on December 12th, 2014, Peter Todd argued that using a limited-supply token in a proof-of-publication system allows for secure client-side validation, in contrast to the alternative of 2-way-pegging which requires users to trust miners not to steal the pegged funds. However, another participant in the exchange challenged the notion that "secure" and "client side validation" belong in the same sentence, arguing that the important question is whether the rest of the world considers a transaction valid. They suggest that validated data in the blockchain is more useful than unvalidated data with a mere proof of publication because it records what everybody else considers valid history and provides distributed consensus on transaction history. The participant further argues that proof-of-publication systems such as Counterparty and Mastercoin require users to trust that everyone else's client has the same interpretation of transaction history as theirs, without any evidence or guarantee that this will continue to be the case in the future. They describe this as a "horribly broken security model" and argue that they would prefer to use a sidechain with reasonable parameters that disincentivize peg theft as much as possible instead. The email exchange ends with a digital signature attached.</summary>
    <published>2014-12-12T12:25:53+00:00</published>
  </entry>
</feed>
