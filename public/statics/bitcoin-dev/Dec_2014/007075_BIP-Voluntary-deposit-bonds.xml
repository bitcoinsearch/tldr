<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: Voluntary deposit bonds</title>
  <updated>2023-06-09T15:11:44.367978+00:00</updated>
  <author>
    <name>Stephen Morse 2014-12-31 18:25:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: Voluntary deposit bonds</title>
    <updated>2023-06-09T15:11:44.367978+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/007075.html" rel="alternate"/>
    <summary>In a discussion on the Bitcoin-development mailing list, Gregory Maxwell and Stephen suggested ways to pay specific miners upon solving a block without risking paying other miners through pay-to-fee. Gregory replied to Sergio Lerner's suggestion of using Gavin's OP_EVAL by saying that it would need an additional change which overlays functionality to actually do something. Stephen proposed a solution through outputs in the coinbase transaction that have nValue == 0, then only applying the COINBASE_MATURITY rule to spending coinbase outputs that have non-zero value. This way, transactions could be made that are only valid after the miner specified solves a block with the coinbase having the same TxID referenced by the new transaction's input. However, this is still a hard fork, but might be easier than allowing the coinbase to spend prevouts.</summary>
    <published>2014-12-31T18:25:41+00:00</published>
  </entry>
</feed>
