<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Serialised P2SH HD chains</title>
  <updated>2023-06-09T14:32:36.573098+00:00</updated>
  <author>
    <name>Mike Hearn 2014-12-04 18:04:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Serialised P2SH HD chains</title>
    <updated>2023-06-09T14:32:36.573098+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/006962.html" rel="alternate"/>
    <summary>The author has written a Javascript program to print minimal protobufs to base64 for multisig and regular pay to address outputs. However, it is recommended to have an expiry time for practical usage. An HD-iterating payment request would require additional flags and fields but should only add a few bytes to the protocol. The author suggests that the above strings are short enough to set as a username in a mining program to maintain Eligius's general UX. To generate these codes, building specialized one-off SPV wallets using bitcoinj is easy with a template app and video tutorial on how to customize it. The final result is like Lighthouse, where running a program and getting an EXE installer or MSI for Windows, a DMG for MacOS, and a .deb for Linux is possible. Producing a GUI that lets users build a base64 encoded payment protocol request that supports HD iteration for one or more keys, along with a little BIP70 extension that says "although this output is a multisig output, please actually create a p2sh output," would make a nice starter project. It could also act as a watching wallet and plot a graph of mining payouts over time. One individual expressed interest in creating a shared HD wallet format to allow different devices to generate new addresses using standardized HD multisig chain-description formats. The format would describe HD chains in a separate section rather than in-line with the script. Unfortunately, there are still many details to work through before having a concrete proposal. Another individual proposed a solution to convey P2SH HD chains by creating a simple series of tokens indicating either an HD chain or literal script content.</summary>
    <published>2014-12-04T18:04:21+00:00</published>
  </entry>
</feed>
