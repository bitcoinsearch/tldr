<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The relationship between Proof-of-Publication and Anti-Replay Oracles</title>
  <updated>2023-06-09T15:00:35.752087+00:00</updated>
  <author>
    <name>Peter Todd 2014-12-21 15:29:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The relationship between Proof-of-Publication and Anti-Replay Oracles</title>
    <updated>2023-06-09T15:00:35.752087+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/007042.html" rel="alternate"/>
    <summary>In a discussion about the creation of new primitives operating on message, pubkey, and signature, Adam Back and Peter Todd debate the security implications of such a system. Todd suggests that using a trusted third party to implement AntiReplaySign(), which is only usable once for a given pubkey, would be more secure than trying to prevent double-spending with math alone. Back goes on to suggest an alternative method using one-show signatures, but Todd argues that it's not necessary to get into the specifics of crypto math so early and that verifying ECDSA signatures directly through Bitcoin scripting would work just as well. The main concern raised is the risk of Sybil attacks, but the details of how double-spend punishment would be implemented are considered premature optimization.</summary>
    <published>2014-12-21T15:29:37+00:00</published>
  </entry>
</feed>
