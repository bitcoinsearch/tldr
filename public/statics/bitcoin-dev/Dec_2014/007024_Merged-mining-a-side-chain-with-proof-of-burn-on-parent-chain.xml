<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merged mining a side chain with proof of burn on parent chain</title>
  <updated>2023-06-09T14:38:02.072871+00:00</updated>
  <author>
    <name>Tamas Blummer 2014-12-18 16:23:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merged mining a side chain with proof of burn on parent chain</title>
    <updated>2023-06-09T14:38:02.072871+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/007024.html" rel="alternate"/>
    <summary>The idea presented by Tamas Blummer for side chains is to use a new mining algorithm that burns Bitcoins to secure them, rather than relying on an external, real-world resource. The proposed method involves a burn transaction that sends at least n satoshis to an OP_RETURN h, with h mod m matching the Bitcoin block hash mod m for the block the burn transaction was mined into. A side chain block header sequence would be accepted as a side chain trunk if a sequence of Bitcoin SPV proofs for burn transactions prove that linked blocks have the highest cumulative burn compared to alternative sequences. The difficulty to mine with burn would be dynamic and imply a floating exchange rate between Bitcoin and the side coin. To contain fork rate, the parameter m would have to be adjusted dynamically, similar to Bitcoin's difficulty. It needs to increase if fork rate increases and decrease if no valid block is burned with Bitcoin blocks. Rational burn miners who frequently face and lose head-to-head runs with competing forks would increase their bet for the next burn cycle. The cumulative burn within an adjustment period (measured in Bitcoin blocks) is expected to rise in the face of high fork rate.</summary>
    <published>2014-12-18T16:23:53+00:00</published>
  </entry>
</feed>
