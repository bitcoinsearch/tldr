<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ACK NACK utACK "Concept ACK"</title>
  <updated>2023-06-09T14:34:43.720094+00:00</updated>
  <author>
    <name>Wladimir 2014-12-10 06:47:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ACK NACK utACK "Concept ACK"</title>
    <updated>2023-06-09T14:34:43.720094+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/006971.html" rel="alternate"/>
    <summary>In a Bitcoin-development mailing list, the terms "Concept ACK," "utACK," and "Tested ACK" were discussed. "Concept ACK" means agreeing with the idea and overall direction but not reviewing the code changes nor testing it. "utACK" means reviewing the code changes, but not putting it through any testing. "Tested ACK" means reviewing the code changes and verifying the functionality/bug fix. Wladimir mentioned that he only uses bare "ACK" if there is nothing to test in the first place, for example, for documentation changes. Matt Corallo mentioned that people use "utACK" and "tested ack" when being explicit. Sergio Lerner asked if there are more acronyms and if these terms are documented somewhere.</summary>
    <published>2014-12-10T06:47:53+00:00</published>
  </entry>
</feed>
