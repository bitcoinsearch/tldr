<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Two factor wallet with one-time-passwords</title>
  <updated>2023-06-07T14:40:37.002431+00:00</updated>
  <author>
    <name>Peter Todd 2013-08-08 18:20:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Two factor wallet with one-time-passwords</title>
    <updated>2023-06-07T14:40:37.002431+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-August/003084.html" rel="alternate"/>
    <summary>In a mailing list conversation, Peter Todd discusses the need for careful handling of incoming funds in a multi-party wallet to prevent attackers from fooling users into giving the wrong address. He suggests that funds sent to the wallet should be split up into discrete authorization amounts by all parties involved in authorizing outgoing payments. Todd also mentions that giving customers a physical private key, such as on a sheet of paper, could be legally desirable for transferring large amounts of Bitcoin. With multi-factor wallets, the customer provides one or more keys, while the final key is given to them on a sheet of paper with instructions to scan it on their phone via QR code. One-time passwords could also be used, and the final approval could be done over the phone by telling the customer magic words that unlock their funds. In both methods, there is still a risk of funds ending up locked due to a mistake, but there isn't financial incentive for it to happen. Todd concludes by expressing disappointment that OP_EVAL was not implemented, which would have allowed customers to provide a P2SH script to unlock funds easily.</summary>
    <published>2013-08-08T18:20:14+00:00</published>
  </entry>
</feed>
