<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment Protocol: BIP 70, 71, 72</title>
  <updated>2023-06-07T14:55:14.037287+00:00</updated>
  <author>
    <name>Mike Hearn 2013-08-20 10:05:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment Protocol: BIP 70, 71, 72</title>
    <updated>2023-06-07T14:55:14.037287+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-August/003195.html" rel="alternate"/>
    <summary>In this email thread, the discussion revolves around the Payment Protocol and its integration into products. Andreas Petersson asks whether there is a standardized invoice serialization in place and how Bitcoin Wallet would know about it if he paid for multiple items like two burgers and one Club Mate. Gavin Andresen suggests that there are XML-based standards for electronic invoicing that can be encapsulated in the 'invoice' field extension of the PaymentDetails message. Alternatively, they could come up with their own serialization mechanism or use a subset of an existing standard. The conversation moves on to the topic of communicating acceptance levels of transactions (unconfirmed, 1 conf, 6 conf) using several PaymentACK. However, Gavin explains that it's not possible because the Payment-&gt;PaymentACK communication round-trip is done in one non-persistent http request-response round-trip. He also adds that they don't want merchants to push messages to the wallet or wallets to poll the merchant but maybe a PaymentACK extension in version 2.0 could allow users to ask how the transaction is going at a specific URL in a certain amount of time.</summary>
    <published>2013-08-20T10:05:54+00:00</published>
  </entry>
</feed>
