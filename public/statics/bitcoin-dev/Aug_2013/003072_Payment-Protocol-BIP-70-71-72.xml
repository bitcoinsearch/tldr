<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment Protocol: BIP 70, 71, 72</title>
  <updated>2023-06-07T14:55:28.093092+00:00</updated>
  <author>
    <name>Mike Hearn 2013-08-07 21:17:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment Protocol: BIP 70, 71, 72</title>
    <updated>2023-06-07T14:55:28.093092+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-August/003072.html" rel="alternate"/>
    <summary>The discussion is centered around the concept of 'locked inputs' in wallet implementation. The issue arises when constructing a transaction but not broadcasting it right away, as the inputs must be locked to avoid accidental double-spending. Bitcoinj separates the idea of committing a transaction to the wallet from broadcasting it, however, transactions that haven't been seen in the chain yet will still be announced when a new peer is connected. It would require additional code to suppress this feature, and its usefulness is not clear. There is agreement that it should be the merchant's responsibility to get the transaction out there, but having the client do the broadcast as well can't really hurt, except perhaps for some privacy impact.</summary>
    <published>2013-08-07T21:17:41+00:00</published>
  </entry>
</feed>
