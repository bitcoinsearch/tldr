<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A statistical consensus rule for reducing 0-conf double-spend risk</title>
  <updated>2023-06-08T22:18:18.151879+00:00</updated>
  <author>
    <name>Christophe Biocca 2014-05-04 02:54:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A statistical consensus rule for reducing 0-conf double-spend risk</title>
    <updated>2023-06-08T22:18:18.151879+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-May/005684.html" rel="alternate"/>
    <summary>In a discussion on bitcointalk.org, an idea was proposed to address the issue of double-spending and lack of consensus in the blockchain. The proposal involves associating a timestamp with every transaction and adding a consensus rule that rejects blocks containing a transaction that respends an output spent by another locally accepted transaction if the time difference between the two transactions is greater than a certain threshold (T). The suggested threshold is T = 7.4 seconds, which would result in misidentification of the second spend by less than 1% of nodes. However, this proposal could potentially fork the network permanently since there is no magic way to achieve consensus, making it easy to split the network into two halves. To avoid this, a way to reconcile the split is necessary, such as accepting the offending block once it's two or more deep. But since the rule isn't enforceable, miners are likely to continue mining on the longest chain, rendering the proposal ineffective. The proposal presents the first consensus rule that anticipates less than 100% agreement, but the parameters can be chosen to remain conservative. Additionally, a fail-safe condition was suggested to drop the rule if a block has six confirmations to prevent a fork in unusual network circumstances. However, more data is needed to make any progress towards this or any solution. The network is currently not transparent to double-spend attempts, so the first step is to share data broadly by relaying first double-spend attempts.</summary>
    <published>2014-05-04T02:54:26+00:00</published>
  </entry>
</feed>
