<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ECDH in the payment protocol</title>
  <updated>2023-05-19T18:51:03.910167+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-05-09 18:38:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ECDH in the payment protocol</title>
    <updated>2023-05-19T18:51:03.910167+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-May/005742.html" rel="alternate"/>
    <summary>In this email conversation from May 2014, Bitcoin developer Peter Todd discusses his idea for a payment system that would eliminate edge cases and allow for proof of payment. Currently, every payment ties up txouts, making it impractical to base atomicity of payments on whether or not the payee broadcasts the transaction. Todd's proposed solution involves signed PaymentACK messages and scriptSig-less Bitcoin transactions with byte size and sigop count limits. The sender would send the payment to the receiver before signing the transaction, and the receiver would only ACK if the transaction satisfies the request, is within time limits, and isn't unlikely to confirm. If the sender likes the ACK, he can either send the full transaction or broadcast it himself after obtaining an ACK. This system would completely remove the chance that the Bitcoin transaction gets broadcast without the receiver liking it and is compatible with multiple payments in one transaction. However, there are still issues with the system, such as the possibility of the sender withholding the signed transaction or the receiver claiming to have never received it.</summary>
    <published>2014-05-09T18:38:22+00:00</published>
  </entry>
</feed>
