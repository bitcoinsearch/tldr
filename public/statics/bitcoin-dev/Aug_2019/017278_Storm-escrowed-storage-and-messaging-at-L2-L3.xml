<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Storm: escrowed storage and messaging at L2/L3</title>
  <updated>2023-06-13T21:03:30.951564+00:00</updated>
  <author>
    <name>Dr Maxim Orlovsky 2019-08-21 10:51:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Storm: escrowed storage and messaging at L2/L3</title>
    <updated>2023-06-13T21:03:30.951564+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-August/017278.html" rel="alternate"/>
    <summary>The email conversation between ZmnSCPxj and Maxim Orlovsky has been provided, where they discuss the issue with probabilistic proof and possible solutions. The need for an asymmetrical encryption that separates encryption and decryption keys is highlighted. ZmnSCPxj proposes a solution using EC, which can be used to encrypt/decrypt with hash of the secret decryption key d whose equivalent encryption key is e. The possibility of implementing the solution with threshold ECDSA signatures is also discussed. They also acknowledge that intermediate nodes potentially become subject to attack in case of routing failure and thus, the solution is limited to a single LN channel. However, ZmnSCPxj proposes an interesting solution that uses EC magic homomorphisms to get around this problem. Maxim Orlovsky intends to analyze it in more detail and open an issue on GitHub for discussion.</summary>
    <published>2019-08-21T10:51:58+00:00</published>
  </entry>
</feed>
