<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin vaults with anti-theft recovery/clawback mechanisms</title>
  <updated>2023-06-13T20:52:30.430837+00:00</updated>
  <author>
    <name>Sergio Demian Lerner 2019-08-08 02:09:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin vaults with anti-theft recovery/clawback mechanisms</title>
    <updated>2023-06-13T20:52:30.430837+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-August/017236.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Bryan Bishop proposed a solution to one of the biggest problems with the vault scheme. The problem is that an attacker could steal the hot wallet private key and wait for the vault's owner to make a delayed-spend transaction to initiate a withdrawal from the vault. To mitigate this, Bishop suggests choosing a stipend or withdrawal amount per withdrawal period like x% of the funds. This limits the total stolen funds to x% because once the funds are stolen the user would know their hot key is compromised. Bishop also mentions that there's currently no way to force an attacker to reveal his key on the blockchain while also forcing the attacker to use a timelock before the key can spend the coins. He is curious about what the smallest least invasive soft-fork would be for enabling this kind of timelock. He then goes on to mention related work, including a proposal from 2018 on the bitcoin-dev mailing list, a blog post discussing how SegWit makes security better, a YouTube video, and a Bitcointalk thread. In response, Dustin Dettmer asks for more information on how Bishop proposes the vault scheme would work, specifically whether it uses new keys or derivation paths on the same key.</summary>
    <published>2019-08-08T02:09:20+00:00</published>
  </entry>
</feed>
