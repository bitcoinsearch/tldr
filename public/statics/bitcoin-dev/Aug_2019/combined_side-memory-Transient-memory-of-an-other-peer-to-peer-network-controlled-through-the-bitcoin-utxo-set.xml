<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - side memory - Transient memory of an other peer to peer network controlled through the bitcoin utxo set</title>
  <updated>2023-06-13T21:00:42.138268+00:00</updated>
  <author>
    <name>Tamas Blummer 2019-08-14 02:32:40</name>
  </author>
  <author>
    <name>Tamas Blummer 2019-08-14 02:32:40</name>
  </author>
  <author>
    <name>Tamas Blummer 2019-08-14 02:32:40</name>
  </author>
  <link href="bitcoin-dev/Aug_2019/017264_side-memory-Transient-memory-of-an-other-peer-to-peer-network-controlled-through-the-bitcoin-utxo-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2019/017264_side-memory-Transient-memory-of-an-other-peer-to-peer-network-controlled-through-the-bitcoin-utxo-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2019/017264_side-memory-Transient-memory-of-an-other-peer-to-peer-network-controlled-through-the-bitcoin-utxo-set.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - side memory - Transient memory of an other peer to peer network controlled through the bitcoin utxo set</title>
    <updated>2023-06-13T21:00:42.138268+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-August/017264.html" rel="alternate"/>
    <summary>Blockchain developer Tamas Blummer has proposed a design pattern for peer-to-peer networks, called side memory. The idea behind side memory is to associate data with a unique coin in the UTXO set, limiting the scarcity of Bitcoin. There are several ways to associate data with a UTXO, including requiring more satoshis to be committed. However, nodes of the other network would have to run a Bitcoin node as well to observe changes in the UTXO. To simplify the task, Tamas proposes using time locks and SPV validation. The UTXO committing to associated data would have a relative timelock so that it cannot be spent within n blocks after entering the UTXO set. A network node that originally publishes the data would also send an SPV proof of the inclusion of associated commitment into the Bitcoin blockchain to its peers. Other network nodes would then only need to observe the progress of Bitcoin's header chain to validate the proof before accepting data into their transient store. Nodes that publish new data would have to listen to all blocks after they broadcast the commitment until they see it confirmed and can extract the proof.The network nodes could use IBLTs (Invertible Bloom Lookup Tables) to distribute associated data. Such an associated network would be lightweight since it only observes and stores Bitcoin's header chain and its own peer-to-peer network. Tamas plans to release the code of a network that implements this design pattern with the SPV optimization and IBLTs and is looking for help testing it in a limited deployment before releasing it publicly. This pattern is useful as sybill attack protection of coinjoin networks as time-locked commitments can act as fidelity bonds.</summary>
    <published>2019-08-14T02:32:40+00:00</published>
  </entry>
</feed>
