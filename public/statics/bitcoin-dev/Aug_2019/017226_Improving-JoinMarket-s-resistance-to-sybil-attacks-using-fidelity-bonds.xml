<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving JoinMarket's resistance to sybil attacks using fidelity bonds</title>
  <updated>2023-06-13T20:20:59.027909+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-08-06 23:33:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving JoinMarket's resistance to sybil attacks using fidelity bonds</title>
    <updated>2023-06-13T20:20:59.027909+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-August/017226.html" rel="alternate"/>
    <summary>In a Bitcoin-dev mailing list, ZmnSCPxj warns that there is pressure to pool proof-of-work due to tiny non-linearities caused by Proximity Premium and Variance Discount flaws which can lead to the failure of schemes. Any non-linearity in any fidelity bond scheme exerts the same pooling pressure. 2P-ECDSA is possible but more complex than muSig, hence just banning musig for bonds is not the answer. Efforts to expand ECDSA to more than two-party n-of-n "true" multisignatures are already ongoing. One might attempt to use transaction malleability as protection, but it only considers ways to securely aggregate within the Bitcoin universe. ZmnSCPxj mentions that there exists something called "contract law" in the real world which is a half-baked implementation of Bitcoin cryptographic smart contracts. In the real world, an aggregator can accept money with a promise to return that money in the future with additional funds. If the aggregator fails to uphold its promise, then some authority entity within the real world imposes punishments on them. These arrangements already exist in the real world, under the name of time deposits.</summary>
    <published>2019-08-06T23:33:19+00:00</published>
  </entry>
</feed>
