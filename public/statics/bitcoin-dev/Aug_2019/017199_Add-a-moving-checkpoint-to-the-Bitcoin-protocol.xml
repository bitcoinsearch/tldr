<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Add a moving checkpoint to the Bitcoin protocol</title>
  <updated>2023-06-13T20:40:30.487892+00:00</updated>
  <author>
    <name>Kenshiro [] 2019-08-01 10:17:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Add a moving checkpoint to the Bitcoin protocol</title>
    <updated>2023-06-13T20:40:30.487892+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-August/017199.html" rel="alternate"/>
    <summary>The discussion revolves around the implementation of a moving checkpoint rule in the Bitcoin protocol and its potential limitations. The concern is raised that the rule should have some limits to allow the network to self-heal instead of relying on humans to detect splits or stop nodes. The suggestion is made that if two forks have a block height difference of 432 blocks (about 3 days) or more, then the moving checkpoint rule is ignored, allowing the network to self-heal in an automated way. This would prevent a history rewrite of more than 24 hours during a 51% attack for three days, giving enough time to change the protocol. However, it is pointed out that a netsplit cannot be detected but only suspected, making manual communication error-prone and centralizing. Stopping nodes during netsplits may also introduce several attack vectors. There is a concern that if a netsplit occurs and the rest of the world lacks the hashpower to assert itself as the proper branch, it may have to delete its local history, which is not a price worth paying to limit reorgs to 24 hours. Alistair Mann, one of the participants, is unconvinced that the moving checkpoint rule would improve Bitcoin.</summary>
    <published>2019-08-01T10:17:56+00:00</published>
  </entry>
</feed>
