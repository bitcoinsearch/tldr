<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>does "stubbing" off Merkle trees reduce initial download bandwidth?</title>
  <updated>2023-05-18T22:54:19.931785+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-01-02 22:41:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>does "stubbing" off Merkle trees reduce initial download bandwidth?</title>
    <updated>2023-05-18T22:54:19.931785+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001027.html" rel="alternate"/>
    <summary>In an email conversation dated January 2, 2012, Elden Tyrell and Christian Decker discussed the requirement of full blocks to detect usable inputs for future outgoing transactions. Tyrell stated that a paranoid client cannot confirm receipt of coins until it has an unstubbed copy of the entire chain. This is because it needs the whole unstubbed chain to be sure that incoming coins haven't already been spent. However, Decker disagreed and suggested that if a node controls the private keys for a transaction and that transaction makes it into the chain, then it can safely assume that its unspent once it's buried a few blocks into the chain. This is the essence of a Simplified Payment Verification (SPV) node. Decker further clarified that SPV nodes cannot perform this function for transactions that aren't their own. However, he added that the system could be extended in a compatible manner to make this possible by referring to a discussion on bitcointalk.org.</summary>
    <published>2012-01-02T22:41:10+00:00</published>
  </entry>
</feed>
