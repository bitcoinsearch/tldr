<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 20 Rejected, process for BIP 21N</title>
  <updated>2023-06-05T02:17:38.524583+00:00</updated>
  <author>
    <name>Amir Taaki 2012-01-31 14:27:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 20 Rejected, process for BIP 21N</title>
    <updated>2023-06-05T02:17:38.525583+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001132.html" rel="alternate"/>
    <summary>The proposed BIP 20 lacks support among popular implementations such as Bitcoin-Qt, Electrum, MultiBit, and Bitcoin-JS. These users facing GUI projects with some URI Scheme hold a significant weight in the decision-making process. Although Bitcoin-Qt has the majority of users, relying on that fact is discouraged. It is suggested that instead of accepting BIP 21, which is a copy-paste version of BIP 20 without some sections, we should reject it and come up with a new standard. However, since BIP 21 is still in draft form, agreeing on something and running it by BlueMatt might be the best course of action to make it the new BIP 21. There seems to be a consensus forming on most parts of the proposal, except for the contentious issue of sending private keys. Additionally, there's a discussion about adding a time-to-expire field for merchants, which seems like a good idea. One problem with BIP 20 is its incompatibility with various web standards, including HTML and URI, which solely use decimal numbers. Breaking from this tradition does not seem necessary. It would be ideal if all code used a universal language, such as Esperanto, but this is not the case. Ultimately, we live in a world that counts in decimals, speaks English, uses Windows, and worships God.</summary>
    <published>2012-01-31T14:27:26+00:00</published>
  </entry>
</feed>
