<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Quote on BIP 16</title>
  <updated>2023-05-18T22:57:11.637277+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-01-29 05:19:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Quote on BIP 16</title>
    <updated>2023-05-18T22:57:11.637277+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001087.html" rel="alternate"/>
    <summary>In a conversation between Amir Taaki and Gavin Andresen, the former questioned the possibility of having a 70-byte long address without using a P2SH scheme. However, Gavin clarified that P2SH prevents the need for such long addresses. P2SH stands for "pay to script hash," which only requires hashes of 128-256 bits in size for acceptable security levels. Without some form of P2SH, a personal choice for payment methods would require the use of "P2S" or pay-to-script. This method involves encoding the full script specification instead of just its hash, resulting in much longer addresses. However, P2S has several problems, such as being highly vulnerable to invisible substitution and being responsible for fees related to enlarged transactions. It also creates another input vector for non-trivial data that must be inspected and validated and leaves complicated release rules in transaction outputs. P2SH reduces output sizes to the absolute minimum without inflating total data size, making it more efficient than P2S.</summary>
    <published>2012-01-29T05:19:44+00:00</published>
  </entry>
</feed>
