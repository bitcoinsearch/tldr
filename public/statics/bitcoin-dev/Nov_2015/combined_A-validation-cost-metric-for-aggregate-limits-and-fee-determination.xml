<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A validation-cost metric for aggregate limits and fee determination</title>
  <updated>2023-06-11T00:52:06.816688+00:00</updated>
  <author>
    <name>Mark Friedenbach 2015-11-04 22:47:35</name>
  </author>
  <author>
    <name>Mark Friedenbach 2015-11-04 22:47:35</name>
  </author>
  <author>
    <name>Gavin Andresen 2015-11-05 09:23:44</name>
  </author>
  <author>
    <name>Gavin Andresen 2015-11-05 09:23:44</name>
  </author>
  <author>
    <name>Gavin Andresen 2015-11-05 09:23:44</name>
  </author>
  <author>
    <name>Mark Friedenbach 2015-11-04 22:47:35</name>
  </author>
  <link href="bitcoin-dev/Nov_2015/011662_A-validation-cost-metric-for-aggregate-limits-and-fee-determination.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011662_A-validation-cost-metric-for-aggregate-limits-and-fee-determination.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011663_A-validation-cost-metric-for-aggregate-limits-and-fee-determination.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011663_A-validation-cost-metric-for-aggregate-limits-and-fee-determination.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011663_A-validation-cost-metric-for-aggregate-limits-and-fee-determination.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011662_A-validation-cost-metric-for-aggregate-limits-and-fee-determination.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A validation-cost metric for aggregate limits and fee determination</title>
    <updated>2023-06-11T00:52:06.816688+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011662.html" rel="alternate"/>
    <summary>During the first Scaling Bitcoin workshop in Montreal, a presentation was given on "bad blocks" that take too long to validate. The design parameters assume that validation costs scale linearly with transaction or block size, but certain transactions have quadratic scaling validation costs. Solutions like Gavin's code exist but leave gaps between average-case and worst-case scenarios. The presenter suggests using a linear function of various costs involved to determine the "size" of the transaction. Others suggest a "net-UTXO" metric to replace or supplement the validation-cost metric. This method applies an extra fee cost to create unspent outputs, making dust outputs more expensive than regular spend outputs.The author discusses the problem of measuring CPU and bandwidth costs for validating a block. They propose using a common unit of measurement, "percentage of maximum validation ability for some reference hardware running with a network connection capable of some reference bandwidth." UTXO growth is harder to measure, so a reasonable growth rate should be chosen. The author considers whether miners or wallets need to solve a bin-packing problem to determine which transactions to put into their blocks or what fees to attach. They suggest using fee-per-validation-cost instead of fee-per-kilobyte and propose breaking the cost into three (UTXO growth, CPU, and bandwidth) and letting miners set reasonable transaction selection policies that keep each of the three under whatever caps are imposed on each.The presenter will be submitting a talk proposal for Scaling Bitcoin on this topic and is open to feedback from the developer community.</summary>
    <published>2015-11-04T22:47:35+00:00</published>
  </entry>
</feed>
