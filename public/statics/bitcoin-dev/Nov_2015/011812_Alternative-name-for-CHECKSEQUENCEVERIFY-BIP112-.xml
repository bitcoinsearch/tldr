<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Alternative name for CHECKSEQUENCEVERIFY (BIP112)</title>
  <updated>2023-06-11T01:20:33.751404+00:00</updated>
  <author>
    <name>Eric Lombrozo 2015-11-25 01:14:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Alternative name for CHECKSEQUENCEVERIFY (BIP112)</title>
    <updated>2023-06-11T01:20:33.752401+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011812.html" rel="alternate"/>
    <summary>The discussion is about finding an alternative name for the opcode CHECKSEQUENCEVERIFY (CSV) in Bitcoin Improvement Proposal 112 (BIP112). From a system developer standpoint, CHECKMATURITYVERIFY ties together the semantics of this opcode with another existing feature in the system (coinbase maturity). However, from an application developer standpoint, the concept of a timelock is more relevant. Maturity is a concept that was introduced for the sake of reducing the disruptive impact of reorgs. Timelocks, on the other hand, are typically used to control when funds can be moved. Eric suggests using RCLTV or RCHECKLOCKTIMEVERIFY as they make the relationship between two opcodes, CHECKSEQUENCEVERIFY and CheckLockTimeVerify (CLTV), more explicit. He also highlights the possibility of adding opcodes that can push values onto the stack with segregated witness. Jorge Timon agrees with Eric and suggests using CMV instead of the check_x_verify naming pattern.</summary>
    <published>2015-11-25T01:14:55+00:00</published>
  </entry>
</feed>
