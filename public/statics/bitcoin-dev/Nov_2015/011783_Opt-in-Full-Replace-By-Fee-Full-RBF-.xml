<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Opt-in Full Replace-By-Fee (Full-RBF)</title>
  <updated>2023-06-11T01:17:08.339517+00:00</updated>
  <author>
    <name>Peter Todd 2015-11-17 00:42:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Opt-in Full Replace-By-Fee (Full-RBF)</title>
    <updated>2023-06-11T01:17:08.339517+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011783.html" rel="alternate"/>
    <summary>Bitcoin Core developers have decided to merge the opt-in Full-RBF pull request, which will allow senders to opt into full-RBF semantics for their transactions in a way that allows receivers to detect if the sender has done so. The existing "first-seen" mempool semantics will remain unchanged for transactions that do not opt-in. This feature is likely to be included in Bitcoin Core v0.12.0 pending code review. A transaction is considered to have opted into full-RBF semantics if nSequence &lt; (2^32 - 2), indicating that the sender may reissue the transaction with a higher fee. The first version of RBF was controversial due to concerns about it being used to double-spend, but opt-in Full-RBF addresses these concerns by allowing receivers to distinguish between opt-in and non-opt-in transactions. The opt-in Full-RBF pull request was created in response to feedback from users who wanted more control over the fees they paid for transactions. With this feature, users can increase the fee on a transaction that is taking longer than expected to confirm, without having to worry about the transaction being rejected by nodes that don't support RBF. Overall, the opt-in Full-RBF feature provides users with greater flexibility and control over their transactions, while also addressing security concerns associated with the original RBF implementation.</summary>
    <published>2015-11-17T00:42:18+00:00</published>
  </entry>
</feed>
