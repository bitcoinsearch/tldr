<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Alternative name for CHECKSEQUENCEVERIFY (BIP112)</title>
  <updated>2023-06-11T01:20:48.366569+00:00</updated>
  <author>
    <name>Dave Scotese 2015-11-27 04:08:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Alternative name for CHECKSEQUENCEVERIFY (BIP112)</title>
    <updated>2023-06-11T01:20:48.367570+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011824.html" rel="alternate"/>
    <summary>The article discusses the limited availability of single-byte opcodes left, with only ten single-byte OP_NOPx opcodes defined. The article also highlights that 15 opcodes do not exist anymore in the protocol due to bugs that could crash any Bitcoin node if exploited or allowed anyone to spend anyone's bitcoins. Additionally, there are 66 single-byte values that are currently reserved, 186 - 252 (0xba - 0xfc). The author argues that it seems trivial to him to add a comment in script.h, which would neither slow compilation nor confuse anyone but could lead the curious to explore history and expand their knowledge. Furthermore, the author advocates leaving breadcrumbs in code comments (and enum/variable names) for curious coders to use as inspiration for studying history since modern IDEs are well-equipped to make skipping or hiding comments easy.The article also talks about the name OP_CHECKSEQUENCEVERIFY, which should not be changed. The author explains that each person has a single best reason not to change it, and finding other reasons suggests that one's top reason is not good enough. Moreover, the article highlights that the same goes for changing it. In any case, it is 178 (0xb2), and app developers can call it whatever they want.Additionally, the article provides an email thread from bitcoin-dev on the naming of BIP112 opcode CHECKSEQUENCEVERIFY (OP_CSV). The thread discusses renaming the opcode specifically for its use case, verifying the time/maturity of transaction inputs relative to their inclusion in a block. The suggestions made in the email thread include CHECKMATURITYVERIFY, RELATIVELOCKTIMEVERIFY, RCHECKLOCKTIMEVERIFY, and RCLTV.</summary>
    <published>2015-11-27T04:08:35+00:00</published>
  </entry>
</feed>
