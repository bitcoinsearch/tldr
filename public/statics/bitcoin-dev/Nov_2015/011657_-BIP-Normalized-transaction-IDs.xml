<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP] Normalized transaction IDs</title>
  <updated>2023-06-11T00:32:25.948915+00:00</updated>
  <author>
    <name>Christian Decker 2015-11-03 20:37:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP] Normalized transaction IDs</title>
    <updated>2023-06-11T00:32:25.948915+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011657.html" rel="alternate"/>
    <summary>Christian Decker provided an update on the proposed Bitcoin Improvement Proposal (BIP). He made some changes to the proposal, including using a simple version number instead of binary flags and adding Schnorr signatures. The BIP has been assigned number 130. While intrigued by Luke Dashjr's idea of empty scriptsigs and shipping signatures in external scripts, Decker noted that the proposal uses on-the-fly normalization due to the lack of a good way to relay external scripts. He is open to suggestions and willing to amend or withdraw the proposal if there is a better solution. Regarding malleability, Decker expressed doubt that such issues can be fixed at all, as a single signer's ability to double-spend by arbitrarily appending or replacing inputs/outputs is not fixable, in his opinion. This could cause any future transaction built on its outputs to be orphaned. He asked about the perfect properties for such a fix. Luke Dashjr responded, arguing that wallets should ideally add more outputs to unconfirmed transactions every time they send another transaction. Spending unconfirmed change is the wrong approach. Half-fixing malleability encourages inefficient behavior in multiple ways and does not make it malleability-safe.</summary>
    <published>2015-11-03T20:37:44+00:00</published>
  </entry>
</feed>
