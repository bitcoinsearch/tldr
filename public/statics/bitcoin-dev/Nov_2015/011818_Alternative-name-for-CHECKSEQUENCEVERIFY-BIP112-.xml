<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Alternative name for CHECKSEQUENCEVERIFY (BIP112)</title>
  <updated>2023-06-11T01:21:52.198675+00:00</updated>
  <author>
    <name>Mark Friedenbach 2015-11-25 23:05:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Alternative name for CHECKSEQUENCEVERIFY (BIP112)</title>
    <updated>2023-06-11T01:21:52.198675+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011818.html" rel="alternate"/>
    <summary>The originator of the name CHECKSEQUENCEVERIFY has explained why the proposed alternatives do not stand up. The names were chosen purposefully to illustrate what they do, and the semantics are not limited to relative lock-time / maturity only. Third, single-byte opcode space is limited. There are less than 10 such opcodes left. As for the alternatives, they capture only the initial use case of nSequence. The imagined use cases for CHECKSEQUENCEVERIFY has to do with sequencing execution pathways of script. Previously CHECKMATURITYVERIFY was a hypothicated opcode that directly checked the minimum age of inputs of a transaction. RELATIVELOCKTIMEVERIFY was also a hypothicated opcode that would check a ficticious nRelativeLockTime field, which does not exist. For this reason, the BIP112 should be renamed specifically for its use case, which is verifying the time/maturity of transaction inputs relative to their inclusion in a block. Suggestions for renaming include CHECKMATURITYVERIFY, RELATIVELOCKTIMEVERIFY, RCHECKLOCKTIMEVERIFY, and RCLTV.</summary>
    <published>2015-11-25T23:05:50+00:00</published>
  </entry>
</feed>
