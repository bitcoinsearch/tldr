<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Compatibility requirements for hard or soft forks</title>
  <updated>2023-06-11T00:46:36.973524+00:00</updated>
  <author>
    <name>Tier Nolan 2015-11-01 23:46:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Compatibility requirements for hard or soft forks</title>
    <updated>2023-06-11T00:46:36.973524+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011643.html" rel="alternate"/>
    <summary>In a thread on the Bitcoin-dev mailing list, a user named jl2012 emphasized the importance of making it clear that non-standard transactions and scripts may become invalid in the future. The discussion centered around situations where locked coins become unspendable, which could occur due to unavoidable circumstances. It was suggested that soft forks that make unspent transaction outputs (UTXOs) unspendable should increase the transaction version number to make the change opt-in. The disabled opcodes, such as OP_CAT, were previously implemented as a DOS/network security change. However, invalidating locked coins is another reason why they shouldn't have been permanently disabled. The author suggests that it would have been better to disable them for six months to allow people to retrieve their coins once the time had passed. Protecting the network required some limitations to be added to prevent nodes from crashing.Guidelines were provided for making changes to the Bitcoin protocol, including increasing transaction version numbers if possible and giving reasonable notice when contemplating changes. Non-opt-in changes will only be made to protect the integrity of the network. Locked transactions should be safe to use if they can be validated without excessive load on the network, even if they are non-standard. A separate post by Gavin Andresen discussed whether any one-megabyte transaction that is valid under existing rules should also be valid under new rules. The concern was that there could be expensive-to-validate transactions created and given a locktime in the future, and changing validation rules to be more strict so that those transactions are invalid would be an unacceptable confiscation of funds. However, it was noted that it is extremely unlikely that such large, timelocked transactions exist. The requirement was proposed to be relaxed so that only valid 100,000-byte transaction under old consensus rules must be valid under new consensus rules.</summary>
    <published>2015-11-01T23:46:39+00:00</published>
  </entry>
</feed>
