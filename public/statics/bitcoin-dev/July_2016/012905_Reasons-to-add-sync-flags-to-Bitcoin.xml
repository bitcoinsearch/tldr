<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reasons to add sync flags to Bitcoin</title>
  <updated>2023-06-11T19:11:00.985884+00:00</updated>
  <author>
    <name>Nick ODell 2016-07-26 22:03:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reasons to add sync flags to Bitcoin</title>
    <updated>2023-06-11T19:11:00.986405+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012905.html" rel="alternate"/>
    <summary>A proposal was made by Moral Agent to improve mining decentralization and reduce variance in mining profitability. The idea is to use a sync flag as a message that propagates through the network at maximum speed to act as the starting flag in a race, causing all miners to simultaneously begin hashing the next block. The sync flag consists of the hash of the previous block, a Bitcoin address, and a nonce. The protocol is modified to demand that the block produced 10 blocks after the sync flag must allocate 25% of the block reward to the address published by the sync flag. The proposal has several benefits including reducing or eliminating SPV mined blocks, reducing or eliminating empty blocks, smoothing out resource usage, making transaction stuffing by miners be either obvious or costly, reducing the latency bottleneck on throughput, giving miners something to do while they wait for attractive transactions to appear, and creating a more efficient price discovery mechanism for transactions. It can also be easily done with a soft fork. However, mining the sync flag isn't compatible with the payout structure of non hot-wallet pools like Eligius or decentralized pools like p2pool, which need the ability to split a reward among multiple parties. Instead of giving an address to send the funds to, the hash of the transaction allowed to spend the sync flag output could be included.</summary>
    <published>2016-07-26T22:03:41+00:00</published>
  </entry>
</feed>
