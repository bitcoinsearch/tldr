<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: extend signmessage/verifymessage to P2SH multisig</title>
  <updated>2023-06-06T14:57:02.650941+00:00</updated>
  <author>
    <name>Alan Reiner 2013-04-14 18:24:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: extend signmessage/verifymessage to P2SH multisig</title>
    <updated>2023-06-06T14:57:02.650941+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002411.html" rel="alternate"/>
    <summary>Peter Todd and Alan Reiner discuss the extension of message signing by adding a proper ASCII-armored format to it. The new format will encode the signed message next to the signature, so there's no ambiguity about what was signed. It will be primarily offered as an option for users to copy an ASCII-armored block of text into the client app. The app pops up with a window that says "The following message has a valid signature from address 1XKjf32kJbf...". The format to follow should be RFC2440, section 7 "Cleartext signature framework". This method doesn't need to be done before other signmessage changes. There may be an issue passing \r's through the RPC interface; the RFC specifies CRLF line endings. Alan will lead by example and implement the format in Armory.</summary>
    <published>2013-04-14T18:24:34+00:00</published>
  </entry>
</feed>
