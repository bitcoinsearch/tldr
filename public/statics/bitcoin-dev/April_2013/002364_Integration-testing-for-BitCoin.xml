<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Integration testing for BitCoin</title>
  <updated>2023-05-19T16:43:46.368941+00:00</updated>
  <author>
    <name>Matt Corallo 2013-04-05 17:33:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Integration testing for BitCoin</title>
    <updated>2023-05-19T16:43:46.368941+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002364.html" rel="alternate"/>
    <summary>The BlueMatt test-scripts run on each pull request and new commit to master, testing block acceptance rules. A 2013 post by Adam Ritter on the Bitcoin-development mailing list proposed integration testing for Bitcoin. He believed it would make the code more stable, enable testing of attack scenarios, and allow easier refactoring and extension of code. Ritter's plan can be found on a GitHub repository proposal. The first implementation should use JSON-RPC interface and build up as much verification of BitCoin network as possible in C++. The second implementation should use the same interface but leverage the BitCoin code directly. For this, the BitCoin client has to be refactored as a library getting rid of all global variables so that multiple BitCoin clients can be run in the same process. The improvement of the second implementation should have dependency injection for time and finding/verifying a mined block.</summary>
    <published>2013-04-05T17:33:43+00:00</published>
  </entry>
</feed>
