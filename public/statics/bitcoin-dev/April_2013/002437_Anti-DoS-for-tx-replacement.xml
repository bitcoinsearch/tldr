<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anti DoS for tx replacement</title>
  <updated>2023-06-06T15:06:26.608108+00:00</updated>
  <author>
    <name>John Dillon 2013-04-23 12:40:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anti DoS for tx replacement</title>
    <updated>2023-06-06T15:06:26.608108+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002437.html" rel="alternate"/>
    <summary>In a message sent on the Bitcoin-development mailing list, a member congratulated Jeremy and Peter for creating a design that does not depend on replacement to work. The author notes that this approach is often the right solution and mentions Peter's work on fidelity bonded banking as an example of finding a way to overcome scalability issues instead of relying on an easy solution with insecure design. Jeremy responds, discussing his testing with petertodd and the fact that while Test-Net allows non-final transactions into the mempool, Main-Net rejects them. He notes that this type of design works well with Main-Net rules and that an attacker would need to coordinate with miners to invalidate the user's refund in this proposed system. However, he also points out that the proposal could still suffer from malleability weaknesses where the user's refund could be invalidated by a miner changing the TxID of TX1.</summary>
    <published>2013-04-23T12:40:13+00:00</published>
  </entry>
</feed>
