<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anti DoS for tx replacement</title>
  <updated>2023-06-06T15:06:06.953358+00:00</updated>
  <author>
    <name>Jeremy Spilman 2013-04-20 20:51:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anti DoS for tx replacement</title>
    <updated>2023-06-06T15:06:06.953358+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002434.html" rel="alternate"/>
    <summary>A proposed sequence for Bitcoin channels was discussed by some individuals. While it did not work on test-net due to a mempool error, it was discovered that the proposal will actually work on Main-Net because non-final transactions are rejected by IsStandard(). This behavior is well-suited for applications that can be reduced to two instances of a transaction, one non-final and one final, which is updated between parties. However, if an attacker waits too long, the user can get their Refund into the mempool and lock out the higher seq version. To prevent this, the nLockTime of the refund can be set several days after the scheduled closing time of the channel. Any malleability weakness in the proposal remains, where the user's refund could still be invalidated by a miner changing the TxID of TX1.</summary>
    <published>2013-04-20T20:51:23+00:00</published>
  </entry>
</feed>
