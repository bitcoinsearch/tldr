<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>To prevent arbitrary data storage in txouts — The Ultimate Solution</title>
  <updated>2023-06-06T14:52:04.995040+00:00</updated>
  <author>
    <name>Peter Todd 2013-04-10 03:08:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>To prevent arbitrary data storage in txouts — The Ultimate Solution</title>
    <updated>2023-06-06T14:52:04.995040+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002394.html" rel="alternate"/>
    <summary>In this email conversation between Peter Todd and Gregory Maxwell, they discuss the topic of data stuffing in Bitcoin. Maxwell suggests that P2SH uses Hash160, which is RIPE160(SHA256(d)), and we need a new P2SH address type that provides the full 256 bits to restrict data stuffing to brute forcing hash collisions. The math behind this method needs to be worked out, but it will certainly be expensive in terms of time and hashing power. Furthermore, they discuss changing the tx hash algorithm to extend the merkle tree into the txouts/txins itself in the long-term through a hard-fork. This change will allow pruning of tx's bit by bit while still being able to serve nodes requesting proof of their UTXO. Currently, pruning cannot happen until every output is spent. The idea is also part of UTXO proof stuff anyway.</summary>
    <published>2013-04-10T03:08:31+00:00</published>
  </entry>
</feed>
