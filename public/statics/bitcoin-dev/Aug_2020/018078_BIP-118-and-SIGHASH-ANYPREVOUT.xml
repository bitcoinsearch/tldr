<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 118 and SIGHASH_ANYPREVOUT</title>
  <updated>2023-06-14T02:52:26.453271+00:00</updated>
  <author>
    <name>Richard Myers 2020-08-07 15:34:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 118 and SIGHASH_ANYPREVOUT</title>
    <updated>2023-06-14T02:52:26.453271+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018078.html" rel="alternate"/>
    <summary>In the context of ANYPREVOUT*, a special relay network could potentially be more intelligent about replacement. This would involve relaying only the higher up-front fee-rate transactions from a lower total fee package (Package B) which get spent by the high absolute fee child transactions from a higher total fee package (Package A). The result is Package A', which includes the higher fee rate versions of the ANYPREVOUT* transactions from Package B, but with an overall lower total fee. However, implementing this solution requires nodes to be "smart" about replacement when they see a SIGHASH_NOINPUT spend which can spend an output that something else in the mempool already spends. While this complexity may not be feasible to push into the Bitcoin P2P network, it could potentially be handled by a relay network of lightning nodes doing the calculation and passing the transactions to their local full nodes. Overall, using SIGHASH_NOINPUT would greatly simplify these issues if nodes can handle the necessary replacements intelligently.</summary>
    <published>2020-08-07T15:34:43+00:00</published>
  </entry>
</feed>
