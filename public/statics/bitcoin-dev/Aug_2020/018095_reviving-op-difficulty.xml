<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>reviving op_difficulty</title>
  <updated>2023-06-14T15:11:15.349336+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-08-17 23:14:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>reviving op_difficulty</title>
    <updated>2023-06-14T15:11:15.349336+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018095.html" rel="alternate"/>
    <summary>The discussion is about the creation of a difficulty futures instrument using Taproot MAST and op_diff. The conversation explores the possibility of making such an instrument on-chain in a trustless way. The proposed idea involves creating partial versions of the difficulty future funded by Bob, spendable by Alice in 1000 blocks, and a 17.4 sat payment from Alice to Bob, spendable by Bob immediately. To accomplish this, a hash lock on the payment with a preimage secret generated by Bob could be used. When Bob unlocks and broadcasts the payment, it reveals the preimage, and Alice can unlock and broadcast the difficulty future funded by Bob. While it would be simpler to make the purchase output and the options output in the same transaction, the proposed construction is also possible. It just requires two signatures for the hash-branch to ensure that it pays out to a transaction with a specific contract.</summary>
    <published>2020-08-17T23:14:00+00:00</published>
  </entry>
</feed>
