<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>reviving op_difficulty</title>
  <updated>2023-06-14T15:11:04.517435+00:00</updated>
  <author>
    <name>Tier Nolan 2020-08-17 21:55:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>reviving op_difficulty</title>
    <updated>2023-06-14T15:11:04.517435+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018094.html" rel="alternate"/>
    <summary>In an email thread, a proposed solution to the problem of binary payouts was discussed. One suggestion was to use Taproot MAST, and another option was to pay 64 + 32 + 16 + 8 + 4 + 2 + 1 as outputs based on the diff value. This would require division and binary operators. The payout would be enabled/disabled according to the value of D. The suggested solution has log performance in terms of the number of ticks like the MAST solution.</summary>
    <published>2020-08-17T21:55:04+00:00</published>
  </entry>
</feed>
