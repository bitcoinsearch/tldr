<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP 118 and SIGHASH_ANYPREVOUT</title>
  <updated>2023-06-14T02:56:10.584670+00:00</updated>
  <author>
    <name>lf-lists at mattcorallo.com 2020-08-04 04:02:21</name>
  </author>
  <author>
    <name>Christian Decker 2020-08-04 10:38:20</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 14:59:52</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-11 00:14:29</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 22:30:50</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 21:40:48</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-07 15:34:43</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-11 00:14:29</name>
  </author>
  <author>
    <name>Christian Decker 2020-08-04 10:38:20</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 14:59:52</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-11 00:14:29</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-03 19:27:13</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-03 19:27:13</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 04:23:03</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-04 13:10:02</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-06 15:58:53</name>
  </author>
  <author>
    <name>lf-lists at mattcorallo.com 2020-08-04 04:02:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 04:23:03</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-04 13:10:02</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-03 19:27:13</name>
  </author>
  <author>
    <name>lf-lists at mattcorallo.com 2020-08-04 04:02:21</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-06 15:58:53</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 22:30:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-07-10 03:29:39</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 21:40:48</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-07-10 03:29:39</name>
  </author>
  <author>
    <name>Christian Decker 2020-07-10 07:46:54</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 01:38:55</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-07 15:34:43</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 01:38:55</name>
  </author>
  <author>
    <name>Christian Decker 2020-08-04 10:38:20</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 14:59:52</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-06 15:58:53</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 22:30:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-07-10 03:29:39</name>
  </author>
  <author>
    <name>Christian Decker 2020-07-10 07:46:54</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 01:38:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-04 04:23:03</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-04 13:10:02</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-07 15:34:43</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 21:40:48</name>
  </author>
  <author>
    <name>Christian Decker 2020-07-10 07:46:54</name>
  </author>
  <link href="bitcoin-dev/Aug_2020/018072_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018074_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018076_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018079_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018039_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018038_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018078_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018079_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018074_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018076_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018079_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018069_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018069_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018073_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018075_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018077_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018072_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018073_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018075_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018069_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018072_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018077_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018039_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018040_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018038_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018040_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018041_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018071_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018078_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018071_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018074_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018076_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018077_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018039_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018040_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018041_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018071_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018073_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018075_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018078_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018038_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018041_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP 118 and SIGHASH_ANYPREVOUT</title>
    <updated>2023-06-14T02:56:10.585667+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018072.html" rel="alternate"/>
    <summary>The email conversation between two experts in the cryptocurrency field discusses the feasibility of relaying transactions to a full node without knowing which input transaction that full node has in its mempool/active chain. This design consideration is important for systems like lighting where you do not know which counterparty commitment transaction(s) are in a random node's mempool. The problem is nontrivial both in p2p protocol complexity and mempool optimization, but it may leave SIGHASH_NOINPUT rather useless for lighting without it. Additionally, they discuss a feasible attack without this consideration and suggest monitoring onchain events and ignoring mempool events to react to confirmed transactions. They also suggest implementing scorch-the-earth, keep-bumping-the-fee strategies to rebroadcast new versions of the spending transaction and spending from a confirmed transaction.In the context of recent relay-based attacks, there have been concerns about the security of Hash Time-Locked Contract (HTLC) transactions. ZmnSCPxj raises a design consideration for the p2p protocol layer that would allow relaying a transaction to a full node without knowing which input transaction that full node has in its mempool or active chain. This is important for systems like lighting where you may not know which counterparty commitment transaction(s) are in a random nodeâ€™s mempool and you should be able to describe to that node that you are spending then nonetheless. However, this is a nontrivial problem both in p2p protocol complexity and mempool optimization.ZmnSCPxj also points out a possible attack on the victim's fullnode by connecting to it and miners separately. In a discussion on the Lightning Dev mailing list, ZmnSCPxj summarized his thoughts on how a Taproot version of Decker-Russell-Osuntokun (eltoo) would work. A channel between A and B could have only a single internal taproot pubkey, `P = MuSig(A,B)`. The funding outpoint would be spent with a taprooted P + a single tapscript `OP_CHECKSIG`, while update transactions would be signed with the internal taproot pubkey using `SIGHASH_ANYPREVOUTANYSCRIPT`. Each update transaction would have a monotonically-increasing `nLockTime`. A state transaction would be signed with the internal taproot pubkey using `SIGHASH_ANYPREVOUT`, which commits to the exact script including ``, unique for each update transaction. This means a state transaction can only spend the specific update transaction, but the update transaction can spend the funding outpoint or any update transaction outpoint.In a recent Bitcoin development email thread, a member suggested that it would be ideal if it were trivial to relay a transaction to a full node without knowing exactly which input transaction that node has in its mempool/active chain. In another email thread, Anthony Towns opened a draft pull request to update BIP 118 with the ANYPREVOUT bip. The new BIP text is available on Github and includes significant changes since previous discussion, including the complete lack of chaperone signatures or anything like it, and that ANYPREVOUTANYSCRIPT no longer commits to the value.Relay-based attacks discovered recently that can compromise HTLC security in the Lightning Network were also discussed. A feasible attack was outlined, where the attacker connects twice to the LN and arranges for most funds on the victim's side. The attacker broadcasts a low-fee old-state transaction of the victim-attacker channel just before the HTLC timeout, leaving the victim at risk. Forwarding nodes could drop channels on-chain early to bump up fees for the commitment transaction, but this might not work against other relay attacks. Victims could avoid such attacks by monitoring on-chain events and ignoring mempool events. They should implement scorch-the-earth, keep-bumping-the-fee strategies, and keep rebroadcasting new versions of spending transactions while spending from a confirmed transaction.In an email thread on the bitcoin-dev mailing list, members of the Bitcoin community discussed various topics related to the network and technology. The thread included discussions about proposed constructions for channels between nodes using MuSig signing and SIGHASH_ANYPREVOUTANYSCRIPT. There were also discussions on how to prevent relay-based attacks that can compromise HTLC security in the Lightning Network and how to handle replacement transactions with SIGHASH_NOINPUT. The use of aliases like "Dr. Bitcoin" and "cdecker" highlighted the informal nature of these interactions, while technical jargon and references to specific individuals and projects underscored the depth of expertise required for working on Bitcoin-related initiatives. The conversation provided a glimpse into the collaboration and communication among experts in the Bitcoin space.The proposed Decker-Russell-Osuntokun construction for channels between nodes using MuSig signing and SIGHASH_ANYPREVOUTANYSCRIPT was discussed in the context of updating BIP 118 with the ANYPREVOUT bip. Updates to the BIP text were</summary>
    <published>2020-08-04T04:02:21+00:00</published>
  </entry>
</feed>
