<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 118 and SIGHASH_ANYPREVOUT</title>
  <updated>2023-06-14T02:52:36.831518+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-08-04 04:23:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 118 and SIGHASH_ANYPREVOUT</title>
    <updated>2023-06-14T02:52:36.831518+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018073.html" rel="alternate"/>
    <summary>The email conversation between two experts in the cryptocurrency field discusses the feasibility of relaying transactions to a full node without knowing which input transaction that full node has in its mempool/active chain. This design consideration is important for systems like lighting where you do not know which counterparty commitment transaction(s) are in a random node's mempool. The problem is nontrivial both in p2p protocol complexity and mempool optimization, but it may leave SIGHASH_NOINPUT rather useless for lighting without it. Additionally, they discuss a feasible attack without this consideration and suggest monitoring onchain events and ignoring mempool events to react to confirmed transactions. They also suggest implementing scorch-the-earth, keep-bumping-the-fee strategies to rebroadcast new versions of the spending transaction and spending from a confirmed transaction.</summary>
    <published>2020-08-04T04:23:03+00:00</published>
  </entry>
</feed>
