<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalizing feature negotiation when new p2p connections are setup</title>
  <updated>2023-06-14T15:04:35.488326+00:00</updated>
  <author>
    <name>Jeremy 2020-08-21 21:17:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalizing feature negotiation when new p2p connections are setup</title>
    <updated>2023-06-14T15:04:35.488326+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018125.html" rel="alternate"/>
    <summary>In a discussion about the need for multi-round negotiation in certain scenarios, an example was given where feature A gets bugfixed by the introduction of feature B. In this case, it would be preferable to negotiate for feature B before exposing support for feature A. However, if feature B is unknown to old nodes, support for feature A will still be provided. The example used to illustrate this scenario is WTXID/TXID relay. The SYNC primitive was mentioned as a means of codifying message order and indicating the end of a negotiation phase. Without SYNC, messages need to be broadcasted carefully in the correct order and there is uncertainty about when or if one should wait for more time before responding. Jeremy Rubin pointed out that service bits already exist for non-bilateral feature support negotiation, but are unfortunately limited.</summary>
    <published>2020-08-21T21:17:32+00:00</published>
  </entry>
</feed>
