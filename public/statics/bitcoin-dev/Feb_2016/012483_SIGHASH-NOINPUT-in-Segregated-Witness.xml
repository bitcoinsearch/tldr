<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_NOINPUT in Segregated Witness</title>
  <updated>2023-06-11T04:07:56.428087+00:00</updated>
  <author>
    <name>Rusty Russell 2016-02-29 00:25:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_NOINPUT in Segregated Witness</title>
    <updated>2023-06-11T04:07:56.428087+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-February/012483.html" rel="alternate"/>
    <summary>Joseph Poon, through a mail sent in the bitcoin-dev group, shared his thoughts on the need for a third party to receive a transaction that can compactly include all previous states. For Segregated Witness transactions, the current design requires storing all previous signatures which can become extremely expensive if there are thousands of channel state updates per day. However, Rusty, in response, expressed that more is required to make this work. In practice, there is not much difference between sending a watcher a tx for every commit tx and sending it information for every new HTLC. If each HTLC output is a p2sh, one needs the timeout and rhash for each to build the script to redeem it. Therefore, more needs to be put in the scriptPubKey for this to work, either the entire redeemscript or possibly some kind of multiple-choice P2SH where any one of the hashes will redeem the payment. An example of such a scriptPubKey was provided by Rusty, who also included a link to a deployable lightning document.</summary>
    <published>2016-02-29T00:25:53+00:00</published>
  </entry>
</feed>
