<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>INV overhead and batched INVs to reduce full node traffic</title>
  <updated>2023-06-11T04:09:31.193903+00:00</updated>
  <author>
    <name>Jonathan Toomim 2016-02-26 05:35:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>INV overhead and batched INVs to reduce full node traffic</title>
    <updated>2023-06-11T04:09:31.193903+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-February/012467.html" rel="alternate"/>
    <summary>The INV scheme used by Bitcoin is very inefficient due to the overheads of TCP, IP, ethernet and ACKs. Each INV takes up to 193 bytes, with only 16.5% efficiency for each of the payloads. An improvement could be the implementation of batched INVs where the hashes for two transactions per IP packet instead of one can be included. This would increase the INV size to 229 bytes for 64 bytes of payload (88.8% efficiency) after the first hash. Waiting a short period of time to accumulate several hashes together and send them could reduce the traffic of running bitcoin nodes by a factor of 2 or more. However, if too many people used it, it could slow down the propagation of transactions across the bitcoin network slightly. This could be mitigated by choosing a different batch size for each peer based on their preferences.</summary>
    <published>2016-02-26T05:35:14+00:00</published>
  </entry>
</feed>
