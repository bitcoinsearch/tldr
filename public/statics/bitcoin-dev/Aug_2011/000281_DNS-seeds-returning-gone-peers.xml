<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>DNS seeds returning gone peers</title>
  <updated>2023-05-26T19:56:41.481160+00:00</updated>
  <author>
    <name>Christian Decker 2011-08-03 14:37:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>DNS seeds returning gone peers</title>
    <updated>2023-05-26T19:56:41.481196+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000281.html" rel="alternate"/>
    <summary>Chris is curious about whether his non-blocking network stack, BitDroid, would be better suited for detecting and tracking available peers. He has implemented several benchmarks and a simple peer counter listener that can open several hundred connections to check reachability of the peers and keep a pool of peers connected to listen for address broadcasts, with minimal overhead. Rick suggests sorting nodes by version and publishing addresses under version.example.com if the version has a preference. Mike Hearn mentions that there is currently no project but starting from Matt's code is probably the way to go. He also suggests writing a Java app for it as there are drop-in DNS serving libraries that could be linked with BitCoinJ+sqlite. Mike is hoping to find a friend who might take on DNS seeding as a project. A custom DNS server that watches the network to find long-lived peers that run the latest version would be helpful for resolving this kind of thing.</summary>
    <published>2011-08-03T14:37:12+00:00</published>
  </entry>
</feed>
