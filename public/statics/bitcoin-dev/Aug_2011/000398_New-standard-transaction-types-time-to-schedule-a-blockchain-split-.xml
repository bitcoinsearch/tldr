<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New standard transaction types: time to schedule a blockchain split?</title>
  <updated>2023-05-18T22:14:30.291390+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-08-24 16:18:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New standard transaction types: time to schedule a blockchain split?</title>
    <updated>2023-05-18T22:14:30.291390+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000398.html" rel="alternate"/>
    <summary>In an email thread from 2011, Gavin Andresen proposed implementing or enabling opcodes in new Bitcoin releases to allow for smaller Bitcoin addresses. However, he questioned the reasoning behind disabling these opcodes in the first place, arguing that it was too limiting. He suggested that if there were to be a future incompatible update, the opcodes should be re-enabled and possibly expanded to allow for arithmetic up to 520 or 1024 bits numbers. Additionally, he suggested adding a custom operator for boolean evaluation or more low-level operations. With the presence of bitwise operators, scripts could process pubkey/signature pairs, build up a number in which each bit corresponds to a valid signature, and then perform some bitwise checks on this number. Finally, Andresen advocated for adding an opcode for "count number of bits set in number," which would be useful in this context.</summary>
    <published>2011-08-24T16:18:54+00:00</published>
  </entry>
</feed>
