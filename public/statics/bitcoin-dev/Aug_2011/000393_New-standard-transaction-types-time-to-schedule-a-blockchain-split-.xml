<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New standard transaction types: time to schedule a blockchain split?</title>
  <updated>2023-05-26T20:27:45.990861+00:00</updated>
  <author>
    <name>Rick Wesson 2011-08-24 15:17:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New standard transaction types: time to schedule a blockchain split?</title>
    <updated>2023-05-26T20:27:45.990909+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000393.html" rel="alternate"/>
    <summary>In an email thread, Gavin Andresen proposes that multi-signature transactions are the fastest path to secure Bitcoin wallets. He suggests discussing open-source, patent-free, and thoroughly-tested code that already does DSA-key-splitting. Andresen has been trying to get consensus on low-level 'standard' transactions for transactions that must be signed by 2 or 3 keys, and he thinks it is a good idea to enable a set of new 'standard' multisignature transactions. The arguments against this proposal are that if the proposed standard transactions are accepted, then the next step is to define a new kind of bitcoin address that lets coins be deposited into a multisignature-protected wallet. These new addresses will have to be 2 or 3 times as big as current bitcoin addresses and will be incompatible with old clients. Andresen's biggest worry is that there may not be a consensus on which digest function should be used or whether or not there should be a new opcode for arbitrary boolean expressions involving keypairs. He fears that people's wallets will continue to get lost or stolen while waiting for agreement on how to do it right. In response, Rick suggests focusing on feature road maps, setting up bug fixing and testing frameworks, or forking the project to those who can execute these tasks.</summary>
    <published>2011-08-24T15:17:07+00:00</published>
  </entry>
</feed>
