<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BitCoin and MinorFs/AppArmor</title>
  <updated>2023-05-26T20:36:53.288994+00:00</updated>
  <author>
    <name>Rob Meijer 2011-08-26 07:48:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BitCoin and MinorFs/AppArmor</title>
    <updated>2023-05-26T20:36:53.289030+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000422.html" rel="alternate"/>
    <summary>A few years ago, Rob wrote a set of filesystems called MinorFs. It worked closely with AppArmor to give "pseudo persistent processes" their own private but decomposable and delegatable piece of filesystem storage. Currently, only one perfect fit for MinorFs exists, which is the stack AppArmor/MinorFs/E-language-persistent-application. However, some close fits, like running ssh without a passphrase, require lots of manual fiddling by the user to get working.Rob is trying to rewrite MinorFs in Python in a way that would make it easy and natural for application developers who want their application to protect user data from mallware running under the same uid as that user, such as bitcoin wallets. Currently, minorfs granularity is hard fixed to that of the "pseudo persistent process," and that granularity is determined in the pseudo persistent process link.Using pseudo persistent processes results in file-system storage that follows almost all of the modeling principles of the object capability model. Rob expects that Bitcoin, openssh, chrome, Firefox, or any other application that would benefit from what MinorFs provides will not be rewritten in E. Therefore, the next version of MinorFs should take an approach that better suits common development languages and practices, abandoning the purity of its least authority model.Rob wants Bitcoin developers to think about what attributes from the current granularity level should be kept, what attributes should be dropped, and what properties should be added to arrive at an "id" that is the best fit for granularity of persistent private storage for Bitcoin. He solicits input that helps him help them to get the next MinorFs version.</summary>
    <published>2011-08-26T07:48:28+00:00</published>
  </entry>
</feed>
