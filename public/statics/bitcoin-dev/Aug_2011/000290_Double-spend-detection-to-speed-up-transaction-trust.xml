<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Double spend detection to speed up transaction trust</title>
  <updated>2023-05-18T22:05:18.560241+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-04 17:45:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Double spend detection to speed up transaction trust</title>
    <updated>2023-05-18T22:05:18.560241+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000290.html" rel="alternate"/>
    <summary>The scenario presented involves two scammers attempting to buy two Ferraris using only one set of BTC. The current solution is for vendors to wait for six confirmations before releasing goods, which can take a long time. However, the Bitcoin network is essentially honest and a valid transaction will eventually make it into the longest blockchain. The proposal is to broadcast a new "inv" type called "MSG_DOUBLESPEND" when a node drops a transaction so that vendors can operate their own policy on waiting for confirmations. This would also allow miners to lower the priority of any transactions flagged in this way. The transaction must be internally-valid to result in a MSG_DOUBLESPEND, making it difficult to DOS by someone without the appropriate private keys. In the future, Bitcoin payment processors could handle double-spend checks and offer insurance against unconfirmed transactions being invalidated.</summary>
    <published>2011-08-04T17:45:17+00:00</published>
  </entry>
</feed>
