<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Change to multiple executables?</title>
  <updated>2023-05-26T20:12:30.601488+00:00</updated>
  <author>
    <name>Jeff Garzik 2011-08-10 21:35:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Change to multiple executables?</title>
    <updated>2023-05-26T20:12:30.601524+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000345.html" rel="alternate"/>
    <summary>The email thread is discussing a list of ideas that could be implemented in the Bitcoin protocol. The author has listed some ideas that would not have any financial implication and only a few would break backward compatibility. Breaking backward compatibility means breaking people's access to their own money. If an "unnecessary" step that existing nodes expect is removed, then the cost of disrupting monetary access seems higher than the value of that breaking change. One of the ideas was to add extra bits in the service field of the version message to allow nodes to indicate if they are mining, willing to be seed nodes, relay transactions, or want relayed transactions. Another idea was to remove verack as it is unnecessary and may cause compatibility issues. The email thread also discusses querying miners for pending transactions, which could be valuable as a local dump of pending TX's would be useful. However, making it an optional bitcoin P2P protocol command, available to anyone, seems to negatively impact privacy. A way of requesting block bodies without headers was suggested to save traffic for a thin client upgrading. The double SHA-256 for a packet checksum was another idea that was deemed unnecessary due to compatibility issues. Script parameters should be stored outside the script and referenced by the script, so all the filtering of the scripts in OP_CHECKSIG would go away. The author also mentions MSG_DOUBLESPEND but does not believe consensus wants this. Jeff Garzik, the author of the email, encourages others to work on the design for bitcoin v2, where he suggests that any breaking change is acceptable, and improving the protocol, getting rid of the patent-cloudy ECDSA, using google's protocol buffers for encoding, and making the proof-of-work algorithm memory-intensive, among other suggestions, can take place. Securing the integrity of money means that a lot of implementation decisions have been cemented into stone, however much we may personally dislike them. Backwards compatibility is paramount.</summary>
    <published>2011-08-10T21:35:01+00:00</published>
  </entry>
</feed>
