<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New standard transaction types: time to schedule a blockchain split?</title>
  <updated>2023-05-18T22:14:51.358608+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-08-24 15:45:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New standard transaction types: time to schedule a blockchain split?</title>
    <updated>2023-05-18T22:14:51.358608+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000394.html" rel="alternate"/>
    <summary>In 2011, Gavin Andresen proposed that multi-signature transactions are the fastest path to having secure and hard-to-lose Bitcoin wallets. To organize the discussion, he asked if everyone agreed with this. Though it is a good tool to have in our tool-belt, an issue like this can be addressed by external private key protectors. However, someone would have to build this. It would also be more useful to contact the authors of a research paper that gives a scheme for splitting a private key between two people. Regardless, Gavin Andresen thinks it is a good idea to enable a set of new standard multi-signature transactions. The arguments against this are that new bitcoin addresses will be incompatible with old clients and will have to be 2 or 3 times as big. One solution is to have an address that hashes an ordered concatenation of many addresses plus a length argument. This can be done using the existing but disabled opcodes. It's not exclusive, however, with a long N-address address type for multisig destinations. People could support that now and defer the compressed version until they have experience with this usage. The only limit is that old clients couldn't send funds to escrow addresses no matter how the information is encoded.</summary>
    <published>2011-08-24T15:45:09+00:00</published>
  </entry>
</feed>
