<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fwd: Re:  Drivechain proposal using OP_COUNT_ACKS</title>
  <updated>2023-06-11T20:19:22.311057+00:00</updated>
  <author>
    <name>Russell O'Connor 2016-10-02 23:00:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fwd: Re:  Drivechain proposal using OP_COUNT_ACKS</title>
    <updated>2023-06-11T20:19:22.311057+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-October/013194.html" rel="alternate"/>
    <summary>The discussion revolves around a problem with the fungibility of coins generated from transactions. It is mentioned that if a transaction is reorged out during an innocent reorg, then it may never get back in unless it occurs at exactly the same height, which is not guaranteed. The issue with this proposal is that nothing stops users from using OP_EQUALVERIFY and causing their transaction to fluctuate between acceptable and unacceptable, with no party doing anything like a double spend. This poses a major problem with the proposal. Sergio Demian Lerner says that transactions that redeem an output containing (or referencing by means of P2WSH) an OP_COUNT_ACKS are not broadcast by the network and the only parties that can include the redeem transaction are the miners themselves. Therefore he sees no problem that an OP_COUNT_ACKS scriptSig transaction is invalidated after the liveness times expires. If there is no expiration, then polls can last forever and the system fails to provide DoS protection for block validation since active polls can accumulate forever.</summary>
    <published>2016-10-02T23:00:16+00:00</published>
  </entry>
</feed>
