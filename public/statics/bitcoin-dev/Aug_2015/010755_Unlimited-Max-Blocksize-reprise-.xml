<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Unlimited Max Blocksize (reprise)</title>
  <updated>2023-06-10T21:06:38.530517+00:00</updated>
  <author>
    <name>Peter R 2015-08-30 17:00:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Unlimited Max Blocksize (reprise)</title>
    <updated>2023-06-10T21:06:38.530517+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010755.html" rel="alternate"/>
    <summary>In an email exchange, Peter thanks Tom for pointing out the knapsack problem and plans to include a note about it when he makes other corrections to the Fee Market paper. In response to Daniele's comments, Peter agrees that "non-greedy" solutions to the knapsack problem are more relevant when one is choosing from a smaller number of items where certain items have similar sizes to the knapsack itself. However, since the average transaction size is around 500 bytes and we are looking at up to 2000 transactions even with a block size limit of 1 MB, quantization effects become small. Rather than 22 triangles as shown in Fig. 3, there are hundreds or a few thousand, and the discrete set of points can be reasonably approximated as a continuous curve. As Daniele pointed out, the greedy algorithm assumed in the paper is asymptotically optimal in such a case.</summary>
    <published>2015-08-30T17:00:37+00:00</published>
  </entry>
</feed>
