<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>What Lightning Is</title>
  <updated>2023-05-19T21:25:47.555777+00:00</updated>
  <author>
    <name>Anthony Towns 2015-08-10 21:02:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>What Lightning Is</title>
    <updated>2023-05-19T21:25:47.555777+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010113.html" rel="alternate"/>
    <summary>The email conversation between Gavin Andresen and others in the Bitcoin community discussed a potential use case for the Lightning Network. The scenario was a customer using their phone to pay for a cup of tea at a merchant's shop. The user would swipe their phone or scan a QR code to initiate payment, which would then prompt a dialogue box on their phone to confirm the transaction. The backend process would involve the merchant passing on their identity, public key, amount, and hash for the payment. The user's phone would go online to determine if a route to the vendor could be established and to calculate lightning network fees, among other things. The user's phone would then prepare a lightning transaction to the vendor, signed with the corresponding lightning channel keys, using the hash the merchant provided and sends it through one of the channels the user already has open and funded. The transaction would make its way through the lightning network, and the confirmation would make its way back. The UIs at both ends would update, and the user would get their cup of tea. There were some potential problems, such as the possibility of the merchant claiming that they had not been paid, but there were ways to mitigate these issues, such as incremental payments or having an initial negotiation involving signing something that could be adjudicated independently later. The discussion also addressed the issue of maintaining the channels, such as what would happen if a merchant's payment channels filled up suddenly, how to close the till at the end of the day, and how to reset channels once a day/week/fortnight/month with some money from salary/savings so that they don't run out. Additionally, the conversation touched on other issues, such as refunds, monitoring the blockchain, keeping channel keys/secrets secure, and figuring out who to make channels with.</summary>
    <published>2015-08-10T21:02:40+00:00</published>
  </entry>
</feed>
