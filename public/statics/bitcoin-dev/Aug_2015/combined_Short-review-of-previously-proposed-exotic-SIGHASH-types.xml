<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Short review of previously-proposed exotic SIGHASH types</title>
  <updated>2023-06-10T21:38:33.524814+00:00</updated>
  <author>
    <name>Bryan Bishop 2015-08-30 18:56:34</name>
  </author>
  <author>
    <name>Peter Todd 2015-09-01 06:54:42</name>
  </author>
  <author>
    <name>Peter Todd 2015-09-01 06:54:42</name>
  </author>
  <author>
    <name>Bryan Bishop 2015-08-30 18:56:34</name>
  </author>
  <author>
    <name>Peter Todd 2015-09-01 06:54:42</name>
  </author>
  <author>
    <name>Bryan Bishop 2015-08-30 18:56:34</name>
  </author>
  <author>
    <name>jl2012 at xbt.hk 2015-08-31 16:24:21</name>
  </author>
  <author>
    <name>jl2012 at xbt.hk 2015-08-31 16:24:21</name>
  </author>
  <author>
    <name>jl2012 at xbt.hk 2015-08-31 16:24:21</name>
  </author>
  <link href="bitcoin-dev/Aug_2015/010759_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010805_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010805_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010759_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010805_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010759_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010779_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010779_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010779_Short-review-of-previously-proposed-exotic-SIGHASH-types.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Short review of previously-proposed exotic SIGHASH types</title>
    <updated>2023-06-10T21:38:33.524814+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010759.html" rel="alternate"/>
    <summary>There have been proposals for multiple previously-proposed and exotic SIGHASH types such as SIGHASH_MULTIPLE, SIGHASH_LIST, SIGHASH_WITHINPUTVALUE, SIGHASH_NOINPUT, SIGHASH_NORMALIZED, SIGHASH_WITHOUT_PREV_SCRIPTPUBKEY, SIGHASH_SIGN_STACK_ELEMENT, SIGHASH_DONT_SIGN_TXID, SIGHASH_DANGEROUSLYPROMISCUOUS, SIGHASH_DOUBLE, SIGHASH_NLOCKTIMEVERIFY, SIGHASH_SUM, and even SIGHASH_UNICORN. These different types could potentially be useful for different purposes.In a bitcoin-dev email thread, Bryan Bishop provided a review of proposed and exotic SIGHASH types, including the SIGHASH_MULTIPLE and petertodd's suggestion of SIGHASH_DONT_SIGN_TXID to make OP_CODESEPARATOR more useful. Another idea presented was the "meta sighash" which involves using code to build up the signature with OP_CODESEPARATOR. The email also included a digital signature attachment from Peter Todd.Bryan Bishop posted a message on bitcoin-dev regarding a proposal for new SIGHASH types on August 30th, 2015. The proposed types include SIGHASH_WITHOUT_PREV_SCRIPTPUBKEY, SIGHASH_WITHOUT_PREV_VALUE, SIGHASH_WITHOUT_INPUT_TXID, SIGHASH_WITHOUT_INPUT_INDEX, SIGHASH_WITHOUT_INPUT_SEQUENCE, SIGHASH_WITHOUT_OUTPUT_SCRIPTPUBKEY, SIGHASH_WITHOUT_OUTPUT_VALUE, SIGHASH_WITHOUT_INPUTS, SIGHASH_WITHOUT_OUTPUTS, SIGHASH_WITHOUT_INPUT_SELF, SIGHASH_WITHOUT_OUTPUT_SELF, SIGHASH_WITHOUT_TX_VERSION, and SIGHASH_WITHOUT_TX_LOCKTIME. A link to the proposal can be found in the post. Another user thanks Bishop for his summary of the proposal but expresses concern that it may not allow for fine adjustment for each input and output separately, which raises questions about whether the proposal truly enables any seen or unforeseen use case of the CTransactionSignatureSerializer.</summary>
    <published>2015-08-30T18:56:34+00:00</published>
  </entry>
</feed>
