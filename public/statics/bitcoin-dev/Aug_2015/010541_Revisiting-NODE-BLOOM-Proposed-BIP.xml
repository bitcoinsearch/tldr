<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Revisiting NODE_BLOOM: Proposed BIP</title>
  <updated>2023-06-10T20:44:37.635430+00:00</updated>
  <author>
    <name>Peter Todd 2015-08-21 05:55:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Revisiting NODE_BLOOM: Proposed BIP</title>
    <updated>2023-06-10T20:44:37.635430+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010541.html" rel="alternate"/>
    <summary>On August 21, 2015, Jeff Garzik via bitcoin-dev raised concerns about the impact of widely deploying and enabling bloom filters on current wallets in use. In response, a comment was made suggesting that not much would change, especially if the Core implementation accepted and responded to bloom filter requests from non-upgraded clients until some fixed upgrade deadline in the future, regardless of whether or not NODE_BLOOM was set. The comment also noted that the landscape for (lite-)SPV clients had changed significantly since the last time NODE_BLOOM was proposed. Firstly, @mikehearn's Cartographer seed protocol had been created and deployed in production to allow (lite-)SPV clients to find nodes supporting arbitrary service bits, notable NODE_GETUTXOs. Secondly, Bloom filter usage had declined significantly as lite-SPV clients were moving towards using centralized, trusted servers run by the wallet authors such as Mycelium, GreenBits, AirBitz, and Electrum. Thirdly, Bloom filters have been found to have severe privacy issues, offering essentially no privacy at all. Fourthly, bloom filters still have unsolved DoS attack issues that will get significantly worse under upcoming blocksize increase proposals.Finally, the comment recommended picking "1" as the service bit identifier.</summary>
    <published>2015-08-21T05:55:35+00:00</published>
  </entry>
</feed>
