<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Short review of previously-proposed exotic SIGHASH types</title>
  <updated>2023-06-10T21:38:17.510291+00:00</updated>
  <author>
    <name>jl2012 at xbt.hk 2015-08-31 16:24:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Short review of previously-proposed exotic SIGHASH types</title>
    <updated>2023-06-10T21:38:17.510291+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010779.html" rel="alternate"/>
    <summary>On August 30th, 2015, Bryan Bishop posted a message on bitcoin-dev regarding a proposal for new SIGHASH types. The proposed types include SIGHASH_WITHOUT_PREV_SCRIPTPUBKEY, SIGHASH_WITHOUT_PREV_VALUE, SIGHASH_WITHOUT_INPUT_TXID, SIGHASH_WITHOUT_INPUT_INDEX, SIGHASH_WITHOUT_INPUT_SEQUENCE, SIGHASH_WITHOUT_OUTPUT_SCRIPTPUBKEY, SIGHASH_WITHOUT_OUTPUT_VALUE, SIGHASH_WITHOUT_INPUTS, SIGHASH_WITHOUT_OUTPUTS, SIGHASH_WITHOUT_INPUT_SELF, SIGHASH_WITHOUT_OUTPUT_SELF, SIGHASH_WITHOUT_TX_VERSION, and SIGHASH_WITHOUT_TX_LOCKTIME. A link to the proposal can be found in the post. Another user thanks Bishop for his summary of the proposal but expresses concern that it may not allow for fine adjustment for each input and output separately, which raises questions about whether the proposal truly enables any seen or unforeseen use case of the CTransactionSignatureSerializer.</summary>
    <published>2015-08-31T16:24:21+00:00</published>
  </entry>
</feed>
