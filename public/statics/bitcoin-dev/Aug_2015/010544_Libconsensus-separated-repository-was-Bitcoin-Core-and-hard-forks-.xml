<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libconsensus separated repository (was Bitcoin Core and hard forks)</title>
  <updated>2023-06-10T03:37:52.173570+00:00</updated>
  <author>
    <name>Tamas Blummer 2015-08-21 06:46:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libconsensus separated repository (was Bitcoin Core and hard forks)</title>
    <updated>2023-06-10T03:37:52.174570+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010544.html" rel="alternate"/>
    <summary>The discussion is about the potential for a libconsensus API, which would provide a correctly implemented consensus layer available to all Bitcoin developers. Tamas Blummer argues that it is important to be able to create and serve other block chains with other rules, for which he doesn't want to carry on the legacy of an antique tool set and a spaghetti style. Matt Corallo suggests the design should have NO networking and a simple API to give blocks and inform you of what the current chain is. The goal is not to reimplement consensus rules but rather to extract them from Bitcoin Core so that nobody needs to re-implement them again. The benefits would include allowing people to focus on making their libraries have good APIs/wallets instead of focusing on making a working validation engine.</summary>
    <published>2015-08-21T06:46:26+00:00</published>
  </entry>
</feed>
