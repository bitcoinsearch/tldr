<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Idea: Efficient bitcoin block propagation</title>
  <updated>2023-05-19T21:15:12.594479+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-08-05 22:14:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Idea: Efficient bitcoin block propagation</title>
    <updated>2023-05-19T21:15:12.594479+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/009944.html" rel="alternate"/>
    <summary>In an email exchange from August 2015, Arnoud Kouwenhoven of Pukaki Corp discusses feedback on Bitcoin block size optimization with an anonymous recipient who provides input about Bitcoin Core's cached validation. They agree that the technology and security implications of larger blocks are related to more than just propagation time and discuss the phenomenon of SPV mining, which is explained as sub-pooling with hopping onto whatever pool has the highest block. The term "VFSSP" (validation free stratum subpooling) is coined to describe it. The email also notes the practical issues miners face, such as running their own bitcoin nodes in far away colocation, relay network hubs being too far away, and the CreateNewBlock() function being slow. VFSSP reportedly avoids these delays even when people don't understand or know about them. It's suggested that some miners stick with VFSSP due to inertia and a lack of good monitoring, even though better solutions exist. The email concludes by lamenting how bad outcomes are possible in this space even when they're not necessary, citing how miners may opt for easier solutions like pointing their hashpower at a free centralized pool rather than deploying new protocols or fixing faulty hardware.</summary>
    <published>2015-08-05T22:14:07+00:00</published>
  </entry>
</feed>
