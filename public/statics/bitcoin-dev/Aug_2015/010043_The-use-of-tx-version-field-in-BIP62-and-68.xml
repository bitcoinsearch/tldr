<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The use of tx version field in BIP62 and 68</title>
  <updated>2023-06-10T18:57:31.073181+00:00</updated>
  <author>
    <name>jl2012 at xbt.hk 2015-08-08 18:51:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The use of tx version field in BIP62 and 68</title>
    <updated>2023-06-10T18:57:31.073181+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010043.html" rel="alternate"/>
    <summary>The Bitcoin Improvement Proposals (BIPs) 62 and 68 have different rules that are applied based on the transaction (tx) version. BIP68 is activated for a tx if its highest bits are 0000, and the third lowest bit is 1. Meanwhile, BIP62 is active for a tx if its highest bits are 0000, and the second lowest bit is 1. The problem with some of these rules is that they could cause trouble when introducing a new script system with a softfork. To solve this issue, it is suggested to divide the tx version field into two parts: the higher four bits and lower 28 bits. With this proposed division, it will be easier to re-purpose the nSequence or take advantage of malleability in the future. Additionally, adopting this change would make the nSequence high bit requirement in BIP68 unnecessary as it could be easily switched off.By dividing the tx version field, the low bits will allow 28 independent BIPs, which should be enough for many years. When these BIPs are exhausted, the high bits can be switched to a different number between 1-15, allowing for the redefinition of the meaning of low bits. It is important to note that there may be other draft BIPs with similar interpretations of the tx version field, but the comments made regarding BIPs 62 and 68 should also apply to them.</summary>
    <published>2015-08-08T18:51:17+00:00</published>
  </entry>
</feed>
