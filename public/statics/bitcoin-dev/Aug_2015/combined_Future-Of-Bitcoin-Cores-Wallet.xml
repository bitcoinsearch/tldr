<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Future Of Bitcoin-Cores Wallet</title>
  <updated>2023-06-10T19:13:04.151070+00:00</updated>
  <author>
    <name>Mike Hearn 2015-08-11 11:03:15</name>
  </author>
  <author>
    <name>Jonas Schnelli 2015-08-11 09:02:07</name>
  </author>
  <author>
    <name>Mike Hearn 2015-08-11 11:03:15</name>
  </author>
  <author>
    <name>Sriram Karra 2015-08-11 11:21:31</name>
  </author>
  <author>
    <name>Jonas Schnelli 2015-08-11 09:02:07</name>
  </author>
  <author>
    <name>Sriram Karra 2015-08-11 11:21:31</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-08-11 15:46:25</name>
  </author>
  <author>
    <name>Jonas Schnelli 2015-08-11 09:02:07</name>
  </author>
  <author>
    <name>Sriram Karra 2015-08-11 11:21:31</name>
  </author>
  <author>
    <name>Mike Hearn 2015-08-11 11:03:15</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-08-11 15:46:25</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-08-11 15:46:25</name>
  </author>
  <link href="bitcoin-dev/Aug_2015/010139_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010137_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010139_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010141_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010137_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010141_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010142_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010137_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010141_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010139_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010142_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010142_Future-Of-Bitcoin-Cores-Wallet.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Future Of Bitcoin-Cores Wallet</title>
    <updated>2023-06-10T19:13:04.151070+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010139.html" rel="alternate"/>
    <summary>In recent times, development on Bitcoin Core wallet has diverted towards SPV, thin clients, and centralized web middleware. However, Jonas Schnelli proposed changes to the current concept of running a full node wallet which he believes could make it more user-friendly. His proposal includes enabling pruning by default, flexible CPU usage, throttling block download bandwidth, participation in SPV during catch up, disabling bloom filtering, and switching from SPV to full validation when the node is in sync. These changes would increase the number of participating full nodes while giving users more privacy and security, creating a counterweight against SPV/thin clients, slowly completing full validation and increasing privacy, and avoiding wallet development centralization which could be helpful once/if attacks against SPV/thin clients become real.Schnelli acknowledged that his solution may not work on a smartphone due to bandwidth and CPU usage constraints, but he believes it could work for groups of people who trust each other. He has been working towards this direction for about a year and is currently developing a wallet-focused Bitcoin Core fork. His long-term goal is to decouple the wallet and core by using Bitcoin Core as a library for the wallet side. Schnelli invited other developers to join the team by reviewing, criticizing concepts, or contributing code via GitHub. In an email exchange from 2015, Mike Hearn and Jonas Schnelli discussed the needs of some users in regards to bitcoin wallets. Hearn proposed supporting serving of Simplified Payment Verification (SPV) wallets from pruned storage, which would require protocol upgrades and Bitcoin Improvement Proposals (BIPs). Hearn also suggested creating a desktop wallet app based on bitcoinj that contains a bundled bitcoind. However, Hearn's proposal doesn't fully align with Schnelli's original post, which advocated for a single set of reference implementations for different components unless something not explicitly stated is supported.The message suggests an alternative approach to serving SPV wallets from pruned storage. The proposed path suggests creating a bitcoinj based desktop wallet app that contains a bundled bitcoind, syncing two wallets simultaneously: one from the P2P network as today and another from the local bitcoind via a local socket passing buffers around internally. The app should then switch between using the wallet synced to P2P to the wallet synced to localhost when the latter is fully caught up and back again when the local node is behind. If there's a discrepancy, it alerts the user.There are several advantages of this approach over the current one. For instance, the switching back and forth between local full-security mode and remote SPV security is instant and transparent to the user, which is important for laptop users who don't run a local node all the time. The author of the message is working on a wallet-focused Bitcoin Core fork with the ability to re-merge it to the Bitcoin Core branch. Their long-term goal is to decouple the wallet and core by using Bitcoin Core as a library for the wallet side. They are open to criticism and any ideas and have set up a mail to avoid parallelism on a works stream.</summary>
    <published>2015-08-11T11:03:15+00:00</published>
  </entry>
</feed>
