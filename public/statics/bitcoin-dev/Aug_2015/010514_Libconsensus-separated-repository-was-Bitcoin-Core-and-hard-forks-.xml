<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libconsensus separated repository (was Bitcoin Core and hard forks)</title>
  <updated>2023-06-10T03:40:15.922413+00:00</updated>
  <author>
    <name>Tamas Blummer 2015-08-20 21:26:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libconsensus separated repository (was Bitcoin Core and hard forks)</title>
    <updated>2023-06-10T03:40:15.922413+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010514.html" rel="alternate"/>
    <summary>In a thread on the bitcoin-dev mailing list, Tamas Blummer discusses his goal of creating an implementation that can extract consensus rules from Bitcoin Core so that they do not need to be re-implemented. While he acknowledges the importance of compatibility with Bitcoin, he also believes it is imperative to have the ability to create and serve other block chains with different rules. To achieve this, he suggests using modern tool sets and a slim API server. He notes that every re-implementation or refactoring introduces a risk of disagreement, but also provides an opportunity to improve software engineering. In response, Matt Corallo suggests that a libconsensus should ideally have a simple API for blocks and the current chain, with the possibility of pluggable block storage. He does not think a networking layer is necessary, and notes that C++ is not an antique tool set.</summary>
    <published>2015-08-20T21:26:19+00:00</published>
  </entry>
</feed>
