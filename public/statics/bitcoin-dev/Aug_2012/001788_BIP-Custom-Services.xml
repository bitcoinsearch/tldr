<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: Custom Services</title>
  <updated>2023-06-06T06:55:44.872893+00:00</updated>
  <author>
    <name>Stefan Thomas 2012-08-13 20:00:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: Custom Services</title>
    <updated>2023-06-06T06:55:44.872893+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-August/001788.html" rel="alternate"/>
    <summary>BitcoinJS is implementing a Distributed Hash Table (DHT) that will store only a user-defined percentage of the blockchain index locally. Any misses will be resolved by querying the network. The new feature will give users the option to run anywhere from a large BitcoinJS node to a lightweight one. All of them are equally queryable, and people won't have to download the Blockchain just to run the block explorer example. Peer exchange might work for custom services.In order to discover and make use of these capabilities, a second BIP was created, which includes prefixing the standard addr message with a service-specific message to mark off service support. The DHT network is extensible, allowing the decentralized pool protocol to live within it. It is considered easier to add semantics for "some nodes support some things" in one network rather than creating n networks.The focus of this BIP is to make it easy to canonicalize custom services if they prove themselves in the wild. Custom services can be added to the standard protocol, so it's recommended to encourage custom services to live in-band and recommend compatibility with Bitcoin's standard mechanisms.There may be pushback against putting extra functionality into the core Bitcoin network. Most likely, people will reuse the code with different peer discovery seeds and bootstrap similar but unrelated P2P networks for doing new applications. More elaboration of the use cases might be useful.</summary>
    <published>2012-08-13T20:00:36+00:00</published>
  </entry>
</feed>
