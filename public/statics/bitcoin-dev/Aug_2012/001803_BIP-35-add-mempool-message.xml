<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 35: add mempool message</title>
  <updated>2023-05-19T04:07:49.314632+00:00</updated>
  <author>
    <name>Pieter Wuille 2012-08-17 13:40:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 35: add mempool message</title>
    <updated>2023-05-19T04:07:49.314632+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-August/001803.html" rel="alternate"/>
    <summary>In an email thread, Jeff Garzik wrote about the higher Just Works value of the current version of MSG_MEMTX and suggested that it is generally better to do something unconditionally than generate a response under certain conditions. However, Pieter argued that returning an empty "inv" message is an unusual way of replying to an empty mempool. He explained that Bitcoin P2P is not a request-response protocol, and "inv" messages are only sent where there are inventory items to send. Therefore, special-casing an empty "inv" to mean empty mempool is trying to hack a request-response system on top of the asynchronous system. Pieter further stated that if there is a need for confirming the transmission of the mempool is complete, using a MSG_MEMTX message sounds like a good idea. No client would ever receive such an inv without requesting the mempool, and implementing handling MSG_MEMTX is trivial. Alan also noted that unknown messages are ignored intentionally for expansion purposes. Nonetheless, returning a response unconditionally has little to do with feature probing or discovery but serves merely as a clear, deterministic indication that processing is complete for each invocation.</summary>
    <published>2012-08-17T13:40:01+00:00</published>
  </entry>
</feed>
