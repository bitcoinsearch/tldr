<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CVE-2018-20586 disclosure (log injection vulnerability)</title>
  <updated>2023-06-13T22:18:59.244429+00:00</updated>
  <author>
    <name>Luke Dashjr 2019-11-22 17:13:14</name>
  </author>
  <author>
    <name>Luke Dashjr 2019-11-22 17:13:14</name>
  </author>
  <author>
    <name>Luke Dashjr 2019-11-22 17:13:14</name>
  </author>
  <link href="bitcoin-dev/Nov_2019/017487_CVE-2018-20586-disclosure-log-injection-vulnerability-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2019/017487_CVE-2018-20586-disclosure-log-injection-vulnerability-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2019/017487_CVE-2018-20586-disclosure-log-injection-vulnerability-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - CVE-2018-20586 disclosure (log injection vulnerability)</title>
    <updated>2023-06-13T22:18:59.244429+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-November/017487.html" rel="alternate"/>
    <summary>Bitcoin Core was affected by a log injection vulnerability called CVE-2018-20586, which allowed any software with access to the RPC port to create fake or confusing entries in the debug log without requiring valid authentication. However, the RPC port is only exposed to the local machine by default. The vulnerability was introduced in 2016 and fixed in December 2018 with the release of v0.17.1. To exploit this vulnerability, the malicious software must either be running on the same machine as the node, have the ability to proxy connections to the node via the local machine, or the node must be configured to accept RPC connections from a network via which the attacker can connect.In addition, a human user must read the debug log and believe the injected data in a way that is harmful. The attacker can add almost any content to the request to inject it into the log, and standard spaces would need to be replaced with alternative whitespace characters, and newlines would need to become other control characters to ensure the entire request is injected. Since the injected data must use such non-standard characters, it is unlikely to fool other software parsing the debug log and only a human visually reading it.POST requests are now sanitized before being logged, removing all characters that shouldn't be in an ordinary POST request to fix this vulnerability. The timeline indicates that the vulnerability was introduced in January 2015 and merged to master git repository in September 2015. Practicalswift disclosed the vulnerability to the security team in October 2018, and the fix was merged to the master git repository on November 5th and to the 0.17 git repository on November 30th.The existence of the vulnerability was disclosed to bitcoin-dev ML in June 2019, and its details were disclosed on November 22nd, 2019. Practicalswift is credited with discovering and fixing the vulnerability.</summary>
    <published>2019-11-22T17:13:14+00:00</published>
  </entry>
</feed>
