<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>v3 onion services</title>
  <updated>2023-06-13T22:17:36.498784+00:00</updated>
  <author>
    <name>s7r 2019-11-17 15:35:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>v3 onion services</title>
    <updated>2023-06-13T22:17:36.498784+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-November/017477.html" rel="alternate"/>
    <summary>The Bitcoin client core currently supports the use of Tor's v2 hidden service, but not v3. Mr. Lee Chiffre is in progress of creating a new Bitcoin node that will use v3 instead of v2, and is looking into whether Bitcoin Core or btcd support v3 onion addresses for the node address, as well as I2P addresses. However, Bitcoin Core is limited to 128 bit 'addresses' in the p2p protocol, which requires a rework of the protocol for v3 onion services since they are whole ed25519 public keys encoded with .onion at the end. The same applies to I2P address types as well. For the default `ADD_ONION` feature, the onion service key was downgraded to explicitly RSA1024 (legacy, v2 onion services) to ensure the feature still works out of the box. If someone wants a Tor-only full node, they should use v2 onion services for now. One can have a service that is accessible as a v3 onion service to the general public, while in the back using a Bitcoin full node that uses v2 onion service to talk to other nodes. It is possible to use both v2 and v3 onion services simultaneously via the same torrc file by setting HiddenServiceVersion parameter after every HiddenServiceDir parameter.</summary>
    <published>2019-11-17T15:35:16+00:00</published>
  </entry>
</feed>
