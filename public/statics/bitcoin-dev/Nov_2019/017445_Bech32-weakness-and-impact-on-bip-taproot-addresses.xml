<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bech32 weakness and impact on bip-taproot addresses</title>
  <updated>2023-05-20T21:04:30.657161+00:00</updated>
  <author>
    <name>Matt Corallo 2019-11-08 00:41:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bech32 weakness and impact on bip-taproot addresses</title>
    <updated>2023-05-20T21:04:30.657161+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-November/017445.html" rel="alternate"/>
    <summary>A vulnerability has been discovered in the bech32 address format, where inserting or erasing "q"s before a final "p" does not invalidate it. While this issue was not by design and may influence design decisions around bip-taproot, it has little effect on the security of P2WPKH/P2WSH addresses as those are only valid for specific lengths. If unencumbered witness v1 outputs of length other than 32 are outlawed, this could prevent such an insertion or erasure from resulting in an output that can be spent by anyone. However, rather than addressing this issue with a consensus/standardness fix, it is suggested to redefine bech32 to not allow such addresses. Alternatively, making them non-standard could be a softer approach in preparation for a future accepted softfork.</summary>
    <published>2019-11-08T00:41:54+00:00</published>
  </entry>
</feed>
