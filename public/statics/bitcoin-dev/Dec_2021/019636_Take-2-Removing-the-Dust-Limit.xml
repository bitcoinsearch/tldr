<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Take 2: Removing the Dust Limit</title>
  <updated>2023-06-15T03:24:17.425093+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2021-12-08 08:34:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Take 2: Removing the Dust Limit</title>
    <updated>2023-06-15T03:24:17.425093+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019636.html" rel="alternate"/>
    <summary>In a recent email exchange between Jeremy and Bastien on the Bitcoin-dev mailing list, the discussion centered around lightning anchor outputs for committing transactions. The current system uses 330 sats amount, with two commitment transactions having such outputs. One output remains untouched, leading to bloat in the UTXO set, while the other is spent to confirm transactions. Anyone can spend these after a CSV of 16 blocks, but this trick wouldn't work for 0-value outputs. Bastien notes that N-party protocols would need N such outputs to avoid pinning, but he's not sure. In contrast, Jeremy proposes a change to the carve-out rule that allows 0 value outputs to be used as intermediate outputs, requiring them to be spent by another transaction before being created in the mempool. This rule also presupposes a fully functional package relay system. Jeremy believes this will solve issues with allowing 0 value outputs to be created, specifically for immediately spendable outputs.</summary>
    <published>2021-12-08T08:34:32+00:00</published>
  </entry>
</feed>
