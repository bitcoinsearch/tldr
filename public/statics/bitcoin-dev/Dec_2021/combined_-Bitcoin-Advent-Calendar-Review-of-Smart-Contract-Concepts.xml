<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [Bitcoin Advent Calendar] Review of Smart Contract Concepts</title>
  <updated>2023-06-15T03:22:57.296624+00:00</updated>
  <author>
    <name>Prayank 2021-12-23 11:55:31</name>
  </author>
  <author>
    <name>Jeremy 2021-12-07 23:31:06</name>
  </author>
  <author>
    <name>Jeremy 2021-12-07 23:31:06</name>
  </author>
  <author>
    <name>Prayank 2021-12-23 11:55:31</name>
  </author>
  <author>
    <name>Prayank 2021-12-23 11:55:31</name>
  </author>
  <author>
    <name>Jeremy 2021-12-07 23:31:06</name>
  </author>
  <link href="bitcoin-dev/Dec_2021/019707_-Bitcoin-Advent-Calendar-Review-of-Smart-Contract-Concepts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019629_-Bitcoin-Advent-Calendar-Review-of-Smart-Contract-Concepts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019629_-Bitcoin-Advent-Calendar-Review-of-Smart-Contract-Concepts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019707_-Bitcoin-Advent-Calendar-Review-of-Smart-Contract-Concepts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019707_-Bitcoin-Advent-Calendar-Review-of-Smart-Contract-Concepts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019629_-Bitcoin-Advent-Calendar-Review-of-Smart-Contract-Concepts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [Bitcoin Advent Calendar] Review of Smart Contract Concepts</title>
    <updated>2023-06-15T03:22:57.296624+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019707.html" rel="alternate"/>
    <summary>Jeremy Rubin's blog post delves into high-level smart contract concepts related to various opcodes and proposals. The author first discusses the concept of recursion in programming, also known as "Turing Complete," and shares how an Indian movie helped them remember this concept. The discussion then moves on to the limitations of unrolling loops and how it can be less effective when choices are introduced, resulting in exponential blowup. However, memoization can help reduce this complexity for clever and careful programmers. The author agrees with the limitations and optimization possibilities.The conversation also touches on the difference between fully enumerated and open-ended contract cases, where the latter allows for dynamic specification of bits and pieces. The author provides an interesting example where Alice is paid 1 BTC by December 25th, 2021 Midnight, and then transfers 100 tokens to one of Bob's addresses at his discretion. Finally, the author learns something new about signing the transaction fee rate as a function of locktime.Overall, Jeremy Rubin's blog post explores essential smart contract concepts that readers can associate with different opcodes or proposals. The post invites readers to share their thoughts on other relevant properties, providing valuable insights into the world of smart contracts.</summary>
    <published>2021-12-23T11:55:31+00:00</published>
  </entry>
</feed>
