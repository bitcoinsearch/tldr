<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Full-RBF in Bitcoin Core 24.0</title>
  <updated>2023-06-14T22:40:19.401458+00:00</updated>
  <author>
    <name>Peter Todd 2021-12-18 17:52:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Full-RBF in Bitcoin Core 24.0</title>
    <updated>2023-06-14T22:40:19.401458+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019697.html" rel="alternate"/>
    <summary>On Bitcoin-dev mailing list, Jeremy suggested an idea to ease into getting rid of full-rbf by keeping the flag working but enforcing non-replaceability n seconds after first seen. This would reduce the ability to partition mempools by broadcasting irreplaceable conflicts all at once and slowly ease clients off of relying on non-RBF. He suggested starting with 60 seconds and doubling every release until it reaches 600, at which point they disable it. Peter Todd, a cryptocurrency consultant, replied that making replacability turn on after an expiry time is reached had been suggested before. However, he believed that enabling full-rbf until a time is reached was clever and novel. He suggested doing both at once. Long-running transactions are useful, but if a transaction has not been mined in a few blocks, it cannot be relied on for zeroconf.</summary>
    <published>2021-12-18T17:52:07+00:00</published>
  </entry>
</feed>
