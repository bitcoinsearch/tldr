<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [Bitcoin Advent Calendar] Payment Pools/ Coin Pools</title>
  <updated>2023-06-15T03:29:37.017175+00:00</updated>
  <author>
    <name>Jeremy 2021-12-10 23:01:34</name>
  </author>
  <author>
    <name>Jeremy 2021-12-10 23:01:34</name>
  </author>
  <author>
    <name>Jeremy 2021-12-10 23:01:34</name>
  </author>
  <link href="bitcoin-dev/Dec_2021/019655_-Bitcoin-Advent-Calendar-Payment-Pools-Coin-Pools.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019655_-Bitcoin-Advent-Calendar-Payment-Pools-Coin-Pools.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019655_-Bitcoin-Advent-Calendar-Payment-Pools-Coin-Pools.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [Bitcoin Advent Calendar] Payment Pools/ Coin Pools</title>
    <updated>2023-06-15T03:29:37.018175+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019655.html" rel="alternate"/>
    <summary>The post explores the idea of payment pools or coin pools in Sapio, which can compress chain load into single UTXOs. This results in a more secure way for users to recover their coins. Additionally, payment pools provide a natural evolution path for federated rollups with unilateral exits. The author suggests that covenants or ZK systems could be used to enforce state transitions instead of N-of-N signatures. Custom payment pools can be created in Sapio, and it may be possible to incorporate an EVM into the state transition function. However, the author cautions against using generic terms like payment pools/coin pools and recommends specific names such as payment channels and lightning network for particular protocols.</summary>
    <published>2021-12-10T23:01:34+00:00</published>
  </entry>
</feed>
