<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Bitcoin Advent Calendar] Oracles, Bonds, and Attestation Chains</title>
  <updated>2023-06-15T03:41:30.854362+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-12-18 03:49:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Bitcoin Advent Calendar] Oracles, Bonds, and Attestation Chains</title>
    <updated>2023-06-15T03:41:30.854362+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019693.html" rel="alternate"/>
    <summary>In an email exchange, ZmnSCPxj shares some interesting observations about using musig keys for staking in a blockchain network. According to him, if a user employs a musig key for staking that is musig(a,b,c), they can sign with a, b, or c until they equivocate once, after which they would have to switch to the other keys. This mechanism could be useful for correcting mistakes made while signing. However, if a staker equivocates three times, they are out. ZmnSCPxj also suggests a way to incentivize stakers to sign the "correct" statement in line with their peers. He proposes that only the stakers who sign with the majority get allocated reward tokens for that slot. This creates an incentive for stakers to try to sign the "correct" statement, but it also means that stakers who equivocate to switch and get tokens would burn their collateral for them.</summary>
    <published>2021-12-18T03:49:15+00:00</published>
  </entry>
</feed>
