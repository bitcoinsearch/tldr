<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merkel Forrest Partitioning</title>
  <updated>2023-06-11T18:51:10.474596+00:00</updated>
  <author>
    <name>Scott Morgan 2016-06-21 22:12:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merkel Forrest Partitioning</title>
    <updated>2023-06-11T18:51:10.474596+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012793.html" rel="alternate"/>
    <summary>Hello Scott,I understand that you have been thinking about partitioning a Merkel Tree Forrest in a different way. The idea is to create new Merkel Trees periodically as the currency supply grows, which would partition the mining process and improve the distribution of verification. In this scenario, new trees would be created once the number of BTC exceeds 250 BTC. Each tree would contain its own batch with its own Merkel Tree, allowing small-scale pool miners to dominate a single or small number of trees and their block chains.However, this approach could also create a potential partial payment problem where a user may send 3 BTC but only receive 2 BTC since 1 BTC ends up on a bad block and needs to be resent. This idea is not thoroughly thought through, and it might be too late for Bitcoin since most of the currency supply is already available. Nevertheless, it could be used for new cryptocurrencies.Do you have any further thoughts on this idea?Best regards,Akiva</summary>
    <published>2016-06-21T22:12:32+00:00</published>
  </entry>
</feed>
