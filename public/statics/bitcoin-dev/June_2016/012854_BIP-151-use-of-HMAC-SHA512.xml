<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 151 use of HMAC_SHA512</title>
  <updated>2023-06-11T18:52:42.735152+00:00</updated>
  <author>
    <name>Arthur Chen 2016-06-29 01:38:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 151 use of HMAC_SHA512</title>
    <updated>2023-06-11T18:52:42.735152+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012854.html" rel="alternate"/>
    <summary>HMAC, or Hash-based Message Authentication Code, has a proven security property that remains secure even when the underlying crypto hashing function has collision-resistant weakness. Despite MD5 being considered completely insecure now, HMAC-MD5 is still considered secure. It is recommended to use HMAC for MAC (Message Authentication Code) rather than custom construction. In a conversation between Rusty Russell and Jonas Schnelli, it was suggested that SHA512_HMAC be used in a mix instead of just SHA256_HMAC because it is used by BIP32 and most clients will make use of bip32 features. However, Rusty argues that this may be unnecessarily painful. SHA256_HMAC is currently not used by the current p2p &amp; consensus layer, but is used for HTTP RPC auth and Tor control in Bitcoin-Core. Rusty also questions the use of HMAC over just SHA256. Xuesong (Arthur) Chen, a Senior Principle Engineer and BlockChain Technologist at BTCC, initiated the conversation.</summary>
    <published>2016-06-29T01:38:44+00:00</published>
  </entry>
</feed>
