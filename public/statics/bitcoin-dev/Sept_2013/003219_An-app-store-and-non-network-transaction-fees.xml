<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An "app store" and non-network transaction fees</title>
  <updated>2023-06-07T16:29:37.233021+00:00</updated>
  <author>
    <name>Wendell 2013-09-05 10:04:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An "app store" and non-network transaction fees</title>
    <updated>2023-06-07T16:29:37.233021+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-September/003219.html" rel="alternate"/>
    <summary>In an email conversation between Mike Hearn and an unknown recipient, they discuss various aspects of an app store for Bitcoin. Mike suggests that it would be simpler to think of the app store as a set of affiliate schemes, where businesses must have an affiliate scheme in place to be placed into the apps section. Users who refer a lot of users to that business will receive referral bonuses. The apps do not have to be offline and should be online so businesses can retain control of their features and brand. However, Hive also plans to have a submission/review process to ensure user experience continuity and monitor potential exploits. They plan to have a public repository for applications maintained by them. One downside is that technical judgement may be distorted if projects push certain businesses heavily because their income depends on it. Mike also suggests another alternative funding model, allowing users to bid on assurance contracts for feature development. This means users could pledge Kickstarter-style towards the development of improvements. The upside is that it allows the community to direct development, and users feel directly involved and not exploited. The downside is no recurring income can support future endeavors. They also discuss using bitcoinj with an integrated VM for the app's framework, despite wanting to support the network more via something like Peter Todd's partial UTXO sets idea. Mike warns that regardless of how much they want to support the network, ultimately, it is user resources that will get spent. Thus, relying on random end-users donating lots of CPU time or bandwidth to the network is not ideal.</summary>
    <published>2013-09-05T10:04:26+00:00</published>
  </entry>
</feed>
