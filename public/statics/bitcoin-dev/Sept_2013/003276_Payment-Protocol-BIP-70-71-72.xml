<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment Protocol: BIP 70, 71, 72</title>
  <updated>2023-06-07T15:03:47.067859+00:00</updated>
  <author>
    <name>Mike Hearn 2013-09-24 13:52:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment Protocol: BIP 70, 71, 72</title>
    <updated>2023-06-07T15:03:47.067859+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-September/003276.html" rel="alternate"/>
    <summary>In this email thread from 2013, Bitcoin developers discuss various aspects of the Payment Protocol. Andreas Petersson asks if there is a standardized invoice serialization, to which Gavin Andresen responds that there are XML-based standards for electronic invoicing that could be encapsulated in an 'invoice' field extension. Alternatively, they could come up with their own standard or use a subset of an existing standard. When asked if there is a way to communicate acceptance levels of transactions using several PaymentACKs, Andresen responds that it is not possible because the Payment-&gt;PaymentACK communication round-trip is done in one, non-persistent http request-response round-trip. Furthermore, they do not want to allow merchants to push messages to the wallet or have wallets poll the merchant. Mike Hearn argues that the confidence of the tx is not really the user's concern as they wrote it so they know it's valid. If the merchant disagrees for some reason then the user can find out out-of-band when the goods/services are not delivered. The conversation also briefly touches on making QR codes more scannable and changing BIP 72 to use "r" instead of "request" as the new param to save bytes.</summary>
    <published>2013-09-24T13:52:24+00:00</published>
  </entry>
</feed>
