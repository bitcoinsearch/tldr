<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Out-of-band transaction fees</title>
  <updated>2023-06-14T16:22:53.497040+00:00</updated>
  <author>
    <name>Sebastian Geisler 2020-12-01 14:19:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Out-of-band transaction fees</title>
    <updated>2023-06-14T16:22:53.497040+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-December/018288.html" rel="alternate"/>
    <summary>Sebastian Geisler has proposed the idea of out-of-band transaction fees, which would allow for privacy-preserving payment of fees in Bitcoin transactions. This would be particularly useful in scenarios where UTXOs need to be sent "intact" without introducing taint from repeated use of additional inputs for fees. Such a system could also be used in CoinJoin-like protocols to introduce further ambiguity without leaking information about participants. Out-of-band transaction accelerators already exist, so having a standardized system for this type of fee payment would be preferable to having every pool implement their own API. The central questions are how to build such a system, how to standardize it, and how to mitigate its centralizing effects. One possibility would be for single-operator services to provide both standardized user and miner APIs as well as an optional UI. Users should be able to choose from different means of payment when submitting transactions, and miners that included a transaction would authenticate their claim on the bounty with a unique public key. While not a general solution for fee payments, out-of-band payment options could help certain protocols, particularly as Bitcoin becomes more of a settlement and reserve layer.</summary>
    <published>2020-12-01T14:19:56+00:00</published>
  </entry>
</feed>
