<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
  <updated>2023-05-20T23:58:01.885165+00:00</updated>
  <author>
    <name>Pieter Wuille 2020-12-06 20:43:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Progress on bech32 for future Segwit Versions (BIP-173)</title>
    <updated>2023-05-20T23:58:01.885165+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-December/018298.html" rel="alternate"/>
    <summary>In a discussion between David A. Harding and Pieter Wuille via Bitcoin-dev mailing list, they discussed the issue of maintaining the old-software-can-send-to-future-segwit-versions property. Pieter argued that there is no reason to maintain it since some software actually sent coins into a black hole. However, David suggested that it shouldn't be a criterion for making a decision since users of working implementations should not be denied the benefit of a feature because some other developers didn't implement it correctly. They also discussed the possibility of changing the checksum unconditionally for v1+ addresses. In response to Rusty's proposal, David suggested checking how disruptive an address format change would be by seeing how many wallets already provide forward compatibility and how many would need to be updated for taproot, regardless of the address format used. The survey results showed that only two wallets correctly handled v1+ BIP173 addresses. Based on this, both David and Pieter agreed to change the checksum for v1+ addresses. They examined the behavior of different classes of software/services in sending to v1+ addresses and concluded that changing the checksum unconditionally gives them a new attempt at having one address type for all witness versions.</summary>
    <published>2020-12-06T20:43:49+00:00</published>
  </entry>
</feed>
