<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP draft] CHECKLOCKTIMEVERIFY - Prevent a txout from being spent until an expiration time</title>
  <updated>2023-05-19T19:19:42.555174+00:00</updated>
  <author>
    <name>Gregory Maxwell 2014-10-09 06:40:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP draft] CHECKLOCKTIMEVERIFY - Prevent a txout from being spent until an expiration time</title>
    <updated>2023-05-19T19:19:42.555174+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-October/006717.html" rel="alternate"/>
    <summary>In an email conversation on October 9, 2014, Peter Todd asked for an example of a complex transaction use-case that is affected by malleability and cannot be fixed by CHECKLOCKTIMEVERIFY. In response, another person suggested an example involving a kickstarter-escrow where two parties put 5 BTC each to pay Alice and an oracle who decides if Alice did her job. If a timeout expires before Alice gets the sign off, the funds must be returned to their original payers. This can be done with a pre-signed refund, but if there are multiple outputs or refunds, an atomic reversal cannot be guaranteed.</summary>
    <published>2014-10-09T06:40:59+00:00</published>
  </entry>
</feed>
