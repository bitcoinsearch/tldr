<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP draft] CHECKLOCKTIMEVERIFY - Prevent a txout from being spent until an expiration time</title>
  <updated>2023-06-09T02:53:34.909471+00:00</updated>
  <author>
    <name>Peter Todd 2014-10-02 00:12:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP draft] CHECKLOCKTIMEVERIFY - Prevent a txout from being spent until an expiration time</title>
    <updated>2023-06-09T02:53:34.909471+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-October/006671.html" rel="alternate"/>
    <summary>On October 1, 2014, Gavin Andresen and Alan Reiner discussed the concept of proof-of-burn as a method of funding transactions in Bitcoin. Reiner suggested that a burner would supply the funding transaction plus the redeeming script as proof-of-burn to whoever needed it. However, Andresen pointed out that the redeemScript has to be provably published to miners for the sacrifice to be valid, or one could exploit the scheme by hiding the redeemScript and having a big miner mine it at lower-than-face-value cost when it unlocks.Andresen further explained that revealing the redeeming script might make miners refuse to mine the first transaction because they want to get it plus the CHECK TIME BLOCK VERIFY "burn" transaction. Therefore, a follow-up transaction containing the redeemScript in an OP_RETURN output to prove publication could be used after at least one confirmation. However, Andresen also stated that since the sacrifices need to unlock pretty far into the future, he didn't see miners bothering to do this. The conversation was signed with a PGP signature.</summary>
    <published>2014-10-02T00:12:51+00:00</published>
  </entry>
</feed>
