<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Version 1 witness programs (first draft)</title>
  <updated>2023-06-12T21:26:42.856535+00:00</updated>
  <author>
    <name>Felix Weis 2017-10-01 11:22:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Version 1 witness programs (first draft)</title>
    <updated>2023-06-12T21:26:42.856535+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-October/015146.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list is centered around potential changes to the signature format. One suggestion is to design the format in a way that would allow for future hard forks to easily implement cross chain replay protection by changing just one constant in the code. Another point of discussion is the possibility of eliminating clean stack, which is currently a consensus requirement to avoid witness malleability, but could potentially be used for recursive tail-call for general computation capability in the future. However, some argue that it should not be eliminated prematurely as it could still be useful for soft-fork safety. Instead of committing to the size of the witness, it is suggested that committing to the number of witness elements is fully sufficient and avoids problems of not knowing the actual size in bytes at the time of signing. Other future extensions might also have variable-length proofs. Overall, the discussion is focused on potential changes to the signature format to ensure future flexibility and compatibility with potential hard forks.</summary>
    <published>2017-10-01T11:22:30+00:00</published>
  </entry>
</feed>
