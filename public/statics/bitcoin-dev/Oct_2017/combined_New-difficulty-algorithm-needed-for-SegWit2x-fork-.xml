<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New difficulty algorithm needed for SegWit2x fork?</title>
  <updated>2023-06-12T21:33:12.908203+00:00</updated>
  <author>
    <name>Scott Roberts 2017-10-09 21:26:50</name>
  </author>
  <author>
    <name>Scott Roberts 2017-10-09 21:26:50</name>
  </author>
  <author>
    <name>Scott Roberts 2017-10-09 21:26:50</name>
  </author>
  <link href="bitcoin-dev/Oct_2017/015166_New-difficulty-algorithm-needed-for-SegWit2x-fork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015166_New-difficulty-algorithm-needed-for-SegWit2x-fork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015166_New-difficulty-algorithm-needed-for-SegWit2x-fork-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New difficulty algorithm needed for SegWit2x fork?</title>
    <updated>2023-06-12T21:33:12.908203+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-October/015166.html" rel="alternate"/>
    <summary>The Bitcoin difficulty algorithm is facing criticism due to its imperfections, and there are concerns that a fork may occur if miners prioritize profit over security. This could lead to a situation where if 90% of hashrate goes toward using SegWit2x, BTC would face 10x delays in confirmations, which would negatively affect its price relative to BTC1. Such a situation could potentially cause an oscillation between the two coins worse than what BCH is experiencing and also lead to miner abandonment.To tackle this issue, a solution proposed is to implement a new difficulty algorithm through a hard fork. The recommended difficulty algorithm for Bitcoin is Zawy v6, which uses a simple rolling average with a smaller window. Additionally, the reward should be adjusted based on recent solvetimes to keep the coin issuance rate on schedule.The constants until the next hard fork are set as T=600 and N=30 for the averaging window, X=5 for the size of sudden hashrate changes expected as multiple of base hashrate, limit = X^(2/N) to limit rise and fall to protect against timestamp errors and manipulation, and adjust = 1/(1+0.67/N) to keep avg solvetime on track for small N. The difficulty algorithm begins with avg_ST=0 and avg_D=0 and goes through the N most recent blocks to calculate the average SolveTime and Difficulty. If avg_ST exceeds T*limit or is less than T/limit, it is adjusted accordingly. Overall, the proposed solution aims to create a more efficient and secure system for Bitcoin. By implementing a new difficulty algorithm, it will ensure that miners do not prioritize profit over security, and prevent potential issues such as miner abandonment and an oscillation between coins.</summary>
    <published>2017-10-09T21:26:50+00:00</published>
  </entry>
</feed>
