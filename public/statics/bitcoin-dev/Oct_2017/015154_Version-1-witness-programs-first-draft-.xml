<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Version 1 witness programs (first draft)</title>
  <updated>2023-05-20T04:07:51.272228+00:00</updated>
  <author>
    <name>Johnson Lau 2017-10-01 21:32:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Version 1 witness programs (first draft)</title>
    <updated>2023-05-20T04:07:51.272228+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-October/015154.html" rel="alternate"/>
    <summary>There are three proposals with the same objective but different designs. The first question addressed is how to allow further upgrades within v1 witness and there are three options; using minor versions in witness, OP_RETURNTRUE, and generalized NOP method. The preferred option is minor version in witness, however, this may result in multiple minor versions. The second question is whether to allow signature-time commitment of extra scripts. All proposals allow this but with different approaches such as tail-call semantics with CHECKSIGFROMSTACK, scriptWitCode, and extra-data as script in OP_CHECKSIG. Finally, the third question is whether to allow static analysis of sigop. BIP114 and related proposals allow static analysis of sigop but once it's done, it has to be supported forever. This property was the main reason for Ethereum failing to do a DAO hacker soft fork leading to the ETH/ETC split.</summary>
    <published>2017-10-01T21:32:56+00:00</published>
  </entry>
</feed>
