<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalized sharding protocol for decentralized scaling without Miners owning our BTC</title>
  <updated>2023-06-12T21:37:50.677603+00:00</updated>
  <author>
    <name>Paul Sztorc 2017-10-10 15:09:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalized sharding protocol for decentralized scaling without Miners owning our BTC</title>
    <updated>2023-06-12T21:37:50.677603+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-October/015177.html" rel="alternate"/>
    <summary>On October 9, 2017, Tao Effect proposed a generic sharding protocol for all blockchains, including Bitcoin. This idea is similar in spirit to Interledger. Users simply say: "My coins on Chain A are going to be sent to Chain B". Then they burn the coins on Chain A, and create a minting transaction on Chain B. The details of how to ensure that coins do not get lost needs to be worked out. Thin clients, nodes, and miners can all very easily verify that said action took place, and therefore accept the "newly minted" coins on B as valid. Users' client software now also knows where to look for the other coins (if for some reason it needs to).Tao Effect later clarified that the "burning" applies to the original coins users had. When they transfer them back, they get newly minted coins, equivalent to the amount they "burned" on the chain they're transferring from, as stated in the original post. If they don't like the word "burn," they can pick another one. It is fully decentralized, and there's no need to give our ownership of our coins to miners to get scale.Paul Sztorc argued that it was only a one-way peg, not a two-way. In fact, that is exactly what drivechain does, if one chooses parameters for the drivechain that make it impossible for any side-to-main transfer to succeed. One-way pegs have strong first-mover disadvantages.</summary>
    <published>2017-10-10T15:09:21+00:00</published>
  </entry>
</feed>
