<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Version 1 witness programs (first draft)</title>
  <updated>2023-06-12T21:26:17.255122+00:00</updated>
  <author>
    <name>Luke Dashjr 2017-10-02 00:45:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Version 1 witness programs (first draft)</title>
    <updated>2023-06-12T21:26:17.255122+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-October/015156.html" rel="alternate"/>
    <summary>In this email exchange, Johnson Lau and Luke Dashjr are discussing various options for allowing further upgrades within v1 witness. The options discussed include minor version in the witness, OP_RETURNTRUE, and a generalized NOP method. Both Johnson and Luke prefer using a minor version in the witness with OP_RETURNTRUE as a fallback option when practical changes are needed. They also discuss allowing signature-time commitment of extra scripts, which can be done through tail-call semantics, scriptWitCode, or extra-data as script in OP_CHECKSIG. BIP114 draft supports both minor version in the witness and extra-data as script in OP_CHECKSIG. They also talk about whether they want to allow static analysis of sigop and how it can be done by adding a separate "executable-witness" array or tagging all witness elements with minor version. However, these approaches would add additional bytes per script reference, which may not be worth the effort to avoid losing static analysis.</summary>
    <published>2017-10-02T00:45:22+00:00</published>
  </entry>
</feed>
