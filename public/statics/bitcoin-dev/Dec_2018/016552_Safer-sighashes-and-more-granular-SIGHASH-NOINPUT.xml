<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-06-13T15:26:56.076882+00:00</updated>
  <author>
    <name>Russell O'Connor 2018-12-13 16:34:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-06-13T15:26:56.076882+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016552.html" rel="alternate"/>
    <summary>The discussion in the email thread between Gregory Maxwell and Russell O'Connor via bitcoin-dev revolves around whether or not to allow for signature covers weight and avoid witness weight malleability. O'Connor believes that even if witness weight malleability is entirely avoidable, it always comes at a cost, and adding signature covers weight is worthwhile despite the potential for software complexity. In multi-party protocols, the last person to sign knows what the total weight is going to be and has the ability to sign it, but there could be asynchronous protocols where there isn't a last person to sign. The possibility of bloating the transaction and signing the bloated weight may also be a concern in such scenarios. While signing weight may have issues in many scenarios, O'Connor believes it is still better to make the option available than to rely on anti-malleability Script Code or non-consensus relay policy.</summary>
    <published>2018-12-13T16:34:17+00:00</published>
  </entry>
</feed>
