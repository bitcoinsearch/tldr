<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-06-13T15:23:30.220496+00:00</updated>
  <author>
    <name>Rusty Russell 2018-12-16 06:55:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-06-13T15:23:30.220496+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016559.html" rel="alternate"/>
    <summary>The debate over Bitcoin's NOINPUT feature continued on the bitcoin-dev mailing list, with developer Anthony Towns arguing that minimal complexity for wallets is an underappreciated feature. He stated that there are many complexities they could add, each of which would prevent loss of funds in some theoretical case. From practical experience, reuse of private keys between lightning and other things is not how people will lose funds. According to him, it is non-trivially more complicated for wallets currently; they have a set of script templates which they will sign and there is no code to parse scripts. Bitcoind developers cannot accurately assess complexity here since they have to implement everything, so each increment seems minor. Meanwhile, none of these new script versions will ever make bitcoind simpler, since they have to support all prior ones. Wallets, however, do not have to.</summary>
    <published>2018-12-16T06:55:48+00:00</published>
  </entry>
</feed>
