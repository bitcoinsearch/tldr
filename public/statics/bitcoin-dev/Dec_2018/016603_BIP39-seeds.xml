<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP39 seeds</title>
  <updated>2023-06-13T16:34:46.977978+00:00</updated>
  <author>
    <name>Alan Evans 2018-12-31 16:52:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP39 seeds</title>
    <updated>2023-06-13T16:34:46.977978+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016603.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around using an algorithm to generate BIP39 phrases from any text. However, some participants argue that using fake sources of randomness, such as books, is not secure and could lead to hacking attempts. Additionally, using public sources or common passphrases is also not recommended due to the risk of collisions. The BIP0039 standard allows for flexibility in wordlists and sentence generators, but it is advised to use a mnemonic generated by the algorithm described in the section "Generating the mnemonic". One suggested method is to use a true random BIP39 sentence along with a passphrase from a book to provide plausible deniability. However, redirecting people to a book phrase is deemed risky as there may be changes in key places. It is noted that many people have lost their wallets due to BIP39. In response to a suggestion that a tool could be used to generate BIP39 phrases that have been previously used, it is pointed out that the tool would need to guess the derivation path and would only work for Bitcoin. The idea of generating BIP39 phrases from any input text is considered reasonable and could also help in the event of unexpected situations. However, caution should be exercised in choosing the source of randomness for the passphrase.</summary>
    <published>2018-12-31T16:52:24+00:00</published>
  </entry>
</feed>
