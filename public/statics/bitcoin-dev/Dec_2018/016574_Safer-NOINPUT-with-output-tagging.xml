<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer NOINPUT with output tagging</title>
  <updated>2023-05-20T18:55:55.526499+00:00</updated>
  <author>
    <name>Johnson Lau 2018-12-20 18:04:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer NOINPUT with output tagging</title>
    <updated>2023-05-20T18:55:55.526499+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016574.html" rel="alternate"/>
    <summary>The email thread discusses the process of setting up, updating, and closing a Lightning Network channel using eltoo. The setup involves creating a setup transaction with a 2-of-2 multisig output, followed by an update transaction that translates this to a two-branch output for updates or settlements. The settlement transaction reflects the initial state of the channel and includes the refund in case of one party disappearing right away. Updates involve creating new update transactions with identical output scripts to the trigger or update_0 transaction, which requires adding a CSV. Collaborative close is always simple, while unilateral close involves broadcasting the trigger and the latest update_n transaction, waiting for the CSV timeout to expire, and then sending the settlement transaction. In the worst case scenario, there are four transactions involved, but if no one is cheating, only three transactions are needed. It's a tradeoff between having a larger on-chain footprint and putting a fixed lifetime on the channel for the refund case if one party disappears right away.</summary>
    <published>2018-12-20T18:04:37+00:00</published>
  </entry>
</feed>
