<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposal for Palindromic (Reversible) Mnemonics</title>
  <updated>2023-06-13T16:10:45.002827+00:00</updated>
  <author>
    <name>Joseph Gleason ⑈ 2018-12-03 20:54:10</name>
  </author>
  <author>
    <name>Joseph Gleason ⑈ 2018-12-03 20:54:10</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-04 21:39:17</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-04 12:42:42</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-03 18:27:52</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-04 12:42:42</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-03 18:27:52</name>
  </author>
  <author>
    <name>James MacWhyte 2018-12-04 12:16:12</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-04 12:42:42</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-03 18:27:52</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-04 21:39:17</name>
  </author>
  <author>
    <name>James MacWhyte 2018-12-04 12:16:12</name>
  </author>
  <author>
    <name>Steven Hatzakis 2018-12-04 21:39:17</name>
  </author>
  <author>
    <name>Joseph Gleason ⑈ 2018-12-03 20:54:10</name>
  </author>
  <author>
    <name>James MacWhyte 2018-12-04 12:16:12</name>
  </author>
  <link href="bitcoin-dev/Dec_2018/016528_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016528_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016533_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016532_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016527_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016532_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016527_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016531_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016532_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016527_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016533_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016531_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016533_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016528_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016531_Proposal-for-Palindromic-Reversible-Mnemonics.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposal for Palindromic (Reversible) Mnemonics</title>
    <updated>2023-06-13T16:10:45.002827+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016528.html" rel="alternate"/>
    <summary>Steven Hatzakis has developed a method called "Palindromic Mnemonics" or "reversible mnemonics" to check if a given 12 or 24-word mnemonic could be valid both in little endian and big endian format. This allows for two separate vaults to be connected to the same mnemonic string of words, where entering the words in reverse order will grant access to the secondary (reversed words) vault. The utility could provide multiple use-cases, including related to combinations with passphrases and plausible deniability, as well as conveniences for those wishing to use a separate vault tied to the same string of words.For any randomly generated 12-word mnemonic, the chances of it also being reversible are 1/16, while for a 24-word mnemonic, those values increase to 1 in every 256 mnemonics. The message space of valid reversible mnemonics should be 2^124 for 12 words, but that search must still be conducted over a field of 2^128, as the hash-derived checksum values otherwise prevent a way to deterministically find valid reversible mnemonics without first going through invalid reversible ones to check.The security loss, in terms of entropy bits, is estimated to be at most 4-bits of loss for a 12-word mnemonic, but only if an attacker had a way to search only the space of valid reversible mnemonics (2**124) which is not feasible. Some users suggest that if someone is concerned about plausible deniability, then it might make sense to just have the single mnemonic seed lead to a single xprv key (as usual) and then do a private key derivation from that based on a password string. A simple reverse scheme like this would just be another thing a person would know to check if given some seed so they don't see it as providing much value. Steven Hatzakis has already written the code that can be used for testing (on GitHub user @hatgit), and when run from terminal/command prompt it is pretty fast to find a valid reversible mnemonic. However, on IDLE in Python on a 32-bit and 64-bit machine, it could take a few seconds for 12 words and sometimes 10 minutes to find a valid 24-word reversible mnemonic.Steven Hatzakis has two questions: 1) How useful could this be for users/devs/service providers etc.? and 2) Is any security loss occurring and whether it is negligible or not? While others found it interesting, they don't believe there is any security loss, in terms of entropy bits (assuming the initial 128 bits were generated securely).</summary>
    <published>2018-12-03T20:54:10+00:00</published>
  </entry>
</feed>
