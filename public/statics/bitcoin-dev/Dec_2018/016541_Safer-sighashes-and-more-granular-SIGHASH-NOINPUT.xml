<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-06-13T15:22:31.403991+00:00</updated>
  <author>
    <name>Russell O'Connor 2018-12-11 22:50:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-06-13T15:22:31.403991+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016541.html" rel="alternate"/>
    <summary>In an email conversation between Bitcoin developers, they discuss the implementation of a 64-byte signature for the default "signing all" sighash and a 65-byte signature for other sighash types. The idea is to save space in blocks and allow for more transactions. However, this may make witness weight estimation more difficult in multisig cases. They also consider the idea of signing witness weight, which has been previously brought up. While there may be difficulty estimating witness weight for complex scripts, it could be useful when needed. The developers consider whether any script example exists where witness size malleability is unavoidable, with one developer suggesting that it may be difficult to avoid entirely. They discuss the trade-off of adding signature covers weight, which would add software complexity but could be worthwhile if needed in the future. The Bitcoin Script was designed without regard to scriptSig/witness malleability concerns, so having an option for signature covers weight may be one of the best ways to address the issue. The developers also discuss the possibility of participants creating signatures for a small range of different weight values.</summary>
    <published>2018-12-11T22:50:24+00:00</published>
  </entry>
</feed>
