<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
  <updated>2023-06-13T15:50:23.135312+00:00</updated>
  <author>
    <name>Rusty Russell 2018-12-04 03:33:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
    <updated>2023-06-13T15:50:23.135312+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016530.html" rel="alternate"/>
    <summary>Matt Corallo has proposed an alternative solution to the RBF-pinning problem which involves transactors marking their transactions as "likely-to-be-RBF'ed". This would enable a relay policy where children of such transactions would be rejected unless the resulting package would be "near the top of the mempool". This proposal reduces the problem that the current lightning proposal adds to the UTXO set with two anyone-can-spend txs for 1000 satoshis. It is incentive-compatible and allows for a simple single P2WSH(OP_TRUE) output or a literal OP_TRUE, depending on IsStandard changes. The proposal relies on some form of package relay which comes with its own challenges. Rusty suggests that this could be done client-side by doing a quick check if it is above 250 satoshi per kweight but below minrelayfee, putting it in a side-cache with a 60-second timeout sweep. If something comes in which depends on it which is above minrelayfee, then process them as a pair. For Lightning, child-pays-for-grandparent is not relevant.</summary>
    <published>2018-12-04T03:33:53+00:00</published>
  </entry>
</feed>
