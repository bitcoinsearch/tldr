<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-05-20T18:02:26.737776+00:00</updated>
  <author>
    <name>Johnson Lau 2018-12-20 19:34:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-05-20T18:02:26.737776+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-December/016575.html" rel="alternate"/>
    <summary>In a discussion about the proposed new sighash proposal for Bitcoin, Johnson Lau raised concerns over the usability and security of OP_CODESEPARATOR with NOINPUT. To address this, it is suggested that the new sighash will always commit to the same H(script), instead of the truncated scriptCode, making scripts more compact and efficient. If using NOINPUT with MASKEDSCRIPT, it will commit to the H(masked_script) instead of H(script). The sighash will also commit to the position of the last executed CODESEPARATOR to make CODESEPARATOR work as before. However, if NOINPUT does not commit to H(masked_script), the wallet has to guess the meaning of such committed positions, making it unreliable. Rusty Russell questioned why OP_CODESEPARATOR should be supported at all, but acknowledged that it could make scripts more compact in some cases.</summary>
    <published>2018-12-20T19:34:38+00:00</published>
  </entry>
</feed>
