<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Beyond Jets: Microcode: Consensus-Critical Jets Without Softforks</title>
  <updated>2023-06-15T18:19:33.214152+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:47:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Beyond Jets: Microcode: Consensus-Critical Jets Without Softforks</title>
    <updated>2023-06-15T18:19:33.214152+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020165.html" rel="alternate"/>
    <summary>In the given context, Russell and ZmnSCPxj are discussing a way to make referencing microcodes less complicated. ZmnSCPxj suggests that since each microcode represents a language based on the current OG Bitcoin SCRIPT language, they could replace Tapscript versions entirely. Every Tapscript version would be a slot for a microcode, and the current OG Bitcoin SCRIPT would be just one of those slots, i.e., `0xc2`. Filled slots cannot be changed, but new microcodes can use some currently-empty Tapscript version slot and have it properly defined in a microcode introduction outpoint. This approach would limit them to only 255 new microcodes, but it would bring down the cost of indicating a microcode to just one byte, which is already required currently anyway. It is important to note that microcodes represent an entire language that extends beyond OG Bitcoin SCRIPT and not individual operations within that language.</summary>
    <published>2022-03-22T16:47:33+00:00</published>
  </entry>
</feed>
