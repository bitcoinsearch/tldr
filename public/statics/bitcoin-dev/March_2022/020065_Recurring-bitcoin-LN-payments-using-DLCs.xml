<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Recurring bitcoin/LN payments using DLCs</title>
  <updated>2023-06-15T17:28:56.399196+00:00</updated>
  <author>
    <name>Chris Stewart 2022-03-06 14:05:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Recurring bitcoin/LN payments using DLCs</title>
    <updated>2023-06-15T17:28:56.399196+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020065.html" rel="alternate"/>
    <summary>In a conversation between Chris and ZmnSCPxj, the former highlighted that multisig requires interactiveness at settlement time, which means that the escrow provider needs to know the exact details about the bitcoin transaction and needs to issue a signature. However, with PTLCs, this isn't the case, giving an improvement in user experience for Alice &amp; Bob using the escrow provider. The oracle just issues attestations, and Bob or Alice take those attestations and complete the adaptor signature. This reduces the bi-directional communication requirement at settlement time and only requires unidirectional communication. Non-interactive settlement is one of the big selling points of DLC style applications.ZmnSCPxj proposed an example application that might benefit from this scheme, where a transaction's signature can be completed only if the oracle releases a proper scalar, which can be handed over to a workperson to perform some work. After the work has been completed, the workperson asks the oracle to judge if the work has been completed, and if so, compensation can be made. Additionally, ZmnSCPxj stated that the above, where the oracle determines when the fund can be spent, can also be implemented by a simple 2-of-3, called an "escrow," as the oracle attestation can be a partial signature as well, not just a scalar. Finally, they discussed the possibility of multiple PTLCs triggered by a single oracle.</summary>
    <published>2022-03-06T14:05:25+00:00</published>
  </entry>
</feed>
