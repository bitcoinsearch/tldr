<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bitcoin scripting and lisp</title>
  <updated>2023-06-15T17:32:25.281583+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-03-16 14:54:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bitcoin scripting and lisp</title>
    <updated>2023-06-15T17:32:25.281583+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020130.html" rel="alternate"/>
    <summary>The discussion on the Bitcoin-dev mailing list involves various topics related to cryptocurrency. In one thread, cross-input signature aggregation (sigagg) is compared to cross-input puzzle/solution compression, and it is suggested that the latter could be a less complicated solution. The discussion also touches upon the concept of lisp-generating-lisp compression as a way to reduce the cost of bytes transmitted, but increase the CPU load. Another thread discusses PTLCs and their compatibility with Chia, noting that PTLCs are not Chia-friendly due to the absence of secp256k1 operations in Chia and the loss of information when signatures are non-interactively aggregated via BLS. The discussion touches upon the security implications of using BLS signatures and whether they are theoretically less secure than SECP256K1 Schnorr/ECDSA. Finally, there is a discussion about the risks associated with implementing complex covenants directly in C++ and the possibility of using a domain-specific language (DSL) for covenants instead. It is noted that embedded DSLs can be complicated and require learning two languages, leading to potential issues with auditing and complexity.</summary>
    <published>2022-03-16T14:54:05+00:00</published>
  </entry>
</feed>
