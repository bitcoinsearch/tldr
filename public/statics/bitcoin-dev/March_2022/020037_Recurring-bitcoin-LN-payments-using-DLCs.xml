<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Recurring bitcoin/LN payments using DLCs</title>
  <updated>2023-06-15T17:28:22.515491+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-03-04 08:22:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Recurring bitcoin/LN payments using DLCs</title>
    <updated>2023-06-15T17:28:22.515491+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020037.html" rel="alternate"/>
    <summary>Chris was asked a question by ZmnSCPxj regarding the improvement of a certain process over handing over 'nLockTime'd transactions. The email doesn't provide any context or details about what 'nLockTime' is or what the process in question is. Therefore, to understand the context better and answer the question more accurately, it is important to do some research on 'nLockTime'. According to the Bitcoin Wiki, 'nLockTime' is a feature in Bitcoin transactions that allows the sender of the transaction to specify a future time or block height at which the transaction can be added to the blockchain. It is unclear from the provided context what the specific use case of 'nLockTime' is in this situation, but it appears that ZmnSCPxj is questioning whether the process being discussed offers any improvement over simply using 'nLockTime'd transactions. Without more information about the process in question, it is difficult to provide a comprehensive answer to ZmnSCPxj's question. However, it is possible that the process being discussed provides additional features or benefits beyond what can be achieved with 'nLockTime' alone. In order to fully understand the advantages and disadvantages of the process versus using 'nLockTime' transactions, more information would need to be provided about the specifics of both methods.</summary>
    <published>2022-03-04T08:22:12+00:00</published>
  </entry>
</feed>
