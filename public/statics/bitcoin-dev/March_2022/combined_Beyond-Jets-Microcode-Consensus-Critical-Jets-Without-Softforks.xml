<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Beyond Jets: Microcode: Consensus-Critical Jets Without Softforks</title>
  <updated>2023-06-15T18:21:25.714486+00:00</updated>
  <author>
    <name>Anthony Towns 2022-03-22 23:11:05</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:39:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 05:37:03</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-03-22 15:08:33</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:22:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-23 00:20:16</name>
  </author>
  <author>
    <name>Anthony Towns 2022-03-22 23:11:05</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-23 00:20:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-23 00:20:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:22:55</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-03-22 16:28:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:47:33</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-03-22 15:08:33</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:22:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:47:33</name>
  </author>
  <author>
    <name>Anthony Towns 2022-03-22 23:11:05</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 05:37:03</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-03-22 15:08:33</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-03-22 16:28:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:39:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:47:33</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 05:37:03</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-03-22 16:28:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-03-22 16:39:10</name>
  </author>
  <link href="bitcoin-dev/March_2022/020171_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020164_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020158_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020159_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020162_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020174_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020171_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020174_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020174_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020162_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020163_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020165_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020159_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020162_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020165_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020171_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020158_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020159_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020163_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020164_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020165_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020158_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020163_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020164_Beyond-Jets-Microcode-Consensus-Critical-Jets-Without-Softforks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Beyond Jets: Microcode: Consensus-Critical Jets Without Softforks</title>
    <updated>2023-06-15T18:21:25.715487+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020171.html" rel="alternate"/>
    <summary>Bitcoin developers are discussing new constructs to enable new functionality in the Bitcoin consensus layer. One proposal is to provide a general language that can be softforked into new opcodes later. However, there are two arguments against this approach, including the activation parameters debate and the need to keep the number of softforks low.To overcome these arguments, ZmnSCPxj proposes using microcodes in Bitcoin SCRIPT, similar to the technique used in CISC microprocessors. The proposal includes defining a generic, low-level language, a mapping from a specific high-level language to the above language, allowing users to define new microcodes by sacrificing Bitcoins and indicating the microcode they wish to use to interpret their Tapscripts.Microcodes represent an entire language that extends beyond OG Bitcoin SCRIPT and not individual operations within that language. Microcodes have several advantages like back-compatibility with existing instruction sets, easier and more scalable underlying design, and the ability to fix bugs in implementations of complex CISC instructions by uploading new microcode.The technique allows users to define "jets," which are sequences of low-level general operations that users have determined are common enough they should just be implemented as faster code that is executed directly by the underlying hardware processor rather than via a software interpreter. Bugs in existing microcodes can be fixed by basing a new microcode from the existing microcode and redefining the buggy implementation.Users can refer to a "base" microcode when defining a new microcode to implement new `OP_` codes or change existing `OP_` codes, and only have to provide the new mappings. Microcodes have a standard way of being represented as a byte sequence. Users can serialize their new microcode as a byte sequence, create a new transaction where one of the outputs contains a specified value and has the scriptPubKey of OP_TRUE OP_RETURN - which is a "microcode introduction output" that is provably unspendable, thus burning the Bitcoins.Once the transaction has been deeply confirmed, full nodes will process recognized microcode introduction outputs and store mappings from their hashes to the microcodes in a new microcodes index. Full nodes can then process version-`0xce` Tapscripts by checking if the microcodes index has the indicated microcode hash.The advantage of using microcodes is that the size of the SCRIPT can be used as a proxy for CPU load, allowing for bounded CPU load and approximate processing needed without requiring a softfork to modify weight calculations in the future. While Russell suggested that something like Simplicity would make a better platform than Bitcoin Script, ZmnSCPxj argues that the use of specific microcodes is a viable solution to namespace management issues.In a recent conversation between two individuals, the efficiency of using hashes to refer to microcodes was discussed. A microcode hash refers to an entire language of redefined `OP_` codes rather than each individual opcode. If it costs 1 Bitcoin to create a new microcode, only 21 million possible microcodes exist, making 50 bits of hash sufficient to specify them with low probability of collision. However, there is a possibility of a deliberate attack where users of multiple different SCRIPTs could collude to create many microcodes, overwhelming the storage capacity of full nodes. There were also concerns raised regarding introducing a huge new dependency to the definition of consensus. Additionally, there are concerns about the cost of introducing new functionality and the storage size of the "microcode-utxo" database. There is also a tragedy-of-the-commons problem wherein whoever creates the microcode pays the cost, but anyone can use it and gain the benefit, which could create centralization pressure. Fullnodes may need to maintain multiple microcodes, and creating new ones is expensive due to JIT compilation and the requirement that fullnodes keep an index that cannot have items deleted.The proposal is still under discussion and will require further analysis and testing before implementation.</summary>
    <published>2022-03-22T23:11:05+00:00</published>
  </entry>
</feed>
