<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>One testnet to rule them all</title>
  <updated>2023-06-15T17:37:11.055335+00:00</updated>
  <author>
    <name>Jeremy Rubin 2022-03-05 23:40:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>One testnet to rule them all</title>
    <updated>2023-06-15T17:37:11.055335+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020060.html" rel="alternate"/>
    <summary>The discussion surrounds the use of testnet3 and signet for testing purposes in relation to sidechains. One user suggests that pegging worthless coins into a system of also worthless coins is pointless, unless testing pegging mechanisms. Another user argues that testing pegging is necessary for introducing sidechains. The lack of coins in testnet3 is seen as a feature, allowing miners to create, move, and destroy zero satoshis. Testnet3 is deemed good enough to represent the main chain during sidechain testing because it is permissionless and open, anyone can start mining sidechain blocks. The proposal discussed involves creating one Taproot address per signet in testnet3, allowing coins to travel between many signets. New signets can be pegged in with a 1:1 ratio, and existing signets can be transformed into signet sidechains. Signet would replace testnet3 as the official signet, and other signets could be pegged into that as well. However, it is noted that signet degrades to a testnet if the key is set to OP_TRUE. The discussion also touches on the difficulty of obtaining testnet coins for testing purposes. Overall, the focus is on finding the best way to test sidechains using available resources.</summary>
    <published>2022-03-05T23:40:11+00:00</published>
  </entry>
</feed>
