<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Beyond Jets: Microcode: Consensus-Critical Jets Without Softforks</title>
  <updated>2023-06-15T18:19:22.741384+00:00</updated>
  <author>
    <name>Russell O'Connor 2022-03-22 16:28:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Beyond Jets: Microcode: Consensus-Critical Jets Without Softforks</title>
    <updated>2023-06-15T18:19:22.741384+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020163.html" rel="alternate"/>
    <summary>In a recent email exchange, ZmnSCPxj clarified the use of specific microcodes in Tapscript. The use of these codes is opt-in and requires the use of a specific `0xce` Tapscript version as well as referring to the microcode through its hash. According to ZmnSCPxj, the only race condition occurs when reorganizing out a newly-defined microcode, which can be avoided by waiting for deep confirmation. Fullnodes may need to maintain multiple microcodes, and creating new ones is expensive due to JIT compilation and the requirement that fullnodes keep an index that cannot have items deleted. The advantage of using microcodes is that the size of the SCRIPT can be used as a proxy for CPU load, allowing for bounded CPU load and approximate processing needed without requiring a softfork to modify weight calculations in the future. While Russell suggested that something like Simplicity would make a better platform than Bitcoin Script, ZmnSCPxj argues that the use of specific microcodes is a viable solution to namespace management issues.</summary>
    <published>2022-03-22T16:28:21+00:00</published>
  </entry>
</feed>
