<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Recurring bitcoin/LN payments using DLCs</title>
  <updated>2023-06-15T17:29:10.772330+00:00</updated>
  <author>
    <name>Chris Stewart 2022-03-06 20:53:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Recurring bitcoin/LN payments using DLCs</title>
    <updated>2023-06-15T17:29:10.772330+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020071.html" rel="alternate"/>
    <summary>A company that offers an inbound liquidity service faces the issue of having their liquidity tied up in unproductive channels after a user purchases it. To address this, they plan to implement a monthly service fee that requires users to pay a fixed amount if the channel isnâ€™t being used. This compensates the company for the case where their liquidity is NOT being used. If you are offering liquidity as a service, this would be beneficial. The user purchasing liquidity can choose to pay the liquidity fee or not. If they opt not to pay, the company will take it as a signal that they are no longer interested in the service. The recurring payment for liquidity as a service can be seen as a solution to this problem.On the other hand, multisig requires interactiveness at settlement time, which can be a challenge for developers. With PTLCs (Payment-Point Timelock Contracts), however, the oracle just issues attestations, and Bob or Alice complete the adaptor signature. Non-interactive settlement is one of the big selling points of DLC style applications. One of the unfortunate things about LN (Lightning Network) is that the interactiveness requirements are very high, making developing applications hard, especially mobile applications. Though 2-of-3 contracts are not transportable over LN, PTLCs are transportable, so the idea still has merit for LN as a replacement for 2-of-3 escrows.</summary>
    <published>2022-03-06T20:53:55+00:00</published>
  </entry>
</feed>
