<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bitcoin scripting and lisp</title>
  <updated>2023-06-15T17:31:49.800385+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-03-16 15:09:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bitcoin scripting and lisp</title>
    <updated>2023-06-15T17:31:49.800385+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020131.html" rel="alternate"/>
    <summary>The email thread discusses the possibility of saving bytes in Bitcoin transactions by having multiple inputs use the same single signature or `scriptPubKey` template. However, incentivizing key reuse is not ideal, and instead, it is better to encourage reuse of how pubkeys are used while rotating them. The proposal to move data like pubkeys into a separate part of the script would prevent key reuse and make it easier to compress the code. HTLCs have very little code, so optimizing at that level involves pulling all the HTLCs into the same block. It also makes sense to use PTLCs for payment channel systems, but Lightning was implemented with just HTLCs. The use of covenant features is discussed, and the implementation of new functionality using CLVM is mentioned as an advantage over soft fork deployment.</summary>
    <published>2022-03-16T15:09:15+00:00</published>
  </entry>
</feed>
