<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bitcoin scripting and lisp</title>
  <updated>2023-06-15T17:31:39.697272+00:00</updated>
  <author>
    <name>Bram Cohen 2022-03-09 02:54:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bitcoin scripting and lisp</title>
    <updated>2023-06-15T17:31:39.697272+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020088.html" rel="alternate"/>
    <summary>The email thread discusses ways to match Bitcoin's transaction model while adding extra conditions via an annex, which can be checked when the script is executed. The parent/child relationship is primarily about implementing capabilities and reducing the amount of information to be revealed and string mangling involved in the parentage check. The conversation also touches upon soft forking, pinning, and mempool behavior in relation to third-party spends. Chia's "scriptPubKey" is the hash of a lisp program, and spend bundles can be merged together so that a block only has a single spend bundle. Additionally, the compression hook would be to allow puzzles to be (re)generated via another Lisp program if it was more efficient.</summary>
    <published>2022-03-09T02:54:56+00:00</published>
  </entry>
</feed>
