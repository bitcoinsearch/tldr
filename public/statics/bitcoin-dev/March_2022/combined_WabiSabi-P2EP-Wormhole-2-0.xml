<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - WabiSabi P2EP / Wormhole 2.0</title>
  <updated>2023-06-15T18:30:42.724231+00:00</updated>
  <author>
    <name>Max Hillebrand 2022-03-30 11:57:47</name>
  </author>
  <author>
    <name>Max Hillebrand 2022-03-30 11:57:47</name>
  </author>
  <author>
    <name>Max Hillebrand 2022-03-30 11:57:47</name>
  </author>
  <link href="bitcoin-dev/March_2022/020186_WabiSabi-P2EP-Wormhole-2-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020186_WabiSabi-P2EP-Wormhole-2-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020186_WabiSabi-P2EP-Wormhole-2-0.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - WabiSabi P2EP / Wormhole 2.0</title>
    <updated>2023-06-15T18:30:42.724231+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020186.html" rel="alternate"/>
    <summary>The WabiSabi coinjoin is a method that allows users to pay arbitrary amounts of bitcoin while keeping the sender and receiver's information private. The method can only be used by users who are both online and have a direct communication channel. The sender registers an input with a third-party WabiSabi coordinator in exchange for a keyed-verified-anonymous-credential (KVAC). The sender can request a reissuance of two new credentials worth different amounts without the coordinator learning about it. After giving the credential to the receiver, the sender can no longer present it, and the coordinator ensures double spending protection.During output registration, the sender registers his "payment change outputs," which can be decomposed into multiple outputs by the client-side. The receiver presents his KVACs and registers his desired output addresses directly with the coordinator. After output registration, the coordinator aggregates the PSBT with all registered inputs and outputs and presents the unsigned coinjoin transaction to all Alices. If the response is ACK, then the sender signs for his inputs and registers the signatures with the coordinator. The sender never learns the address of the receiver, and the receiver never learns the inputs or change outputs of the sender. The coordinator cannot differentiate between users who make self-spends from those who do payments. This is entirely client-side. The sender still knows the amount of bitcoin of the credential that he passed on to the receiver. However, the receiver can likewise register inputs with the coordinator in the same round, providing the desired anonymity set. A blinded coinjoin coordinator is a PSBT whiteboard where users purchase eCash tokens by registering inputs, and users spend eCash tokens to register outputs. Users can self-spend the eCash to increase anonymity set of those access rights. The user can make an actual eCash "payment" to someone else, effectively abdicating the right to register outputs. If the final coinjoin has a sufficient number of inputs and outputs to provide effective blockchain ambiguity, then the resulting payment has breathtaking privacy guarantees.</summary>
    <published>2022-03-30T11:57:47+00:00</published>
  </entry>
</feed>
