<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Statechain coinswap: assigning blame for failure in a two-stage transfer protocol.</title>
  <updated>2023-06-14T15:18:47.654329+00:00</updated>
  <author>
    <name>Tom Trevethan 2020-09-22 15:32:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Statechain coinswap: assigning blame for failure in a two-stage transfer protocol.</title>
    <updated>2023-06-14T15:18:47.654329+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018194.html" rel="alternate"/>
    <summary>The discussion between Tom and ZmnSCPxj revolves around the security concerns related to non-custodiality of funds. While Tom argues that non-custodiality is important for trust minimization and to avoid regulatory implications, ZmnSCPxj points out that the technical risks associated with it cannot be ignored. Specifically, they discuss the security of a solution that uses a Secure Enclave (SE) to perform a mixing protocol. ZmnSCPxj highlights that even if the SE is honest, corruption of the hardware it is running on can allow recovery of old private keys and violation of the trust assumption. They compare this to other trust-minimized protocols such as TumbleBit or Wasabi, where even if the service providing the mixing is corrupted, it cannot lead to loss of funds. Therefore, ZmnSCPxj suggests that while the SE solution may be superior blockspace-wise, it is inferior in terms of financial security. They suggest immediately withdrawing after every round and potentially seeking other SEs to reduce risks arising from a particular SE being corrupted.</summary>
    <published>2020-09-22T15:32:06+00:00</published>
  </entry>
</feed>
