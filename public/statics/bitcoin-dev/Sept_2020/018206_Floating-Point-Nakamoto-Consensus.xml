<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Floating-Point Nakamoto Consensus</title>
  <updated>2023-06-14T15:31:57.627047+00:00</updated>
  <author>
    <name>Mike Brooks 2020-09-26 11:09:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Floating-Point Nakamoto Consensus</title>
    <updated>2023-06-14T15:31:57.627047+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018206.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Mike Brooks responded to a suggestion made by David A. Harding regarding the use of fitness tests in block acceptance. Brooks agreed that using the lowest block value as a means of disagreement resolution was not ideal due to its inability to handle disagreements greater than N+1. Instead, he proposed a mechanism where the zero-prefix component drives a lower numeric value in big-endian and the remaining value is minimized or maximized in any endianness, as long as it is consistent. Furthermore, the miner's choice of picking the fittest solution would ensure that any future children of the winning solution are also ahead, giving them an advantage in the race for the next block. This approach, coupled with a mechanism to make it more expensive to replace an existing block than producing a new one, would solve the issue at hand. Harding pointed out that this topic had been discussed before on the mailing list in response to the selfish mining paper. He then referred to a proposal made in 2013 which suggested using hash values as a means of resolving disagreements. Two responses to this proposal were highlighted, which argued against the idea of randomly selecting a winner and instead advocated for the use of fitness tests. Harding also provided a link to a BitcoinTalk post which described some of the challenges in replacing first seen as the tip disambiguation method.</summary>
    <published>2020-09-26T11:09:23+00:00</published>
  </entry>
</feed>
