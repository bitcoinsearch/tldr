<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Floating-Point Nakamoto Consensus</title>
  <updated>2023-06-14T15:33:26.873451+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-09-30 23:44:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Floating-Point Nakamoto Consensus</title>
    <updated>2023-06-14T15:33:26.873451+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018214.html" rel="alternate"/>
    <summary>The current "first seen" is more incentive-compatible than floating-point Nakamoto consensus. If miner A mines a block at height N, then the first block it has seen is that block. Even if the rest of the mining network is now mining on top of the miner B version, if miner A chances on another new block at N+1 built on top of its own version of block N, then it would still win both blocks and earn the block subsidy and fees of two blocks. Hence, floating-point Nakamoto consensus is not incentive-compatible. The problems with stability you mention can be fixed by waiting for 3 confirmations rather than just 1 confirmation. In a relativistic universe, information cannot propagate faster than light-speed, and thus there will always be a communications network delay in propagating data. As I see it, floating-point Nakamoto consensus cannot fix this issue. If your goal is "stability" of some kind, then there is still always a possibility that two miners on opposite sides of the Earth will create blocks at the same height outside of the light cones of each other. In a relativistic universe, this cannot be eliminated unless all miners occupy the same physical location. One of those two blocks created will, with high probability, have a lower score, and thus any nodes in the light cone of the miner of the lower-scored block will still experience a reorg, as they will first see one block, then switch to the higher-scored block when it arrives to them.Thus, floating-point Nakamoto consensus cannot provide complete stability of the network, still, as the universe we operate in does not have instantaneous information transfer. A wise designer of automated systems will still wait for 3 confirmations before doing anything, and by then, the effects of floating-point Nakamoto consensus will be literally a thing of the past.</summary>
    <published>2020-09-30T23:44:59+00:00</published>
  </entry>
</feed>
