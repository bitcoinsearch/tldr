<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Detailed protocol design for routed multi-transaction CoinSwap</title>
  <updated>2023-06-14T03:19:08.166658+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-09-05 02:45:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Detailed protocol design for routed multi-transaction CoinSwap</title>
    <updated>2023-06-14T03:19:08.166658+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018160.html" rel="alternate"/>
    <summary>The proposal to hide the collateral input behind `hashPrevouts` is possible, but mildly "unclean" as it relies on the details of the sighash algorithm and complicates reusing Lightning watchtowers. This solution can work if watchtowers use `(sighash[0:15], encrypted_blob)` instead of `(txid[0:15], encrypted_blob)`. It is safer for a CoinSwap maker to have watchtowers that are unaware of exactly *what* they are watching. If watchtowers only get a partial sighash, then the information they contain is not sufficient by themselves to determine what coins are owned by the maker, thus every additional watchtower is no longer a potential attack vector on the privacy of the maker. It is suggested to move to using `sighash[0:15]` instead of `txid[0:15]` for watchtowers.</summary>
    <published>2020-09-05T02:45:00+00:00</published>
  </entry>
</feed>
