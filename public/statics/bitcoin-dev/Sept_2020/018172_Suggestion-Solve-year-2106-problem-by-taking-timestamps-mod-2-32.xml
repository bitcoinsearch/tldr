<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Suggestion: Solve year 2106 problem by taking timestamps mod 2^32</title>
  <updated>2023-06-14T15:29:48.608546+00:00</updated>
  <author>
    <name>yanmaani at cock.li 2020-09-19 12:36:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Suggestion: Solve year 2106 problem by taking timestamps mod 2^32</title>
    <updated>2023-06-14T15:29:48.608546+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018172.html" rel="alternate"/>
    <summary>Bitcoin currently has timestamp rules that prevent the block timestamp from being lower than the median of the last 11 blocks, from being greater than the current time plus two hours and from being greater than 2^32. This means that Bitcoin will "die" on or about February 7, 2106, when there is no timestamp below 2^32 that exceeds the median of the last 11 blocks.One proposed solution to this problem is to change the rules so that the block timestamp plus k*2^32 may not be lower than the median of the last 11 blocks and may not be greater than the current time plus two hours, where k is an integer with the same value for the calculations of both Rule 1 and Rule 2. This would cause a hardfork in 2106, approximately 85.5 years from now, by which time it is hoped that 95% of nodes would have updated.Another proposed solution is to use 64-bit timestamps, but this would break compatibility with other software that has specific expectations of header fields, such as ASICs' firmware, and would cause a hardfork before the date of timestamp overflow. Therefore, this solution is considered less appropriate.It remains to be seen whether this idea is worth a BIP.</summary>
    <published>2020-09-19T12:36:47+00:00</published>
  </entry>
</feed>
