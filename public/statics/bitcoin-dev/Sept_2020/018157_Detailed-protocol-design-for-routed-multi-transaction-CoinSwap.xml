<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Detailed protocol design for routed multi-transaction CoinSwap</title>
  <updated>2023-06-14T03:12:27.802357+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-09-03 23:39:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Detailed protocol design for routed multi-transaction CoinSwap</title>
    <updated>2023-06-14T03:12:27.802357+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018157.html" rel="alternate"/>
    <summary>The email conversation discusses the potential risks of a CoinSwap sequence and how it can impact privacy. The taker in the CoinSwap sequence needs to have some collateral input, which cannot be swapped, and has to know the output that pays out the correct contract. However, if the taker considers the maker fee as a sunk cost, then it would still be rational for them to mount an attack. A sweeping taker can split its funds in half, swapping one half and using the remainder for collateral input, revealing information about post-mix and pre-mix coins. However, there may be a solution to prevent the maker from learning the collateral input at all by providing hashPrevouts as an opaque hash and decommitment of hashOutputs. This solution is mildly unclean and complicated but may prevent any privacy breach.</summary>
    <published>2020-09-03T23:39:02+00:00</published>
  </entry>
</feed>
