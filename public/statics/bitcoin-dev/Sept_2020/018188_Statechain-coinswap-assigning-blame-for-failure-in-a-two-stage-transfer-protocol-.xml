<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Statechain coinswap: assigning blame for failure in a two-stage transfer protocol.</title>
  <updated>2023-06-14T15:19:24.337298+00:00</updated>
  <author>
    <name>Tom Trevethan 2020-09-21 21:52:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Statechain coinswap: assigning blame for failure in a two-stage transfer protocol.</title>
    <updated>2023-06-14T15:19:24.337298+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018188.html" rel="alternate"/>
    <summary>In a conversation between Tom and ZmnSCPxj regarding non-custodiality, trust minimization is deemed to be the entire point of the concept. If a service is non-custodial and funds cannot be frozen or seized, it is much easier for it to operate without requiring its users to be KYCed. The main objection against custodiality is that someone else can prevent a user from spending the coin. However, if the Signing Entity (SE) performs the protocol as specified and securely deletes expired key shares, it is still considered non-custodial. Users who trust that the SE is performing this function don't need to worry about the SE being shut down or hacked. The SE cannot decide or be compelled to seize any specific coin without conspiring in advance to keep the expired key shares and colluding with a previous owner of that coin. A federated sidechain, while lowering trust requirements with an m-of-n peg, remains custodial. Users retain a verifiable proof of their unique ownership of a coin and must sign a peg-out transaction to withdraw on-chain. The publication of this peg-out transaction is proof that the current owner authenticated the on-chain spend. On the other hand, the statecoin scheme that Tom proposed involves UTXO that is a 2-of-2 between the owner and the SE. It can be transferred off-chain and is strictly non-custodial assuming the SE can be trusted. ZmnSCPxj argues that the entire point of non-custodiality is trust minimization. He notes that if a user has to trust the SE to not steal the funds, it is not really non-custodial since a corrupted SE can, in collusion with other participants, take control of the coin and prevent the user from spending it as they wish. Thus, touting "non-custodial" is relatively pointless if trust is not minimized. In his previous description of implementing investment aggregation, he emphasizes that n-of-n cannot be reconstructed by the aggregator and all other participants without the user.</summary>
    <published>2020-09-21T21:52:28+00:00</published>
  </entry>
</feed>
