<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Playing with full-rbf peers for fun and L2s security</title>
  <updated>2023-06-15T21:53:46.392953+00:00</updated>
  <author>
    <name>alicexbt 2022-07-05 20:46:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Playing with full-rbf peers for fun and L2s security</title>
    <updated>2023-06-15T21:53:46.392953+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020631.html" rel="alternate"/>
    <summary>In a message exchange between Alice and Peter, Alice discusses the vulnerability of coinjoin transactions to DoS attacks, specifically when an attacker broadcasts a transaction spending input used in coinjoin after sending signature in the round. This would result in a coinjoin tx which never gets relayed. Peter notes that Wasabi already has a DoS attack vector in that a participant can stop participating after the first phase of the round, with the result that the coinjoin fails. Wasabi mitigates this by punishing participating in future rounds. However, punishment in the case of double-spends will be difficult because the transaction is broadcasted after signing and before coinjoin tx broadcast. Inputs are already checked multiple times for double spend during the coinjoin round. If all the inputs in the coinjoin transaction that failed to relay are checked and one or more are found to be spent later, what will be punished and how does this affect the attacker with thousands of UTXOs or normal users? Alice suggests affected projects should share their opinion about full-rbf as it seems it might improve things.</summary>
    <published>2022-07-05T20:46:51+00:00</published>
  </entry>
</feed>
