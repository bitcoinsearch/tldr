<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>No Order Mnemonic</title>
  <updated>2023-06-15T22:23:41.072014+00:00</updated>
  <author>
    <name>Anton Shevchenko 2022-07-07 17:58:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>No Order Mnemonic</title>
    <updated>2023-06-15T22:23:41.072014+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020645.html" rel="alternate"/>
    <summary>In a conversation between Pavol Rusnak and Bram Cohen on the bitcoin-dev mailing list, they discussed different mnemonic encodings. Anton Shevchenko had previously shared a python implementation for an encoding that requires users to remember words but not the order of those words. Bram Cohen raised an interesting mathematical question of whether it would be possible to make a code that always uses the BIP-39 words as part of its encoding, adding a few words as error correction in case the order is lost or confused. Pavol Rusnak suggested encoding the index of permutation used to scramble the otherwise sorted list, which would require storing approximately 32 bits for 12 words. However, repetitions would make this more difficult and add another hassle for users.</summary>
    <published>2022-07-07T17:58:40+00:00</published>
  </entry>
</feed>
