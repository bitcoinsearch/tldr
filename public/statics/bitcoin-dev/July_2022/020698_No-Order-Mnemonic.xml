<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>No Order Mnemonic</title>
  <updated>2023-06-15T22:22:32.336133+00:00</updated>
  <author>
    <name>Erik Aronesty 2022-07-11 13:11:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>No Order Mnemonic</title>
    <updated>2023-06-15T22:22:32.336133+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020698.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around reducing the entropy of a 12-word seed by removing its ordering. Sorting a seed alphabetically can reduce its entropy by approximately 29 bits, so it was proposed to use an unordered encoding instead. Anton Shevchenko suggested using the output of the encoding as input for an AI story generator to help users remember their mnemonic phrase. However, others pointed out that having 12 words without order is probably good enough, unless there are holes or errors in the remembered story. James MacWhyte suggested choosing 11 random words and sorting them alphabetically before assigning a checksum, which would significantly reduce the entropy. The number of possible combinations would be around 10 trillion, which could be exhausted in a couple of months with hardware capable of doing 1 million guesses per second. To brute-force all possible combinations of 11 words and 1 checksum, a few million operations would still result in a decent user experience (under a minute) when considering the computational power of home PCs.</summary>
    <published>2022-07-11T13:11:53+00:00</published>
  </entry>
</feed>
