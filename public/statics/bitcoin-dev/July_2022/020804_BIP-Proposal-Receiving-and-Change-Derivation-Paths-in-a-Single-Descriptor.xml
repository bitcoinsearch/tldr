<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Proposal: Receiving and Change Derivation Paths in a Single Descriptor</title>
  <updated>2023-06-15T23:30:17.203638+00:00</updated>
  <author>
    <name>Dmitry Petukhov 2022-07-28 09:40:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Proposal: Receiving and Change Derivation Paths in a Single Descriptor</title>
    <updated>2023-06-15T23:30:17.203638+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020804.html" rel="alternate"/>
    <summary>The Bitcoin Improvement Proposal (BIP) has been updated to allow arbitrary length tuples. The issue with tuples of length more than two is that the purpose for indexes beyond 'receive' and 'change' are not established. This could lead to various software using extra indexes in a tuple for their own non-standard purposes, creating incompatibilities where different wallet software that import the same descriptor would use those addresses for different purposes. Even if some auxiliary standard emerges for the meanings of extra indexes, since the indexes in the tuple are listed without omissions (no "" allowed), all software will need to be aware of the existence of these purposes and define indexes for them. It is suggested that bip-multipath-descs should say that any interpretation of the purpose of such indexes and deriving new addresses at these indexes are strongly discouraged. Wallet software that wishes to utilize non-standard extra indexes beyond 'receive' and 'change' should use separate descriptors instead for these extra indexes.If a new established purpose emerges for the next position in the index tuple, a new BIP should be made that defines such position. The BIP for position 3 would naturally come after the BIP for position 2, and thus software that implements BIP for position 3 would be aware of the previous BIP and will at least know to choose some index for position 2. Pavol Rusnak suggests generalizing the BIP for any sized tuples. Although there might not be any existing particular use case in mind, there might be upcoming standards in the future that will want to introduce more sub-paths.</summary>
    <published>2022-07-28T09:40:16+00:00</published>
  </entry>
</feed>
