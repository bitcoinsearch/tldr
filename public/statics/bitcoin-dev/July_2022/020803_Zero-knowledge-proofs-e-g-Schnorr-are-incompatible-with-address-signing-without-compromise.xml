<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Zero-knowledge proofs e.g. Schnorr are incompatible with address signing without compromise</title>
  <updated>2023-05-22T20:55:14.099994+00:00</updated>
  <author>
    <name>Ali Sherief 2022-07-28 07:27:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Zero-knowledge proofs e.g. Schnorr are incompatible with address signing without compromise</title>
    <updated>2023-05-22T20:55:14.099994+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020803.html" rel="alternate"/>
    <summary>The author of a post on Bitcointalk discusses the implementation of address/message signing support for Taproot, specifically Schnorr signatures. The good news is that BIP340 has already made this a standard, saving the author the headache of having to re-implement it. However, there are a few notes to consider before implementing this signing format, as there are differences in encoding and public key requirements. The article then goes on to explain the default signing and verification algorithms for Schnorr signatures, noting that zero-knowledge proofs such as Schnorr are not compatible with address message signing as the public key cannot be retrieved from the address or signature. To make it compatible with the address signing mechanism, the zero-knowledge part would have to be sacrificed or a separate message signing format would be required. The article ends by questioning whether the community wants message signatures at all, given the growing disproportion between legacy addresses and the rest of the addresses.</summary>
    <published>2022-07-28T07:27:02+00:00</published>
  </entry>
</feed>
