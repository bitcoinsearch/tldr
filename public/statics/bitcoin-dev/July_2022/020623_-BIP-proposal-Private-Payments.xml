<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>[BIP proposal] Private Payments</title>
  <updated>2023-05-22T20:35:49.483300+00:00</updated>
  <author>
    <name>Alfred Hodler 2022-07-01 12:41:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>[BIP proposal] Private Payments</title>
    <updated>2023-05-22T20:35:49.484300+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020623.html" rel="alternate"/>
    <summary>The email exchange between Clark and Alfred discussed the proposal to use bech32 instead of base58 for more compact QR codes. They both agreed that it is a good proposal. The conversation also included the possibility of a third-party service offering to publish OP_RETURN notification payloads in the blockchain for a fee (paid over Lightning Network) without linking the notifier's identity to their wallet. This would offer a potential privacy boost and incentivize the service to charge market rates. They discussed that such a service would use its own coins, which would be beneficial for notifiers since they wouldn't have to engage in coin control on their end. The downside of this approach is that it isn't as censorship-resistant as direct notifications, but users should still be able to notify from their own wallets if the service ever goes down. Another alternative discussed was publishing the block height along with the notification data contained within that block. Light clients could download relevant blocks over the p2p network and perform full validation. The danger with this approach is that the service drops notifications, either on purpose or by accident, eventually causing clients to miss notifications. Two possible solutions were identified: a) the service publishes Merkle Trees b) each client subscribes to more than one service.</summary>
    <published>2022-07-01T12:41:45+00:00</published>
  </entry>
</feed>
