<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Trying all address types in message signing verification (BIP)</title>
  <updated>2023-05-22T20:46:34.820772+00:00</updated>
  <author>
    <name>Ali Sherief 2022-07-20 04:10:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Trying all address types in message signing verification (BIP)</title>
    <updated>2023-05-22T20:46:34.820772+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020759.html" rel="alternate"/>
    <summary>The author of this message attempted to create a BIP (Bitcoin Improvement Proposal) for standardizing the signing and verification procedure for Segwit message signatures. Currently, wallets that support message signing and verification can only sign legacy addresses. It is technically possible to sign and verify Segwit addresses, but there is no standardization for it. The proposed BIP aims to set guidelines for writing a message signing and verification procedure. This BIP does not replace or obsolete any existing BIPs and will not require changes to existing signed messages. In the verification process, the BIP proposes trying different address hashing algorithms in sequence to reconstruct the address in the signed message. In the signing process, the only modification is the insertion of the Segwit address in place of the legacy address.The proposed BIP does not include any auxiliary feature additions, and the author seeks advice from the mailing list on how to draft such a BIP. The author also mentions that there may be an existing BIP for the original signing method, but asks for its number. The author notes that the current state of affairs is that wallets that support this feature simply insert the Segwit address into the address field, and verification also only works using the procedure on that specific wallet software.</summary>
    <published>2022-07-20T04:10:09+00:00</published>
  </entry>
</feed>
