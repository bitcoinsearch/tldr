<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On a new community process to specify covenants</title>
  <updated>2023-06-15T23:03:46.082020+00:00</updated>
  <author>
    <name>Antoine Riard 2022-07-20 20:42:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On a new community process to specify covenants</title>
    <updated>2023-06-15T23:03:46.082020+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020763.html" rel="alternate"/>
    <summary>Discussions on covenants have been active within the Bitcoin technical community but there is a lack of consensus on any new set of contracting primitives satisfying the requirements of known covenant-enabled use-cases. Covenants offer vast extensions of the capabilities of Bitcoin as a system, enabling new types of multi-party contract protocols, and empowering Bitcoin on its fundamental value propositions of store of value and payment system. Retaining a spending constraint restricting the transaction to which the spent UTXO can be spent, and enabling to program contracts/protocols at the transaction-level instead of the script-level, the list of Script primitives proposed during the last years has grown large. The range of workable multi-party contract protocols has grown wild with proposals like multi-party stateful contracts, congestion trees, payment pools, "eltoo" layered commitments, programmable vaults, multi-events contracts, blockchain-as-oracle bets, spacechains, and trustless collateral lending. Technical evaluation of any covenant proposal sounds at least two-fold, first reasoning about the enabled protocols on a range of criteria such as scalability, efficiency, simplicity, extensibility, robustness, data confidentiality, etc. Second, evaluating how good a fit is a proposed Script primitive, the efficiency/simplicity/ease to use trade-offs, but also if there are no functionality overlap or hard constraints on the use-cases design themselves or evolvability w.rt future Script extensions or generalization of the opcode operations.A covenant open specification process is proposed, similar to BOLTs or dlcspecs, with regular meetings and an open agenda where topics of discussion can be pinned in advance and documentation artifacts would be built with time driven by consensus. The proposal suggests having rotating meeting chairs and multiple covenant documentation archivists. The goal is to enable scalable payments pools design like CoinPool, which is considered a good shot at scaling Bitcoin as a payment system once we have reached scalability limits of Lightning. The hard part isn't about coming up with the best technical solution to a set of problems but in the iterative process where all voices are listened to reach (or not) consensus on what is actually meant by "best" and if the problems are accurate. The real physics of Bitcoin is the physics of people.</summary>
    <published>2022-07-20T20:42:42+00:00</published>
  </entry>
</feed>
