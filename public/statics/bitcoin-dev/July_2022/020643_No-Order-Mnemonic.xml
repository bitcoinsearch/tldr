<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>No Order Mnemonic</title>
  <updated>2023-06-15T22:22:07.424605+00:00</updated>
  <author>
    <name>Pavol Rusnak 2022-07-07 17:52:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>No Order Mnemonic</title>
    <updated>2023-06-15T22:22:07.424605+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020643.html" rel="alternate"/>
    <summary>During a discussion on the bitcoin-dev mailing list, Bram Cohen raised an interesting mathematical question of whether it is possible to create a code that always uses BIP-39 words for the same key as part of its encoding. The idea is to add a few words as error correction in case the order is lost or confused. In response, Anton Shevchenko shared his implementation of a different mnemonic encoding scheme that requires users to remember the words but not the order of those words. His code is available on GitHub under the MIT license. However, storing permutations becomes more difficult with repetitions, and it was suggested that just encoding the index of permutation used to scramble the otherwise sorted list could be enough. For a 12-word list, only three words should be needed to store the ~32 bits required. Pavol Rusnak, co-founder of SatoshiLabs, signed off the email thread.</summary>
    <published>2022-07-07T17:52:18+00:00</published>
  </entry>
</feed>
