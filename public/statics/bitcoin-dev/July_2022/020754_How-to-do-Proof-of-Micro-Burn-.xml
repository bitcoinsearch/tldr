<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>How to do Proof of Micro-Burn?</title>
  <updated>2023-06-15T22:57:58.226950+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-07-19 14:48:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>How to do Proof of Micro-Burn?</title>
    <updated>2023-06-15T22:57:58.226950+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020754.html" rel="alternate"/>
    <summary>In a conversation between Ruben and ZmnSCPxj, they discuss the concept of commitment in cryptography. ZmnSCPxj notes that the formula presented by Ruben does not qualify as a commitment since it can be easily opened to an uncommitted value. He suggests using Pedersen commitments instead. When Ruben points out that only someone who knows `k` can open the commitment, ZmnSCPxj explains that this means the knower of `k` is a trusted party. ZmnSCPxj goes on to explain the merkle sum tree property, which is missing from Ruben's proposal, making "double spending" a burn possible. Ruben asks for clarification on this, as he is not a mathematician. They also discuss the atomicity issue, where the risk is moved to the seller side as the buyer could refuse to finalize the purchase after the on-chain commitment was made by the seller. ZmnSCPxj notes that the lack of an opening means the buyer cannot prove the commitment and thus has an incentive to actually pay for it.</summary>
    <published>2022-07-19T14:48:27+00:00</published>
  </entry>
</feed>
