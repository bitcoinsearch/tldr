<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP proposal] Private Payments</title>
  <updated>2023-06-15T22:16:39.702616+00:00</updated>
  <author>
    <name>Christopher Allen 2022-07-01 17:37:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP proposal] Private Payments</title>
    <updated>2023-06-15T22:16:39.702616+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020624.html" rel="alternate"/>
    <summary>A proposal to use bech32 instead of base58 for more compact QR codes has been agreed upon. The use of lowercase letters and certain characters should be avoided as they prevent auto-compression in QRs. Base64 is a big offender as it not only does not auto-compress, but also triggers binary mode that almost doubles the size of the QR. Standards and libraries focused on bitcoin QRs, including support of animated QRs for things like PSBTs, can be found, and techniques used in swift library https://github.com/BlockchainCommons/QRCodeGenerator and https://www.nayuki.io/page/qr-code-generator-library support “optimal encoding using segments” to avoid doubling the QR size. The Blockchain Commons offers other Airgap QR and TorGap UR efforts, including NFC encrypted Airgap &amp; crypto-request/response flows. Proposals for various payment and invoice QRs leveraging these wallet interoperability standards have been invited, with discussions taking place at https://github.com/BlockchainCommons/Airgapped-Wallet-Community.</summary>
    <published>2022-07-01T17:37:57+00:00</published>
  </entry>
</feed>
