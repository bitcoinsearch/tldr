<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>No Order Mnemonic</title>
  <updated>2023-06-15T22:22:55.097061+00:00</updated>
  <author>
    <name>James MacWhyte 2022-07-09 22:21:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>No Order Mnemonic</title>
    <updated>2023-06-15T22:22:55.097061+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020679.html" rel="alternate"/>
    <summary>The context discusses the entropy of a 12-word seed for a Bitcoin wallet. Zac Greenwood explains that sorting a seed alphabetically reduces its entropy by approximately 29 bits, reducing the seed entropy from 128 to 99 bits. However, James MacWhyte points out that if one word is the very last from the wordlist, it would end up at the end of the mnemonic once you rearrange your 12 words alphabetically. Despite this, choosing 11 random words and then sorting them alphabetically before assigning a checksum would still reduce entropy considerably. Napkin math estimates this would leave around 10 trillion combinations, which would only take a couple of months to exhaust with hardware capable of doing one million guesses per second. James later admits that his initial calculations were wrong, and there are actually around 10^30 total possible phrases, making it impossible to brute force in an acceptable timeframe.</summary>
    <published>2022-07-09T22:21:16+00:00</published>
  </entry>
</feed>
