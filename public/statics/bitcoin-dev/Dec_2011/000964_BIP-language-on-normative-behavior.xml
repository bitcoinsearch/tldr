<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP language on normative behavior</title>
  <updated>2023-06-05T01:15:47.465529+00:00</updated>
  <author>
    <name>Amir Taaki 2011-12-21 00:59:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP language on normative behavior</title>
    <updated>2023-06-05T01:15:47.465529+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000964.html" rel="alternate"/>
    <summary>The context discusses the Bitcoin Improvement Proposals (BIPs) and their purpose of providing a stable system environment for programmers to work towards an accepted standard and serving as an equalizer for smaller groups. The author also mentions the challenges of rule creep and bureaucracy that can arise from too many small rules. The discussion revolves around BIP_0014 which specifies software stacks rather than end applications, and the potential violation of it by Gavin's recent commit that uses the same version string for the GUI interface and the daemon mode. There is ambiguity in the interpretation of BIP language regarding what is permitted versus encouraged versus required, and the author recommends using the RFC2119 keywords where appropriate to avoid such confusion. The author advises future BIP contributors to read the mentioned RFC for good suggestions. Finally, the author suggests splitting bitcoin-qt into two parts and explains how following a similar approach as Mozilla Firefox's application suite can be useful.</summary>
    <published>2011-12-21T00:59:00+00:00</published>
  </entry>
</feed>
