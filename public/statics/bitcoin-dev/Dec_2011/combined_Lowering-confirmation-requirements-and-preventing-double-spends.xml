<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lowering confirmation requirements and preventing double spends</title>
  <updated>2023-06-04T21:49:40.201543+00:00</updated>
  <author>
    <name>Andy Parkins 2011-12-08 10:47:08</name>
  </author>
  <author>
    <name>Stefan Thomas 2011-12-08 22:43:24</name>
  </author>
  <author>
    <name>Andy Parkins 2011-12-09 09:50:03</name>
  </author>
  <author>
    <name>Stefan Thomas 2011-12-08 22:43:24</name>
  </author>
  <author>
    <name>Andy Parkins 2011-12-09 09:50:03</name>
  </author>
  <author>
    <name>Stefan Thomas 2011-12-08 22:43:24</name>
  </author>
  <author>
    <name>Andy Parkins 2011-12-09 09:50:03</name>
  </author>
  <author>
    <name>Andy Parkins 2011-12-08 10:47:08</name>
  </author>
  <author>
    <name>Andy Parkins 2011-12-08 10:47:08</name>
  </author>
  <link href="bitcoin-dev/Dec_2011/000806_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000807_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000808_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000807_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000808_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000807_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000808_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000806_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000806_Lowering-confirmation-requirements-and-preventing-double-spends.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lowering confirmation requirements and preventing double spends</title>
    <updated>2023-06-04T21:49:40.201543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000806.html" rel="alternate"/>
    <summary>Dr. Andy Parkins proposed a new idea where a transaction should include the hash of the block it wants to appear after, which he calls the basis block. The miners would then add a condition that the transaction's outputs must be before the new transaction's basis block. This allows miners to add a condition where the transaction output must be claimed before the new transaction's basis block. The proposed change would avoid the problem of financial connections without bitcoin connection.For example, MyBitcoin debacle could have been prevented by the suggestion. Dr. Parkins explained that if MyBitcoin had broadcasted the withdrawal transactions based on the same chain as the deposit, even though it was not using transactions in that chain, then the attack would have failed. Furthermore, this change would only need storing for the pending transactions; hence no incompatible change is needed to the block format. Finally, Dr. Parkins also mentioned that the basis block would be optional and implied by input transactions if it is not present.Stefan Thomas responded by saying that Bitcoin already does something similar where if a transaction is reversed, any transactions based on its outputs are rejected. Hosted wallets can use this but it can get tricky depending on the service. Stefan also pointed out that he has trouble thinking of a good example where an explicit block dependency is necessary. He suggests that if you can clearly and easily associate the money, you might as well relate the transactions.Stefan agrees with Andy Parkins that hosted wallets should keep each account as separate public keys to gain better risk isolation. However, Stefan suggests an algorithm where Mt.Gox prefers to spend outputs from own deposits as the inputs for withdrawals. Depending on the service, it can get tricky. For example, what if one exchanges the money to USD and back before withdrawing? There is certainly a case for both types of correspondence between address and account.</summary>
    <published>2011-12-08T10:47:08+00:00</published>
  </entry>
</feed>
