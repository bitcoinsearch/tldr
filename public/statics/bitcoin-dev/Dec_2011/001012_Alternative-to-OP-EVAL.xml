<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Alternative to OP_EVAL</title>
  <updated>2023-06-05T01:24:28.886908+00:00</updated>
  <author>
    <name>Chris Double 2011-12-30 12:01:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Alternative to OP_EVAL</title>
    <updated>2023-06-05T01:24:28.886908+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/001012.html" rel="alternate"/>
    <summary>In an email conversation, a person explains the significance of OP_DUP in creating looping operations and achieving Turing completeness. They also suggest that using stack operations, one can implement the SK-calculus given an OP_EVAL that allows arbitrary depth. The writer mentions the concatenative programming mailing list where people create stack languages with minimal operations that exploit similar functionality to reduce the required built-in operations. The discussion on the list is mostly about stack-based languages where programs can be pushed on the stack and executed. However, they question whether the scripting engine in bitcoin has the ability to manipulate scripts on the stack to be evaluated. The email ends with the writer's website link.</summary>
    <published>2011-12-30T12:01:53+00:00</published>
  </entry>
</feed>
