<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Alternative to OP_EVAL</title>
  <updated>2023-06-05T01:25:33.271115+00:00</updated>
  <author>
    <name>Joel Joonatan Kaartinen 2011-12-31 09:54:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Alternative to OP_EVAL</title>
    <updated>2023-06-05T01:25:33.271115+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/001014.html" rel="alternate"/>
    <summary>In a discussion about the OP_EVAL proposal, Joel suggested restricting the number of executions allowed per transaction to avoid unlimited looping. He proposed setting 3 as the maximum allowed executions. However, roconnor argued that even if OP_EVAL allowed infinite depth, it would still require explicitly specifying all operations performed, since there is no way of looping. Gavin himself showed how to use OP_EVAL to loop using OP_PUSHDATA {OP_DUP OP_EVAL} OP_DUP OP_EVAL. This allows duplicating the code on the stack and could lead to Turing completeness with arbitrary depth. Despite the potential for expressive power, some consider OP_EVAL to be dangerous.</summary>
    <published>2011-12-31T09:54:13+00:00</published>
  </entry>
</feed>
