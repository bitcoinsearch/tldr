<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CDataStream</title>
  <updated>2023-06-05T00:37:58.284066+00:00</updated>
  <author>
    <name>Michael Grønager 2011-12-15 17:18:09</name>
  </author>
  <author>
    <name>Michael Grønager 2011-12-15 17:18:09</name>
  </author>
  <author>
    <name>Michael Grønager 2011-12-15 17:18:09</name>
  </author>
  <link href="bitcoin-dev/Dec_2011/000867_CDataStream.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000867_CDataStream.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000867_CDataStream.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - CDataStream</title>
    <updated>2023-06-05T00:37:58.284066+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000867.html" rel="alternate"/>
    <summary>A request has been made to update the CDataStream test table in the code. The arguments for the custom stream are off and it is being outperformed by stringstream by a factor of 10-20%. On an OS X (g++), there were some issues with bad stringstream numbers, but this can be improved by changing the default allocation chunk size. Thus, speed should not be a reason for reimplementing stringstream. A call was made to see the output on other OS'es. Serialize.h shows the following results with TESTCDATASTREAM defined: CDataStream:n=1000       0 secondsn=2000       0 secondsn=4000       0 secondsn=8000       0 secondsn=16000      0 secondsn=32000      0 secondsn=64000      1 secondsn=128000     1 secondsn=256000     2 secondsn=512000     4 secondsn=1024000    8 secondsn=2048000    17 secondsn=4096000    40 secondsstringstream:n=1000       0 secondsn=2000       0 secondsn=4000       0 secondsn=8000       0 secondsn=16000      0 secondsn=32000      0 secondsn=64000      0 secondsn=128000     0 secondsn=256000     0 secondsn=512000     0 secondsn=1024000    0 secondsn=2048000    1 secondsn=4096000    2 seconds</summary>
    <published>2011-12-15T17:18:09+00:00</published>
  </entry>
</feed>
