<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Protocol extensions</title>
  <updated>2023-06-05T00:52:15.410250+00:00</updated>
  <author>
    <name>Zell Faze 2011-12-25 02:55:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Protocol extensions</title>
    <updated>2023-06-05T00:52:15.410250+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000993.html" rel="alternate"/>
    <summary>A proposed protocol extension for Bitcoin is to start nodes off with a certain level of trust, such as the arbitrary number 5. High trust nodes (e.g. 10) can forward transactions without checking them, while low trust nodes (e.g. 0) will have their transactions discarded. For nodes with trust levels between 1 and 9, 1-9 out of every 10 transactions are forwarded without checking, with the rest being checked. Valid transactions increase trust by 1 and invalid decrease trust by 3. The numbers used are arbitrary and should be determined by user preferences rather than the protocol. By decreasing trust faster than it increases, it becomes harder for untrustworthy clients to cheat. Having a cut-off point prevents DDoS attacks while random verification makes it harder for new clients to conduct DDoS attacks. One issue raised is that if a node trusts another node at a high level, it may forward invalid transactions from new nodes that it trusts less. This could be mitigated by having a message not to trust a particular node. Another idea is to create positive/negative/neutral announce messages to classify forwarding, but this requires a web of trust and assigning enough trust to forward a classified transaction without checking it yourself.</summary>
    <published>2011-12-25T02:55:08+00:00</published>
  </entry>
</feed>
