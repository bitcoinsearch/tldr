<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Are Instant Confirmations safe?</title>
  <updated>2023-06-09T18:54:40.747129+00:00</updated>
  <author>
    <name>Dennis Sullivan 2015-03-18 22:38:30</name>
  </author>
  <author>
    <name>Natanael 2015-03-18 22:53:32</name>
  </author>
  <author>
    <name>Dennis Sullivan 2015-03-18 22:38:30</name>
  </author>
  <author>
    <name>Natanael 2015-03-18 22:53:32</name>
  </author>
  <author>
    <name>Dennis Sullivan 2015-03-18 22:38:30</name>
  </author>
  <author>
    <name>Natanael 2015-03-18 22:53:32</name>
  </author>
  <link href="bitcoin-dev/March_2015/007717_Are-Instant-Confirmations-safe-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007718_Are-Instant-Confirmations-safe-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007717_Are-Instant-Confirmations-safe-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007718_Are-Instant-Confirmations-safe-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007717_Are-Instant-Confirmations-safe-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007718_Are-Instant-Confirmations-safe-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Are Instant Confirmations safe?</title>
    <updated>2023-06-09T18:54:40.747129+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007717.html" rel="alternate"/>
    <summary>The message is from a first-time poster seeking the opinions of others regarding a proposal called "transaction locking" which claims to make it possible to accept 0-conf transactions with a guarantee that they will be mined. The scheme works by broadcasting an InstantX transaction that spends certain outputs in Darkcoin, and certain nodes sign a message that locks this transaction in the mempool, preventing its inputs from being double-spent. All nodes are told to reject conflicting transactions and flush out any existing ones in the mempool that conflict with the locked transaction. Once a transaction receives a consensus lock across nodes in the mempool, it is guaranteed to be mined as there is no way it can be double-spent. However, the author points out that there may be an attack vector that could cause blocks to be rejected and potentially fork the network, and provides a link to a paper that offers a full explanation of the proposal.Dennis Sullivan posted to a Bitcoin email list for the first time on March 18, 2015, asking for opinions on the "transaction locking" proposal that claimed to make it possible to accept 0-conf (zero confirmation) transactions with a guarantee they will get mined. However, he expressed skepticism about the system, stating that if there was merit to it, he would have expected to see discussion regarding it on the list already. Sullivan also discussed potential weaknesses of the proposal, including vulnerability to sybil attacks, Finney attacks (single-block reversal), and defecting miners. He noted that zero-conf is only safe if no one is actively trying to attack you and that it has no inherent security in and of itself. While low value transactions may tolerate the risk, larger value transactions pose too much risk of making oneself a target.</summary>
    <published>2015-03-18T22:38:30+00:00</published>
  </entry>
</feed>
