<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP draft: BIP32 Path Templates</title>
  <updated>2023-06-14T02:49:41.333760+00:00</updated>
  <author>
    <name>Dmitry Petukhov 2020-07-03 16:53:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP draft: BIP32 Path Templates</title>
    <updated>2023-06-14T02:49:41.333760+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-July/018031.html" rel="alternate"/>
    <summary>The author of a Bitcoin Improvement Proposal (BIP) has proposed a standard format to describe constraints for BIP32 paths. The proposal outlines "path templates" which specify application-specific constraints for the derivation paths. While key origin identification specifies chains of addresses in relation to specific keys, path templates can impose restrictions and identify multiple chains of addresses. When a hardware wallet or autonomous signer signs a transaction, HD derivation can occur at two points: when signing an input and when checking if the output is the change output. In both cases, an application-specific or use-case-specific signing scheme may require that only certain whitelisted derivation paths are used. An autonomous signer might not be aware of the restrictions used in a particular scheme, as it might be developed by a different vendor than the implementer of the scheme. Having constraints specified as data would allow them to be placed in the configuration of the signer. One particular example of this being a problem is how hardware wallet vendors restrict the derivation paths allowed for change addresses to the set of "well-known" paths. Such restrictions break custom schemes used by various software solutions and may be too relaxed if the set of "well-known" paths grows.The format for the path templates described in the BIP draft aims to provide a building block for interoperability between various hardware and software vendors in specifying derivation path restrictions. Adopting a common format for specifying restrictions is a flexible alternative to everyone adopting a rigid set of "well-known" paths. The hope is that having a clear specification and permissibly licensed quality implementations would make adopting such a format easier for vendors.</summary>
    <published>2020-07-03T16:53:44+00:00</published>
  </entry>
</feed>
