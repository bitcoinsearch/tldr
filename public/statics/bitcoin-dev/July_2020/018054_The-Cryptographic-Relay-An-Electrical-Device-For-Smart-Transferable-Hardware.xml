<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The Cryptographic Relay: An Electrical Device For Smart Transferable Hardware</title>
  <updated>2023-06-14T03:01:14.335217+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-07-21 01:27:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The Cryptographic Relay: An Electrical Device For Smart Transferable Hardware</title>
    <updated>2023-06-14T03:01:14.335217+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-July/018054.html" rel="alternate"/>
    <summary>ZmnSCPxj shared a rentable charging station project for electric cars. He observed that a rentable Cryptographic Relay device could be implemented using Cryptographic Relay features with support for MuSig, Timelocks, and Delegated operators. He explained the rental contract process between two parties with the help of fresh keypairs, rent-transfer command, and rental-end command to transfer ownership from one party to another. He also mentioned the use of Bitcoin-side payments done via Lightning-with-PTLC, which requires Taproot but does not require SIGHASH_ANYPREVOUT. Additionally, he considered the case where the renter wishes to return it early, for a partial refund of the total rent or rented in units of smaller time and just extending the rental period as needed.Further, ZmnSCPxj discussed the scenario where the device being rented out is a smart domicile, which can be locked/unlocked by the owner/operator of a Cryptographic Relay. In this case, a deposit is involved, and the construction of a rent-with-deposit contract is similar to the construction of the collateralized loan with PTLCs on the deposit. He suggested that smart contract languages should have PTLCs and partial signatures as primitives and be written in a compositional/declarative style, rather than some Turing-complete mess.</summary>
    <published>2020-07-21T01:27:27+00:00</published>
  </entry>
</feed>
