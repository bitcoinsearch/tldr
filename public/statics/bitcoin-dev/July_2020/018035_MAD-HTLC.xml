<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>MAD-HTLC</title>
  <updated>2023-06-14T02:37:02.865756+00:00</updated>
  <author>
    <name>Stanga 2020-07-05 09:03:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>MAD-HTLC</title>
    <updated>2023-06-14T02:37:02.865756+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-July/018035.html" rel="alternate"/>
    <summary>The conversation between Ittay and ZmnSCPxj in the Bitcoin-dev mailing list revolves around the concept of myopic and non-myopic miners. Non-myopic miners optimize transaction selection for the next block with respect to several future blocks, while myopic miners optimize transaction selection only for the next block. The term "dominates" is a technical term in game theory that refers to a strategy that always wins more points than another strategy in a mixed environment. It doesn't mean that one strategy contains the other. Myopic strategies will consistently beat non-myopic strategies because they impose costs on the non-myopic miners. Currently, no miner is non-myopic, but it's rather trivial to implement in Bitcoin Core and any miner can apply the patch independently. However, implementing non-myopia is pointless as myopic strategies dominate over non-myopic strategies. The analysis assumes common knowledge, and nodes might have different mempools, and some might not have applied the optimization patch and act myopically. The only way for non-myopic miners to win is to form a cartel, but a miner cartel with &gt;50% hashpower would be the end of Bitcoin anyway.</summary>
    <published>2020-07-05T09:03:14+00:00</published>
  </entry>
</feed>
