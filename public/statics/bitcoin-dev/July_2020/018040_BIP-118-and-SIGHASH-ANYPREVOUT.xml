<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 118 and SIGHASH_ANYPREVOUT</title>
  <updated>2023-06-14T02:52:49.825549+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-07-10 03:29:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 118 and SIGHASH_ANYPREVOUT</title>
    <updated>2023-06-14T02:52:49.825549+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-July/018040.html" rel="alternate"/>
    <summary>ZmnSCPxj proposed a Decker-Russell-Osuntokun construction that could have only a single internal taproot pubkey, `P = MuSig(A, B)` for a channel between A and B. Transactions would be signed with the internal taproot pubkey using `SIGHASH_ANYPREVOUTANYSCRIPT`. Update transactions would require a monotonically-increasing `nLockTime`, while state transaction input would have an `nSequence` requiring a relative locktime of the agreed-upon unilateral close delay. The assumption is MuSig signing, which requires 1.5 round trips for a channel, or three broadcast rounds for a multiparticipant (n &gt;=3) construction. Andrew Poelstra has updated BIP 118 to the latest thinking with the ANYPREVOUT bip, and opened a draft pull request to update it. There are some significant changes since previous discussion, including complete lack of chaperone signatures or anything like it and that ANYPREVOUTANYSCRIPT no longer commits to the value. The pull request doesn't come with tested code at this point.</summary>
    <published>2020-07-10T03:29:39+00:00</published>
  </entry>
</feed>
