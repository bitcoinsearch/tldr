<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pseudocode for robust tail emission</title>
  <updated>2023-06-16T03:38:56.863208+00:00</updated>
  <author>
    <name>Peter Todd 2022-12-30 23:28:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pseudocode for robust tail emission</title>
    <updated>2023-06-16T03:38:56.863208+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021303.html" rel="alternate"/>
    <summary>The proposal suggests that every 210,000 blocks, the code should calculate the average difficulty of the last 100 retargets and compare with the maximum of all such values calculated before. If the average difficulty of last 100 retargets is greater than the maximum of all previous average difficulties, halving occurs else nothing happens. The proposed system ensures that the system cannot be played and waits for network security recovery in case of destructive halving. However, this proposal does not address the immediate danger of halvings where profit margins tend towards marginal costs rather than total costs, resulting in a significant amount of hashing power shutting down immediately and fees increasing dramatically. While the proposal could be a positive improvement on the status quo, it is a hard fork that may not have much hope for implementation. The author suggests that a demurrage soft-fork implemented via a storage fee averaged out over many future blocks would have a more plausible route towards implementation.</summary>
    <published>2022-12-30T23:28:58+00:00</published>
  </entry>
</feed>
