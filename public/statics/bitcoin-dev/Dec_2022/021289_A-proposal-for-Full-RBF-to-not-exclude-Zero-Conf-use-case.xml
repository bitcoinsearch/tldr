<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
  <updated>2023-06-16T03:23:38.595766+00:00</updated>
  <author>
    <name>Daniel Lipshitz 2022-12-14 08:12:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
    <updated>2023-06-16T03:23:38.595766+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021289.html" rel="alternate"/>
    <summary>A potential solution to the issue of double spending caused by FullRBF is First-Seen-Safe Replace-By-Fee (FSS-RBF). This is because FSS-RBF only requires an additional input transaction to be included in the second transaction, which would not harm the original output. Merchants could monitor block inclusion for the relevant output and implement some wallet logic to easily resolve any issues. However, it is unclear why the limitation of adding an additional input hinders the added value of FullRBF and how significant that hinderance is. John Carvalho, CEO of Synonym.to, questioned why this solution was not put in place earlier and expressed concerns about the potential for more double spending at unknowing merchants after years of FSS protection. Daniel Lipshitz, from GAP600, responded by acknowledging the suitability of FSS-RBF as a way forward to balance FullRBF while retaining the significant 0-conf use case.</summary>
    <published>2022-12-14T08:12:30+00:00</published>
  </entry>
</feed>
