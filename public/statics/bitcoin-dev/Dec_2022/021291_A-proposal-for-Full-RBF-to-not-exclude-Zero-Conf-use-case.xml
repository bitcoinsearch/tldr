<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
  <updated>2023-06-16T03:23:11.607490+00:00</updated>
  <author>
    <name>Erik Aronesty 2022-12-14 17:41:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
    <updated>2023-06-16T03:23:11.607490+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021291.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Daniel Lipshitz suggested the use of first-seen-safe replace-by-fee (FSS-RBF) as an alternative to full replace-by-fee (FullRBF) in order to retain the significant 0-conf use case while balancing the risks associated with it. John Carvalho expressed concern over the side-effects of FullRBF, including increased double-spending at unknowing merchants, and stated that discussion of the FSS-RBF feature was worth considering. In response to a question about the difference between FSS-RBF and FullRBF, Lipshitz explained that the only technical difference is the addition of an input transaction in FullRBF, and that FSS-RBF would be easily resolved by monitoring block inclusion for the relevant output and adding some wallet logic. Yuval Kogman provided a link to a previous discussion on FSS-RBF led by Peter Todd.</summary>
    <published>2022-12-14T17:41:17+00:00</published>
  </entry>
</feed>
