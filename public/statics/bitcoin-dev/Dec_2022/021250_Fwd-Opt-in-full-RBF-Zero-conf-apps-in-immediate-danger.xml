<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fwd: [Opt-in full-RBF] Zero-conf apps in immediate danger</title>
  <updated>2023-06-16T03:16:25.760345+00:00</updated>
  <author>
    <name>Peter Todd 2022-12-06 05:03:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fwd: [Opt-in full-RBF] Zero-conf apps in immediate danger</title>
    <updated>2023-06-16T03:16:25.760345+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021250.html" rel="alternate"/>
    <summary>The bitcoin-dev community is discussing the use of a different nVersion to signal full-rbf in multi-party transactions like coinjoin and contracting protocols like Lightning. The original technical motivation for this option was to address a DoS vector affecting these use-cases, but alternative paths to solve this issue have been devised, all with their own trade-offs and conceptual issues. However, these alternative paths negatively impact privacy by creating more ways for bad actors to deanonymize transactions. The proposal that multi-party protocols use a different nVersion to signal full-rbf in their txouts negates the anonymity set of all transactions, as single-party wallets are discouraged from using it due to complaints from services like Bitrefill about RBF transactions. Furthermore, designing a protocol without harming privacy is impossible, as it requires zeroconf services to be able to determine whether or not the txout had opted into full-rbf while Chainalysis services would need to be unable to do the same. This political tradeoff between centralized services and all other users needs to be decided by the community. Another v3 proposal also has similar privacy issues, but mempool design could potentially avoid this impact.</summary>
    <published>2022-12-06T05:03:56+00:00</published>
  </entry>
</feed>
