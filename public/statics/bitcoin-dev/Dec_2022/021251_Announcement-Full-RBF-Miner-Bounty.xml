<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Announcement: Full-RBF Miner Bounty</title>
  <updated>2023-06-16T02:48:14.577765+00:00</updated>
  <author>
    <name>Peter Todd 2022-12-06 05:39:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Announcement: Full-RBF Miner Bounty</title>
    <updated>2023-06-16T02:48:14.577765+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021251.html" rel="alternate"/>
    <summary>In an email exchange about an attack on Bitcoin by Peter Todd, a suggestion was made to work on a Bitcoin Core implementation that stops propagation of full-rbf replaced blocks. Running multiple nodes with such functionality would add risk to miners enabling full-rbf as an incentive against that. However, Todd noted that this would require adding an option on Bitcoin Core and it is politically difficult to implement as he does not have commit access to the main repository. While someone else could work on a fork to run several nodes with such functionality, Todd explained that the percolation model means this would be ineffective. Even if there were 20% of the entire network censoring, the probability of all 8 outgoing peers being censored is only 0.2^8 = 0.000256%. In fact, for full-rbf, the same math works in favor as just 8.3% of the network needs to run full-rbf for a node to have a 50% chance of connecting to at least one full-rbf peer. Todd also pointed out that for his idea to work, there has to be a substantial probability that a miner only runs a single node (they don't) that has no incoming peers and all 8 peers of that node happen to be one of the 20 censoring nodes.</summary>
    <published>2022-12-06T05:39:40+00:00</published>
  </entry>
</feed>
