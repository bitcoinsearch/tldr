<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Pseudocode for robust tail emission</title>
  <updated>2023-05-22T23:17:50.453411+00:00</updated>
  <author>
    <name>jk_14 at op.pl 2022-12-23 18:43:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Pseudocode for robust tail emission</title>
    <updated>2023-05-22T23:17:50.453411+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021299.html" rel="alternate"/>
    <summary>There is a proposal to plan a robust model in case of necessity. The plan suggests that every 210,000 blocks, the code should calculate the average difficulty of the last 100 retargets and compare it with the maximum of all such values calculated before. If the average difficulty of the last 100 retargets is greater than the maximum of all previous average difficulties, then the system will halve. However, if this is not the case, then nothing happens.This plan ensures that the system cannot be played and only waits for the recovery of network security in the event of a destructive halving. By implementing this strategy, the system will remain secure and stable in the long run.</summary>
    <published>2022-12-23T18:43:36+00:00</published>
  </entry>
</feed>
