<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Opt-in full-RBF] Zero-conf apps in immediate danger (angus)</title>
  <updated>2023-06-16T03:17:03.656784+00:00</updated>
  <author>
    <name>angus 2022-12-09 15:58:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Opt-in full-RBF] Zero-conf apps in immediate danger (angus)</title>
    <updated>2023-06-16T03:17:03.656784+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021257.html" rel="alternate"/>
    <summary>There is a fundamental disagreement over Full RBF, with some seeing it as a way to eliminate the risk of Zero Conf and others arguing that relying on predictable mempool policy has worked well so far. Full RBF supporters argue that node policy is not a consensus rule and that changing mempool policy is necessary to actively discourage Zero Conf. Those who oppose Full RBF argue that Zero Conf acceptance is already widely used and useful, and that Full RBF can be successfully unshipped if the majority of node operators don't care about it. The economic incentive argument currently does not matter much, and there is still an obvious incentive for someone to double-spend attack a Zero-Conf merchant. The utility argument for Zero Conf is overpowered by the "node policy is not consensus and not trustworthy" argument, according to Angus. Accepting Zero Conf changes from "hrm, you shouldn't really do that but it works most of the time" to "no, really don't do that, you will probably lose money". For now, Angus wants to run a Full RBF node because he sees it as ultimately making Bitcoin stronger. He could be convinced to reverse his stance and oppose Full RBF if there was a strong economic argument that miners (better still, miners and users) should oppose it.</summary>
    <published>2022-12-09T15:58:37+00:00</published>
  </entry>
</feed>
