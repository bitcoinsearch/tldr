<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fwd: [Opt-in full-RBF] Zero-conf apps in immediate danger</title>
  <updated>2023-06-16T03:16:51.152793+00:00</updated>
  <author>
    <name>Peter Todd 2022-12-06 05:03:56</name>
  </author>
  <author>
    <name>Peter Todd 2022-12-06 05:03:56</name>
  </author>
  <author>
    <name>Antoine Riard 2022-12-02 22:35:39</name>
  </author>
  <author>
    <name>Antoine Riard 2022-12-02 22:35:39</name>
  </author>
  <author>
    <name>Antoine Riard 2022-12-02 22:35:39</name>
  </author>
  <author>
    <name>Peter Todd 2022-12-06 05:03:56</name>
  </author>
  <link href="bitcoin-dev/Dec_2022/021250_Fwd-Opt-in-full-RBF-Zero-conf-apps-in-immediate-danger.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021250_Fwd-Opt-in-full-RBF-Zero-conf-apps-in-immediate-danger.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021233_Fwd-Opt-in-full-RBF-Zero-conf-apps-in-immediate-danger.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021233_Fwd-Opt-in-full-RBF-Zero-conf-apps-in-immediate-danger.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021233_Fwd-Opt-in-full-RBF-Zero-conf-apps-in-immediate-danger.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021250_Fwd-Opt-in-full-RBF-Zero-conf-apps-in-immediate-danger.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fwd: [Opt-in full-RBF] Zero-conf apps in immediate danger</title>
    <updated>2023-06-16T03:16:51.152793+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021250.html" rel="alternate"/>
    <summary>The bitcoin-dev community is discussing the use of a different nVersion to signal full-rbf in multi-party transactions like coinjoin and contracting protocols like Lightning. The original technical motivation for this option was to address a DoS vector affecting these use-cases, but alternative paths to solve this issue have been devised, all with their own trade-offs and conceptual issues. However, these alternative paths negatively impact privacy by creating more ways for bad actors to deanonymize transactions.The proposal that multi-party protocols use a different nVersion to signal full-rbf in their txouts negates the anonymity set of all transactions, as single-party wallets are discouraged from using it due to complaints from services like Bitrefill about RBF transactions. Furthermore, designing a protocol without harming privacy is impossible, as it requires zeroconf services to be able to determine whether or not the txout had opted into full-rbf while Chainalysis services would need to be unable to do the same. This political tradeoff between centralized services and all other users needs to be decided by the community.Antoine addresses Daniel, who operates a zero-conf risk analysis business that is leveraged by payment processors/liquidity providers and merchants. Antoine raises concerns about fullrbf deployment, which would lower the cost of double-spend attacks and increase risk exposure for users. He questions the statistics on the 1.5M transactions per month received by Daniel's business, asking how many are Bitcoin-only, excluded from zeroconf due to factors like RBF, long-chain of unconfirmed ancestors or too high-value, and what has been the average feerate. Antoine states his personal position on fullrbf deployment as expressed in #26525, stating that there is still no conceptual consensus on deploying full-rbf or removing it. Antoine believes that the community needs to address the qualification of enough economic flows at risk and the presence of a sizable loss in miners income before considering removing the current option from Bitcoin Core. He also raises the question if the Bitcoin protocol development community should restrain user choice in policy settings in the name of preserving mining income and established use-case stability.The original technical motivation of the fullrbf option was to address a DoS vector affecting multi-party transactions like coinjoin and contracting protocols like Lightning. However, alternative paths to solve this DoS vector have been devised since then, all with their own trade-offs and conceptual issues. Antoine provides links to various sources where he has previously discussed these issues. Overall, his message highlights the potential risks associated with fullrbf deployment and raises questions about the need to balance user choice with preserving mining income and established use-case stability. Another v3 proposal also has similar privacy issues, but mempool design could potentially avoid this impact.</summary>
    <published>2022-12-06T05:03:56+00:00</published>
  </entry>
</feed>
