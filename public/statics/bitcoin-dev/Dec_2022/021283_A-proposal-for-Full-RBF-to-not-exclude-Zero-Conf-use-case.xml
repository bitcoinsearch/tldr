<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
  <updated>2023-06-16T03:25:31.090020+00:00</updated>
  <author>
    <name>Daniel Lipshitz 2022-12-13 14:08:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
    <updated>2023-06-16T03:25:31.090020+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021283.html" rel="alternate"/>
    <summary>Some wallets, such as Electrum, may be affected by FullRBF as they use RBF to batch transactions which means outputs cannot be exactly the same as before. OptinRBF already exists as an option and has added benefits of continuing to support 0-conf. Daniel Lipshitz suggests that First-seen-safe replace-by-fee (FSS-RBF) is a very suitable option that balances FullRBF while retaining significant 0-conf use case and could be a good way forward. John Carvalho also thinks discussion of FSS-RBF feature is worth considering. The bitcoin-dev mailing list is discussing the implementation of optinrbf and FullRBF and the technicalities behind it. Yuval Kogman provides a link to further information on the topic.</summary>
    <published>2022-12-13T14:08:10+00:00</published>
  </entry>
</feed>
