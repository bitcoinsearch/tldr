<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Development Roadmap of Bitcoin Core 0.9.2</title>
  <updated>2023-06-08T20:35:08.675579+00:00</updated>
  <author>
    <name>Warren Togami Jr. 2014-04-24 08:15:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Development Roadmap of Bitcoin Core 0.9.2</title>
    <updated>2023-06-08T20:35:08.675579+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005494.html" rel="alternate"/>
    <summary>In an email thread between Wladimir, Gregory Maxwell and Warren Togami Jr., they discuss the compatibility of Bitcoin-Qt on different systems. Warren suggests that rare users who need Bitcoin-Qt on an incompatible system can build it from source. However, Gregory notes that Tails users usually cannot build it from source as it is a live boot mostly stateless Linux distribution for privacy applications. Wladimir questions whether Bitcoin Core is suitable for such uses, considering running a full node on a stateless system seems unlikely. As there are issues with compatibility, the group discusses possible solutions, including getting rid of one symbol or putting it behind some #ifdef COMPATIBILITY_BUILD or building against the 4.6 Qt headers instead without even swapping the library, which will lose some GUI features, but if compatibility is more important, that's a choice that can be made. Warren believes they need to decide upon a cut-off point beyond which it makes no sense to add the risk of increased complexity, noting that RHEL6 had qt-4.6.2, and he has not heard any complaints about bitcoin-qt being broken there, given almost nobody uses it as a desktop.</summary>
    <published>2014-04-24T08:15:11+00:00</published>
  </entry>
</feed>
