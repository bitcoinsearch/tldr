<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>About Compact SPV proofs via block header commitments</title>
  <updated>2023-06-08T21:48:00.691415+00:00</updated>
  <author>
    <name>Mark Friedenbach 2014-04-27 01:43:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>About Compact SPV proofs via block header commitments</title>
    <updated>2023-06-08T21:48:00.691415+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005605.html" rel="alternate"/>
    <summary>The email exchange discusses the topic of SPV proofs, which are a sequence of bits that can establish connectivity and proof of work between two blocks in a non-interactive protocol. The aim is to convince a client without access to the blockchain that a certain block has an ancestor at a specified height and work distance back. The cost of creating a fraudulent SPV proof should be at least as much work as it claims to represent. The email proposes a way to construct an SPV proof using an average of log(N) headers when additional backlink commitments are added. This approach puts an economic cost to fraud. However, the author also mentions that the proposed SmartSPV protocol does not meet these requirements and reduces to simply blind trust in one's view of the network from their peers. Furthermore, the email discusses the use case of an SPV client that has just come online and asks peers what is the last block height/time. If a peer replies with an old block, then that peer is still downloading the blockchain and is ignored. For the remaining peers, the client starts asking for parent blocks until all parents agree (this is the last common parent). If UTXO hash-tree commitments are available, then the wallet is updated using this data from the common parent block. The email concludes with the author's query if there is something wrong with this proposed use case.</summary>
    <published>2014-04-27T01:43:36+00:00</published>
  </entry>
</feed>
