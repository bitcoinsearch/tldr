<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why are we bleeding nodes?</title>
  <updated>2023-06-08T18:46:37.989690+00:00</updated>
  <author>
    <name>Tamas Blummer 2014-04-08 07:59:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why are we bleeding nodes?</title>
    <updated>2023-06-08T18:46:37.989690+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005119.html" rel="alternate"/>
    <summary>The ongoing specialization of nodes is most prominent with SPV wallets and mining. The author believes that there is a need for software that can serve multiple wallets and is multi-tiered, with a hybrid model that is SPV plus mempool transaction validation against UTXO. A border router could serve as an archive node, even offering blocks at bulk through HTTP. This setup is expected to be common for enterprises, and the author pushes for a stripped-down reference border router without wallet, payment protocol, GUI, RPC calls, etc. Enterprises running a multi-tiered environment have the bandwidth to serve as archives. In an email thread between Jeff Garzik and Gregory Maxwell, Garzik suggests refusing to serve blocks older than three months, to avoid wasting time and bandwidth on serving static, ancient data. Maxwell proposes extending the addr messages so that nodes can indicate a range or two of blocks that they're serving, allowing all nodes to contribute fractionally according to their means. Maxwell believes that a binary archive bit will cause extreme load hot-spotting and the kind of binary "Use lots of resources YES or NO" that they are currently suffering from. There is currently no room to signal arbitrary ranges, but they already need distributed storage for the most recent blocks to prevent extreme bandwidth load on archives.</summary>
    <published>2014-04-08T07:59:24+00:00</published>
  </entry>
</feed>
