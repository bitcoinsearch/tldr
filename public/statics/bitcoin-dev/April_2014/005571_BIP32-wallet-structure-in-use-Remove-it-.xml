<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP32 "wallet structure" in use? Remove it?</title>
  <updated>2023-06-08T21:24:22.786033+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2014-04-26 10:36:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP32 "wallet structure" in use? Remove it?</title>
    <updated>2023-06-08T21:24:22.786033+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005571.html" rel="alternate"/>
    <summary>Interoperability between wallets is a challenge, as the structure of the derivation defines and constrains functionality. While it's better for wallets to be compatible if they have the same features, it's unlikely that they will keep the same features for long. Partial compatibility could lead to users not being able to recover all their funds when entering their seed in another wallet. Gregory Maxwell suggests that supporting a compatibility mode where a wallet has just a subset of features which works when loaded into different systems is possible but may not be widely used. Calling it "vendor lock-in" sounds exaggerated. If someone wants to change wallets, they can transfer the funds manually, and heavily constraining functionality for interoperability is just too high a price to pay. However, compatibility for recovery tools is another matter, and BIP32 probably defines enough there that with a bit of extra data about how the real wallet worked that recovery can be successful.</summary>
    <published>2014-04-26T10:36:51+00:00</published>
  </entry>
</feed>
