<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure for P2SH multisig wallets</title>
  <updated>2023-06-08T21:40:51.585041+00:00</updated>
  <author>
    <name>Mike Hearn 2014-04-26 09:43:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure for P2SH multisig wallets</title>
    <updated>2023-06-08T21:40:51.585041+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005569.html" rel="alternate"/>
    <summary>Manuel Araoz, part of the team that developed Copay, a multisignature P2SH HD wallet, shared their approach to a new standard for the structure of branches in such wallets. The assumptions behind the current discussions were found not to be true for a multisig hd wallet. In this approach, each party generates their own extended master keypair and shares the extended purposeâ€™ public key with the others, which is stored encrypted. Each party can generate any of the other's derived public keys but only their own private keys. When generating an address, each party can independently generate the N needed public keys, and then generate the multisig script and the corresponding p2sh address. Cosigner_index is the index of the party creating this address; change is 0 for change, 1 for receiving address; and address_index numbers addresses from index 0 in sequentially increasing manner. All parties must be able to generate all public keys, and transaction creation and signing requires communication between parties. The specifics of how a Transaction Proposal is structured, and the protocol to accept or reject it, belong to another BIP.</summary>
    <published>2014-04-26T09:43:23+00:00</published>
  </entry>
</feed>
