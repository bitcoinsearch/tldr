<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why are we bleeding nodes?</title>
  <updated>2023-06-08T18:46:15.825985+00:00</updated>
  <author>
    <name>Paul Lyon 2014-04-07 19:30:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why are we bleeding nodes?</title>
    <updated>2023-06-08T18:46:15.825985+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005098.html" rel="alternate"/>
    <summary>The email thread discusses the approach of downloading and storing headers and blocks in any order for blockchain syncing. The user mentions that the concern of storing blocks for seeding is separated from syncing the UTXO, allowing for the initial blockchain sync to be completed in approximately six hours when using an SSD. The project is a bitcoin learning exercise for the user, and they hope there are no critical design flaws. Tamas Blummer suggests that once headers are loaded, sequential loading is not necessary and validation can be deferred until the blocks before a point are loaded and continuous. Gregory Maxwell raises concerns about the use of a bitmap for advertising non-contiguous blocks due to high overhead and poor locality. The email concludes with a link to Jenkins Continuous Integration for development.</summary>
    <published>2014-04-07T19:30:54+00:00</published>
  </entry>
</feed>
