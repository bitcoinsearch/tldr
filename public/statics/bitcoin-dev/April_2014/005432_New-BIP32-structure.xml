<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:27:06.085247+00:00</updated>
  <author>
    <name>Luke-Jr 2014-04-23 19:44:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:27:06.085247+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005432.html" rel="alternate"/>
    <summary>In an email thread between Pavol Rusnak and Tier Nolan, the topic of BIP32 and BIP64 was discussed. Pavol explained that BIP32 is a single system that is compatible across many systems and that BIP64 puts restrictions and rules on top of BIP32. He also noted that there will always be special use cases where BIP64 is not a good fit and that BIP32 can be used in a different manner using a different "purpose" field. For example, Electrum uses scheme m/65'/change/address because it doesn't want to use accounts, while Andreas Schildbach uses m/66'/chain/address for refunds chain. Pavol expressed that they wanted to find one solution that fits all, but unfortunately everyone wants something different. Luke questioned why clients need to use the features in BIP64 and suggested that Electrum could just use account 0 for everything and wallets not implementing refund addresses would simply not use that chain.</summary>
    <published>2014-04-23T19:44:13+00:00</published>
  </entry>
</feed>
