<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:28:52.036707+00:00</updated>
  <author>
    <name>Pavol Rusnak 2014-04-08 14:35:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:28:52.036707+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005130.html" rel="alternate"/>
    <summary>Pieter Wuille suggested an alternative suggestion which is compatible with the original default BIP32 structure. You can use one seed across different chains, but the master nodes are separate. To derive the master node from the seed, the key string "Bitcoin seed" is replaced by something chain-specific. Every encoded node (including master nodes) has a chain-specific serialization magic. However, it is much more practical to use just one list (assignment of coins to indexes) than to use two lists (assignment of coins to key strings and to serialization magic). Using two lists adds unnecessary friction, making it harder to keep track of. Also, using just one root node and then descending in tree as needed is a little easier for the wallet's implementer perspective than to use Pieter Wuille's method.</summary>
    <published>2014-04-08T14:35:35+00:00</published>
  </entry>
</feed>
