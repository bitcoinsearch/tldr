<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Economics of information propagation</title>
  <updated>2023-06-08T20:26:28.312989+00:00</updated>
  <author>
    <name>Jonathan Levin 2014-04-21 01:30:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Economics of information propagation</title>
    <updated>2023-06-08T20:26:28.312989+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005316.html" rel="alternate"/>
    <summary>A post-graduate economist is writing a paper on the incentives of mining, focusing on the magnitude of incentives and its implications for the transaction fee market. The marginal cost for miners comes from the probability that the block will be orphaned due to slower propagation rather than the private cost of validating the signature and including it in the list of transactions in the block. He is looking to calculate the change in the curvature of the probability mass function that a block hears about his block as a function of the block size, although he would prefer analytical solutions.Following Peter Todd, he finds that increasing delays in propagation can result in increasing returns to higher shares of the hashing power. Large pools can publish large blocks to increase propagation delays on the network, which increases orphan rates for small miners and those who lack sufficient bandwidth or connectivity. The miner’s block is orphaned when other miners find a competing valid block, even if the miner was the first to find a valid block. Orphans are probabilistic and only resolved after hearing about a new block that lengthens the chain. The writer is unsure whether it is frowned upon to mine on top of a block that one has found but will likely end up being an orphan. Coinometrics is working on a modified client to capture information on network propagation and would invite any suggestions of any other useful statistics that would be useful in the development of software.In this email chain from the Bitcoin-development mailing list, Oliver Egginger shares his thoughts on the lack of a commonly used term for smaller units of Bitcoin. He believes that terms arise naturally and since Bitcoin is not yet in common use beyond speculation, no term for smaller units has established itself yet. A few people discuss possible names for smaller units of Bitcoin, with some suggesting “ubit” for representing 1e-6 bitcoin.The discussion then ends with a series of advertisements for various software and services related to building enterprise intranets and graph databases. The email also includes a PGP-signed attachment.</summary>
    <published>2014-04-21T01:30:28+00:00</published>
  </entry>
</feed>
