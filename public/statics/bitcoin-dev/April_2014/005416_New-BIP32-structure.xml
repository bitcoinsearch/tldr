<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:26:26.792266+00:00</updated>
  <author>
    <name>slush 2014-04-23 18:18:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:26:26.792266+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005416.html" rel="alternate"/>
    <summary>There is a pull request for BIP64 defining HD wallet structure, which can be found on the Github repository for Bitcoin Improvement Proposals (BIPs). The discussion around this pull request began with a debate around whether it is better to store the seed or the master node in the wallet structure. Storing the seed is considered superior as it takes up less space, but some argue that this approach limits flexibility. They see the "bip32 seed" as a transitional internal state from raw entropy to bip32 master node and believe it should not be handled by the end user in any form. In contrast, a well-serialized bip32 node can be used widely without downsides against using raw "bip32 seed." The conversation also addressed how this would affect compatibility between Bitcoin and other altcoins, as infrastructure developers need to think about their users' needs. There was some concern raised about removing the ability to use magic serialization to prevent importing a chain from the wrong coin. However, it was pointed out that even existing software that handles bip32 does not care about "version" at all. The only useful feature of version is the "xpub/xprv" distinction, so users can see if they have stored public or private information. Using prefixes that do not enforce anything is seen as more dangerous because it creates false expectations that there is only one type of coin stored.</summary>
    <published>2014-04-23T18:18:16+00:00</published>
  </entry>
</feed>
