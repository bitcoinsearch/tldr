<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-05-19T18:17:20.171340+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-04-23 20:08:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-05-19T18:17:20.171340+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005446.html" rel="alternate"/>
    <summary>The discussion revolves around the compliance of wallet software with BIP64 structure. The structure defined by BIP64 is strict and requires the scanning of all possible branches regardless of which features the wallet software supports. Any wallet software that does not have the complexity to deal with just one account is not BIP64 compliant, which means it has to scan all that is defined in the structure. However, it can try to define its own purpose system, with a hierarchy without accounts in it. Construction of related chains for multisig addresses is perhaps a better example of a different purpose structure. In response to Luke-Jr's comment, Slush mentions that wallets don't see UTXO until it scans all branches/accounts on HD node import. To this, Luke-Jr agrees that any wallet should import all the coins just fine, but it just wouldn't use any account other than 0. He further clarifies that once the UTXOs are in the wallet, they are no longer associated with the address or any other details of how they were received. Overall, the discussion highlights the importance of complying with BIP64 structure for wallet software and the need for scanning all possible branches to import UTXOs.</summary>
    <published>2014-04-23T20:08:18+00:00</published>
  </entry>
</feed>
