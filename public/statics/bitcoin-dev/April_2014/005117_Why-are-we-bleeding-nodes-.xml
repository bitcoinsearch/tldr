<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why are we bleeding nodes?</title>
  <updated>2023-06-08T18:40:27.173650+00:00</updated>
  <author>
    <name>Jean-Paul Kogelman 2014-04-08 07:24:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why are we bleeding nodes?</title>
    <updated>2023-06-08T18:40:27.173650+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005117.html" rel="alternate"/>
    <summary>The discussion is about improving Bitcoin Core's block fetching capabilities to achieve similar performance as a torrent plus import. Currently, data fetching is limited due to the "beefy" headers first process, but compression can save up to 50% of bandwidth. One suggestion is to group block headers into a single hash and fetch them from multiple sources in parallel. Another idea is to refuse serving blocks older than three months, forcing download by other means like torrent. Gregory Maxwell expresses concern over the binary archive bit causing extreme load hot-spotting. He suggests extending the addr messages so that nodes can indicate a range of blocks they are serving, allowing for contribution according to their means. This distributed storage approach is necessary to prevent extreme bandwidth load on archives.</summary>
    <published>2014-04-08T07:24:37+00:00</published>
  </entry>
</feed>
