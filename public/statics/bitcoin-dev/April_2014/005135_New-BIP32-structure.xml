<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:12:00.974661+00:00</updated>
  <author>
    <name>Andreas Schildbach 2014-04-08 15:58:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:12:00.974661+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005135.html" rel="alternate"/>
    <summary>In an email thread, a user named slush expressed that he understands each client will implement things a little bit differently. For example, bitcoinj plans to hold all keys in memory and start reusing keys on low resources while Electrum uses a chain for their private purpose. slush believes that bitcoinj or Electrum should be able to share the bare minimum of BIP XX, but the other person disagrees. They state that either you implement the BIP fully or not, there is no in between. The standard cannot be extended unless a new standard is created based on the old one without re-using the path. The person continues by saying that we're still lightyears away from a BIP, and we should first create implementations and see if they are compatible in all possible combinations and situations. They assert that the moment any two apps have a different view on their wallets generated from the same seed, they're incompatible. In this case, they should either fix the issue or intentionally choose incompatible paths so that they don't see and spend "subsets" of each other.</summary>
    <published>2014-04-08T15:58:03+00:00</published>
  </entry>
</feed>
