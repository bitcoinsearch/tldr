<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>how to disable segwit in my build?</title>
  <updated>2023-06-12T03:35:53.467481+00:00</updated>
  <author>
    <name>Dan Libby 2017-07-13 21:58:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>how to disable segwit in my build?</title>
    <updated>2023-06-12T03:35:53.467481+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-July/014792.html" rel="alternate"/>
    <summary>The discussion on the Bitcoin mailing list reveals that some users may choose not to upgrade their nodes to be SegWit compliant in order to avoid dealing with the potentially increased bandwidth requirements. However, if the majority of the network adopts SegWit, it would be in the best interest of non-SegWit nodes to validate SegWit transactions, or risk being downgraded to near-SPV node validation. It is also noted that it may not be practical to have an up-to-date non-SegWit node, but it could be a case for having one. In response, Jameson Lopp points out that even if a user does not upgrade, they cannot avoid receiving UTXOs that were previously encumbered by a SegWit output. He then seeks clarification on how his pre-segwit node would handle incoming transactions involving P2WPKH addresses.</summary>
    <published>2017-07-13T21:58:04+00:00</published>
  </entry>
</feed>
