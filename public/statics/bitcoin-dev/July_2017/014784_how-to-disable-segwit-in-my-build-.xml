<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>how to disable segwit in my build?</title>
  <updated>2023-06-12T03:37:06.155914+00:00</updated>
  <author>
    <name>Dan Libby 2017-07-13 16:19:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>how to disable segwit in my build?</title>
    <updated>2023-06-12T03:37:06.155914+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-July/014784.html" rel="alternate"/>
    <summary>In a mailing list discussion on bitcoin-dev, Hampus Sj√∂berg suggested that avoiding to run a SegWit compliant node is reasonable for those who do not want to deal with the extra bandwidth that SegWit could require. Running a 0.14.2 node means being okay with &gt;1MB blocks in case SegWit is activated and widely used. Users who are not interested in SegWit transactions may prefer to keep the cost of their node lower. However, if the majority of the network decides to deploy SegWit, it would be in an individual's best interest to validate the SegWit transactions because otherwise, they might be downgraded to near-SPV node validation. It would still be okay to run a "non-SegWit" node if there are no SegWit transactions in the chain of transactions for one's bitcoins. Otherwise, one cannot fully verify the ownership of their bitcoins.According to a response to the mailing list discussion, by not upgrading to SegWit, there seems to be little or zero risk of having any SegWit transaction in one's transaction chain. This would enable users to continue with a lower bandwidth cap and also keep their coins "untainted". The decision, however, may not be practical in the long run, but more of an experiment.</summary>
    <published>2017-07-13T16:19:00+00:00</published>
  </entry>
</feed>
