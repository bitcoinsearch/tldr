<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: OP_BRIBVERIFY - the op code needed for Blind Merge Mined drivechains</title>
  <updated>2023-06-12T03:02:46.525770+00:00</updated>
  <author>
    <name>Paul Sztorc 2017-07-13 00:00:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: OP_BRIBVERIFY - the op code needed for Blind Merge Mined drivechains</title>
    <updated>2023-06-12T03:02:46.525770+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-July/014766.html" rel="alternate"/>
    <summary>The discussion revolves around the efficiency of Bitcoin in equilibrium, including Lightning Network or something LN-like. The scenario assumes N sidechains, with two different versions: coinbase and OP_RETURN. In the coinbase version, there is a single event per N that causes nodes to notice a new sidechain has been created. Per block, there are N hash commitments and N instances of the ratchet's block counter. A miner may redeem an OP Bribe that pays BTC from a sidechain node operator to the miner, but they are likely to negotiate the payment through the Lightning Network. Sidechains running in SPV mode know exactly where to find the information they need to discover the "longest" chain. In the OP_RETURN version, there is no need for a new transaction. Due to Rusty's soft fork rule of only one h* per sidechain per block, sidechains need just a merkle tree path, but they don't necessarily know where it is. They must store extra data to help them find the data's location. The purpose of Rusty's soft fork rule about only including one per sidechain is to ensure miners have one "slot" per sidechain, which would incentivize them to select the highest fee txn to fill each slot.</summary>
    <published>2017-07-13T00:00:29+00:00</published>
  </entry>
</feed>
