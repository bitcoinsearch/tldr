<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hash of UTXO set as consensus-critical</title>
  <updated>2023-06-10T22:47:17.716425+00:00</updated>
  <author>
    <name>Rune Kjær Svendsen 2015-09-19 15:45:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hash of UTXO set as consensus-critical</title>
    <updated>2023-06-10T22:47:17.716425+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011104.html" rel="alternate"/>
    <summary>Bitcoin relies on the majority of mining power being honest in order to function properly. A 51% attack, where the majority of mining power is malicious, would render Bitcoin useless because the malicious miners could mine empty blocks or blocks with randomly generated transactions without confirming any legitimate transactions. This is why a majority of honest miners is a hard requirement for Bitcoin. A fork that exists because of a disagreement in the network, with total mining power split in two camps, each camp mining peacefully on their own chain is unproblematic regardless of whether we include the UTXO hash in the block (and make it consensus-critical) or not since the majority mining power on either chain isn’t malicious.If a majority of Bitcoin miners are mining invalid blocks, then they are no longer relevant to the Bitcoin consensus. However, there is a problem that light clients aren't always able to tell the difference between chains that are valid and chains that are not valid, but it's possible to create simple proofs that would do so. Justus Ranvier from the Open Bitcoin Privacy Project suggests implementing changes that would allow any node that knew a chain was invalid to produce a compact proof that anyone else in the network could verify, regardless of how much proof of work was used to create the invalid chain. Committed UTXO sets would need to be safe to rely upon if a similar set of proofs that a particular set was invalid existed.</summary>
    <published>2015-09-19T15:45:49+00:00</published>
  </entry>
</feed>
