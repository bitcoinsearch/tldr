<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Version bits with timeout and delay.</title>
  <updated>2023-06-10T22:23:30.446027+00:00</updated>
  <author>
    <name>Tier Nolan 2015-09-16 20:30:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Version bits with timeout and delay.</title>
    <updated>2023-06-10T22:23:30.446027+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011024.html" rel="alternate"/>
    <summary>On September 16, 2015, Rusty Russell sent an email discussing the usefulness of a soft fork and partial enforcement. He stated that he couldn't see a use for it because partial enforcement of a soft fork is pretty useless. However, another participant in the conversation explained that while it isn't useful for actually using the feature, some miners might set the bit but not actually create blocks that comply with the new rule. This would cause their blocks to be orphaned until they fixed it. The conversation then goes on to discuss the timeline for detecting bad implementations and stopping the use of the bit. If support stays between 80% and 90%, it could take more than two weeks. At 75% or higher, checks are made to ensure that blocks with the bit set follow the rule. At 95% or higher, lock-in occurs and there are the same rules as at 75% or higher, but it is irreversible at that point. Furthermore, a timeout is needed to avoid a node forking itself off the network if someone reused a failed BIP bit. The second bit mentioned in the conversation wouldn't be used normally, but rather as a way to kill proposals quickly if they are obviously going to fail. Overall, the email thread discusses the nuances of implementing a soft fork and the importance of ensuring that all nodes on the network are compliant.</summary>
    <published>2015-09-16T20:30:27+00:00</published>
  </entry>
</feed>
