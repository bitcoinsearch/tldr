<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Are 'soft forks' misnamed? [was: Let's deploy BIP65 CHECKLOCKTIMEVERIFY!]</title>
  <updated>2023-05-19T22:09:01.415694+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-09-29 20:31:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Are 'soft forks' misnamed? [was: Let's deploy BIP65 CHECKLOCKTIMEVERIFY!]</title>
    <updated>2023-05-19T22:09:01.415694+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011266.html" rel="alternate"/>
    <summary>A member of the Bitcoin-dev mailing list asked why "soft forks" are called that when they seem to be hidden forks, and suggested they could be dangerous. The term "soft fork" arose historically to describe protocol rule changes which were compatible with the existing network, in contrast to a hardfork, which is incompatible. Soft forks allow for critical fixes and improvements to be made by narrowing the permissible actions of participants, reducing the risk and cost associated with flag days when users must coordinate software upgrades. The behavior to be soft-forked out is first made non-standard, meaning that participants will not relay, mine, or display unconfirmed transactions that violate the new rule. If a violation shows up in a block, the block is still accepted. After that, a vast super-majority of hashpower (recently 95%) agrees to enforce the new rule via the blockchain itself, resulting in low disruption on account of the enforcement. Old software continues to enforce all the old rules it always enforced, with the only difference in behavior relating to non-standard transactions and contests between otherwise valid blocks.</summary>
    <published>2015-09-29T20:31:43+00:00</published>
  </entry>
</feed>
