<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - MAST with OP_EVAL and OP_CAT</title>
  <updated>2023-06-10T22:16:41.460261+00:00</updated>
  <author>
    <name>jl2012 at xbt.hk 2015-09-10 17:18:52</name>
  </author>
  <author>
    <name>jl2012 at xbt.hk 2015-09-10 17:18:52</name>
  </author>
  <author>
    <name>jl2012 at xbt.hk 2015-09-10 17:18:52</name>
  </author>
  <link href="bitcoin-dev/Sept_2015/010977_MAST-with-OP-EVAL-and-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010977_MAST-with-OP-EVAL-and-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010977_MAST-with-OP-EVAL-and-OP-CAT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - MAST with OP_EVAL and OP_CAT</title>
    <updated>2023-06-10T22:16:41.460261+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010977.html" rel="alternate"/>
    <summary>A proposed implementation of Merkleized Abstract Syntax Trees (MAST) using OP_CAT and OP_EVAL (BIP12) has been introduced. The concept was inspired by Pieter's Tree Signatures, where a scriptSig and scriptPubKey are used to execute the 10th sub-script out of 11 sub-scripts in the MAST. The suggested approach is to enable OP_CAT inside OP_EVAL for a pure softfork. This method appears to be the simplest way to implement MAST since the reference implementation for BIP12 already exists.</summary>
    <published>2015-09-10T17:18:52+00:00</published>
  </entry>
</feed>
