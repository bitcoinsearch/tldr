<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fill-or-kill transaction</title>
  <updated>2023-06-10T22:42:36.082396+00:00</updated>
  <author>
    <name>Btc Drak 2015-09-18 06:42:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fill-or-kill transaction</title>
    <updated>2023-06-10T22:42:36.083395+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011056.html" rel="alternate"/>
    <summary>In this discussion on the Bitcoin-dev mailing list, several developers are discussing the implementation of the "fill-or-kill" feature as a consensus rule. The fill-or-kill feature refers to a transaction being confirmed within a few confirms or dropped from the mempool so that it won't be considered for inclusion anymore. One developer suggests repurposing a small range of nLocktime, which is a field in Bitcoin transactions used to specify a minimum block height or timestamp until which the transaction cannot be spent. The repurposed nLocktime would accept a transaction into the mempool for a specific period before expiring. The original poster, jl2012, raises the point that they want to implement fill-or-kill as a consensus rule, meaning that it would be enforced by all nodes on the network. Another developer suggests adding a rule that makes the transaction invalid to mine after it has expired, which would keep the simplicity of the proposed solution while making it consensus-based. There is some discussion about whether the feature would be better implemented at the P2P network level or as a consensus rule.</summary>
    <published>2015-09-18T06:42:42+00:00</published>
  </entry>
</feed>
