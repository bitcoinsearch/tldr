<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fill-or-kill transaction</title>
  <updated>2023-06-10T22:42:43.594761+00:00</updated>
  <author>
    <name>jl2012 at xbt.hk 2015-09-18 09:12:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fill-or-kill transaction</title>
    <updated>2023-06-10T22:42:43.594761+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011060.html" rel="alternate"/>
    <summary>In a Bitcoin development forum, a user named Btc Drak questioned the complexity of implementing fill-or-kill transactions by repurposing a small range of nLockTime. He suggested that a transaction could be accepted into the mempool for a specific period before expiring and being dropped from consideration for inclusion. Another user, jl2012, proposed implementing the fill-or-kill rule as a consensus rule rather than only at the P2P network level. They both agreed that adding a new nKillTime field to the transaction would be the cleanest way to use nLockTime and nKillTime in parallel, but it would require a hardfork. Other alternatives were also discussed such as embedding nKillTime data within an unused nVersion or utilizing per-input nKillTime and nLockTime with nSequence.</summary>
    <published>2015-09-18T09:12:27+00:00</published>
  </entry>
</feed>
