<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Weak block thoughts...</title>
  <updated>2023-05-19T21:56:02.849294+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-09-27 19:50:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Weak block thoughts...</title>
    <updated>2023-05-19T21:56:02.849294+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011198.html" rel="alternate"/>
    <summary>In a bitcoin-dev discussion in 2015, Kalle Rosenbaum asked why miners would publish weak blocks. While faster propagation was one benefit, everyone mining a similar block would enjoy the same advantage. The author then proposed an alternative weak-blockless weak block implementation where every N seconds, every miner sends to every other miner what they're working on. Any block found can be referenced to any of these earlier worklists. It was explained that no one else is harmed by not sending theirs, and the transmission costs would be negligible. However, anyone could DOS attack it unless an identity-based access control system was layered onto it. Weak blocks add hashcash as a rate limiting mechanism to solve this problem - a coordination-free lottery weighed by hash-power decides who can transmit. If someone doesn't participate in the lottery and shares their solutions, there is no major harm for other users as they will choose a somewhat lower weak-block threshold to get updates at the desired rate than they would otherwise. Miners transitively relay other parties' blocks even if they don't help compared to the weak blocks already relayed because relaying helps the network, and if they don't, they may end up orphaned because of propagation delays suffered by their parent block.</summary>
    <published>2015-09-27T19:50:22+00:00</published>
  </entry>
</feed>
