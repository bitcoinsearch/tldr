<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Interrogating a BIP157 server, BIP158 change proposal</title>
  <updated>2023-06-13T16:56:23.090331+00:00</updated>
  <author>
    <name>Tamas Blummer 2019-02-04 20:59:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Interrogating a BIP157 server, BIP158 change proposal</title>
    <updated>2023-06-13T16:56:23.090331+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016650.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Tamas Blummer suggested a change to BIP158 that would allow for better decision making on which filter chain is correct at lower bandwidth use. Currently, a filter that collects input and output scripts is shorter if script re-use is frequent, but this saving is not significant anymore as address reuse is no longer common. Blummer suggests using a spent outpoint filter instead of an input/output script filter since it allows for deciding on coin availability based on immutable store without an updated UTXO store. False positives can be sorted out with a block download, and Murmel implements this in server mode. Blummer proposes changing BIP158 to have a base filter that contains exactly spent outpoints and the scriptPubKey of each output aside from all OP_RETURN output scripts. This solution would simplify interrogation of filter servers and serve wallets well, allowing recognition of payments to their addresses and spends from the wallet. The client could only be forced to download a fraction of the blockchain in addition to the filter header history.</summary>
    <published>2019-02-04T20:59:44+00:00</published>
  </entry>
</feed>
