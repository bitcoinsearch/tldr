<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Safer NOINPUT with output tagging</title>
  <updated>2023-05-20T18:45:05.001124+00:00</updated>
  <author>
    <name>Johnson Lau 2019-02-19 20:36:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Safer NOINPUT with output tagging</title>
    <updated>2023-05-20T18:45:05.001124+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016695.html" rel="alternate"/>
    <summary>The discussion is about implementing a wallet that would never show a second payment to the same address or at least never show it as confirmed, until successfully spent. This feature could be implemented today and could be combined with NOINPUT. However, it is not possible to indicate this requirement in current Bitcoin L1 addresses. It may be possible to tag such outputs as scriptPubKey to encode this requirement into the address. Johnson Lau argued that address reuse can only be prevented at a social level because it is impossible to ban it at the protocol level. He suggested other ways to prevent address reuse, such as publishing the key after the coin is well confirmed. Luke Dashjr replied that people who do not want to use NOINPUT should simply not use it. He believed that trying to implement a nanny in the protocol limits what developers can do who actually want the features.Furthermore, Luke Dashjr pointed out that using NOINPUT for everything, including normal L1 payments, seems to break the situation where a wallet wants to utilize NOINPUT and address reuse will be rejected/ignored by the recipient unconditionally. In conclusion, if we allow NOINPUT unconditionally, we may only create a different proposal to indicate such special requirements.</summary>
    <published>2019-02-19T20:36:51+00:00</published>
  </entry>
</feed>
