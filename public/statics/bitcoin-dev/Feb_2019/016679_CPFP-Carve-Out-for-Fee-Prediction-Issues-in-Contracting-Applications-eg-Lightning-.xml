<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
  <updated>2023-06-13T15:49:13.172272+00:00</updated>
  <author>
    <name>Rusty Russell 2019-02-13 04:22:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
    <updated>2023-06-13T15:49:13.172272+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016679.html" rel="alternate"/>
    <summary>Matt Corallo and Rusty are discussing the use of Bitcoin's Replace-by-fee (RBF) mechanism, which allows a sender to replace an unconfirmed transaction with a new one with a higher fee. Corallo argues that allowing RBF only for transactions near the top of the mempool would not be incentive-compatible, as block time variance could cause these transactions to be delayed. Rusty proposes a simplified version of RBF where transactions can only be replaced if the feerate is higher and the new transaction is in the first 4 MSipa of the mempool while the old one isn't. He suggests that the Lightning close algorithm should be used for this purpose. This method allows someone to send 100k of free tx spam but it's simple. Rusty further suggests marking the unilateral close to say "gonna be pushed" and limiting the child tx weight to 5kSipa in that case.</summary>
    <published>2019-02-13T04:22:39+00:00</published>
  </entry>
</feed>
