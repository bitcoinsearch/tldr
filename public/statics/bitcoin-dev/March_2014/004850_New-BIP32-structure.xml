<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:19:04.290442+00:00</updated>
  <author>
    <name>Jim 2014-03-27 13:58:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:19:04.290442+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004850.html" rel="alternate"/>
    <summary>BIP32 wallet structure is almost standardized, with MultiBit HD supporting 12/18/24 words but suggesting the use of 12. The UI shows a little combo for seed length, with 12 as the default. New addresses are created on the UI in a panel marked "Request" where the user also types in a QR code label and a note to themselves. This gets stored away as a first-class "PaymentRequest," and the UI suggests that each address is used only once. A timestamp is stored (the number of days since the genesis block) to help wallet restore, but that is SPV specific. Based on a question from Thomas Voegtlin, Mike Hearn explains that 2^128 iterations are not brute-forceable today, and will not be for the foreseeable future. An EC pubkey of length n can be forced in approximately 2^(n/2) iterations, which is why unused addresses (160 bits hash) are better protected than already used ones. However, people tend to believe that a public key of size n requires 2^n iterations. This belief might have been spread by this popular image: https://bitcointalk.org/index.php?topic=508880.msg5616146#msg5616146.</summary>
    <published>2014-03-27T13:58:19+00:00</published>
  </entry>
</feed>
