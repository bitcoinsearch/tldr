<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:18:41.763309+00:00</updated>
  <author>
    <name>Thomas Kerin 2014-03-27 13:12:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:18:41.763309+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004842.html" rel="alternate"/>
    <summary>The discussion revolves around the length of seed used in Bitcoin Improvement Proposal 32 (BIP32) and the cost-benefit analysis of using longer seeds. The seed is decoded using any mnemonic implementation and then passed to HMAC-SHA256 to generate the master key, making the length of seed arbitrary. Mike Hearn suggests that 2^128 should not be brute forceable and longer sizes make the seeds harder to write down on paper. However, BIP32 allows for a range of entropy sizes, and they picked 256 bits instead of 128 bits. In another thread, he questions greenaddress.it's use of 24-word seeds instead of the standard 12 words. Thomas Voegtlin raises the issue of gap factor for addresses and proposes getting rid of topology and counting the number of unused addresses since the beginning of the sequence instead of using a "gap limit." He believes this approach is easier to understand and makes things more predictable. He plans to increase the number of available unused addresses to 10 or 20 in the BIP32 version of Electrum.</summary>
    <published>2014-03-27T13:12:07+00:00</published>
  </entry>
</feed>
