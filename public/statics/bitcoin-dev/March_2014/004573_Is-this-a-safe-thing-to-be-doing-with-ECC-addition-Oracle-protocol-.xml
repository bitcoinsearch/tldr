<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Is this a safe thing to be doing with ECC addition? (Oracle protocol)</title>
  <updated>2023-06-08T03:54:38.872433+00:00</updated>
  <author>
    <name>Natanael 2014-03-08 18:15:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Is this a safe thing to be doing with ECC addition? (Oracle protocol)</title>
    <updated>2023-06-08T03:54:38.872433+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004573.html" rel="alternate"/>
    <summary>The conversation thread discusses limitations of ECDSA and explores alternatives for creating a signature with a + b, where P = aG, Q = bG, and R = P + Q = (a+b)G. Secure multi-party computation algorithms can accomplish this, but they are not the fastest and require both parties to be online at the same time. A two-step algorithm that can be performed asynchronously would be preferable. The k^-1 term in ECDSA makes a direct multiparty signature quite difficult, while Schnorr sigs can achieve it. The conversation also touches upon the idea of using a hash of the other party's public key as a means of ensuring the public key is not chosen based on the one presented by the individual.</summary>
    <published>2014-03-08T18:15:47+00:00</published>
  </entry>
</feed>
