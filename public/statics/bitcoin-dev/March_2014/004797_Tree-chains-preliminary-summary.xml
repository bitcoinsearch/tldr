<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Tree-chains preliminary summary</title>
  <updated>2023-06-08T15:42:42.961678+00:00</updated>
  <author>
    <name>Peter Todd 2014-03-25 12:28:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Tree-chains preliminary summary</title>
    <updated>2023-06-08T15:42:42.962678+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004797.html" rel="alternate"/>
    <summary>The issue of scalability in Bitcoin is tackled by proposing the concept of tree-chains which involves splitting the transaction volume so that each miner only keeps up with a portion of it. The problem currently is that moving value between chains requires trusted third parties and merge-mining suffers from 51% attacks if the chain being merge-mined doesn't have a majority of total hashing power. Tree-chains solve this issue by turning the linear blockchain into a tree and splitting up the UTXO set so that individual miners/full nodes only deal with subsets of the tree. This would significantly reduce the bandwidth that any one miner would need to process. Each transaction output would get a unique identifier, say txoutid=H(txout) and we put those outputs in blocks appropriately. A block header data structure is proposed which includes prevBlockHash, blockContentsHash, target, nonce, and time. The PoW is valid if H(blockHeader) is valid.</summary>
    <published>2014-03-25T12:28:51+00:00</published>
  </entry>
</feed>
