<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Best practices for dust remining</title>
  <updated>2023-06-08T17:57:15.675740+00:00</updated>
  <author>
    <name>Justus Ranvier 2014-03-29 19:42:59</name>
  </author>
  <author>
    <name>Mark Friedenbach 2014-03-29 20:10:00</name>
  </author>
  <author>
    <name>Justus Ranvier 2014-03-29 19:42:59</name>
  </author>
  <author>
    <name>Mark Friedenbach 2014-03-29 20:10:00</name>
  </author>
  <author>
    <name>Mark Friedenbach 2014-03-29 20:10:00</name>
  </author>
  <author>
    <name>Justus Ranvier 2014-03-29 19:42:59</name>
  </author>
  <link href="bitcoin-dev/March_2014/004937_Best-practices-for-dust-remining.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004941_Best-practices-for-dust-remining.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004937_Best-practices-for-dust-remining.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004941_Best-practices-for-dust-remining.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004941_Best-practices-for-dust-remining.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004937_Best-practices-for-dust-remining.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Best practices for dust remining</title>
    <updated>2023-06-08T17:57:15.675740+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004937.html" rel="alternate"/>
    <summary>The email thread from March 2014 on the Bitcoin-development mailing list discusses the issue of dust deposits in a multisig wallet. Dust deposits are small amounts of bitcoin that are uneconomical to spend due to high transaction fees. Justus Ranvier asks for advice on how to clean up the unspent transaction output (UTXO) set without compromising the security of the multisig wallet, which may include large values of n, the number of signatures required to authorize a transaction. The discussion centers around using the NONE|ANYONECANPAY transaction type, which would allow dust outputs to be combined into a single transaction and spent by a miner who includes a fee that makes it economically viable. One contributor suggests using Pycoin to manually craft the transaction, while another proposes creating a custom client that automatically handles dust inputs with NONE|ANYONECANPAY transactions. The importance of keeping the UTXO set clean for the health of the Bitcoin network is highlighted, and email encryption is recommended to support online privacy, with a link provided to learn more about its implementation. The context also includes two non-text attachments, a PGP-key, and a PGP-signature.</summary>
    <published>2014-03-29T19:42:59+00:00</published>
  </entry>
</feed>
