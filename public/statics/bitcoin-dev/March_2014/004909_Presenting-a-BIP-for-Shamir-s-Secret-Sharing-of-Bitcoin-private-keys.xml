<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Presenting a BIP for Shamir's Secret Sharing of Bitcoin private keys</title>
  <updated>2023-06-08T17:03:41.816962+00:00</updated>
  <author>
    <name>Watson Ladd 2014-03-29 14:28:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Presenting a BIP for Shamir's Secret Sharing of Bitcoin private keys</title>
    <updated>2023-06-08T17:03:41.816962+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004909.html" rel="alternate"/>
    <summary>In this email conversation between Matt Whitlock and Mike Hearn, they discuss the issue of splitting a private key. Mike states that the problem with splitting a private key is that someone has to get the full private key back at some point, leading to potential security issues. However, Matt argues that a solution to this problem is to use MPC techniques to compute a signature from shares without reconstructing the private key. Mike suggests that splitting a wallet seed may be useful for higher security cold wallets, but an ongoing shared account like a corporate account would be best off using CHECKMULTISIG or the n-of-m ECDSA threshold scheme proposed by Ali et al. Matt explains that multisig does not allow for the topology he described, where the board has seven directors and the majority threshold is four. In this case, the organization needs the consent of six individuals in order to sign a transaction: the president, the CFO, and any four of the board members. Matt suggests that hierarchical threshold topologies or Shamir's Secret Sharing can be used to distribute keys at the second level (and further, if desired) to solve this problem. The conversation ends with a quote from Benjamin Franklin regarding essential liberty and temporary safety.</summary>
    <published>2014-03-29T14:28:20+00:00</published>
  </entry>
</feed>
