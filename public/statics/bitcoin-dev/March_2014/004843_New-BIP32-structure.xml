<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:27:50.547232+00:00</updated>
  <author>
    <name>Mike Hearn 2014-03-27 13:19:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:27:50.547232+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004843.html" rel="alternate"/>
    <summary>The discussion revolves around the use of SHA256 to generate entropy and the length of the seed used. It is noted that SHA256 cannot generate more entropy than what is put in, it only stretches it. If the seed used is only 32 bits long, hashing it wouldn't save one from having every possible private key easily calculated in advance. The length of the seed is discussed as well, with BIP32 allowing for a range of entropy sizes, but they picked 256 bits instead of 128 bits. It is questioned whether longer sizes have a cost in terms of making the seeds harder to write down on paper. Additionally, greenaddress.it was noted to be creating seeds that have 24 words instead of 12, which raises compatibility concerns. Another idea was suggested to get rid of the topology and simply count the number of unused addresses since the beginning of the sequence, instead of using a "gap limit".</summary>
    <published>2014-03-27T13:19:54+00:00</published>
  </entry>
</feed>
