<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Presenting a BIP for Shamir's Secret Sharing of Bitcoin private keys</title>
  <updated>2023-05-19T18:23:14.600478+00:00</updated>
  <author>
    <name>Gregory Maxwell 2014-03-29 17:46:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Presenting a BIP for Shamir's Secret Sharing of Bitcoin private keys</title>
    <updated>2023-05-19T18:23:14.600478+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004925.html" rel="alternate"/>
    <summary>In this context, Matt Whitlock is asking about the compatibility between threshold ECDSA and BIP32. The answer to his question is yes; a threshold ECDSA public key can be generated using BIP32 non-hardened derivation. However, it cannot be generated from separate, precomputed private keys independently as it requires interactive generation. Matt also mentions BIP38 as an example but specifies that it was created without public discussion due to a technical issue. Regarding secret sharing, Matt believes that it should be constructed carefully so that the same polynomials and interpolation code can be used for threshold signatures if they encode compatible data. He suggests that if the tool requires entirely different code than the code for threshold signing, it should be a more generic tool like SSSS.</summary>
    <published>2014-03-29T17:46:41+00:00</published>
  </entry>
</feed>
