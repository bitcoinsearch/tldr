<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP32 structure</title>
  <updated>2023-06-08T16:19:51.869141+00:00</updated>
  <author>
    <name>Allen Piscitello 2014-03-27 17:49:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP32 structure</title>
    <updated>2023-06-08T16:19:51.869141+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004864.html" rel="alternate"/>
    <summary>The discussion centers around avoiding the reuse of keys between coins, while also ensuring that each wallet implementation does not need to know about every coin in order to scan for transactions. Wallet X supports both Doge and Bitcoin, but if they used a shared sequence of keys, Wallet Y, which only supports Bitcoin, would see a gap of 10 addresses and stop scanning. One potential solution is to expect interoperability on a single sequence and provide backups for different wallet implementations, allowing for sharing without reusing keys. The short seed would only be useful for the same wallet, but sharing between wallets would use longer keys. This approach would lead to less errors and more predictable behavior for users. A question was raised regarding the separation of coin types in paths, which some participants did not understand the benefit of.</summary>
    <published>2014-03-27T17:49:44+00:00</published>
  </entry>
</feed>
