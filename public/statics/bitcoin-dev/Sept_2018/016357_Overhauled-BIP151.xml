<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Overhauled BIP151</title>
  <updated>2023-06-13T14:45:20.402691+00:00</updated>
  <author>
    <name>Eric Voskuil 2018-09-04 01:37:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Overhauled BIP151</title>
    <updated>2023-06-13T14:45:20.402691+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016357.html" rel="alternate"/>
    <summary>Jonas Schnelli has proposed an overhaul of the BIP151 specification for Bitcoin, which he believes could be further optimized. A new proposal draft is available on GitHub and includes several changes, such as a pure 32-byte-per-side "pseudorandom" key exchange that happens before anything else, the removal of the multi-message envelope, and the introduction of a NODE_ENCRYPTED service bit. The length of a packet now uses a 3-byte integer with 23 available bits, and there is an introduction of short-command-ID, which results in some v2 messages requiring less bandwidth than v1. Schnelli has also suggested the addition of a hybrid NewHope key exchange to make the encryption PQ safe, using TOR's approach and a straight forward implementation from the NewHope team that has been submitted to NIST PQC project. Furthermore, he proposes optimizing the ChaCha20Poly1305 at openssh AEAD, which uses at least three rounds of ChaCha20, by reducing it to two. The proposal resolves bip151's previously-discussed lack of backward compatibility. The only BIP151 implementation Schnelli is aware of is the one from Armory, but bCoin's implementation has been removed. Schnelli hopes to limit discussion on this thread to further ideas for optimization as well as technical details of the published proposal or its implementation.</summary>
    <published>2018-09-04T01:37:30+00:00</published>
  </entry>
</feed>
