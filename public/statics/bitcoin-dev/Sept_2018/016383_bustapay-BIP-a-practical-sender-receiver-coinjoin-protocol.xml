<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bustapay BIP :: a practical sender/receiver coinjoin protocol</title>
  <updated>2023-06-13T14:28:35.135863+00:00</updated>
  <author>
    <name>Sjors Provoost 2018-09-10 12:30:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bustapay BIP :: a practical sender/receiver coinjoin protocol</title>
    <updated>2023-06-13T14:28:35.135863+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016383.html" rel="alternate"/>
    <summary>The email thread discusses a potential solution called "bustapay" to break the heuristic that assumes all inputs of a transaction are signed by a single party, which undermines Bitcoin's fungibility. The current proposal involves a sender creating a fully valid and signed bitcoin transaction, known as the "template transaction," which is not propagated on the Bitcoin network. The sender then sends the template transaction to the receiver through an HTTP POST with a specified URL. In response, the receiver processes the transaction and returns a partially signed coinjoin back to the sender, which invalidates the original input signatures. The proposed solution raises concerns about malicious parties abusing bustapay to query deposit addresses or double-spend collateral. Additionally, the email thread suggests improvements such as using PSBT, specifying message protocols, and explaining what needs to be verified in the HTTP response.</summary>
    <published>2018-09-10T12:30:46+00:00</published>
  </entry>
</feed>
