<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Schnorr signatures BIP</title>
  <updated>2023-05-20T17:19:23.333623+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-09-11 17:00:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Schnorr signatures BIP</title>
    <updated>2023-05-20T17:19:23.333623+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016386.html" rel="alternate"/>
    <summary>In an email response to feedback on a Medium article, Erik Aronesty clarified that he switched to the platform to edit and improve his work. He also stated that he modified his protocol to address concerns rather than ignore them. However, there has been no response to his post in the Bitcointalk forum. Aronesty claims that an M-1 rogue-key attack would require the attacker to either attack the hash function to produce a predictable R based on a known message or attack the DLP to influence x or k, neither of which gives an advantage to someone with M-1 keys. However, this claim has been disputed as it is possible to construct a 2 of 2 signature by adding keys. An attack could be carried out by computing -P1 + xG to derive a key P2 and then computing P = P1 + P2 to obtain the discrete log of P with respect to G. The same attack applies with interpolation but is more complex. Wagner's algorithm provides a solution to finding a suitable subset. Rogue keys can target both the keys themselves and the nonces, but the musig paper describes a delinearization technique that prevents such attacks without additional interaction or communication. Aronesty has not tested whether the R,s version is susceptible though, but he notes that there is a perfect bijection between the two encodings.</summary>
    <published>2018-09-11T17:00:25+00:00</published>
  </entry>
</feed>
