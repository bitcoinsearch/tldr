<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SIGHASH2 for version 1 witness programme</title>
  <updated>2023-06-13T03:05:25.519505+00:00</updated>
  <author>
    <name>Johnson Lau 2018-08-30 20:38:06</name>
  </author>
  <author>
    <name>Johnson Lau 2018-05-31 18:35:41</name>
  </author>
  <author>
    <name>Christian Decker 2018-09-03 13:53:33</name>
  </author>
  <author>
    <name>Russell O'Connor 2018-06-01 15:03:46</name>
  </author>
  <author>
    <name>Russell O'Connor 2018-06-01 18:15:32</name>
  </author>
  <author>
    <name>Johnson Lau 2018-08-31 07:42:07</name>
  </author>
  <author>
    <name>Johnson Lau 2018-08-30 20:38:06</name>
  </author>
  <author>
    <name>Russell O'Connor 2018-06-01 18:15:32</name>
  </author>
  <author>
    <name>Johnson Lau 2018-05-31 18:35:41</name>
  </author>
  <author>
    <name>Christian Decker 2018-09-03 13:53:33</name>
  </author>
  <author>
    <name>Christian Decker 2018-08-30 20:51:15</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-02 18:23:48</name>
  </author>
  <author>
    <name>Russell O'Connor 2018-06-01 15:03:46</name>
  </author>
  <author>
    <name>Johnson Lau 2018-06-01 17:03:05</name>
  </author>
  <author>
    <name>Russell O'Connor 2018-06-01 18:15:32</name>
  </author>
  <author>
    <name>Christian Decker 2018-09-03 13:53:33</name>
  </author>
  <author>
    <name>Christian Decker 2018-08-30 20:51:15</name>
  </author>
  <author>
    <name>Johnson Lau 2018-08-31 07:42:07</name>
  </author>
  <author>
    <name>Johnson Lau 2018-06-01 17:03:05</name>
  </author>
  <author>
    <name>Johnson Lau 2018-06-01 18:45:57</name>
  </author>
  <author>
    <name>Johnson Lau 2018-08-30 20:38:06</name>
  </author>
  <author>
    <name>Johnson Lau 2018-08-31 07:42:07</name>
  </author>
  <author>
    <name>Johnson Lau 2018-06-01 18:45:57</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-02 18:23:48</name>
  </author>
  <author>
    <name>Johnson Lau 2018-05-31 18:35:41</name>
  </author>
  <author>
    <name>Johnson Lau 2018-06-01 18:45:57</name>
  </author>
  <author>
    <name>Christian Decker 2018-08-30 20:51:15</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-02 18:23:48</name>
  </author>
  <author>
    <name>Russell O'Connor 2018-06-01 15:03:46</name>
  </author>
  <author>
    <name>Johnson Lau 2018-06-01 17:03:05</name>
  </author>
  <link href="bitcoin-dev/Aug_2018/016345_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/016047_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016356_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016053_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016055_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016347_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016345_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016055_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/016047_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016356_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016346_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016188_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016053_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016054_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016055_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016356_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016346_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016347_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016054_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016056_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016345_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016347_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016056_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016188_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/016047_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016056_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016346_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016188_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016053_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016054_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - SIGHASH2 for version 1 witness programme</title>
    <updated>2023-06-13T03:05:25.520483+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-August/016345.html" rel="alternate"/>
    <summary>Bitcoin researcher Johnson Lau proposed a new signature format for Bitcoin transactions called SIGHASH2, which aims to provide more flexibility and security while also being efficient. The proposal includes rules for public key and signature format, with the public key being 33 bytes exactly. The format uses a more efficient DER format that saves block space and includes new hashtype definitions such as SIGHASH2_ALL, SIGHASH2_NONE, and several others.New hash type definitions are introduced based on double SHA256 of the serialization of various transaction elements. Lau also seeks feedback on several questions, including whether NOINPUT should commit to scriptCode and/or scriptPubKey, and whether LASTOUTPUT and DUALOUTPUT should be added. The proposal is part of the larger development of Taproot and Graftroot by Maxwell, and ensures backward compatibility as a soft-fork, with exact deployment details to be determined.Russell O'Connor expressed his preference for a different opcode for CHECKSIGFROMSTACK due to his dislike of opcodes that pop a non-static number of elements off the stack.In various email conversations, Johnson Lau also proposes putting `sigversion` at the beginning instead of the end of the format to allow for pre-computation and optimization. He wonders about the effectiveness of putting a 64-byte constant at the beginning of SHA256 while making the message 64 bytes longer. In another conversation, he questions whether the Double SHA256 algorithm used in Bitcoin should be replaced with a Single SHA256 algorithm. Furthermore, in a conversation between Johnson Lau and Christian Decker, they discuss the NOINPUT opcode and its use with scriptCode and scriptPubKey in segwit outputs. They consider whether there is a useful case for using NOINPUT with scriptCode and/or scriptPubKey committed. One proposal is to sign the type of scriptPubKey in every case, including NOINPUT, but it is unclear what advantage this would provide. They also discuss the proposed DUALOUTPUT and its usefulness for eltoo. Finally, an email conversation between Johnson Lau and Russell O'Connor discusses the use of Double SHA256 in Bitcoin and the possibility of using a Single SHA256 instead.The proposed update defines public key and signature formats as well as new hash type definitions. Lau's proposal falls under BIP YYY, which defines signature checking operations in version 1 witness program. The public key must be exactly 33 bytes and if the first byte of the public key is a 0x02 or 0x03, it must be a compressed public key. The signature format is defined based on its size and the first byte of the public key. The new hash type definitions are based on double SHA256 of the serialization of various transaction elements.The bit values of the hash type denote different values between 0 and 15, with each value corresponding to a different input element. Similarly, the bit values of the hash type also denote different values between 0 and 3, with each value corresponding to a different output element. Examples of equivalent SIGHASH2 values for other SIGHASH schemes are provided, including for Legacy/BIP143 ALL, Legacy/BIP143 SINGLE with matching output, Legacy/BIP143 ANYONECANPAY|ALL, and BIP118 NOINPUT.Christian Decker raised concerns about the proposed SIGHASH_NOINPUT variant, stating that it would compromise the whole idea of BIP 118's floating transactions that can be bound to predecessors. The proposed SIGHASH2 format is a new signature format that saves around 8 bytes compared to the current DER format. The format includes various new hashtype definitions, with the default and most commonly used case being SIGHASH2_ALL. Bit flags are defined in a negative way (e.g. NOLOCKTIME) and certain combinations are missing to save bits for useless flags. Users must not set reserved bits until they are defined by a future proposal, or they may lose money. A sigversion is used to ensure the message digest won't collide with SIGHASH schemes in the past and future.The motivation behind this is to use compact signatures to save space and provide more SIGHASH options for increased flexibility. These new functions are designed to implement MAST and other new script functions within them. Backward compatibility is ensured as this is a soft-fork, with exact deployment details to be determined. The reference implementation can be found on GitHub, and the document is licensed under BSD 3-clause.</summary>
    <published>2018-08-30T20:38:06+00:00</published>
  </entry>
</feed>
