<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Schnorr signatures BIP</title>
  <updated>2023-06-13T03:43:19.350822+00:00</updated>
  <author>
    <name>Erik Aronesty 2018-09-11 16:34:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Schnorr signatures BIP</title>
    <updated>2023-06-13T03:43:19.350822+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016389.html" rel="alternate"/>
    <summary>The author of a Medium article responded to feedback from a Gregory Maxwell on their "M-of-N Bitcoin Multisig Scheme". The author clarified that they switched to the medium article so that they could correct, edit and improve things to make them clearer. The protocol was modified to work better and coding it up in python showed that it's definitely interactive and no different than a "standard shnorr sig" regarding security. No special protocol support is needed over Schnorr signing itself and the e, s version can be made at least as secure as schnorr + DLP. No research has been done on the R,s version. An M-1 rogue-key attack would require an attacker to either attack the hash function to produce a predictable R based on a known message or attack the DLP to influence x or k. Neither attack gives any particular advantage to someone who has M-1 keys. However, the author admitted that they have not tested whether the R,s version is susceptible. In response to the article, Gregory Maxwell suggests that the author may be ignoring feedback they don't like and accepting feedback that sounds favorable. He points out that something "like that" does work and is expressly and explicitly anticipated by the BIP but requires proper delineation (E.g. musig) and interaction. What the author proposed is continually vague. Poelstra suggests a CAS implementation which provides for a method of communicating in both directions which is completely precise.</summary>
    <published>2018-09-11T16:34:11+00:00</published>
  </entry>
</feed>
