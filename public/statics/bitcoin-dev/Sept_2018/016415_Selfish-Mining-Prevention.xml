<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Selfish Mining Prevention</title>
  <updated>2023-06-13T14:40:14.646745+00:00</updated>
  <author>
    <name>Andrew 2018-09-18 20:26:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Selfish Mining Prevention</title>
    <updated>2023-06-13T14:40:14.646745+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016415.html" rel="alternate"/>
    <summary>The conversation on the Bitcoin-dev mailing list centered around the 51% problem and the potential solutions. Zawy raised concerns about Andrew's proposal, which he believed could amplify oscillations. He suggested that an average of 144 past blocks be used to determine h as a way of reducing on-off mining. Zawy also mentioned the possibility of issuing too many or too few coins, depending on how fast h rises in the long term. Another alternative he proposed was to increase difficulty with a similar function instead of reward, which would have the same problems. However, Eric disagreed with Zawy's assessment of merge mining, stating that SHA256 is ASIC friendly, which makes it hard for people computing prime numbers to quickly switch to Bitcoin mining. Zawy clarified that his post was not just addressing selfish mining (33%) or 51% attacks but any types of attacks that try to drive away mining competition, like block withholding attacks, networking attacks, and so on. He also proposed giving users more control over how their fees are spent. A certain portion of fees is put in reserve and gets allocated to miners based on hashrate conditions, and once the "contract" expires, the remaining part goes back to the user for future fee payments. Eric suggested that merge mining could help smooth hashrate so it doesn't depend so much on price, but even without merge mining, it is not so clear that there would be a destructive feedback loop.</summary>
    <published>2018-09-18T20:26:16+00:00</published>
  </entry>
</feed>
