<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SLIP-0039: Shamir's Secret-Sharing for Mnemonic Codes</title>
  <updated>2023-06-13T14:56:28.487389+00:00</updated>
  <author>
    <name>Christopher Allen 2018-09-21 19:29:33</name>
  </author>
  <author>
    <name>Ignacio Berrozpe 2018-09-24 19:49:08</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-26 13:44:16</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-20 16:19:56</name>
  </author>
  <author>
    <name>Christopher Allen 2018-09-21 19:29:33</name>
  </author>
  <author>
    <name>vizeet srivastava 2018-09-22 04:54:24</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-26 13:44:16</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-26 13:44:16</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-20 16:19:56</name>
  </author>
  <author>
    <name>vizeet srivastava 2018-09-22 04:54:24</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-26 12:12:40</name>
  </author>
  <author>
    <name>Ignacio Berrozpe 2018-09-24 19:49:08</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-26 12:12:40</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-26 12:12:40</name>
  </author>
  <author>
    <name>Andrew Kozlik 2018-09-20 16:19:56</name>
  </author>
  <author>
    <name>Christopher Allen 2018-09-21 19:29:33</name>
  </author>
  <author>
    <name>vizeet srivastava 2018-09-22 04:54:24</name>
  </author>
  <author>
    <name>Ignacio Berrozpe 2018-09-24 19:49:08</name>
  </author>
  <link href="bitcoin-dev/Sept_2018/016418_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016427_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016436_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016416_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016418_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016421_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016436_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016436_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016416_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016421_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016435_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016427_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016435_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016435_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016416_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016418_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016421_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016427_SLIP-0039-Shamir-s-Secret-Sharing-for-Mnemonic-Codes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - SLIP-0039: Shamir's Secret-Sharing for Mnemonic Codes</title>
    <updated>2023-06-13T14:56:28.488364+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016418.html" rel="alternate"/>
    <summary>A developer is working on a new specification for splitting BIP-32 master seeds into multiple mnemonics using Shamir's secret sharing scheme. The TREZOR team is behind this initiative, and the proposed solutions are available in the "Master secret derivation functions" section of the document found on Github. This new specification is still a work in progress, and feedback from interested parties is encouraged.Christopher Allen has shown great interest in the proposal and suggests incorporating the Lightning Network community's ability to have a birthday in the seed to make it easier to scan the blockchain for keys. Additionally, he recommends using his BIP-39 2048 word compatible word list filtered for memorability and iambic pentameter poetry. There are concerns regarding the complexity of Shamir Secret Sharing, and some companies and communities such as #RebootingWebOfTrust are interested in standardizing the scheme. Discussions can be held on the mailing list or issues in the SLIPS repo.Ignacio Berrozpe commented on Andrew Kozlik's work regarding the splitting of BIP-32 master seeds into multiple mnemonics using SSS. Berrozpe suggested that hardware wallet providers such as Trezor could offer a more secure alternative to the existing BIP-0039 private key backups of 24 words. Berrozpe posed two questions to Kozlik regarding his proposed work: if he would standardize different topics under the same proposal and if he had thought of a way to deal with existing legacy private keys already encoded into BIP-0039 or stored in other formats and how to migrate them securely into a schema of encoded SSS shares.Kozlik shared the high-level design of the new spec for splitting BIP-32 master seeds into multiple mnemonics using SSS. He requested feedback on the section entitled "Master secret derivation functions," which proposes several different solutions. The document is a work in progress, and technical details have not been fully specified yet but will be completed once the high-level design is settled. Kozlik is interested in receiving input from others in the community.Adversarial problems may arise during recovery of an SSS, such as impersonation of a reassembly request and MitM of a reassembly request, causing potential DOS attacks.</summary>
    <published>2018-09-21T19:29:33+00:00</published>
  </entry>
</feed>
