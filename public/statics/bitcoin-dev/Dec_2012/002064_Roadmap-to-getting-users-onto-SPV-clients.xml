<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Roadmap to getting users onto SPV clients</title>
  <updated>2023-05-19T16:22:59.503730+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-12-04 18:17:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Roadmap to getting users onto SPV clients</title>
    <updated>2023-05-19T16:22:59.503730+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-December/002064.html" rel="alternate"/>
    <summary>In an email conversation, Mike Hearn suggested that Bitcoin-Qt should have an SPV mode. However, this proposal was opposed by another party who believed that if the community leads with client software which is not a full capable node, then Bitcoin would fail to uphold the properties promised by the system. While SPV nodes are useful for getting bitcoin into less capable systems, they are not a general replacement for the software participants in Bitcoin run. The security of the system against theft, denial of service, and non-inflation should be governed by the consensus of all nodes enforcing the rules. If promoting a non-validating node, people will perceive it as costly and unimportant, leading to fragile or nonexistent security, where dishonest or exploitative parties benefit from running all the full nodes. The new user experience is currently bad, but compromising the system should not be justified unless it's bad enough to apply those resources to improve it. There is no set timeline for the adoption of Bitcoin, and slow adoption is beneficial for reducing harm users experience from growing pains. Allowing things to mature at their own pace can preserve the principles that make the system valuable.</summary>
    <published>2012-12-04T18:17:42+00:00</published>
  </entry>
</feed>
