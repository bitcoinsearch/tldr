<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>String-based Hierarchical Deterministic Keys - Alternative to BIP 32</title>
  <updated>2023-05-19T16:25:41.221922+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-12-05 03:50:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>String-based Hierarchical Deterministic Keys - Alternative to BIP 32</title>
    <updated>2023-05-19T16:25:41.221922+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-December/002079.html" rel="alternate"/>
    <summary>In an email exchange, Watson Ladd discussed the implications of being able to spend a coin sent to an address generated by a scheme and explained that it implies being able to spend any coin generated by the same scheme. However, having only the plain ecdsa secret is not enough to spend anything but that specific address. Ladd then went on to discuss the construction of deterministic wallets, suggesting that using a stream cipher to generate random bytes for private keys in a wallet is the easiest method. However, he noted that this method does not add any additional benefits other than distinguishing transactions by sending to unique addresses, which could be done through other means. Ladd also mentioned that this type-1 deterministic wallet construction has no ability to separate address generation from spending, which is important for merchant applications and limited privacy properties of the Bitcoin system. He previously referred to this construction as one of the different derivation schemes in a forum post, and highlighted BIP32's hope to use a single deterministic wallet construction.</summary>
    <published>2012-12-05T03:50:17+00:00</published>
  </entry>
</feed>
