<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment Protocol Proposal: Invoices/Payments/Receipts</title>
  <updated>2023-06-06T08:48:54.590552+00:00</updated>
  <author>
    <name>Mike Hearn 2012-12-20 17:43:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment Protocol Proposal: Invoices/Payments/Receipts</title>
    <updated>2023-06-06T08:48:54.590552+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-December/002107.html" rel="alternate"/>
    <summary>The discussion thread is centered around a proposal to standardize a payment protocol. One participant feels that the proposal is too focused on merchant/customer interactions, whereas they hope in the future mobile wallets will be creating messages for person-to-person payments. Another concern raised was how to handle protobuf messages in a web browser, but it's suggested that it could be converted into whatever form necessary on the server side. Additionally, unsigned payment requests can be sent via email attachment from a secure email provider, and recipients can use their DKIM signature to verify the mail. Refund addresses are discussed as being not as useful as people may think since most refunds BitPay needs to process happen days or even months after the initial purchase. However, it could still be useful for certain types of merchants, and users who don't change their wallet. The current spec doesn't address identifying end-users, as most end-users don't have published keys in any useful form. It's suggested that generating a signed message from an email that's signed by DKIM would be the easiest way for 99% of people. "Check"/"cheque" payments are described as reversible payments, and using merchant_data is seen as a way to avoid needing unique bitcoin addresses for every invoice. While one participant doesn't like embedding things like that, another participant wonders why embedding is worse than the proposed solution. Lastly, there's a suggestion to create a new URI scheme for the payment protocol.</summary>
    <published>2012-12-20T17:43:34+00:00</published>
  </entry>
</feed>
