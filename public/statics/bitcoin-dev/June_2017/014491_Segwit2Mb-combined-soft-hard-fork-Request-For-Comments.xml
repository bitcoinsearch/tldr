<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Segwit2Mb - combined soft/hard fork - Request For Comments</title>
  <updated>2023-06-11T23:14:34.576091+00:00</updated>
  <author>
    <name>Sergio Demian Lerner 2017-06-02 21:51:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Segwit2Mb - combined soft/hard fork - Request For Comments</title>
    <updated>2023-06-11T23:14:34.576091+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-June/014491.html" rel="alternate"/>
    <summary>The Segwit2Mb proposal is an attempt to resolve the conflict between different political positions regarding segwit activation versus an increase of the on-chain blockchain space through a standard block size increase. The proposal is not intended to be the best possible technical solution, but rather to re-unite the Bitcoin community and avoid a cryptocurrency split.This proposal combines segwit with a 2MB block size hard-fork, which would be activated only if segwit activates (95% of miners signaling). The hard-fork is conditional to 95% of the hashing power approving the segwit2mb soft-fork and the segwit soft-fork being activated. Segwit would be activated before 2Mb as versionbits have fixed activation periods and thresholds for all bits. Segwit can be activated without the 2MB hard-fork by signaling bit 1 in nVersion (DEPLOYMENT_SEGWIT). The tentative lock-in and hard-fork dates are: Bit 2 signaling StartTime = 1493424000; // April 29th, 2017 and Bit 2 signaling Timeout = 1503964800; // August 29th, 2017. HardForkTime = 1513209600; // Thu, 14 Dec 2017 00:00:00 GMT.The patch was built by forking the master branch of Bitcoin Core, mixing a few lines of code from Jeff Garzik's BIP102, and defining a second versionbits activation bit (bit 2) for the combined activation. The combined activation of segwit and 2Mb hard-fork nVersion bit is 2(DEPLOYMENT_SEGWIT_AND_2MB_BLOCKS). This means that this proposal doesn't lock in anything.Once segwit is activated, the hard-fork is unavoidable. The simple restriction that transactions cannot be larger than 1Mb has been kept to prevent worsening block verification time because of the O(N^2) hashing problem. Therefore the worse-case of block verification time has only doubled.Active economic nodes will need to upgrade to post 0.12 versions. Upgrade to post 0.12 versions can be used to identify economic active nodes. As Bitcoin Core 0.12 was released on February 2016, the time for 91% to upgrade has been around one year. Therefore we can expect a similar or lower time to upgrade for a hard-fork, after developers have discussed and approved the patch, and it has been reviewed and merged and 95% of the hashing power has signaled for it.The hard-fork activation date needs to be discussed and delayed if there is a real need to. Segwit2mb locks-in, before hard-fork occurs all bitcoin nodes should be updated to a Segwit2Mb enabled node to prevent them from being forked-away in a chain with almost no hashing-power. The proof of concept patch was made for Bitcoin Core but should be easily ported to other Bitcoin protocol implementations that already support versionbits.Lightweight (SPV) wallets should not be affected as they generally do not check the block size. Sergio Demian Lerner, the developer, wants to see the Lightning Network in action this year and use the non-malleability features in segwit, see the community discussing other exciting soft-forks in the scaling roadmap, Schnorr sigs, drivechains and MAST. Contributions to the segwit2mb project are welcomed and awaited. The proposal is only a starting point: community feedback is expected and welcomed.</summary>
    <published>2017-06-02T21:51:45+00:00</published>
  </entry>
</feed>
