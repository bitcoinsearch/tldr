<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: OP_BRIBVERIFY - the op code needed for Blind Merge Mined drivechains</title>
  <updated>2023-06-12T03:05:12.194415+00:00</updated>
  <author>
    <name>Chris Stewart 2017-06-30 14:12:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: OP_BRIBVERIFY - the op code needed for Blind Merge Mined drivechains</title>
    <updated>2023-06-12T03:05:12.194415+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-June/014676.html" rel="alternate"/>
    <summary>In this email thread, two individuals are discussing the details of their proposed sidechain schemes. One individual is concerned that the other's scheme may have a flaw: if an attacker pays a large fee to include an invalid block hash in the Bitcoin mainchain, would this block have to be included in the sidechain's blockchain forever? The other individual responds that, in their scheme, a sidechain cannot reorganize unless the mainchain reorganizes, so this should not be an issue. They also confirm that their proposal does include a single sidechain's hash twice in the block - once in the coinbase and once in the briber's separate transaction.The first individual asks why they need to explicitly commit to the previous block hash, as it seems it is implicitly committed to via SHA256(SHA256()). They suggest that commitment headers should not dictate the strict ordering of blocks on the sidechain. The second individual responds that they agree, and compares this to headers-first sync in Bitcoin Core. The conversation then shifts back to discussing the two sidechain proposals. The first individual suggests that their proposal is more space-efficient, as they only require one hash to be communicated plus an indicator byte and a ~2 byte counter for the ratchet, whereas the other proposal requires two hashes to be communicated. The second individual confirms that their proposal does include the sidechain's hash twice in the block but argues that there is no need for an indicator byte since the "previous block" hash can indicate which sidechain it is extending. They also ask if the ratchet should only appear in the sidechains currently doing some withdrawal.</summary>
    <published>2017-06-30T14:12:30+00:00</published>
  </entry>
</feed>
