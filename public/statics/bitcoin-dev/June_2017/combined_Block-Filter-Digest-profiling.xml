<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Block Filter Digest profiling</title>
  <updated>2023-06-12T01:29:35.386874+00:00</updated>
  <author>
    <name>Karl Johan Alm 2017-06-01 02:11:48</name>
  </author>
  <author>
    <name>Karl Johan Alm 2017-06-01 02:11:48</name>
  </author>
  <author>
    <name>Karl Johan Alm 2017-06-01 02:11:48</name>
  </author>
  <link href="bitcoin-dev/June_2017/014469_Block-Filter-Digest-profiling.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2017/014469_Block-Filter-Digest-profiling.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2017/014469_Block-Filter-Digest-profiling.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Block Filter Digest profiling</title>
    <updated>2023-06-12T01:29:35.386874+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-June/014469.html" rel="alternate"/>
    <summary>The writer of the message has been researching block filter digests in order to optimize bandwidth, space and resource usage. The research report can be found at http://bc-2.jp/bfd-profile.pdf. The author includes a graph showing the results of simulations which demonstrate how bandwidth is used by different wallets when synchronizing once per block, once every 144 blocks or across all wallets.One interesting finding was that allowing digests to contain multiple blocks can result in a higher false positive rate for high block count digests. The author seeks feedback on their approach and assumptions, as well as any potential math mistakes.Additionally, the author questions whether field sizes restricted to 128 MB are appropriate for short-lived fields, or if 256 MB fields might be better for over-filled, high false positive rate fields. They also wonder if serialization is an unnecessary step.Overall, the message presents a thorough exploration of block filter digests and their potential optimization. The author invites comments and suggestions for further improvements.</summary>
    <published>2017-06-01T02:11:48+00:00</published>
  </entry>
</feed>
