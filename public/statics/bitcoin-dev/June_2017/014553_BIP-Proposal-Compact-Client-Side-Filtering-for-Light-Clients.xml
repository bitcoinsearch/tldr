<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Proposal: Compact Client Side Filtering for Light Clients</title>
  <updated>2023-05-20T02:40:42.896213+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2017-06-09 04:47:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Proposal: Compact Client Side Filtering for Light Clients</title>
    <updated>2023-05-20T02:40:42.896213+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-June/014553.html" rel="alternate"/>
    <summary>A proposed new light client BIP for consideration has been introduced by Alex Akselrod and Olaoluwa Osuntokun. Gregory Maxwell identified that the inner loop of construction and lookup are free of non-constant divmod which will result in implementations being needlessly slow. He proposed an approach to fix this issue, which uses the same non-uniformity as mod but needs only a multiply and shift. However, Laolu corrected him and mentioned that they can use the method as described as they need to output 64-bit integers rather than 32-bit integers. They'll need to do a bit of bit twiddling to make it work properly. Laolu stated that if filter commitment is to be considered for a soft-fork in the future, then they should optimize the construction of the filters as much as possible. Laolu made a mistake in the spec regarding N=transactions which was an oversight on his part. He pushed a commit to the bip repo referenced in the OP to fix this error. He also pushed another commit to explicitly take advantage of the fact that P is a power-of-two within the coding loop.</summary>
    <published>2017-06-09T04:47:19+00:00</published>
  </entry>
</feed>
