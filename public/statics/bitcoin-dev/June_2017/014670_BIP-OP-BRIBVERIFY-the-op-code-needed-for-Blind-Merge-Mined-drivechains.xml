<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: OP_BRIBVERIFY - the op code needed for Blind Merge Mined drivechains</title>
  <updated>2023-06-12T02:57:55.421605+00:00</updated>
  <author>
    <name>Paul Sztorc 2017-06-28 16:43:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: OP_BRIBVERIFY - the op code needed for Blind Merge Mined drivechains</title>
    <updated>2023-06-12T02:57:55.421605+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-June/014670.html" rel="alternate"/>
    <summary>Luke Dashjr and Chris Stewart discussed the BRIBEVERIFY opcode, which redefines the NOP4 opcode. If the given critical hash is included at the given vout index in the coinbase transaction, the script evaluates to true, otherwise it fails. This allows sidechains to be merged mined against Bitcoin without burdening Bitcoin miners with extra resource requirements. Luke Dashjr is not convinced that this will be useful for merge mining since the logical outcome is "whoever pays the most gets the next sidechain block." However, BMM exploits this assumption, which is already safe, according to Paul Sztorc's Truthcoin blog (http://www.truthcoin.info/blog/blind-merged-mining/#focus). Luke Dashjr points out that there are different kinds of sidechains like Federated peg, SPV/SNARK peg, and Drivechains, and he questions how BRIBEVERIFY enables any kind of sidechain. However, Chris' email is specific to blind merged mining (BMM), which is a "sidechains+." So, BRIBEVERIFY does not directly enable any sidechains but enables the "+" part.</summary>
    <published>2017-06-28T16:43:22+00:00</published>
  </entry>
</feed>
