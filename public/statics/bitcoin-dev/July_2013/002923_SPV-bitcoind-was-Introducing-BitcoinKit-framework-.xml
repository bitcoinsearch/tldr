<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SPV bitcoind? (was: Introducing BitcoinKit.framework)</title>
  <updated>2023-06-06T20:11:48.808324+00:00</updated>
  <author>
    <name>Michael Gronager 2013-07-17 14:31:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SPV bitcoind? (was: Introducing BitcoinKit.framework)</title>
    <updated>2023-06-06T20:11:48.808324+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002923.html" rel="alternate"/>
    <summary>A proposal for a desktop client by Peter Todd was discussed in an email thread on the Bitcoin-development mailing list. The proposal involves creating a hash of the current set of UTXOs as part of the coinbase, which is already implemented in libcoin, a library based on the satoshi client. One can easily build both a bitcoind and any client using this library. However, there is no scheme to bootstrap the hash of UTXOs in libcoin. Some stub code for a P2pool like mining scheme ensuring several UTXO hashes every 10 minutes is present, but it needs finalization. Wendell responded positively to Todd's proposal and suggested that it could be acceptable to users so long as available disk space is taken into consideration and only a fraction of it is used. Todd further explained that the proposal would allow a node to start with the same security level and usefulness to the network as a Simplified Payment Verification (SPV) node. Gradually, the UTXO set becomes more complete, and over time a higher percentage of all valid transactions can be verified. Additionally, miners can commit a hash of the UTXO set which opens up more options such as relayed transactions including proof that their inputs were valid, allowing all nodes to relay them safely.The email also provides links to the github page for libcoin where one can look at the BlockChain.h/cpp and the MerkleTrie classes to see how the library works. The email ends with an advertisement for AppDynamics' application monitoring tool.</summary>
    <published>2013-07-17T14:31:52+00:00</published>
  </entry>
</feed>
