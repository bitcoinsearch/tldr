<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Opcode whitelist for P2SH?</title>
  <updated>2023-06-07T14:44:13.060890+00:00</updated>
  <author>
    <name>Peter Todd 2013-07-29 07:41:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Opcode whitelist for P2SH?</title>
    <updated>2023-06-07T14:44:13.060890+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/003017.html" rel="alternate"/>
    <summary>Jeff Garzik and Luke-Jr discussed creating a whitelist for specific opcodes that would apply to scripts serialized using P2SH while retaining the existing standard whitelist for scriptPubKeys. John Dillon suggested dropping pay-to-pubkey and pay-to-multisig due to their potential for dumping data in the UTXO set. However, Luke-Jr stated that some specific standard forms would still be necessary for interoperability between wallets without a much smarter solver. Current designs are all based on pattern matching a script template. The discussion included two use-cases: wallets protected by authorization tokens for multi-factor security and allowing funds to be controlled by oracles that attest that events have happened allowing the funds to move. The latter application especially demands a specialized wallet, yet can only possibly work with non-standard script formats. Bringing the issue of wallet standardization into this discussion is silly and premature according to them. Until the txout is spent all *any* wallet sees is a P2SH address with no information as to what scriptPubKey is needed to spend it.</summary>
    <published>2013-07-29T07:41:31+00:00</published>
  </entry>
</feed>
