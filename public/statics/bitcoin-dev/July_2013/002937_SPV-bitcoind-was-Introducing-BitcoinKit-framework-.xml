<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SPV bitcoind? (was: Introducing BitcoinKit.framework)</title>
  <updated>2023-06-06T20:08:55.084942+00:00</updated>
  <author>
    <name>Peter Todd 2013-07-18 13:18:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SPV bitcoind? (was: Introducing BitcoinKit.framework)</title>
    <updated>2023-06-06T20:08:55.084942+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002937.html" rel="alternate"/>
    <summary>In an email thread discussing a more sophisticated approach to answering challenges, Peter Todd suggests using a version of H() that has a computational trap-door and is significantly faster running time than H(). He asks Adam what can be used for H', and suggests creating a set of expensive-to-compute data associated with the node's identity that can be stored once by the node but requires clients to store one set for every unique node they connect to. This can also be used as a proof-of-work to make creating lots of nodes expensive, and can incorporate blockchain data. This method can also make MITM attacks on encrypted P2P connections expensive without any form of authentication.</summary>
    <published>2013-07-18T13:18:36+00:00</published>
  </entry>
</feed>
