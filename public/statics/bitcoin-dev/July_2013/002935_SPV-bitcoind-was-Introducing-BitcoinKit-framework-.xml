<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SPV bitcoind? (was: Introducing BitcoinKit.framework)</title>
  <updated>2023-06-06T20:10:10.764518+00:00</updated>
  <author>
    <name>Michael Gronager 2013-07-18 13:03:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SPV bitcoind? (was: Introducing BitcoinKit.framework)</title>
    <updated>2023-06-06T20:10:10.764518+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002935.html" rel="alternate"/>
    <summary>The email is a response to a query about building Xcode projects with libcoin on Mac OSX. The sender notes that they develop mainly on Mac OSX and build Xcode projects with libcoin daily on both Mac OSX and Linux, but find building on Windows more difficult. The sender suggests that QT is not necessary and can be removed as the qt part got split out. Building clean on Mac requires OpenSSL, BDB, and Boost, which can be installed using homebrew. Latest CMake should also be used and a normal CMake Xcode call: cmake -GXcode should do the job. The sender provides some quick notes for building stuff and recommends trying coinexplorer because it splits out the wallet from the server, making it nice if you want to build a webcoin-like server. The sender does not use the wallet parts from bitcoind personally, so if there are problems with these, the sender will need to have a closer look. Additionally, the current version of libcoin adds a lot of different features and handles things quite differently compared to the first version, which was a direct refactorization of bitcoin. For example, one can look up any unspent output by script (bitcoin address) in milliseconds, which is nice for web wallets. The sender also mentions that BitcoinKit is a separate dynamic library compiled with gcc (or at least llvm pretending to be gcc) due to templates that bitcoind is using. GCC is quite savvy when it comes to templates, but the template stuff from Database.h is quite involved. The sender plans to do a from-scratch recompilation to check if similar issues arise. Lastly, the sender seeks help in creating frameworks on Mac OSX using cmake. It is noted that libcoin by default builds using shared libs, which can be configured from ccmake using the dynamic library option.</summary>
    <published>2013-07-18T13:03:12+00:00</published>
  </entry>
</feed>
