<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Reward for P2SH IsStandard() patch.</title>
  <updated>2023-05-19T17:06:06.135596+00:00</updated>
  <author>
    <name>Pieter Wuille 2013-07-14 19:28:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Reward for P2SH IsStandard() patch.</title>
    <updated>2023-05-19T17:06:06.135596+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002889.html" rel="alternate"/>
    <summary>In a mailing list conversation, John Dillon suggests that the usage of P2SH with an inner OP_CHECKSIG for most addresses would be beneficial long-term, as it saves 1 byte. He suggests that change addresses can have this done first, and that bitcoinj support will help sites such as satoshidice pay to P2SH change. For multisig's P2SH overhead for a 1-of-2 and 2-of-2 and 3-of-3, is 10%, 8.6% and 6.2% respectively, all minor, especially if the blocksize limit is assumed to be raised. Pieter also adds a small comment stating that the current implementation in the reference client uses a custom script encoder for the UTXO database, which stores every (valid) send-to-pubkey as 33 bytes and every send-to-pubkeyhash or send-to-scripthash as 21 bytes. Therefore, for "standard" address payment, there is no storage impact of using P2SH instead.</summary>
    <published>2013-07-14T19:28:39+00:00</published>
  </entry>
</feed>
