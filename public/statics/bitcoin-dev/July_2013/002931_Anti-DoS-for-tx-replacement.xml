<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anti DoS for tx replacement</title>
  <updated>2023-06-06T15:03:31.943233+00:00</updated>
  <author>
    <name>Peter Todd 2013-07-18 11:13:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anti DoS for tx replacement</title>
    <updated>2023-06-06T15:03:31.943233+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002931.html" rel="alternate"/>
    <summary>Jeremy Spilman proposes a negotiation between the user and AP to determine how much to escrow, who pays the fees, and how long the user's funds will be tied if AP doesn't close the channel. The user creates an unsigned TX1 with one or more inputs from their 'listunspent', change going back to the user (if any), and a single output of 'FundAmount' with scriptPubKey of '2 PK1 OP_0 CHECKMULTISIG', which is sent to the AP. It is suggested that with OP_DEPTH, there is no chance of payee vanishing and putting the funds in limbo. The implementation of OP_DEPTH can be done as part of a script v2 using the soft-fork mechanism Peter Todd outlined before when talking about fidelity-bonded ledgers. It's best to do MAST (merklized abstract syntax tree) support at the same time.</summary>
    <published>2013-07-18T11:13:53+00:00</published>
  </entry>
</feed>
