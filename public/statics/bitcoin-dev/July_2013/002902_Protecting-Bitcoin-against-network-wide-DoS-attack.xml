<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Protecting Bitcoin against network-wide DoS attack</title>
  <updated>2023-06-06T19:59:02.705929+00:00</updated>
  <author>
    <name>Peter Todd 2013-07-15 07:32:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Protecting Bitcoin against network-wide DoS attack</title>
    <updated>2023-06-06T19:59:02.705929+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002902.html" rel="alternate"/>
    <summary>In a discussion about anti-denial of service (DoS) measures in Bitcoin, John Dillon suggests that non-SPV-mode clients can require incoming peers to do "useful work". As incoming connection slots get used up, the system kicks off the peers who have relayed the least fee-paying transactions and valid blocks, keeping those who have relayed the most. The usual randomized logic for outgoing peers is used to attempt to preserve the randomized structure of the network. During an attack, new connections are made somewhat easier by the increased number of incoming slots made available as the attacker's connections timeout. Peter Todd proposes adding required per-node accounting once nodes get unique identifiers, which can later be used for permanent node identifiers with SSL and message signing.</summary>
    <published>2013-07-15T07:32:24+00:00</published>
  </entry>
</feed>
