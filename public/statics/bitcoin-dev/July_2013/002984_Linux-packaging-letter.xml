<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Linux packaging letter</title>
  <updated>2023-06-07T14:33:18.927483+00:00</updated>
  <author>
    <name>Scott Howard 2013-07-23 22:02:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Linux packaging letter</title>
    <updated>2023-06-07T14:33:18.927483+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002984.html" rel="alternate"/>
    <summary>In 2013, Mike Hearn composed an open letter to the Linux packaging community in regards to Bitcoin. He asked them not to patch or modify the upstream sources and outlined why Bitcoin is different from other programs. Bitcoin was found to have been split out of the consensus for reasons unknown, but is thought to be related to a patch that uses system leveldb. Debian's bitcoin is maintained on an open and archived mailing list and git repo. It was suggested that if there is a problem or question, getting an answer should be really easy by contacting the relevant team. It would be good to include them in the discussion there. It was stated that if the upstream developers have a consensus that distribution packaging is not in the best interest of the project, then deferment to their judgement and request removal should be followed. It was noted that it appears that the consensus of upstream developers is that any distributed binary should only be linked against libraries that the bitcoin developers have tested and audited since any compatibility bug is a risk to both the user and the network. The response to this was to ask if there is a way to "certify" the Debian libraries. Debian bitcoind/bitcoin-qt runs the compile test during all architectures. MIPS has been failing recently, but no one has looked into it yet. The second argument was that Bitcoin is new technology, so any patches have the ability to harm both the network and user. All patches are public and the patches are only to the build system (except for one adding a debug message). The two solutions presented were that nobody besides the upstream developers compiles and distributes binaries, ever, or that upstream comes up with a system where someone besides them can compile working binaries for distribution. Most likely the best solution is to do (1) until upstream sets up a system to allow (2).</summary>
    <published>2013-07-23T22:02:28+00:00</published>
  </entry>
</feed>
