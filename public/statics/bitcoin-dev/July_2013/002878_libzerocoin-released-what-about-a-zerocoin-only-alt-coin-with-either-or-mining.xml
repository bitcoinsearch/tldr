<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>libzerocoin released, what about a zerocoin-only alt-coin with either-or mining</title>
  <updated>2023-06-06T19:51:23.502871+00:00</updated>
  <author>
    <name>Peter Todd 2013-07-12 13:18:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>libzerocoin released, what about a zerocoin-only alt-coin with either-or mining</title>
    <updated>2023-06-06T19:51:23.502871+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002878.html" rel="alternate"/>
    <summary>In this email thread, Adam Back discusses the possibility of implementing zerocoin on the Bitcoin blockchain. Zerocoin's long transaction verification time has been a concern for some users, but Peter Todd suggests that verification can be parallelized by making each transaction its own block and having it refer to the previous one in history. Verification does not need to be done by every node on every transaction; participants can verify some subset of all transactions and broadcast a proof if they find fraud. The consensus algorithm should be that zerocoins are created by provably sacrificing bitcoins, and whatever chain has the highest total sacrifice wins. Sacrifices in this manner are not proof of stake but instead require users to give up something by publishing information that proves they made the sacrifice. Turning zerocoins back into Bitcoins is just supply and demand: users can sell them, although they may lose a bit since the maximum exchange rate is 1:1. It is possible to implement zerocoin as an extension to the bitcoin client itself.</summary>
    <published>2013-07-12T13:18:15+00:00</published>
  </entry>
</feed>
