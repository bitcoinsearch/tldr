<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PULL] Add scriptPubKey enforced sendescrow and redeemescrow API calls</title>
  <updated>2023-05-26T18:13:31.042934+00:00</updated>
  <author>
    <name>Gavin Andresen 2011-06-22 15:32:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PULL] Add scriptPubKey enforced sendescrow and redeemescrow API calls</title>
    <updated>2023-05-26T18:13:31.042970+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-June/000056.html" rel="alternate"/>
    <summary>Gavin Andresen has suggested a new type of bitcoin payment address that could be generic and contain a version byte, m, n, hash of xor of all n public keys and a checksum. The purpose of this address would be for an "m of n address" where anyone could pay into it but would require m of n signatures to spend. This could be useful in a scenario where an escrow requires m of n signatures to release funds securely. Andresen suggests that the higher level protocol for pay-to-escrow should just involve getting a bitcoin address via https or other secure mechanism. Andresen also questions whether the straightforward "n PUBKEYS m CHECKMULTISIG" transaction type is the right thing to do and suggests that 2 of 2 and 2 of three should have a different transaction type. Spending those transactions would mean putting the m signatures and the n public keys in the TxIn, but sending funds you'd only need the hash of the sum of the public keys.</summary>
    <published>2011-06-22T15:32:49+00:00</published>
  </entry>
</feed>
