<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bumping up against flood control limits again?</title>
  <updated>2023-05-26T18:05:24.375733+00:00</updated>
  <author>
    <name>Jeff Garzik 2011-06-14 17:14:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bumping up against flood control limits again?</title>
    <updated>2023-05-26T18:05:24.375769+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-June/000017.html" rel="alternate"/>
    <summary>Mike Hearn wrote about the issue of block sizes getting larger, causing a scalability limitation in terms of flood control. He proposed raising the limit again or simultaneously lowering the batch size, but noted that both options have drawbacks. The main goal was to prevent an internal buffer memory explosion, and it was suggested that using a pointer into the block chain file would eliminate the outgoing network buffer and allow for sending as much data as desired. However, the current P2P code is not equipped to handle huge amounts of streaming data and needs further development to resolve this issue. Jeff Garzik agreed with Hearn's concerns and acknowledged that the P2P code was not written to handle large downloads.</summary>
    <published>2011-06-14T17:14:21+00:00</published>
  </entry>
</feed>
