<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bustapay BIP :: a practical sender/receiver coinjoin protocol</title>
  <updated>2023-06-13T14:27:21.122860+00:00</updated>
  <author>
    <name>James MacWhyte 2019-01-30 20:58:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bustapay BIP :: a practical sender/receiver coinjoin protocol</title>
    <updated>2023-06-13T14:27:21.122860+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016639.html" rel="alternate"/>
    <summary>In this context, the sender and receiver are discussing a potential attack on a transaction template. The sender suggests that if the sender refuses to sign the final transaction, the receiver can still propagate the template transaction which pays the receiver. However, the only real attack would be if the sender double-spends the template-transaction before it's propagated. While this is not an amazing defense, it is good enough that it is unlikely to get abused. The attacker would only learn a single utxo of the receiver. The receiver understands the weaknesses identified and agrees that there may not be a better solution than what has been proposed. They also realize that implementers who cannot integrate signing and UTXO validation would not be the ones trying to implement this feature.</summary>
    <published>2019-01-30T20:58:03+00:00</published>
  </entry>
</feed>
