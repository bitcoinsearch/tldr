<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Signet</title>
  <updated>2023-06-13T17:37:21.530745+00:00</updated>
  <author>
    <name>David A. Harding 2019-03-10 17:01:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Signet</title>
    <updated>2023-06-13T17:37:21.531743+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016746.html" rel="alternate"/>
    <summary>In a Bitcoin developer mailing list, the idea of moving digital signatures from Bitcoin blocks to help with scaling and reduce block size was discussed. However, it was pointed out that this could make denial-of-service attacks easier as anyone could mine blocks without a signature in them. To address this concern, it was suggested that users could connect their lite clients to trusted nodes on signet to protect against missing/invalid-signature DoS. For those who do not want to run their own trusted signet nodes, there could be a list of signet nodes run by well-known Bitcoiners. Another idea previously proposed was to allow multiple keys to sign blocks, one signing no reorgs and another signing a reorg every few blocks, allowing users to choose their preferred behavior. Trusted signer Alice would only sign extensions of her previous blocks. Trusted signer Bob would periodically extend one of Alice's blocks, either the tip or an earlier block, with a chain that grows faster than Alice's chain, becoming the most-PoW chain. Users who want to ignore reorg problems start their node with -signet -signers="alice", while users who want to consider reorg problems start their node with -signet -signers="alice,bob". There can also be other signing keys for any sort of attack that can be practically executed, allowing clients to test their response to the attack when they want to but also ignore any disruption it would otherwise cause the rest of the time. It was also suggested to put flags in the header versionbits, header nonce, or generation transaction indicating how the block should be classified. Finally, it was proposed to reserve one of the signing keys/classification flags for use by any of Bitcoin's more devious developers in unannounced attacks.</summary>
    <published>2019-03-10T17:01:34+00:00</published>
  </entry>
</feed>
