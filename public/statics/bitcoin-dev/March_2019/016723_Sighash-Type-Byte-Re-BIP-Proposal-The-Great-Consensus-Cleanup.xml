<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Sighash Type Byte; Re: BIP Proposal: The Great Consensus Cleanup</title>
  <updated>2023-05-20T19:58:17.939366+00:00</updated>
  <author>
    <name>Matt Corallo 2019-03-07 19:57:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Sighash Type Byte; Re: BIP Proposal: The Great Consensus Cleanup</title>
    <updated>2023-05-20T19:58:17.939366+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016723.html" rel="alternate"/>
    <summary>The email thread discusses the possibility of disabling certain bits within Bitcoin's sighash type byte to reduce the risk of potential security vulnerabilities. The author proposes that the unused bits within the sighash type byte are not in use and could be soft-forked out without significant impact. They compare it with OP_NOPs, which are similarly not used due to the potential for soft-forking. While the sighash bits are less likely to be soft-forked, the author believes that there is no reason not to remove them from a security standpoint. However, another author, Russell O'Connor, argues that the sighash type byte is a useful place to store a few bits of ancillary data when making signatures. He suggests that some users may have been using it and have unbroadcast transactions in cold storage for UTXOs whose private keys may have been lost, making the disabling of these sighashes risky. O'Connor does not believe that hunches about the lack of risk are enough to put people's funds at risk, especially given the alternative proposal of caching the just-before-the-last-byte sighash midstate that is available.</summary>
    <published>2019-03-07T19:57:29+00:00</published>
  </entry>
</feed>
