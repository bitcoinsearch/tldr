<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pre BIP: Solving for spam and other abuse with an HTLB</title>
  <updated>2023-06-13T17:39:32.678140+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-03-19 00:22:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pre BIP: Solving for spam and other abuse with an HTLB</title>
    <updated>2023-06-13T17:39:32.678140+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016786.html" rel="alternate"/>
    <summary>The email exchange between Alistair Mann and ZmnSCPxj discusses a BIP for "Good Behaviour Bonds". ZmnSCPxj suggests using HTLB over HTLC to improve privacy, but this requires the redundant and [HASHOP] not be standardized. The conversation then shifts to whether Bob could immediately fail the HTLB to Alice's benefit, with Alistair modifying his proof-of-concept code to investigate this change. However, this is at odds with the suggestion to transport HTLBs over HTLCs, which already has a standard template defined by BIP-199. ZmnSCPxj suggests an early return to Alice can be implemented by Bob without any input from her. The overall flow of messages is described, with Alice sending the preimage, [HASHOP], and a new address for "early return", making a transaction to the HTLC pattern. Bob has until the [HASHOP] timeout to decide whether to claim the money or return it to Alice, and if he hasn't decided by the timeout, Alice can get her money back.</summary>
    <published>2019-03-19T00:22:25+00:00</published>
  </entry>
</feed>
