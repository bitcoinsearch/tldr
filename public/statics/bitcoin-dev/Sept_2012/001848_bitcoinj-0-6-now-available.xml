<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bitcoinj 0.6 now available</title>
  <updated>2023-06-06T07:23:31.363153+00:00</updated>
  <author>
    <name>Mike Hearn 2012-09-24 13:35:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bitcoinj 0.6 now available</title>
    <updated>2023-06-06T07:23:31.363153+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001848.html" rel="alternate"/>
    <summary>Bitcoinj, the leading Java implementation of Bitcoin, has announced the release of version 0.6. This release focuses on improved compliance with the protocol, more scalable network handling, and a flexible send API. The update also includes various API improvements and bug fixes. Users are encouraged to upgrade their software to bitcoinj 0.6 as soon as possible to benefit from the fixes. The update includes several improvements such as wallet storing depth and work done for all transactions, ability to handle pubkey-only outputs, improved block chain download handling, and added compatibility with broken URIs generated by blockchain.info. Wallets can now auto-save themselves, taking the hassle of managing wallet persistence away from your app. The network layer was rewritten on top of Netty to be more robust, more scalable, and to remove flakiness in unit tests. Ping/pong protocol is now supported, and various protocol conformance issues and other misc bugs were resolved. WalletTool now has a RAW_DUMP option that prints the raw protocol buffer form as text.API changes include TransactionConfidence.OVERRIDDEN_BY_DOUBLE_SPEND now being called DEAD. PeerGroup.broadcastTransaction now returns a Guava ListenableFuture that completes when the transaction has been heard back from the network, instead of just being written out. Wallet.sendCoins() now returns a SendResult that contains both the transaction and the future returned by PeerGroup.broadcastTransaction(), so it will no longer block. Various send methods on Wallet now take a SendRequest object that lets you customize the created transactions. The methods that let you explicitly set the change address are removed, you should set the changeAddress member of the SendRequest instead.</summary>
    <published>2012-09-24T13:35:42+00:00</published>
  </entry>
</feed>
