<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin Testing Project</title>
  <updated>2023-05-19T15:45:29.462844+00:00</updated>
  <author>
    <name>Matt Corallo 2012-09-27 00:53:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin Testing Project</title>
    <updated>2023-05-19T15:45:29.462844+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001865.html" rel="alternate"/>
    <summary>In this email conversation, Steve and Matt discuss testing strategies for Bitcoin. Matt mentions that they already have Jenkins and pull-tester that test incoming pull requests from Github using basic scripts found on Github. Jenkins currently runs the test script after each new commit to bitcoin. Matt prefers scripting for testing and suggests having more test cases. He also talks about using Jenkins' slave workers to run tests on different operating systems and the need for Windows and Mac testing. They discuss three types of test cases: requirements-based, acceptance-based, and reference implementation. Steve suggests unifying all build testing and test cases into one place and setting up a workflow where people can sponsor or donate to specific campaigns for testing various features. They also talk about the difficulty of GUI testing and Qt's unit test framework. Overall, their discussion revolves around the importance of having a comprehensive and unified testing strategy for Bitcoin.</summary>
    <published>2012-09-27T00:53:26+00:00</published>
  </entry>
</feed>
