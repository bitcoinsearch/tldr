<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scaling by Partitioning</title>
  <updated>2023-06-11T01:55:08.410264+00:00</updated>
  <author>
    <name>Akiva Lichtner 2015-12-09 18:26:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scaling by Partitioning</title>
    <updated>2023-06-11T01:55:08.410264+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011921.html" rel="alternate"/>
    <summary>Akiva Lichtner, a developer with experience in the payment industry and process groups, proposed an idea for scaling Bitcoin by running more than one simultaneous chain. Each chain would defeat double spending on only part of the coin, which would be partitioned by radix or modulus. For example, ten parallel chains could be run to multiply throughput by a factor of ten. Blocks would have to contain the number of the partition they belong to, and miners would need to round-robin through partitions to prevent attackers from having an unfair advantage. However, Loi Luu, one of the authors of the SCP protocol, questioned this proposal and wondered how transactions that spend a "coin" that ends in "1" and creates a new coin that ends in "1" should be processed. He also noted that sharding does not bring any advantages if the amount of data needed to broadcast immediately to the network increases linearly with the number of transactions that the network can process. Luu suggested that their SCP protocol can localize the bandwidth used, but recipients need to verify whether a transaction is double-spending. Despite this tradeoff, he believed that SCP provides potential scalability. Akiva responded, stating that since partitions are completely segregated, there is no need for a node to work on multiple partitions simultaneously. However, for attacks to be defeated, a node needs to be able to work on multiple partitions in turn, not at the same time.</summary>
    <published>2015-12-09T18:26:06+00:00</published>
  </entry>
</feed>
