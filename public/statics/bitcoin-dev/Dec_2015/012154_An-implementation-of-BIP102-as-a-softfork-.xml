<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An implementation of BIP102 as a softfork.</title>
  <updated>2023-06-11T02:49:22.482511+00:00</updated>
  <author>
    <name>Jonathan Toomim 2015-12-30 13:29:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An implementation of BIP102 as a softfork.</title>
    <updated>2023-06-11T02:49:22.482511+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012154.html" rel="alternate"/>
    <summary>A proposal for a softfork implementation of BIP102, which is normally a hardfork, has been presented. The implementation involves constructing post-fork blocks that can be mapped to valid blocks under the pre-fork rules. From the perspective of non-upgraded clients, the block-size limit is circumvented by moving transaction validation data "outside" of the block. From upgraded clients' perspective, the block layout remains unchanged except for a larger 2MB block-size limit and the encoding of the Merkle root of remaining transactions in the coinbase. This implementation is distinct from Segregated Witness and Extension Blocks (both softfork proposals) but could be adapted to other proposals. The proposed implementation is a softfork, meaning that it reduces fraud risk and requires only a miner majority to force miner consensus. However, the code itself has been deemed crufty and hackish, and there are concerns about deploying such a proposal in a future with generalized softforks.</summary>
    <published>2015-12-30T13:29:05+00:00</published>
  </entry>
</feed>
