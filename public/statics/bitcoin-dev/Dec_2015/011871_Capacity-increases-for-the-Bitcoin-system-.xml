<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Capacity increases for the Bitcoin system.</title>
  <updated>2023-05-19T22:37:55.126625+00:00</updated>
  <author>
    <name>Anthony Towns 2015-12-08 06:54:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Capacity increases for the Bitcoin system.</title>
    <updated>2023-05-19T22:37:55.126625+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011871.html" rel="alternate"/>
    <summary>The discussion was about the benefits of having a cost function vs. separate limits for building blocks optimally and computing fees for transactions. One issue raised was how to pay with multiple limits "at play" when it depends on the entire set of other candidate transactions, which is unknown to you. It was suggested that miners agree to order transactions via a cost function without enforcing it at consensus level until a later hard fork that can change the existing limits. There was debate over whether one limit or multiple limits were better, and whether using a single formula with a single limit was actually better than hardcoding separate limits and letting miners/the market work out coefficients. Limiting schemes have pathological cases where someone runs up against the limit in the most costly way, but casual pathological behavior can be suppressed via IsStandard rules without baking them into consensus. The current sigops limiting was described as pretty broken. Overall, there was agreement that segwit is great even if it doesn't buy any improvement in transactions per block, but some wished for the 100%-200% gain they were expecting.</summary>
    <published>2015-12-08T06:54:48+00:00</published>
  </entry>
</feed>
