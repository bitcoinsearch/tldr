<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The increase of max block size should be determined by block height instead of block time</title>
  <updated>2023-06-11T02:23:49.967450+00:00</updated>
  <author>
    <name>Jorge Tim贸n 2015-12-18 20:10:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The increase of max block size should be determined by block height instead of block time</title>
    <updated>2023-06-11T02:23:49.967450+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012032.html" rel="alternate"/>
    <summary>The discussion revolves around determining the max block size in Bitcoin based on either height or time. Jeff Garzik suggests that from a code standpoint, using height is easy and his internal version triggered on block 406,800, increasing by 20 bytes thereafter. However, time was later preferred over height as it was used in years past for other changes; MTP flag day is more stable than block height. Jorge Tim贸n agrees that nHeight is the simplest option but suggests using the median time from the previous block to determine if the next block should start miner confirmation. If bip9 is used for 95% miner upgrade confirmation, Tim贸n proposes always picking a difficulty retarget block. Tim贸n also wants to add an initial height in bip9 for softforks and use the sign bit as the "hardfork bit" that gets activated for the next diff interval after 95% is reached and a hardfork becomes active. Chun Wang suggests that it is easier to implement the max block size as a function of block height instead of time and highlights the difficulty pools face when issuing jobs with unknown max block sizes due to ntime roll.</summary>
    <published>2015-12-18T20:10:02+00:00</published>
  </entry>
</feed>
