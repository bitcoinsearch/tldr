<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Segregated Witness in the context of Scaling Bitcoin</title>
  <updated>2023-05-19T22:50:05.539769+00:00</updated>
  <author>
    <name>Anthony Towns 2015-12-17 10:57:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Segregated Witness in the context of Scaling Bitcoin</title>
    <updated>2023-05-19T22:50:05.539769+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011998.html" rel="alternate"/>
    <summary>The Bitcoin community is discussing proposals to increase the block size limit. The two proposals on the table are Segregated Witness (segwit) with a 1MB virtual block limit, which approximately equals a 2MB actual limit, and BIP102, which proposes a 2MB actual limit. There are several variations of BIP102, including "just 2MB", "2MB now, 4MB in a while, 8MB after that", and "1MB for a while longer, then 2MB, then 4MB". These variations have different dates, whether to smooth out the increases to avoid economic shocks and how to determine activation. According to aj, since the actual limits for both proposals are approximately the same, it is not a determining factor in this discussion.On the cost side, there are differences between the proposals. Worst case block data size is 2x for BIP102, 4x for segwit, worst case sigops is 2x for BIP102 but the same as today for segwit, worst case bytes to hash a block is 4x for BIP102 but the same as today for segwit and the worst case UTXO bloat is 2x for BIP102 but the same as today for segwit. In the expected case, they are the same on all these metrics. However, increasing the limits could easily make attacks more common, especially if it makes them more effective.The primary proposal is to allow the first day a 2MB block may be allowed on June 1st, 2016, whereas the secondary proposal is to release SWSF on the same date. It is suggested that both should be done independently. This will allow evaluating the pros and cons of each implementation separately and on its own merits, rather than arguing against working on one just because you're in favor of doing the other as soon as possible. The worst case scenarios are detailed, including block data size, sigops per block, bytes hashed per block, and UTXO rate of increase. The expected, eventual, and near-term benefits are also compared, including transactions per block, malleability fixes, script improvements, and lightning enablement.</summary>
    <published>2015-12-17T10:57:13+00:00</published>
  </entry>
</feed>
