<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Segregated Witness in the context of Scaling Bitcoin</title>
  <updated>2023-06-11T02:15:09.115683+00:00</updated>
  <author>
    <name>Jeff Garzik 2015-12-17 02:21:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Segregated Witness in the context of Scaling Bitcoin</title>
    <updated>2023-06-11T02:15:09.115683+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011990.html" rel="alternate"/>
    <summary>In a discussion about the deployment of Segregated Witness (SW) versus a hard fork, Matt Corallo disagrees that SW will take longer to deploy than a hard fork. While he does not agree with claims that SW can be deployed significantly faster, he believes that once the code is ready it can be deployed quickly. On the other hand, a hard fork is simpler for the ecosystem to upgrade to but would take 1-2 years after the code is shipped. Corallo is concerned about how quickly people think a hard fork can be rolled out and believes that even with a year between fork-version-release and fork activation, many nodes would be killed. However, some credible folks and estimates feel that a May hard fork is reasonable and doable, and hard forks restore the full trustless nature of the post-hard-fork nodes. Therefore, SW should come via hard fork as it creates a more secure network. Regular hard fork plans proposed in public create a more predictable market and environment for users. Even if SW makes a hard fork unnecessary, it is still responsible to code and communicate the plan for a Fee Event just in case SW uptake and extension block use does not match theoretical projections of SW proponents. Finally, SW does not eliminate Short Term Problem #1, which was mentioned in the original email.</summary>
    <published>2015-12-17T02:21:22+00:00</published>
  </entry>
</feed>
