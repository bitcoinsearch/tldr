<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scaling by Partitioning</title>
  <updated>2023-06-11T01:54:56.833265+00:00</updated>
  <author>
    <name>Akiva Lichtner 2015-12-08 21:41:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scaling by Partitioning</title>
    <updated>2023-06-11T01:54:56.833265+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011905.html" rel="alternate"/>
    <summary>The idea proposed for scaling Bitcoin involves running more than one simultaneous chain, each chain defeating double spending on only part of the coin. The coin would be partitioned by radix or modulus, for example, to multiply throughput by a factor of ten, ten parallel chains could be run, one working on coins that end in "0," one on coins that end in "1," and so on up to "9." The number of chains could increase automatically over time based on the moving average of transaction volume. Payment recipients would need to operate a daemon for each chain, thus guaranteeing no scaling advantage. Blocks would have to contain the number of the partition they belong to, and miners would have to round-robin through partitions so that an attacker would not have an unfair advantage working on just one partition. If the system is modified to scale up, that means the number of transactions is going up. That means the number of miners can also go up, and so will the portion of malicious nodes. Since there are N times more miners, each miner still does the same amount of work. The system scales by partitioning the money supply and increasing the number of miners.</summary>
    <published>2015-12-08T21:41:07+00:00</published>
  </entry>
</feed>
