<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Key.run: BIP-70 Payments and OP_RETURN</title>
  <updated>2023-06-11T01:51:38.012083+00:00</updated>
  <author>
    <name>Toby Padilla 2015-12-08 02:10:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Key.run: BIP-70 Payments and OP_RETURN</title>
    <updated>2023-06-11T01:51:38.012083+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011874.html" rel="alternate"/>
    <summary>Toby has created a new publication platform called key.run, based on Bitcoin. The platform stores BitTorrent info hashes in the blockchain by sending transactions to a "namespace" Bitcoin address. Using SPV (Simple Payment Verification), the key.run db can be reconstituted from the blockchain. It is meant to be an open source and distributed system so that anyone can run the key.run server. Toby's aim was to allow people to use their existing Bitcoin wallets to encode the key.run transactions on the blockchain. This was achieved by building the transactions with the proper OP_RETURN value server-side then passing them to the end user's wallet via BIP-70. However, Bitcoin Core will not allow BIP-70 PaymentDetails to contain outputs with zero value, which causes a problem since key.run transactions work by giving the OP_RETURN outputs a non-zero dust value. Toby believes that OP_RETURN outputs with zero value should be allowed since they are valid transactions. He would like feedback on whether there is an alternative way to do what he proposes or if BIP-70 could be tweaked to allow OP_RETURN outputs with zero value.</summary>
    <published>2015-12-08T02:10:22+00:00</published>
  </entry>
</feed>
