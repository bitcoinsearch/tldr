<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An implementation of BIP102 as a softfork.</title>
  <updated>2023-06-11T02:48:23.416813+00:00</updated>
  <author>
    <name>Peter Todd 2015-12-30 14:19:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An implementation of BIP102 as a softfork.</title>
    <updated>2023-06-11T02:48:23.416813+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012157.html" rel="alternate"/>
    <summary>In a bitcoin-dev thread, Jonathan Toomim expressed his opinion that a proposal being discussed was interesting but hackish and should not be deployed. The proposal involved using multi-levels-deep block-within-a-block structure to create generalized softforks. Another participant in the discussion argued that it is trivial to avoid recursion with planning by incorporating forced fork concept into Bitcoin itself. The participant suggested that instead of committing to just a merkle root, block headers could commit to H(version + digest). In the event of a major change, a soft-fork would change the block validity rules to make version == 0 invalid, and version &gt; 1 blocks would be treated as NOPs. The advantages of this approach include significant safety advantages over hard-forks in almost all situations and relatively simple implementation. However, it could institutionalize 51% attacks and possibly give miners more control over the system politically.</summary>
    <published>2015-12-30T14:19:55+00:00</published>
  </entry>
</feed>
