<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Capacity increases for the Bitcoin system.</title>
  <updated>2023-06-11T01:38:26.626249+00:00</updated>
  <author>
    <name>Jonathan Toomim 2015-12-14 11:21:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Capacity increases for the Bitcoin system.</title>
    <updated>2023-06-11T01:38:26.626249+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011967.html" rel="alternate"/>
    <summary>The discussion in the email thread revolves around the implementation of SegWit (Segregated Witness) and its impact on network relay issues. A server supporting SW may only receive the transaction data without getting the signature data for some transactions, depending on how the relay rules work. This could complicate fast block relay code like IBLTs. The same issue might happen with block relay if we do SW as a soft fork. A solution to this problem is to create an inv for the witness data as a separate object, so that a node could download the block from one peer and the segwit data from another. However, the code would be simpler if implemented as a hard fork. Non-segwit servers and wallets would continue operations as if nothing had occurred. The email also suggests that a soft fork deployment of SegWit will require SPV wallet servers to change their logic, while a hard fork to deploy this non-controversial change is not only cleaner but safer in terms of potential impact on the user experience. The email ends with a suggestion to rename the thread to reflect the focus on SegWit rather than any other mechanism for increasing Bitcoin capacity.</summary>
    <published>2015-12-14T11:21:43+00:00</published>
  </entry>
</feed>
