<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standard BIP Draft: Turing Pseudo-Completeness</title>
  <updated>2023-06-11T01:59:28.195740+00:00</updated>
  <author>
    <name>Jorge Timón 2015-12-12 20:00:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standard BIP Draft: Turing Pseudo-Completeness</title>
    <updated>2023-06-11T01:59:28.195740+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011950.html" rel="alternate"/>
    <summary>In a discussion on Bitcoin-dev mailing list, Luke Durback proposed the idea of voting for something that can't be trusted if done externally and suggested marking BTC as being "For Proposition X" instead. However, he had trouble finding a design that would allow this, and although he initially proposed Turing completeness as a requirement, he later realized it was not necessary. In response to his proposal, Jorge Timón suggested solutions such as time-locking votes or using covenants. Durback also suggested the idea of charging a fee for frequently used complicated scripts and mentioned a decentralized exchange between colored coins that might take a small fee on each trade. However, Timón questioned the need for Turing completeness in these use cases and asked for more concrete examples.</summary>
    <published>2015-12-12T20:00:43+00:00</published>
  </entry>
</feed>
