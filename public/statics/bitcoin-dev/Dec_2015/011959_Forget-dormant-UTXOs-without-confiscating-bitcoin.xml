<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Forget dormant UTXOs without confiscating bitcoin</title>
  <updated>2023-05-19T22:45:54.170202+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-12-13 09:24:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Forget dormant UTXOs without confiscating bitcoin</title>
    <updated>2023-05-19T22:45:54.170202+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011959.html" rel="alternate"/>
    <summary>In a discussion about the merits of archive nodes, Chris Priest argues that lowering the resource requirements to independently enforce the rules of the system is highly virtuous. He notes that not every node is an archive node, and that this is true even now. Another participant in the conversation raises the point that paper wallets don't include UTXO data, which is like adding the ability to partially seed a movie with bittorrent. However, they are not printed now with UTXO data (txid:vout:scriptpubkey:amount), and unless you start and fully synchronize, or are running a full node, you already cannot author a transaction without that data. The only additional information JL2012's scheme would add would be the hash tree fragments to show membership. The same places that currently give you what is required to author a transaction could provide it for you. However, including UTXO data in paper wallets doesn't solve the core problem because someone can still flood the network with lots of UTXOs, as long as they spend them quickly. The system already inhibits the rate new UTXO can be added; but we're still left with the perpetually growing history that contains many lost and otherwise unspendable outputs.</summary>
    <published>2015-12-13T09:24:57+00:00</published>
  </entry>
</feed>
