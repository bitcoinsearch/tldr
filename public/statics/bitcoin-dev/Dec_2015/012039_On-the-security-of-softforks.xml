<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On the security of softforks</title>
  <updated>2023-06-11T02:21:36.936429+00:00</updated>
  <author>
    <name>Chris 2015-12-19 01:36:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On the security of softforks</title>
    <updated>2023-06-11T02:21:36.936429+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012039.html" rel="alternate"/>
    <summary>On December 18, 2015, Pieter Wuille via bitcoin-dev raised concerns about the risk of an old full node wallet accepting a transaction whose coins passed through a script that depends on the softforked rules. However, there is also a scenario where an attacker creates a majority chain that follows the old rules but not the new ones. Non-upgraded nodes would accept a transaction on what they believe to be the consensus chain only to find out that when they try to spend those coins, no one accepts them because they were part of an invalid chain. This could result in dropping non-upgraded nodes to a form of SPV security without their consent.In contrast to a hard fork, where a full node operator can explicitly set their node to accept higher version blocks that it can't validate and get the soft fork functionality back, the soft fork approach forces the changes on users. Additionally, doing forks in this way has the benefit of notifying the user they are accepting unvalidated coins, whereas they won't know that in a soft fork.</summary>
    <published>2015-12-19T01:36:21+00:00</published>
  </entry>
</feed>
