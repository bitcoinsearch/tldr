<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Forget dormant UTXOs without confiscating bitcoin</title>
  <updated>2023-06-11T02:04:56.071702+00:00</updated>
  <author>
    <name>Tier Nolan 2015-12-13 21:36:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Forget dormant UTXOs without confiscating bitcoin</title>
    <updated>2023-06-11T02:04:56.071702+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011965.html" rel="alternate"/>
    <summary>In a Bitcoin-dev discussion, jl2012 elaborates on their proposal to classify full nodes into three types: archive, full UTXO and lite UTXO. However, there is a risk that miners would react by refusing blocks that spend dormant outputs, which could be mitigated by defining lite UTXO nodes as the new consensus rule. There is precedent for disabling rather than fixing security problems, as it is lower risk than finding and deploying a fix. To implement this proposal, information about the TXO state of all outputs in block Y at block (Y + 420000) and whether there was any spending of any block Y UTXOs after block (Y + 420000) is needed. The source transaction is included in block Y, and if the output is spent before Y + 420,000, no further action is taken. Miners will include a commitment to merkle_hash(Block Y's unspent outputs), and it is possible for someone to prove that they did not spend their transaction before Y + 420,000. Miners must remember the "live" UTXO merkle root for every block and commit to updates if there are 20 dormant outputs being spent.</summary>
    <published>2015-12-13T21:36:06+00:00</published>
  </entry>
</feed>
