<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Overview of anti-covert-channel signing techniques</title>
  <updated>2023-06-13T23:53:40.628071+00:00</updated>
  <author>
    <name>Dustin Dettmer 2020-03-23 14:38:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Overview of anti-covert-channel signing techniques</title>
    <updated>2023-06-13T23:53:40.628071+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017704.html" rel="alternate"/>
    <summary>Pieter Wuille suggests in an email that when both hardware and software are compromised, security is impossible since all entities are controlled by the same party. However, he states that splitting the software over two stages can greatly increase security if both hardware and software are compromised. Pieter suggests several ways to achieve this including exporting xpubs before receiving, generating and exporting withdrawal transactions offline, verifying transactions against the same xpubs using external software, and uploading transactions. He believes that these measures mitigate all leak vectors besides k/R hacking and prechosen entropy. Additionally, he provides a link to an external tool he created for this purpose on GitHub called Gatekeeper and expresses interest in adding k commitments if best practices are established for it.</summary>
    <published>2020-03-23T14:38:45+00:00</published>
  </entry>
</feed>
