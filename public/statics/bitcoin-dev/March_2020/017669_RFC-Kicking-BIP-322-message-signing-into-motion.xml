<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: Kicking BIP-322 (message signing) into motion</title>
  <updated>2023-06-13T23:56:07.905966+00:00</updated>
  <author>
    <name>Karl-Johan Alm 2020-03-04 07:03:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: Kicking BIP-322 (message signing) into motion</title>
    <updated>2023-06-13T23:56:07.905966+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017669.html" rel="alternate"/>
    <summary>Karl-Johan Alm noticed a Bitcoin Core pull request that touched everything his BIP-322 pull request touches, which was merged without any thought given to BIP-322 compatibility, despite the fact that the BIP-322 PR being open for twice the time. According to him, people dislike BIP-322 in its current form, which is why the 9-month-old pull request stagnated. Karl-Johan Alm lists several things he can do to make BIP-322 more appealing to people. First, he suggests throwing out the sign message stuff and replacing it entirely with a prove funds system. Second, he suggests using a transaction rather than a new format, making the first input's txid the message hash to ensure the tx cannot be broadcasted. Third, he suggests using Trezor-style. Fourth, he suggests introducing OP_MESSAGEONLY. Finally, he mentions some other solution.</summary>
    <published>2020-03-04T07:03:34+00:00</published>
  </entry>
</feed>
