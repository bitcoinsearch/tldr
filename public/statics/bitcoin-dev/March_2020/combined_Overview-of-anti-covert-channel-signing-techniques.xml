<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Overview of anti-covert-channel signing techniques</title>
  <updated>2023-06-13T23:55:57.565158+00:00</updated>
  <author>
    <name>Tim Ruffing 2020-03-21 13:34:14</name>
  </author>
  <author>
    <name>Russell O'Connor 2020-03-21 16:59:47</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-22 15:38:21</name>
  </author>
  <author>
    <name>Dustin Dettmer 2020-03-23 14:38:45</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-22 09:43:12</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-22 15:38:21</name>
  </author>
  <author>
    <name>Dustin Dettmer 2020-03-24 14:51:32</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-21 13:34:14</name>
  </author>
  <author>
    <name>Russell O'Connor 2020-03-21 16:59:47</name>
  </author>
  <author>
    <name>Marko Bencun 2020-03-21 20:29:26</name>
  </author>
  <author>
    <name>Dustin Dettmer 2020-03-23 14:38:45</name>
  </author>
  <author>
    <name>Dustin Dettmer 2020-03-24 14:51:32</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-03-03 21:35:55</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-03-03 21:35:55</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-24 07:49:38</name>
  </author>
  <author>
    <name>Russell O'Connor 2020-03-21 16:59:47</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-24 07:49:38</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-22 09:43:12</name>
  </author>
  <author>
    <name>Russell O'Connor 2020-03-22 15:30:34</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-24 07:49:38</name>
  </author>
  <author>
    <name>Marko Bencun 2020-03-21 20:29:26</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-22 09:43:12</name>
  </author>
  <author>
    <name>Russell O'Connor 2020-03-22 15:30:34</name>
  </author>
  <author>
    <name>Dustin Dettmer 2020-03-24 14:51:32</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-03-03 21:35:55</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-21 13:34:14</name>
  </author>
  <author>
    <name>Marko Bencun 2020-03-21 20:29:26</name>
  </author>
  <author>
    <name>Russell O'Connor 2020-03-22 15:30:34</name>
  </author>
  <author>
    <name>Dustin Dettmer 2020-03-23 14:38:45</name>
  </author>
  <author>
    <name>Tim Ruffing 2020-03-22 15:38:21</name>
  </author>
  <link href="bitcoin-dev/March_2020/017689_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017691_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017700_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017704_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017696_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017700_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017710_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017689_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017691_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017693_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017704_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017710_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017667_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017667_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017707_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017691_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017707_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017696_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017699_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017707_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017693_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017696_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017699_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017710_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017667_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017689_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017693_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017699_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017704_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2020/017700_Overview-of-anti-covert-channel-signing-techniques.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Overview of anti-covert-channel signing techniques</title>
    <updated>2023-06-13T23:55:57.565158+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017689.html" rel="alternate"/>
    <summary>The email discusses potential security concerns with malicious hardware wallets, specifically regarding key generation and signing. The lack of research on key generation leaves a gap in security protocols. Various signing protocols have been proposed, but they each have their drawbacks. To address security against malicious software with parallel signing sessions, a proposed solution involves using AEAD encryption and authentication. The conversation between Tim Ruffing and Russell O'Connor centers around the security of public keys. While public keys are deterministic and can be spot checked, the use of synthetic nonces in signing protocols makes them inherently non-deterministic and unverifiable. Pieter Wuille suggests that when both hardware and software are compromised, security is impossible since all entities are controlled by the same party. However, he states that splitting the software over two stages can greatly increase security if both hardware and software are compromised.The article provides several references for further reading on the topic, and while hardware wallets can be hacked, this is not necessarily a significant concern. The proposed solutions aim to improve the security of hardware wallets against potential attacks. The focus is on two attack models: MSW (malicious software wallet) and MHW (malicious hardware wallet), and the author assumes Schnorr-like signature protocol. Scheme 1 is a simple protocol, but it is vulnerable to an attack where the entire private key can be leaked undetectably using a single signature. To prevent predictable k values and avoid covert channels, SW needs to provide entropy that is included in the nonce computation. Scheme 2 turns R into a binding commitment to R0 and t, using pay-to-contract or sign-to-contract methods. Another approach to avoid covert channels is Scheme 3, which involves only revealing t after HW has revealed their R0. The article discusses six issues related to the Schnorr signature scheme, which include predictable k, replay attacks, k0 grinding, statefulness, failure bias, and side-channel attacks. Any reasonable solution should protect against some of these issues, but no solution is optimal for all of them. Furthermore, the conversation examines the security property of protecting against a malicious SW with parallel signing sessions. The proposal for synthetic nonces involves two interactions, with statelessness using MAC and verifying e. In the first interaction, SW generates a random t, computes h=H(t), and requests the R0 point that HW would use. In the second interaction, SW computes R=R0+tG, e=H(R,Q,m) and requests a signature. After verification, if all is good, HW computes s=k+H(R,Q,m)d and sends it to SW, which verifies that sG=R+eQ and publishes (R,s) if all is good.One idea proposed is a commit-and-reveal protocol to generate a master public key pair with entropy contributions from both hardware and software. However, this idea comes with other drawbacks, most importantly, it is not compatible with hardened derivation, which creates a new security risk. In conclusion, the emails emphasize the need to address both the pubkey and signature issues. While there are proposed solutions, each has its drawbacks. The hope is to standardize a scheme that balances the benefits of non-determinism with security concerns.</summary>
    <published>2020-03-21T13:34:14+00:00</published>
  </entry>
</feed>
