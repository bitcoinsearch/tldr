<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: Kicking BIP-322 (message signing) into motion</title>
  <updated>2023-06-13T23:56:20.382831+00:00</updated>
  <author>
    <name>Luke Dashjr 2020-03-04 14:35:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: Kicking BIP-322 (message signing) into motion</title>
    <updated>2023-06-13T23:56:20.382831+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017671.html" rel="alternate"/>
    <summary>Karl-Johan Alm has reached out to the bitcoin-dev mailing list regarding his BIP-322 pull request, which aims to improve Bitcoin's signing message functionality. He notes that a similar pull request was merged into Bitcoin Core without considering BIP-322 compatibility, leading Karl-Johan to believe that people dislike BIP-322 in its current form. To make the pull request more appealing, Karl-Johan suggests several potential changes. Firstly, he recommends throwing out the sign message system entirely and replacing it with a proof-of-funds system. Secondly, he suggests using a transaction rather than a new format, with the first input's txid serving as the message hash to ensure the transaction cannot be broadcasted. Thirdly, Karl-Johan proposes adopting the Trezor style, which is already in use but limits generic signing. Fourthly, he recommends introducing OP_MESSAGEONLY to enable messaging purposes without consuming an op_code. Lastly, he invites suggestions for any other solutions. Karl-Johan encourages harsh criticism of these proposals if necessary, so that he can improve or abandon the BIP-322 pull request accordingly.</summary>
    <published>2020-03-04T14:35:16+00:00</published>
  </entry>
</feed>
