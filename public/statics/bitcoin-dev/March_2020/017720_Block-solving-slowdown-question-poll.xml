<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Block solving slowdown question/poll</title>
  <updated>2023-06-14T00:09:45.318159+00:00</updated>
  <author>
    <name>Andrew Cann 2020-03-25 15:23:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Block solving slowdown question/poll</title>
    <updated>2023-06-14T00:09:45.318159+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017720.html" rel="alternate"/>
    <summary>The discussion is focused on a proposal for allowing a non-zero block reward in Bitcoin. The argument against this proposal is that it would break the fundamental meaning of Bitcoin by pushing the number of Bitcoins over 21 million. However, the author argues that all protocol upgrades change the meaning of Bitcoin and there would be enough time to fix any bugs caused by this change. The discussion then moves to the differences between transaction fees and a voting system for determining the cost of security. While transaction fees are only paid when Bitcoins are moved, a voting system would allow everyone to decide what everyone pays to keep the network secure. This avoids the tragedy-of-the-commons problem as votes are weighted by the value of the utxo, so people both vote and pay in proportion to the amount of Bitcoin they're holding. The author wonders if there is a game-theoretic reason why transaction fees can never drop dangerously low in the first place.</summary>
    <published>2020-03-25T15:23:02+00:00</published>
  </entry>
</feed>
