<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: Deterministic Entropy From BIP32 Keychains</title>
  <updated>2023-06-14T00:05:19.238350+00:00</updated>
  <author>
    <name>Christopher Allen 2020-03-21 01:46:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: Deterministic Entropy From BIP32 Keychains</title>
    <updated>2023-06-14T00:05:19.238350+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017688.html" rel="alternate"/>
    <summary>The proposal of turning any child derived xprv key into a new set valid seed words that could be used by a wallet or other devices is considered a hack by Christopher Allen. He suggests finding standard ways to protect the entropy seed, which can create hierarchies of keys using airgap solutions. Currently, Blockchain Commons is working on standards for airgap solutions for storing and signing from offline keys. This technique works fine for online Bitcoin apps that accept child keys in the form of xprv (or equivalents) such as those our FullyNoded2 iOS wallet supports. However, the problem for other wallets is that you can't go from an xprv back to a seed. Christopher Allen prefers starting with finding standards ways to protect the entropy seed that can be then used to create other hierarchies of keys using airgap solutions. The advantage of an entropy seed storage-centered technique is that it can convert that entropy seed into either BIP39 words or any number of SLIP-39 shards. Blockchain Common's doesn't have a full architecture for this yet as they are working on their POC and are seeking suggestions from other wallet vendors. They are currently discussing this on Github issues or a Signal group for the group.</summary>
    <published>2020-03-21T01:46:19+00:00</published>
  </entry>
</feed>
