<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Overview of anti-covert-channel signing techniques</title>
  <updated>2023-06-13T23:53:21.605235+00:00</updated>
  <author>
    <name>Russell O'Connor 2020-03-21 16:59:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Overview of anti-covert-channel signing techniques</title>
    <updated>2023-06-13T23:53:21.605235+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017691.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Tim Ruffing raises concerns about the security of hardware wallets. He notes that while malicious signing is a concern, key generation is also an issue. Specifically, the PRG used to derive the seed from which keys are generated can be manipulated by hardware manufacturers. Ruffing argues that protocols for secure key generation should be deployed before anti-covert channel signing protocols. Another participant in the discussion points out that public keys are deterministic and can be spot checked. However, they note that the synthetic nonces proposed in the original conversation are inherently non-deterministic and cannot be spot checked. They argue that this highlights the importance of anti-covert signing protocols.</summary>
    <published>2020-03-21T16:59:47+00:00</published>
  </entry>
</feed>
