<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Implementing batch processing for -blocknotify</title>
  <updated>2023-06-06T18:12:39.753984+00:00</updated>
  <author>
    <name>Jeff Garzik 2013-05-31 13:05:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Implementing batch processing for -blocknotify</title>
    <updated>2023-06-06T18:12:39.753984+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002682.html" rel="alternate"/>
    <summary>In May 2013, Rune Kj√¶r Svendsen posted a message to the Bitcoin Developers mailing list outlining an issue with the -blocknotify option in bitcoind. He explained that his application was not quick enough to finish its work before a new block was received and processed, resulting in multiple instances of the application running simultaneously. This was considered inefficient in terms of resources. Svendsen discussed the issue with wumpus on the bitcoin-dev forum and together they came up with a solution that could replace -blocknotify or be included in a new function called -batchblocknotify.Other suggestions in the thread included creating a solution that simply queues work if the execution of -blocknotify is too slow. Additionally, it was suggested that modifying pynode to directly listen to a trusted node (bitcoind) and monitor blocks as they arrive and are announced could be another way to implement -blocknotify-like behavior. Jeff Garzik, Senior Software Engineer and open source evangelist at BitPay, Inc., made these suggestions and signed off the post.</summary>
    <published>2013-05-31T13:05:54+00:00</published>
  </entry>
</feed>
