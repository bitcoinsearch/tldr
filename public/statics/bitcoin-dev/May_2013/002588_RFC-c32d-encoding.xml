<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: c32d encoding</title>
  <updated>2023-06-06T16:57:17.184678+00:00</updated>
  <author>
    <name>Luke-Jr 2013-05-15 06:33:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: c32d encoding</title>
    <updated>2023-06-06T16:57:17.184678+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002588.html" rel="alternate"/>
    <summary>A new encoding, which could replace Base58Check in new data is outlined in this post on Bitcointalk.org. The new encoding has several goals in mind, including being impossible to manipulate without completely changing it, having a clearly identifiable prefix regardless of data size, and being cheaper to process with simpler and faster code. Additionally, the fixed-length string should be less ambiguous and more compatible with using seven-segment displays. It is also altcoin-friendly with a 16-bit namespace that can be read without decoding. Since there are fewer digits and more identifying/signature characters, addresses are longer. Several examples of the new encoding are provided, including one for 160 bits of data (current addresses), an ordinary P2SH destination incorporating Greg's "require the hash mid-image to be relayed" concept (256 bits of data), and an alternative for BIP32 extended public and private keys (560 and 552 bits, respectively). Example Python code is included, and the author suggests that a formal BIP may be written if the idea seems useful.</summary>
    <published>2013-05-15T06:33:28+00:00</published>
  </entry>
</feed>
