<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>blind symmetric commitment for stronger byzantine voting resilience (Re: bitcoin taint &amp; unilateral revocability)</title>
  <updated>2023-06-06T17:01:03.069543+00:00</updated>
  <author>
    <name>Adam Back 2013-05-15 10:25:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>blind symmetric commitment for stronger byzantine voting resilience (Re: bitcoin taint &amp; unilateral revocability)</title>
    <updated>2023-06-06T17:01:03.069543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002589.html" rel="alternate"/>
    <summary>In this email, Adam Back proposes a simple, efficient, and easy-to-implement symmetric key commitment that can improve the Byzantine generals problem in Bitcoin. The commitment protocol is zero-trust in the server, but it can still extract service and some guarantees from the server. Dishonest miners/voters can refuse to include transactions in blocks that don't match their policy. However, using the commitment protocol, the sender can send the transaction direct to the receiver over a secure or non-eavesdropped channel with no P2P flood of the transaction. Once the recipient has enough confirmations, he reveals the commitment to the transaction by publishing it. Dishonest voters who apply their policy when they see the reveal triggers it must redo the work of the six-commitments that they computed themselves. The approach is composable, and the network doesn't learn the size of the transaction even though the spend grows each time. Eventually, someone will publish the confirmations to trim the transaction size. The commitment could be described as a blind symmetric commitment.</summary>
    <published>2013-05-15T10:25:09+00:00</published>
  </entry>
</feed>
