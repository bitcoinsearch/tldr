<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>is there a way to do bitcoin-staging?</title>
  <updated>2023-06-06T17:17:07.938072+00:00</updated>
  <author>
    <name>Alan Reiner 2013-05-20 06:34:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>is there a way to do bitcoin-staging?</title>
    <updated>2023-06-06T17:17:07.938072+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002621.html" rel="alternate"/>
    <summary>The email thread discusses the possibility of reorganizing the blockchain data into an authenticated tree indexed by TxOut script, which could prove useful for Bitcoin. The idea is to store the root in the block header and communicate branches of that tree to nodes to prove inclusion of TxOuts for any given script/address. Additionally, the sum of BTC in all nodes below each node can be included, which offers some other benefits. The proposal has epic upside-potential for bitcoin if it works, but also epic failure-potential in terms of feasibility and cost-to-benefit for miners. It's suggested that this be merge-mined on a "meta-chain" first as a non-disruptive way to prove out a particular idea before making a protocol change that significant. Unfortunately, merged mining's feasibility/reliability as an alternative to direct blockchain integration is unclear. There is a discussion about experimenting with new features like committed coins without involving an altcoin in the conventional sense, and without imposing a big testing burden on Bitcoin main, which is a security and testing risk. One suggestion is to merge-mine an alt-coin called bitcoin-staging where the coins are the same coins as on bitcoin, the mining power goes to bitcoin main, but no native mining, and ability to use bitcoins by locking them on bitcoin to move them to bitcoin-staging and vice versa. This would intentionally avoid forking Bitcoin's parameters, nor value, nor mindshare dillution. In this way, something potentially interesting could move forward faster and be less risky to the main Bitcoin network. The proposal could also be a more real-world test-test because some parameters are different on test, and some issues may not manifest without more real activity. Then also Bitcoin could cherry-pick interesting patches and merge them after extensive real-world validation with real-money at stake (by early adopters).</summary>
    <published>2013-05-20T06:34:06+00:00</published>
  </entry>
</feed>
