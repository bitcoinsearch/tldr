<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Service bits for pruned nodes</title>
  <updated>2023-06-06T15:45:13.560883+00:00</updated>
  <author>
    <name>Ricardo Filipe 2013-05-16 11:26:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Service bits for pruned nodes</title>
    <updated>2023-06-06T15:45:13.560883+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002610.html" rel="alternate"/>
    <summary>The Bitcoin network is considering ways to ensure that historic data is properly stored and replicated amongst its nodes. One suggestion has been to allow users to choose which parts of the blockchain to store. However, this could lead to a lack of copies of the historic data. Therefore, the proposal is to randomly store chunks according to available space and give priority to "N most recent" chunks for more replicas in the network. While BitTorrent is not required specifically for distributed hash tables (DHT), it is one implementation that may not be suitable for the Bitcoin network due to publicity concerns. There are many DHT proposals and implementations that could be better suited.It is important to treat "N most recent" specially as it meshes well with demand and is required for reorganization. However, it is necessary to split the data into ranges to ensure that nodes contribute to historic data storage. If nodes have to choose between serving historic data and having 40 GB storage, many will choose not to serve historic data. This could result in too few copies of historic data being available. Simple ranges, possibly quantized to groups of 100 or 1000 blocks, would work fine. This feature does not have to come in the first cut and will require new address messages in any case.</summary>
    <published>2013-05-16T11:26:49+00:00</published>
  </entry>
</feed>
