<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An initial replace-by-fee implementation is now available</title>
  <updated>2023-06-06T16:35:47.097996+00:00</updated>
  <author>
    <name>Peter Todd 2013-05-09 12:20:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An initial replace-by-fee implementation is now available</title>
    <updated>2023-06-06T16:35:47.097996+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002557.html" rel="alternate"/>
    <summary>In this email conversation, Adam Back expresses his concerns about having conflicting double spends floating around with different payee and change addresses all from the same sending address. The response suggests that the blockchain is meant to vote on a true transaction history to achieve consensus and eliminate inconsistencies. The current defacto no replacement is the best Bitcoin currently has; however, it weakens net-splits. Double-spend proof propagation is not available, so the net-split attack is entirely trivial. It is rare for sites to have protection against this, but blockchain.info's shared-send mixer is one of the few exceptions. About privacy, people will inherently disclose which is the change address because they will decrease the change when they increase the fee. There is no coin management in the client, and as far as seen so far, no privacy management of which coins to reduce cross-linking. If people do not want to reveal which is change and which payment, they need to put a big enough fee upfront based on a margin over prevailing fee statistics. Although it is not ideal, it still protects against after-the-fact blockchain analysis. When everyone adds a safety margin, some people can afford to wait, so for them, starting at a low bid and raises it makes a lot of sense. Finally, the problem of stopping both bids from being processed is discussed, and the response asks to think about that problem a bit harder.</summary>
    <published>2013-05-09T12:20:05+00:00</published>
  </entry>
</feed>
