<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>blind symmetric commitment for stronger byzantine voting resilience (Re: bitcoin taint &amp; unilateral revocability)</title>
  <updated>2023-06-06T16:59:15.629037+00:00</updated>
  <author>
    <name>Caleb James DeLisle 2013-05-16 05:52:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>blind symmetric commitment for stronger byzantine voting resilience (Re: bitcoin taint &amp; unilateral revocability)</title>
    <updated>2023-06-06T16:59:15.629037+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002605.html" rel="alternate"/>
    <summary>In an email conversation between developers on the Bitcoin-development mailing list in May 2013, Gregory Maxwell proposed an interesting idea for a coin spending system. The proposal involved creating txouts that pay P2SH addresses with an OP_PUSH nonce in them. The recipient of the coins would be provided with the nonce out of band, and when they spend the coins, they provide the script but not the nonce. This allows the recipient to know which coins they are spending, but not the public. The public can see that there is no double spend because they would see the same script twice. However, the size of the proof grows endlessly as more spent coins cannot be proven to have been spent because the proofs are passed out-of-band. Maxwell suggested that instead of providing privacy, this implementation would make identities public but only once they're buried a bit, bounding the growth of the proofs. He also acknowledged the need to think about possible attacks on the publication for 'tainted' transactions being more or less isomorphic to just refusing to allow spending of the 'tainted' coins in any case. While he admitted that the idea may not be good, it was certainly interesting.</summary>
    <published>2013-05-16T05:52:41+00:00</published>
  </entry>
</feed>
