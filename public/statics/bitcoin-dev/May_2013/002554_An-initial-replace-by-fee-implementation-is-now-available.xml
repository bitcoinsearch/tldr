<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An initial replace-by-fee implementation is now available</title>
  <updated>2023-06-06T16:36:10.027440+00:00</updated>
  <author>
    <name>Adam Back 2013-05-09 11:19:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An initial replace-by-fee implementation is now available</title>
    <updated>2023-06-06T16:36:10.027440+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002554.html" rel="alternate"/>
    <summary>A thread discussing an idea on BitcoinTalk suggests that the approach risks making 0-confirm double-spends easier. However, Adam argues against this notion and points out that validation of accepting a fee revision should include that every aspect of the revision except for the reward must be unchanged; otherwise, the revision is considered invalid and discarded. On May 9th, 2013, John Dillon posted about an initial replace-by-fee implementation and set up a server using those rules on testnet after consultation with affected sites by himself and Peter. This implementation does not include recursive fee evaluation and is therefore vulnerable to DoS attack, so hopefully, that will continue to allow adoption to proceed gradually. The code is on GitHub, and a replace-by-fee server operating on testnet is available at testnet-replace-by-fee.bitcoin.petertodd.org. Regarding the reward, Peter will collect the full amount even though the work is not 100% complete (the mempool aspect) due to his concern about staging an implementation properly, working with vulnerable sites, and overall genuine interest in the actual issues at hand rather than the reward.</summary>
    <published>2013-05-09T11:19:13+00:00</published>
  </entry>
</feed>
