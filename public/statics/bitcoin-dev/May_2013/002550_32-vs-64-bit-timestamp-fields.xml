<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>32 vs 64-bit timestamp fields</title>
  <updated>2023-06-06T16:32:50.280585+00:00</updated>
  <author>
    <name>John Dillon 2013-05-09 02:33:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>32 vs 64-bit timestamp fields</title>
    <updated>2023-06-06T16:32:50.280585+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002550.html" rel="alternate"/>
    <summary>In this email conversation, Peter Todd and another person discuss the intricacies of interpreting timestamps on blocks for timestamping purposes. The discussion focuses on two types of timestamps: proofs that data existed before a time, and proofs that data existed after. The latter is more conservative, so adding two hours to a block's timestamp is not always accurate. Instead, a median time calculation for the blocks around one's timestamp would be better, as it is probabilistic based on the percentage of hashing power the attacker controls.The conversation goes on to suggest that an easy solution would be to have a flag day where blocks after a certain height are considered to have a different epoch from the standard 1970 one when computing their time. This solution works fine and only needs updating every few decades. Furthermore, the discussion also highlights the midstate idea as being clever and suggests discussing it with ASIC manufacturers as a potential firmware or FPGA upgrade in the future.</summary>
    <published>2013-05-09T02:33:11+00:00</published>
  </entry>
</feed>
