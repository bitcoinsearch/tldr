<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>blind symmetric commitment for stronger byzantine voting resilience (Re: bitcoin taint &amp; unilateral revocability)</title>
  <updated>2023-06-06T17:01:24.252958+00:00</updated>
  <author>
    <name>Adam Back 2013-05-15 16:21:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>blind symmetric commitment for stronger byzantine voting resilience (Re: bitcoin taint &amp; unilateral revocability)</title>
    <updated>2023-06-06T17:01:24.252958+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002598.html" rel="alternate"/>
    <summary>Caleb James DeLisle has written about the use of bit-commitments which are based on deterministic one-way functions like SHA1(SHA256(public key)). These bit-commitments help to ensure that there are no non-blind double spends of committed coins, and it is a necessary side effect until commitment reveal. The transactions are identical to bitcoins once revealed. It appears that up to the individual users how long the maximum chain they accept is (the network itself, though ordering the committed spends) can't even tell how long the commitment payment chains are. The committed coins are not linkable to your non-blind coin because you did not reveal your public key in the act of receiving to a coin address. It puts policy control in the user's hands not in the &gt; 50% power quorum. If someone wants to waste fees by sending more spends than there inputs that's up to them. If you want cryptographic anonymity its better to look to zerocoin.</summary>
    <published>2013-05-15T16:21:29+00:00</published>
  </entry>
</feed>
