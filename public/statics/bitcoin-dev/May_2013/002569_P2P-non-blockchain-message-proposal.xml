<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>P2P non-blockchain message proposal</title>
  <updated>2023-06-06T16:52:23.578574+00:00</updated>
  <author>
    <name>John Dillon 2013-05-13 08:19:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>P2P non-blockchain message proposal</title>
    <updated>2023-06-06T16:52:23.578574+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002569.html" rel="alternate"/>
    <summary>A potential system for generalized P2P flood-fill messaging is proposed in this message. The author suggests prioritizing traffic with a simple "allocated bandwidth" scheme and using a priority scheme for retransmission. Priority is determined by utilizing Peter's Coinbase TxOut Hashcash, or PowPos (proof-of-work proof-of-sacrifice) which allows for messages to be relayed based on a per KB cost. PayWords are suggested to amortize the initial cost of transmitting the PowPos proof, which should be stored on disk like the UTXO set. Each flood fill message needs a header with the sacrifice proof, either a full PowPos, or a PayWord linked to a PowPos, followed by a type disambiguator and data payload. The author mentions trust-free mixing briefly, but notes that negotiating transaction fees could be tricky without revealing inputs. Anti-DoS protection on the P2P flood-fill network for non-transaction messages is mentioned as well, and the author suggests ranking nodes based on genuine Bitcoin or sacrifice activity they are broadcasting. However, there are concerns about reuse of PowPos by peers who control all of a user's peers using the protocol.</summary>
    <published>2013-05-13T08:19:03+00:00</published>
  </entry>
</feed>
