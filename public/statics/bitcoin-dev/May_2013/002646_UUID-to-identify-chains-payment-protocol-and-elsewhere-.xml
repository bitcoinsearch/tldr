<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>UUID to identify chains (payment protocol and elsewhere)</title>
  <updated>2023-06-06T17:36:48.956346+00:00</updated>
  <author>
    <name>Melvin Carvalho 2013-05-22 10:27:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>UUID to identify chains (payment protocol and elsewhere)</title>
    <updated>2023-06-06T17:36:48.956346+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002646.html" rel="alternate"/>
    <summary>In May 2013, Mark Friedenbach proposed a standard mechanism for identifying chains that avoids maintaining a standard registry of string-to-chain mappings. He suggested that any chain can be uniquely identified by its genesis block with the use of UUIDs. He recommended using Version 4 (random) UUIDs with the random bits extracted from the double-SHA256 hash of the genesis block of the chain. The Python code he provided illustrates how to construct the chain identifier from the serialized genesis block. Some example chain identifiers were also given, such as mainnet and testnet3. Friedenbach argued that namespaces become more important as registries grow and that in Bitcoin's quest for decentralization, there is a question of who maintains the registry. He suggested that an out of band algo/hash could work so long as there was a one-to-one relationship between the described object and the UUID. In this case, the genesis block may not uniquely identify a coin. To namespace a registry on the internet, he recommended allowing it to be a URI, such as org.bitcoin.*, which is cleaner and can be dereferencable and both human and machine readable.</summary>
    <published>2013-05-22T10:27:53+00:00</published>
  </entry>
</feed>
