<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SPV clients and relaying double spends</title>
  <updated>2023-06-09T02:44:22.344132+00:00</updated>
  <author>
    <name>Matt Whitlock 2014-09-26 02:07:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SPV clients and relaying double spends</title>
    <updated>2023-06-09T02:44:22.344132+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-September/006646.html" rel="alternate"/>
    <summary>In 2014, Aaron Voisine discussed the idea of nodes relaying double-spends to alert the network about such attempts. This would be particularly important as more users began to use Simplified Payment Verification (SPV) wallets, which judge how likely a transaction is to be confirmed based on its propagation across the network. However, Voisine raised concerns about the possibility of sybil attacks and suggested that nodes should also send BIP61 reject messages to indicate which transactions they believe to be invalid. While this approach may not completely prevent 0 confirmation double spend attacks, it increases the cost of performing such attacks on an SPV client. As such, it could serve as a useful deterrent against attackers broadcasting multiple spends of the same output(s) and overwhelming nodes with slower connections. By only propagating double-spend alerts once, rather than relaying actual transactions after the first, the risk of network overload could be reduced.</summary>
    <published>2014-09-26T02:07:28+00:00</published>
  </entry>
</feed>
