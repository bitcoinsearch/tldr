<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SPV clients and relaying double spends</title>
  <updated>2023-06-09T02:44:11.220936+00:00</updated>
  <author>
    <name>Christophe Biocca 2014-09-26 03:34:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SPV clients and relaying double spends</title>
    <updated>2023-06-09T02:44:11.220936+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-September/006651.html" rel="alternate"/>
    <summary>The discussion about nodes propagating double-spends has been ongoing, with some code being merged into master before being reverted. A better strategy to prevent flooding the network would be to propagate a double-spend alert after the first attempt to spend the same output(s), but not relay any further transactions spending that same output. This would help SPV clients judge how likely a transaction is to be confirmed and increase the cost of performing a 0 confirmation double spend attack on an SPV client. It has been suggested that nodes should also send BIP61 reject messages or something along those lines to indicate which transactions they believe to be invalid, but are still relaying anyway. This technique would be subject to sybil attacks, as is monitoring propagation. The discussion has been taking place on the Bitcoin-development mailing list and can be found in the links provided.</summary>
    <published>2014-09-26T03:34:50+00:00</published>
  </entry>
</feed>
