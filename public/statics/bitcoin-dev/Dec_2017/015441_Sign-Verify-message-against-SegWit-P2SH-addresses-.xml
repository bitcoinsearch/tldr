<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Sign / Verify message against SegWit P2SH addresses.</title>
  <updated>2023-06-12T23:00:38.034126+00:00</updated>
  <author>
    <name>Mark Friedenbach 2017-12-19 21:58:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Sign / Verify message against SegWit P2SH addresses.</title>
    <updated>2023-06-12T23:00:38.034126+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015441.html" rel="alternate"/>
    <summary>A recent post on the Bitcoin-dev mailing list discusses the possibility of improving message signing protocols to support non-P2PKH scripts. The author suggests using an actual bitcoin transaction with inputs that have the script being signed and using the salted hash of the message being signed as the FORKID for spin-off with replay protection. This approach would enable signing by any infrastructure out there, including hardware wallets and 2FA signing services, that have enabled support for FORKID signing. It also generalizes the message signing to allow multi-party signing setups and unifies a single approach for message signing, proof of reserve, and off-chain colored coins. Although there's an issue of size efficiency, a BIP can specify a template for constructing the pseudo-transaction and its inputs from a raw script for the single-party message signing application. Finally, the discussion thread asks if anyone is writing a BIP for Sign/Verify message against a SegWit address, which remains unanswered.</summary>
    <published>2017-12-19T21:58:40+00:00</published>
  </entry>
</feed>
