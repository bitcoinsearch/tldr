<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scalable Semi-Trustless Asset Transfer via Single-Use-Seals and Proof-of-Publication</title>
  <updated>2023-06-12T22:37:50.609582+00:00</updated>
  <author>
    <name>Peter Todd 2017-12-11 23:16:19</name>
  </author>
  <author>
    <name>Peter Todd 2017-12-11 23:16:19</name>
  </author>
  <author>
    <name>Pulat Yunusov 2017-12-11 22:23:21</name>
  </author>
  <author>
    <name>Pulat Yunusov 2017-12-11 22:23:21</name>
  </author>
  <author>
    <name>Peter Todd 2017-12-11 23:16:19</name>
  </author>
  <author>
    <name>Peter Todd 2017-12-05 10:15:51</name>
  </author>
  <author>
    <name>Peter Todd 2017-12-05 10:15:51</name>
  </author>
  <author>
    <name>Peter Todd 2017-12-05 10:15:51</name>
  </author>
  <author>
    <name>Pulat Yunusov 2017-12-11 22:23:21</name>
  </author>
  <link href="bitcoin-dev/Dec_2017/015391_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015391_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015388_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015388_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015391_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015350_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015350_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015350_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015388_Scalable-Semi-Trustless-Asset-Transfer-via-Single-Use-Seals-and-Proof-of-Publication.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scalable Semi-Trustless Asset Transfer via Single-Use-Seals and Proof-of-Publication</title>
    <updated>2023-06-12T22:37:50.609582+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015391.html" rel="alternate"/>
    <summary>Peter Todd, a Bitcoin developer, proposed a system for secure token transfers using single-use-seals. The seals are generated by a trusted notary and witnesses are cryptographic signatures produced by the notary. The system can be used for both indivisible and divisible asset transfers. For the latter, a spend commitment is made to a set of outputs, and a split commitment is made to a set of zero or seal/value tuples. To achieve scalability, a proof-of-publication ledger can be used, where consensus over the state of the ledger is achieved with a second single-use-seal implementation. In a Bitcoin development email thread, Peter Todd discusses centralization versus decentralization in proof-of-publication (PoP) sidechains. He explains that the centralized version of PoP is easier to maintain and scale as one can simply buy more hardware and distribute the key space over multiple shards. However, this simple architecture only works with trust, which raises questions about how to ensure that valid trees are built and results are distributed without trust. Peter Todd's prior work on Treechains attempts to address this issue, but it remains an orders of magnitude more difficult problem.The context also discusses the size of data required to prove ownership status of a token in a trustless manner. It explains that the merkle path down k/v tree, consisting of 32 levels with 32 bytes per level, along with key/value consisting of 32 bytes predicate hash and 1KB script sig, amounts to approximately 3KB per ledger. The update rate is estimated at 356 days per year with 12 updates per day, resulting in 13MB of data per year. However, these numbers can be reduced by only publishing valid signatures or assuming no constant attacks. With optimizations, the marginal cost per token after the first one is just 1KB/ledger update, or 4.4MB/year.</summary>
    <published>2017-12-11T23:16:19+00:00</published>
  </entry>
</feed>
