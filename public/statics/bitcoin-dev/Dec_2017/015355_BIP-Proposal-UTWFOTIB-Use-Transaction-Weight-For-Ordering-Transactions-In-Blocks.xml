<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BIP Proposal: UTWFOTIB - Use Transaction Weight For Ordering Transactions In Blocks</title>
  <updated>2023-05-20T04:30:55.794009+00:00</updated>
  <author>
    <name>Damian Williamson 2017-12-03 04:07:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BIP Proposal: UTWFOTIB - Use Transaction Weight For Ordering Transactions In Blocks</title>
    <updated>2023-05-20T04:30:55.794009+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015355.html" rel="alternate"/>
    <summary>The proposal, titled 'UTWFOTIB', suggests using a transaction weight for ordering transactions in blocks. The current bandwidth limit is a limiting factor for both miners and consumers, who want to maximize revenue from fees and transaction reliability respectively. The proposed solution is to provide each transaction with a transaction weight, determined by the fee paid and time waiting in the transaction pool, out to a certain number of days (possibly 30). This transaction weight will serve as the likelihood of a transaction being included in the current block, which will have a target size determined by the protocol. The curves used for the weight of transactions would have to be appropriate. The benefits of this proposal include maximizing transaction reliability, possibility for consumer and business uptake, total fees paid per block, and market-determined fee paid for transaction priority. Additionally, fee recommendations work all the way out to 30 days or greater, and provides additional block entropy and greater security since there is less probability of predicting the next block. However, the proposal must first be programmed and any potential cons are yet to be identified.The proposed operation includes the protocol determining the target block size, assigning each transaction in the pool a transaction weight based on fee and time waiting in the transaction pool, selecting transactions to include in the current block using transaction weight as the likelihood of inclusion until the target block size is met, and solving the block.</summary>
    <published>2017-12-03T04:07:16+00:00</published>
  </entry>
</feed>
