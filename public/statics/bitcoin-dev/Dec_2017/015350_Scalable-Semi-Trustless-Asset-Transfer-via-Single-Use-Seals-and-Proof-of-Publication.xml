<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scalable Semi-Trustless Asset Transfer via Single-Use-Seals and Proof-of-Publication</title>
  <updated>2023-06-12T22:37:33.438600+00:00</updated>
  <author>
    <name>Peter Todd 2017-12-05 10:15:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scalable Semi-Trustless Asset Transfer via Single-Use-Seals and Proof-of-Publication</title>
    <updated>2023-06-12T22:37:33.438600+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015350.html" rel="alternate"/>
    <summary>The author presents a worked example of a scalable, trust-minimized system using a proof-of-publication ledger and single-use-seals to enable secure transfer of indivisible and divisible assets. The implementation supports two fundamental operations: Close and Verify. A secure single-use-seal protocol prevents double-spending by prohibiting the closure of a single seal over multiple messages. To achieve scalability, instead of each ledger entry consisting of an unstructured message, the protocol commits to a merkelized key:value tree. Each token is identified by its genesis seal and the most recent seal is closed over a message committing to a new seal. An actual implementation can usefully use a merkle-sum-tree to commit to the split set, allowing outputs to be proven to the recipient by giving only a single branch of the tree, with other outputs pruned. The marginal cost per token after the first one is just 1KB/ledger update, 4.4MB/year.</summary>
    <published>2017-12-05T10:15:51+00:00</published>
  </entry>
</feed>
