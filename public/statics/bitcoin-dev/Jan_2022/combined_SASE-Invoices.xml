<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SASE Invoices</title>
  <updated>2023-06-15T15:17:16.849710+00:00</updated>
  <author>
    <name>Jeremy 2022-01-18 01:48:38</name>
  </author>
  <author>
    <name>Jeremy 2022-01-18 01:48:38</name>
  </author>
  <author>
    <name>Jeremy 2022-01-18 01:48:38</name>
  </author>
  <link href="bitcoin-dev/Jan_2022/019766_SASE-Invoices.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019766_SASE-Invoices.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019766_SASE-Invoices.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - SASE Invoices</title>
    <updated>2023-06-15T15:17:16.849710+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019766.html" rel="alternate"/>
    <summary>Casey R suggested creating a new invoice, called SASE (Self Addressed Stamped Envelope), to simplify mail processing and address infrastructural problems with Bitcoin payments. The SASE would include an address, a signature covering that address, and metadata required for the payment to be considered valid. This invoice could also specify certain parameters like allowable amounts, expiration dates, and usage rights. Businesses could give users unique codes to bind the address for their own use and prevent transferability of usage rights. If no signature could be produced, a NUMS point derived from the hash-to-curve of the SASE Invoice policy could be used. SASE Invoice standards could combat address reuse and cover things like EPKs and derivation paths. Previously, BIP-0070 was designed in a similar problem space, but SASE invoices would focus on generating fixed payment codes instead of initiating an online protocol or complicated handshaking. There is also a single-use SASE option where existing UTXOs can be used to pay for a specific transaction without the ability to reuse it.</summary>
    <published>2022-01-18T01:48:38+00:00</published>
  </entry>
</feed>
