<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>TXHASH + CHECKSIGFROMSTACKVERIFY in lieu of CTV and ANYPREVOUT</title>
  <updated>2023-06-15T15:40:22.735809+00:00</updated>
  <author>
    <name>Russell O'Connor 2022-01-28 13:56:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>TXHASH + CHECKSIGFROMSTACKVERIFY in lieu of CTV and ANYPREVOUT</title>
    <updated>2023-06-15T15:40:22.735809+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019823.html" rel="alternate"/>
    <summary>The discussion in this email thread revolves around the proposal of an alternative way to extend the set of txflags for TXHASH. The difficulty with upgrading TXHASH can be mitigated by designing a robust set of TXHASH flags from the start. The proposal includes having bits to control relative or absolute input/output indexes, which users could assemble into a single signed message. The idea of baking TXHASH as a multibyte opcode is also suggested. The benefits of this approach include the ability to verify signatures on arbitrary messages signed by oracles for oracle applications using CHECKSIGFROMSTACKVERIFY. However, it is noted that the existing primitives in Bitcoin Script do not lend themselves to being composed at all and there is a need for CAT and friends to allow for more interesting programs in Bitcoin Script.</summary>
    <published>2022-01-28T13:56:25+00:00</published>
  </entry>
</feed>
