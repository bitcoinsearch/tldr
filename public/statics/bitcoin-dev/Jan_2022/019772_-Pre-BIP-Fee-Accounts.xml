<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-15T03:53:28.451587+00:00</updated>
  <author>
    <name>Jeremy 2022-01-18 17:43:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-15T03:53:28.451587+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019772.html" rel="alternate"/>
    <summary>In a recent post on the bitcoin-dev mailing list, Jeremy Rubin proposed an alternative to the current method of paying transaction fees in Bitcoin. The proposal involves establishing an account system as an "extension block" that allows fees to be paid separately from transactions. Under the proposed system, a special output type called a "fee account" would be defined, and deposits to these outputs would be stored in a separate UTXO database. Fee accounts would be allowed to sign two kinds of transactions: one for specifying a fee amount and a TXID or outpoint, and another for withdrawing funds. These transactions would be committed in an extension block merkle tree. The proposal addresses issues with current transaction design in the context of long-lived smart contracts and fee bumping stuck transactions. The proposed system could also improve privacy with modifications similar to Tornado.cash. While the proposal could be implemented as a federated network that bribes miners, such an approach would introduce a centralizing layer interfering with normal mining.</summary>
    <published>2022-01-18T17:43:07+00:00</published>
  </entry>
</feed>
