<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covenants and capabilities in the UTXO model</title>
  <updated>2023-06-15T03:46:35.250599+00:00</updated>
  <author>
    <name>Billy Tetrud 2022-01-21 17:32:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covenants and capabilities in the UTXO model</title>
    <updated>2023-06-15T03:46:35.250599+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019801.html" rel="alternate"/>
    <summary>The discussion revolves around the concept of 'parent' in Bitcoin, which is used to define a relationship where an input has constraints applied to an output. The author questions why one would want to verify the secure hash chain from its parent to itself as it could lead to bricking funds that came from the wrong parent. Instead, the author suggests using the reverse mechanism, i.e., defining the transaction creating such a child as invalid unless the child matches the covenant in the parent. However, this can cause transactions to become invalid, leading to problems during reorgs. The author tries to understand why valid transactions becoming invalid is seen as a problem but is unable to find much information about it. The author also refers to a proposal where there is a quote from Peter Todd, who said that he didn't think this was a valid concern. However, in the current context, Todd points out that allowing references to old blocks would pull in all this old block data into the UTXO set and could cause issues. Todd also highlights that the rule of "you can only point back so far" can lead to transactions becoming invalid, creating problems during reorgs with transactions being unable to be included in a new change.</summary>
    <published>2022-01-21T17:32:27+00:00</published>
  </entry>
</feed>
