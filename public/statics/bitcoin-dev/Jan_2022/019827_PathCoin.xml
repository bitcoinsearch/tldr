<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PathCoin</title>
  <updated>2023-06-15T15:27:44.082674+00:00</updated>
  <author>
    <name>Billy Tetrud 2022-01-28 15:27:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PathCoin</title>
    <updated>2023-06-15T15:27:44.082674+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019827.html" rel="alternate"/>
    <summary>AdamISZ, a contributor to the bitcoin-dev mailing list, shared an idea for creating a toy version of sending a coin like email. He suggested that using signature adaptors and CTV or a similar covenant, a fully trustless transfer of control of a UTXO from one party to another could be created with no interaction with the rest of the group at the time of transfer. However, limitations are extreme and require extensive setup. In the discussion, AdamISZ mentioned the Sabu protocol that had similar goals but was deemed unstable due to game theory and its use of penalties via burn. The penalty via burn to unspendable output is still unstable as there is no incentive for the honest party to punish if the penalty tx destroys all the money. The possibility of bribes also complicates the effectiveness of the system. On the other hand, Lightning has a more stable model in LN-Penalty, as long as 'claiming the whole channel capacity' is enough to be larger than what is stolen. AdamISZ specifically looks for a trustless system with finesse and claims that PathCoin fits this criteria. In PathCoin, penalties are used as disincentives, but the penalty consists of a payment directly from the attacker to the attacked, and that payment is larger than the amount stolen, making it stable. However, he acknowledges that such ideas are imaginative and may require further development.</summary>
    <published>2022-01-28T15:27:30+00:00</published>
  </entry>
</feed>
