<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trusted merkle tree depth for safe tx inclusion proofs without a soft fork</title>
  <updated>2023-06-13T03:13:38.017979+00:00</updated>
  <author>
    <name>Peter Todd 2018-06-07 22:20:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trusted merkle tree depth for safe tx inclusion proofs without a soft fork</title>
    <updated>2023-06-13T03:13:38.017979+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016093.html" rel="alternate"/>
    <summary>Peter Todd, a Bitcoin developer, has brought up the issue of the vulnerability of the Bitcoin merkle tree algorithm. The algorithm fails to distinguish between inner nodes and 64 byte transactions, which could potentially pose a problem for transaction inclusion proofs. A miner could create a transaction that committed to a transaction that was not in fact on the blockchain. Todd suggests that if the depth of the merkle tree is known, this vulnerability can be easily avoided by comparing the length of the merkle path to that known depth. This would allow for completely safe verification of transaction inclusion proofs without a soft-fork. Todd believes this is an accidental feature that further encourages the use of safe full verification rather than unsafe lite clients. Bram Cohen, another developer, proposes a soft fork to include the number of transactions in a block in the block headers to compensate for the broken Merkle format.</summary>
    <published>2018-06-07T22:20:28+00:00</published>
  </entry>
</feed>
