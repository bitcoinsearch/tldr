<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - UHS: Full-node security without maintaining a full UTXO set</title>
  <updated>2023-06-13T02:23:42.830017+00:00</updated>
  <author>
    <name>Cory Fields 2018-05-17 17:16:46</name>
  </author>
  <author>
    <name>Alex Mizrahi 2018-05-18 15:42:00</name>
  </author>
  <author>
    <name>Cory Fields 2018-05-16 16:36:35</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-05-17 16:56:39</name>
  </author>
  <author>
    <name>Sjors Provoost 2018-06-07 09:39:59</name>
  </author>
  <author>
    <name>Sjors Provoost 2018-06-07 09:39:59</name>
  </author>
  <author>
    <name>Jim Posen 2018-06-10 23:07:07</name>
  </author>
  <author>
    <name>Jim Posen 2018-06-10 23:07:07</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-05-17 16:56:39</name>
  </author>
  <author>
    <name>Jim Posen 2018-06-10 23:07:07</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-05-17 16:56:39</name>
  </author>
  <author>
    <name>Cory Fields 2018-05-17 17:16:46</name>
  </author>
  <author>
    <name>Alex Mizrahi 2018-05-18 15:42:00</name>
  </author>
  <author>
    <name>Cory Fields 2018-05-16 16:36:35</name>
  </author>
  <author>
    <name>Matt Corallo 2018-05-17 15:28:28</name>
  </author>
  <author>
    <name>Sjors Provoost 2018-06-07 09:39:59</name>
  </author>
  <author>
    <name>Matt Corallo 2018-05-17 15:28:28</name>
  </author>
  <author>
    <name>Cory Fields 2018-05-17 17:16:46</name>
  </author>
  <author>
    <name>Alex Mizrahi 2018-05-18 15:42:00</name>
  </author>
  <author>
    <name>Cory Fields 2018-05-16 16:36:35</name>
  </author>
  <author>
    <name>Matt Corallo 2018-05-17 15:28:28</name>
  </author>
  <link href="bitcoin-dev/May_2018/015980_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015990_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015967_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015977_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016089_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016089_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016107_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016107_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015977_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016107_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015977_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015980_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015990_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015967_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015973_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016089_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015973_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015980_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015990_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015967_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015973_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - UHS: Full-node security without maintaining a full UTXO set</title>
    <updated>2023-06-13T02:23:42.830017+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015980.html" rel="alternate"/>
    <summary>A proposal has been made to replace the current Unspent Transaction Output (UTXO) model used in Bitcoin with a new model called the Unspent Hash Set (UHS). The UHS would store only hashes of previous transaction outputs instead of their full data, resulting in a reduction in disk space and network overhead. Storing only hashes would enable the UHS to be substantially smaller than a full UTXO set. Additionally, entire blocks could potentially be verified out-of-order because all input data is provided; only the inclusion checks have to be in-order. Pay-to-pubkey outputs would use no more space on-disk than pay-to-pubkey-hash or pay-to-script-hash.However, non-standard output scripts would still need to be sent in full, but they account for only around 1% of all current UTXOs. Intra-block script de-duplication is also possible, but it has been found to have little practical benefit. Assuming sha256 for the UHS's hash function, no fundamental changes to Bitcoin's security model are introduced because the unspent transaction output hashes commit to all necessary data, including output types.Cory Fields proposed storing all unspent transaction output (UTXO) hashes instead of the full dereferenced prevout entries in a UTXO set for validation. The proposal suggests storing only the hashes of unspent outputs, which would reduce the size of a pruned node by 40%, with less than a 1% reduction in an archive node. However, the ongoing bandwidth increase of 5% may not be worth it. Fields notes that the overhead of this change may actually be closer to 25%, as the current transaction mechanisms are inefficient. Implementations can adopt this proposal without permanently changing the blockchain data structure.Bram Cohen's TXO Bitfield idea suggests considering the two primary roles of the Bitcoin unspent transaction output set, or UTXO, independently. It provides proof that previous outputs exist to be spent and the actual previous output data for verification when new transactions attempt to spend them. Rather than storing all unspent outputs, store their hashes. Untrusted peers can supply the full outputs when needed with very little overhead. Any attempt to spoof those outputs would be apparent, as their hashes would not be present in the hash set. For each new output, gather all extra data that will be needed for verification when spending it later as an input: the amount, scriptPubKey, creation height, coinbaseness, and output type (p2pkh, p2sh, p2wpkh, etc.). Create a hash from the concatenation of the new outpoint and the dereferenced prevout data. Call this a Unspent Transaction Output Hash. Rather than storing the full dereferenced prevout entries in a UTXO set as is currently done, instead store their hashes to an Unspent Transaction Output Hash Set, or UHS. When relaying a transaction, append the dereferenced prevout for each input.The proposed change could result in a 40% reduction in the size of a pruned node, with less than a 1% reduction in an archive node. However, there is concern regarding the 5% ongoing bandwidth increase required by this change, as the size of a pruned node has not been cited as a usage limiting factor. The overhead may actually be closer to 25%, due to inefficient transaction mechanisms. Implementations can adopt this proposal without permanently changing the blockchain data structure. Low-end devices typically use eMMC storage, which comes in 2x increments. Running a pruned full node on 8GB is difficult if not impossible, but 16 GB is only â‚¬10 more expensive. This proposal may help squeeze more out of limited RAM on low-end devices, which usually have only 1 or 2 GB of RAM. The benefits during initial sync and ongoing operation need to be distinguished. Another alternative would be for nodes to simply maintain a Merkle Mountain Range over all TXOs in order of creation and a spentness bitfield, which would use even less storage and more bandwidth.Overall, while there is potential for this proposal to improve efficiency, further analysis is needed to determine whether the benefits outweigh the costs. The proposal is still in its early stages, and implementation details need to be worked out. In March and May of 2017, a group of individuals engaged in discussions related to Bitcoin development on the bitcoin-dev mailing list. The discussions centered around a proposal for an alternative approach to how unspent transaction outputs (UTXOs) are stored in the network.</summary>
    <published>2018-05-17T17:16:46+00:00</published>
  </entry>
</feed>
