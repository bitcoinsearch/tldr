<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-05-20T08:33:17.845624+00:00</updated>
  <author>
    <name>Pieter Wuille 2018-06-03 06:11:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-05-20T08:33:17.845624+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016064.html" rel="alternate"/>
    <summary>In a bitcoin-dev thread, Tamas Blummer suggested that "Lighter but SPV secure nodes (filter committed) would help the network (esp. Layer 2) to grow mesh like, but add more user that blindly follow POW." He also noted that in the long term, most users' security will be determined by either trusted hubs or POW. The discussion then turned to what data committed filters should contain. There are two suggestions: (a) the scriptPubKeys of the block's outputs and prevouts of the block's inputs, and (b) the scriptPubKeys of the block's outputs and scriptPubKeys of outputs being spent by the block's inputs. The advantage of (a) is that it can be verified against a full block without access to the outputs being spent by it. However, this partially defeats the purpose of having filters. The advantage of (b) is that it is more compact and easily usable for scanning of a wallet's transactions. Using (a) may require restarting and refetching when an output is discovered. Once a committed filter exists, the advantage of (a) disappears completely. The question now is whether to aim for an uncommitted (a) first and a committed (b) later, or go for (b) immediately.</summary>
    <published>2018-06-03T06:11:56+00:00</published>
  </entry>
</feed>
