<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Should Graftroot be optional?</title>
  <updated>2023-06-13T02:49:59.689371+00:00</updated>
  <author>
    <name>Tim Ruffing 2018-06-06 21:25:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Should Graftroot be optional?</title>
    <updated>2023-06-13T02:49:59.689371+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016088.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around Graftroot and whether it needs to be optional or not. Pieter Wuille argues that Graftroot delegation is not "strictly less powerful" than using a normal transaction since it enables delegation in a way that cannot be fixed in the chain. This may have practical implications but none are identified. Wuille suggests defining the semantics of Graftroot such that it is allowed, which would make it an optimized version of an implicit 1-input-1-output transaction. However, he notes that this could introduce malleability issues. In response, Tim Ruffing suggests considering an implicit transaction only when the delegated script has been solved, but only in this case. They also discuss the similarities between Graftroot and SIGHASH_NOINPUT, and suggest making Graftroot spending a special sighash flag that builds an implicit transaction moving all coins to a newly provided script. To avoid malleability issues, the actual signature should still be different.</summary>
    <published>2018-06-06T21:25:33+00:00</published>
  </entry>
</feed>
