<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trusted merkle tree depth for safe tx inclusion proofs without a soft fork</title>
  <updated>2023-06-13T03:14:45.153267+00:00</updated>
  <author>
    <name>Sergio Demian Lerner 2018-06-09 11:03:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trusted merkle tree depth for safe tx inclusion proofs without a soft fork</title>
    <updated>2023-06-13T03:14:45.153267+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016102.html" rel="alternate"/>
    <summary>In an email to the Bitcoin community, Sergio Lerner from RSK reported a problem with SPV wallets and urged everyone to work on fixing it for the security and clean design of Bitcoin. The issue was discovered by RSK in 2017 and it is important for them to fix it as their SPV bridge uses SPV proofs. Lerner suggested two options: using version bits indicating the tree depth as a soft-fork or banning transactions with size lower or equal to 64. Bram Cohen responded to a thread on Bitcoin-dev mailing list, asking if fully validating nodes can maintain the ability to validate old transactions by caching the number of transactions in each previous block if they wish to prune. Peter Todd responded to Cohen's proposal to include the number of transactions in a block in the block headers to compensate for the broken Merkle format, saying that this vulnerability can be trivially avoided by simply comparing the length of the Merkle path to that known depth and it does not require a soft-fork to implement. Todd also thinks that this is an accidental feature rather than a bug, as it further encourages the use of safe full verification rather than unsafe lite clients.</summary>
    <published>2018-06-09T11:03:53+00:00</published>
  </entry>
</feed>
