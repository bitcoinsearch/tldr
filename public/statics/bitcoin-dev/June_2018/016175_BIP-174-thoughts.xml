<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 174 thoughts</title>
  <updated>2023-06-13T03:17:27.585877+00:00</updated>
  <author>
    <name>matejcik 2018-06-27 14:04:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 174 thoughts</title>
    <updated>2023-06-13T03:17:27.585877+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016175.html" rel="alternate"/>
    <summary>In a discussion on the Bitcoin-Dev mailing list, Pieter Wuille provided further explanation for the Combiner role in Partially Signed Bitcoin Transactions (PSBTs). The Combiner is intended to ensure forward compatibility with new script types. In cases where a transaction may spend inputs from different outputs with different script types, highly specialized software could be required to handle each script type involved in a single transaction. By having a key-value structure, Combiners can pick any of the values in case different PSBTs have different values for the same key, meaning that Combiners do not need to care about the contents. The Finalizer does need to understand the contents, but only operates once at the end. Combiners may be involved in any PSBT passing from one entity to another. Wuille also explained that computing pubkeys is possibly expensive in the case of BIP32 derivation and so others may want to use a matching approach to find keys that are relevant without pubkeys in the format because they would be forced to perform derivations for all keys present.</summary>
    <published>2018-06-27T14:04:06+00:00</published>
  </entry>
</feed>
