<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-05-20T08:32:42.670603+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-06-06 01:12:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-05-20T08:32:42.670603+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016081.html" rel="alternate"/>
    <summary>The Bitcoin Improvement Proposal (BIP) draft for multi-layer multi-block filters was previously discussed a year ago, but it is not currently being talked about as the team is in the process of removing unnecessary items or filters. They have now reached a point where they cannot remove any further items without making the filters less useful. Once this stopping point has been reached, widespread deployment can begin. Regarding future extensions, BIP 158 already defines custom filter types, and BIP 157 allows filters to be fetched in batches based on block height and numerical range. The latter feature could potentially be modified to return a single composite filter rather than several individual filters. A concern raised by Matt Corallo in a previous discussion was the size of the filters, which could make SPV clients less willing to adopt BIP 158 instead of the existing bloom filter garbage. He suggests exploring ways to split out filters to make them less bandwidth-intensive, such as providing filters for certain script templates. One potential solution that has been suggested is the idea of multi-block filters, where light clients would download a pair of filters for blocks X..X+255 and X+256..X+511. They would then check if they have any matches and grab pairs for any that matched. This has the added benefit of allowing a slightly higher false positive rate for bigger ranges, because the probability of a specific entry having a false positive in each filter is empirically independent. Riccardo Casatta also raises a question about whether not asking all filters is leaking information.</summary>
    <published>2018-06-06T01:12:55+00:00</published>
  </entry>
</feed>
