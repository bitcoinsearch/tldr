<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-06-13T02:29:41.666098+00:00</updated>
  <author>
    <name>Riccardo Casatta 2018-06-04 08:42:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-06-13T02:29:41.666098+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016070.html" rel="alternate"/>
    <summary>A proposal for multi-layer, multi-block filters for Bitcoin has been put forward, but is yet to receive much comment. Concerns have been raised about the size of filters potentially putting off existing Simplified Payment Verification (SPV) clients from adopting BIP 158. Suggestions include providing filters for certain script templates and exploring ways to split out filters to make them less bandwidth-intensive. One idea that has been mooted is for light clients to download a pair of filters for blocks X..X+255 and X+256..X+511, check if they have any matches and then grab pairs for any that matched, e.g. X..X+127 &amp; X+128..X+255 if left matched, and iterate down until it ran out of hits-in-a-row or it got down to single-block level. This approach would offer an added benefit in that it could accept a slightly higher false positive rate for bigger ranges, because the probability of a specific entry having a false positive in each filter is independent. The author also notes that he has written about this proposal in more detail in his paper on BFD profiles.</summary>
    <published>2018-06-04T08:42:10+00:00</published>
  </entry>
</feed>
