<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Claiming an OP_RETURN Prefix</title>
  <updated>2023-06-13T04:05:17.953694+00:00</updated>
  <author>
    <name>Lautaro Dragan 2018-08-16 02:22:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Claiming an OP_RETURN Prefix</title>
    <updated>2023-06-13T04:05:17.953694+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-August/016306.html" rel="alternate"/>
    <summary>The discussion thread on Bitcoin-dev mailing list started with the topic of pruning the op_return outputs as they are not spendable. The use of hash in witness script data was also discussed, but it was concluded that it would not be helpful and might make things worse. A suggestion was made to use pay 2 contract instead of op_return purely for timestamping. However, OpenTimestamps was recommended for actual timestamping purposes. It was mentioned that using op_return was not just for timestamping, but rather for storing the URL of something in the OP_RETURN by adding a few other elements that affect the hash. Batching OTS uses and the batching used by IPFS directories were found to be incompatible. The possibility of miners identifying transactions from one's software was discussed, and it was suggested that miners could censor transactions if they identified them. However, it was also pointed out that miners would have to try and `ipfs cat` every OP_RETURN of every transaction, which would be a relatively high-cost operation. It was also noted that choosing not to mine transactions might not be censorship economically, but politically, it might be considered as such since these transactions pay fees like any other. The discussion ended with Luke Dashjr pointing out that choosing not to mine transactions is not censorship.</summary>
    <published>2018-08-16T02:22:21+00:00</published>
  </entry>
</feed>
