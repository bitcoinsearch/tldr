<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Building a Bitcoin API and query system.</title>
  <updated>2023-06-13T14:16:48.751370+00:00</updated>
  <author>
    <name>Blockchain Group 2018-08-29 18:29:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Building a Bitcoin API and query system.</title>
    <updated>2023-06-13T14:16:48.751370+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-August/016335.html" rel="alternate"/>
    <summary>In an email conversation on August 29th, 2018, Jonas Schnelli stated that the deployment cost of running a node is what centralizes it, rather than the API implementation or full indexation being non-scalable. He believes that an API that serves non-verifiable data supports centralized validation and that the most important property in Bitcoin is the ability to self-validate via the p2p network. However, if people relied only on bitcoind and never centralized services, there would be no block explorers or secure light wallets since they do not provide remote query nor fully index. Therefore, some API must provide these features, either centralized or decentralized services. It seems wise to encourage the latter as opposed to questioning the validity of any block explorer use case. Bitcoin-Core has all required features to partially index data and provides them via the RPC API. If one does not need to serve thousands of wallets which would lead to centralized validation, selective indexing (wallets) is the right choice. Additionally, if one has a proper light client architecture, they can use Bitcoin Core in pruned mode (data) to serve an endless amount of wallets in client/server mode. Jonas fails to see the use-case where a fully indexed blockchain makes sense, except for instant backup recovery where transaction history needs to be preserved rather than recovering the UTXOs only.The p2p protocol has built-in light client support with BIP37 (bloom filters), and soon BIP158 will be available on the network which allows privacy-preserving "light clients" in a way where no trusted layer is required (client p2p network rather than client API provider p2p network). Jonas advocates defining the use-case and being aware of the consequences and downsides rather than advocating against a full-index block explorer-like API.</summary>
    <published>2018-08-29T18:29:18+00:00</published>
  </entry>
</feed>
