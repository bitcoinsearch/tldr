<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Preventing/detecting pinning of jointly funded txs</title>
  <updated>2023-06-16T02:47:04.216543+00:00</updated>
  <author>
    <name>Greg Sanders 2022-11-02 13:46:24</name>
  </author>
  <author>
    <name>Greg Sanders 2022-11-02 13:46:24</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-06 23:22:08</name>
  </author>
  <author>
    <name>Anthony Towns 2022-11-02 03:52:09</name>
  </author>
  <author>
    <name>Anthony Towns 2022-11-07 11:46:28</name>
  </author>
  <author>
    <name>Anthony Towns 2022-11-02 03:52:09</name>
  </author>
  <author>
    <name>Greg Sanders 2022-11-02 13:46:24</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-06 23:22:08</name>
  </author>
  <author>
    <name>Anthony Towns 2022-11-02 03:52:09</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-06 23:22:08</name>
  </author>
  <author>
    <name>Anthony Towns 2022-11-07 11:46:28</name>
  </author>
  <author>
    <name>Anthony Towns 2022-11-07 11:46:28</name>
  </author>
  <link href="bitcoin-dev/Nov_2022/021146_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021146_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021170_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021142_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021171_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021142_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021146_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021170_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021142_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021170_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021171_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021171_Preventing-detecting-pinning-of-jointly-funded-txs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Preventing/detecting pinning of jointly funded txs</title>
    <updated>2023-06-16T02:47:04.216543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021146.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list has been discussing various solutions to ensure transaction confirmation for untrusted peers while maintaining privacy. One proposed solution is the use of joint funding protocols that require participants to maintain dedicated hashpower to work. Another option is to set up anonymous Bitcoin nodes to query mempools and mining pools, but outsourcing this process is difficult without compromising privacy. To make running anonymous bitcoind nodes easier, transaction broadcasts may be made more private by using Tor/i2p or dandelion.The discussion also explores the issue of assigning blame among trust-minimized joint funding protocol participating UTXOs and the potential economic scalability of defensive infrastructure. Full-RBF is suggested as an alternative resolution process. The email thread also discusses how to detect potential conflicts to ensure transactions confirm, including setting up anonymous bitcoin nodes with realistic mempools, broadcasting the jointly funded transaction, and querying their mempools. Other suggestions include BIP 37 mempool filters or investing in dedicated hashpower.In a Bitcoin-dev post, Anthony Towns discusses solutions for a denial-of-service (DoS) attack in the opt-in replace-by-fee (RBF) world. The attack targets joint funding protocol participants and requires a distributed monitoring of the network mempools to detect conflicting spends of multi-party transactions. However, this infrastructure is not immune to partitioning attacks, where an adversary attempts to control the local node mempool view by changing policies across versions or creating two same-feerate transactions.Antoine Riard has proposed a solution to the DoS issue in an opt-in RBF world for coinjoins/splicing/dual-funded transactions. He suggests deploying a distributed monitoring of network mempools called "mempools watchdog." However, this infrastructure can be subject to mempool partitioning attacks by adversaries. To solve this problem, victims could outsource the monitoring to dedicated entities. However, there is a belief that there is a lack of compensation mechanism, leading to only a low number of public ones.Another issue that arises is assigning blame reliably among a set of trust-minimized joint funding protocol participating UTXOs. A potential problem is two double-spends from two sybilling participants aiming to halt the assignment process. To avoid this situation, anyone who wants to continue as part of the group never signs a conflicting tx. If someone does sign it, they are saying "I don't want to be part of this group anymore." If a way of saying "I want to abort this coinjoin, but stay a part of the group" is needed, 51% of the rest of the group must sign off on that claim.It is suggested not to do coinjoins with a ridiculously large number of untrusted counterparties. In a full-RBF world, any participant should be able to fee-bump the joint transaction. It is important to note that broadcasting a double-spend with a feerate equivalent to the honest transaction doesn't tighten the attack scenario because the attacker can still do low feerate pinning that's not recoverable by fee bumping the alternative.In a Bitcoin-dev mailing list, a discussion was held on how to handle conflicts when re-validating transactions without having a copy of the transaction. One approach suggested using BIP 37 mempool filters, but this could compromise privacy as it could reveal information to attackers. Another solution proposed was investing in hashpower, which may not be unreasonable if working with untrusted peers. If privacy is a concern, anonymous bitcoind nodes can be run to check their mempool content. To make running anonymous bitcoind nodes easier, transaction broadcasts could be made more private through methods such as Tor/i2p or Dandelion. Querying an explorer or centralized service could also be an option if privacy is not a concern. Overall, the discussion aimed to find better solutions for handling transaction conflicts in Bitcoin.</summary>
    <published>2022-11-02T13:46:24+00:00</published>
  </entry>
</feed>
