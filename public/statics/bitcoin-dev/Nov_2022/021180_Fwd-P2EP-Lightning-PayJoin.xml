<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Fwd: P2EP Lightning PayJoin</title>
  <updated>2023-05-22T22:49:04.339394+00:00</updated>
  <author>
    <name>Dan Gould 2022-11-08 02:57:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Fwd: P2EP Lightning PayJoin</title>
    <updated>2023-05-22T22:49:04.339394+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021180.html" rel="alternate"/>
    <summary>Funding channels on a lightning node can be a hassle, involving sending funds to the node on-chain and then making another transaction to open channels. However, the BIP 78 PayJoin P2EP protocol allows users to fund and open channels in a single transaction, avoiding communication over the shared blockchain and instead sharing it through communication. This protocol pairs with the BOLT 2 Channel establishment protocol, as illustrated in the provided diagram. The use of P2EP automates PSBT Channel establishment communications and helps avoid surveillance heuristics, while on-chain transactions using Taproot outputs appear like regular PayJoins. An experimental alpha called "nolooking" that implements this work has been released on the Umbrel app store. In addition, a brand new node can become totally connected in a single transaction that opens channels to outbound peers, and could immediately swap for inbound capacity just by scanning a single QR code. Dan thanks Martin Habov≈°tiak, Riccardo Casatta, Evan Lin, Armin Sabouri, and Nick Farrow for their contributions to this work and encourages others to help with the rust payjoin crate through code review and unit testing.</summary>
    <published>2022-11-08T02:57:34+00:00</published>
  </entry>
</feed>
