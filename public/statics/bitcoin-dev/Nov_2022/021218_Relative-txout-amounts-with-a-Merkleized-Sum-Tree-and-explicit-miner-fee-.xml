<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Relative txout amounts with a Merkleized Sum Tree and explicit miner fee.</title>
  <updated>2023-06-16T03:15:17.490150+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-11-21 23:52:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Relative txout amounts with a Merkleized Sum Tree and explicit miner fee.</title>
    <updated>2023-06-16T03:15:17.490150+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021218.html" rel="alternate"/>
    <summary>The email conversation is about mapping output amounts to a tap branch for secure partial spends of a single UTXO. However, the issue faced here is that only one tap branch will ever consume the entire input amount. The solution to this problem is to have multiple tree leaves where all of them will eventually be published, but not right now. The writer suggests looking at the tree structures for `OP_CHECKTEMPLATEVERIFY` which are exactly what is needed and help make `OP_CTV` a reality. If `OP_CHECKTEMPLATEVERIFY` is not used, presigned transactions in a tree structure can be used to achieve the same construction. However, it is known that presigned transactions are larger than `OP_CHECKTEMPLATEVERIFY`. Signatures on taproot are 64 bytes of witness, but an `OP_CHECKTEMPLATEVERIFY` in a P2WSH reveals just 32 bytes of witness plus the `OP_CHECKTEMPLATEVERIFY` opcode.</summary>
    <published>2022-11-21T23:52:00+00:00</published>
  </entry>
</feed>
