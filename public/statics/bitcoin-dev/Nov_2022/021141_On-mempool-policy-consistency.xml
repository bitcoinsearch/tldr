<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On mempool policy consistency</title>
  <updated>2023-05-22T22:07:34.070077+00:00</updated>
  <author>
    <name>Anthony Towns 2022-11-02 03:07:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On mempool policy consistency</title>
    <updated>2023-05-22T22:07:34.070077+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021141.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list recently discussed the use of zero-confirmation (0-conf) transactions, which allow users to send small amounts of Bitcoin without waiting for confirmation. Some users are exploiting 0-conf services through a process called "out-bidding" to retrieve funds they sent in error. While this is not a legitimate use case, it is rational. However, developers and node operators do not have to support every use case that someone might find rational. Miners also have an incentive not to make full replace-by-fee (RBF) available since it would reduce fee income from on-chain transactions and may cause investors to sell. Miners can still adopt additional patches if they want unusual functionality, but there is no evidence that they want this option. Removing full RBF from the software reduces the chance that miners will adopt an additional patch. Forcing miners to honor fees left on the table with respect to 0-conf or forcing them to run a custom patchset to go around it is a step backward. There are better ways to handle RBF policy while still giving people notice about changes.</summary>
    <published>2022-11-02T03:07:45+00:00</published>
  </entry>
</feed>
