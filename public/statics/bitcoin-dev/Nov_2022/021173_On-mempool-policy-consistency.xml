<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On mempool policy consistency</title>
  <updated>2023-06-16T02:21:02.713523+00:00</updated>
  <author>
    <name>Peter Todd 2022-11-07 14:32:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On mempool policy consistency</title>
    <updated>2023-06-16T02:21:02.713523+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021173.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list is about preventing a transaction from getting mined. Alice wants to broadcast something with low fees that won't get mined soon to prevent progress of a protocol. With full-RBF, who sees what transaction first doesn't matter as the higher fee paying transaction will always replace the lower fee one. However, with opt-in RBF, spamming the network can beat out the alternative. The limitations in today's mempool implementation can sometimes cause difficulties in evaluating which transaction pays the higher fee, but these limitations are fixable. Even without fixing them, Alice still needs to use more money to pull off these attacks with full-RBF. Therefore, while it doesn't solve the problem completely, full-RBF improves the situation.</summary>
    <published>2022-11-07T14:32:17+00:00</published>
  </entry>
</feed>
