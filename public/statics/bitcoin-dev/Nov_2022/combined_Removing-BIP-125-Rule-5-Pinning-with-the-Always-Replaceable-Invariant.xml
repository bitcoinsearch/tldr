<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Removing BIP-125 Rule #5 Pinning with the Always-Replaceable Invariant</title>
  <updated>2023-06-16T02:56:44.481942+00:00</updated>
  <author>
    <name>Peter Todd 2022-11-07 20:17:29</name>
  </author>
  <author>
    <name>Peter Todd 2022-11-07 20:17:29</name>
  </author>
  <author>
    <name>Suhas Daftuar 2022-11-07 21:21:11</name>
  </author>
  <author>
    <name>Peter Todd 2022-11-07 20:17:29</name>
  </author>
  <author>
    <name>Suhas Daftuar 2022-11-07 21:21:11</name>
  </author>
  <author>
    <name>Peter Todd 2022-11-07 21:27:16</name>
  </author>
  <author>
    <name>Suhas Daftuar 2022-11-07 21:21:11</name>
  </author>
  <author>
    <name>Peter Todd 2022-11-07 21:27:16</name>
  </author>
  <author>
    <name>Peter Todd 2022-11-07 21:27:16</name>
  </author>
  <link href="bitcoin-dev/Nov_2022/021175_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021175_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021177_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021175_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021177_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021178_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021177_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021178_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021178_Removing-BIP-125-Rule-5-Pinning-with-the-Always-Replaceable-Invariant.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Removing BIP-125 Rule #5 Pinning with the Always-Replaceable Invariant</title>
    <updated>2023-06-16T02:56:44.481942+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021175.html" rel="alternate"/>
    <summary>Bitcoin Core's Rule #5 of BIP-125 currently limits the number of original transactions and their descendant transactions that can be replaced in the mempool to a total of 100. However, this rule has no justification beyond avoiding "too much work" and may not be necessary since the overall mempool size limits naturally limit the maximum number of possible replacements. To avoid the problem of Rule #5 pinning, an invariant called the Replaceability Invariant can be implemented where no transaction is accepted into the mempool that would cause another transaction to be unable to be replaced due to Rule #5. The proposal involves maintaining an integer, nReplacementCandidates, for each transaction, which is incremented by 1 for each unconfirmed parent when a non-conflicting transaction is accepted into the mempool.Conflicting transactions do not require verification as the invariant has already guaranteed that every transaction in the mempool is replaceable. When a block is mined, the nReplacementCandidates of all unconfirmed transactions remains unchanged because a confirmed transaction cannot spend an unconfirmed txout. A special case is required to handle reorgs that change a transaction from confirmed to unconfirmed, where setting nReplacementCandidates to MAX_REPLACEMENT_CANDIDATES would suffice. However, Suhas Daftuar pointed out that the proposal to limit the number of descendants of each in-mempool transaction to MAX_REPLACEMENT_CANDIDATES was broken because a single transaction can conflict with multiple in-mempool transactions due to the fact that Bitcoin transactions can have multiple inputs. This could result in more evictions than intended. Peter Todd suggested that the issue could be fixed by summing up the number of nReplacementCandidates for each input in the multiple input case. The goal is to ensure that a transaction can always be replaced by double-spending an output to defeat pinning, not to make every possible way of double-spending multiple outputs at once work. Overall, the Replaceability Invariant is a proposed solution to the pinning problem caused by Rule #5 of BIP-125, which limits the number of original transactions and their descendant transactions that can be replaced and evicted from the mempool to 100 transactions. The proposal seeks to ensure that all transactions in the mempool are always replaceable, thus removing the need for this rule. The proposal acknowledges that diamond tx graphs are even more unusual than unconfirmed children, and there's no reason to accommodate them.</summary>
    <published>2022-11-07T20:17:29+00:00</published>
  </entry>
</feed>
