<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merkleize All The Things</title>
  <updated>2023-06-16T03:02:37.449304+00:00</updated>
  <author>
    <name>Salvatore Ingala 2022-11-10 09:42:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merkleize All The Things</title>
    <updated>2023-06-16T03:02:37.450304+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021200.html" rel="alternate"/>
    <summary>In a discussion between Bram Cohen, Peter Todd, David A. Harding, and ZmnSCPxj, Salvatore proposed the use of hash-chained covenants in Bitcoin. While such covenants have a plateau of functionality, they may not support full-blown covenants in the future. However, Salvatore argued that there are very few constructions that cannot be achieved with hash-chained covenants. The efficiency gain from using Verkle trees is not significant for many of the applications suggested by Salvatore, so it might not be worth the additional complexity. Merkle trees were considered necessary to keep layer 1 light while pushing the complexity of fancy constructions to the application layer. The covenant adds the ability to carry over some sort of state and does not necessarily require fraud proof. One interesting example is rollups, where the covenant would allow the implementation of optimistic rollups, where the rollup operator just posts the new state and the proof and other parties have time to challenge it if the proof is wrong.</summary>
    <published>2022-11-10T09:42:30+00:00</published>
  </entry>
</feed>
