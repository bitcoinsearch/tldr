<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On mempool policy consistency</title>
  <updated>2023-06-16T02:20:18.773406+00:00</updated>
  <author>
    <name>AdamISZ 2022-11-08 09:28:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On mempool policy consistency</title>
    <updated>2023-06-16T02:20:18.773406+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021183.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Antoine claims that opt-in replace-by-fee (RBF) is not enough to prevent a denial-of-service (DoS) issue when untrusting partners jointly fund UTXOs. The scenario described involves multiple parties creating a transaction with inputs A1, B1, and C1 opting in to RBF and fees at normal levels. Just before publishing, one party, A, spams the network with an alternative transaction that double-spends her input with low fees. This results in B and C populating their mempool with the first transaction while everyone else sees the second one instead. B and C cannot know they should cancel their transaction because neither tx will replace the other. This may result in wasted time trying to fee bump the tx to get it mined, or similar. The author, AdamISZ/waxwing, comments that this type of attack has never been a big concern in Joinmarket due to their implementation of 'taker is in charge of network fee; if it's slow or gets double spent out causing time delay then just wait'. Additionally, there is typically no economic incentive for an attacker to engage in griefing, but off-chain contracting has more sophisticated considerations.</summary>
    <published>2022-11-08T09:28:44+00:00</published>
  </entry>
</feed>
