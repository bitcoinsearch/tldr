<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving Multi-Party Flows Pinning with Opt-in Full-RBF Spent-nVersion Signaling</title>
  <updated>2023-06-16T02:42:54.912208+00:00</updated>
  <author>
    <name>Greg Sanders 2022-11-02 13:58:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving Multi-Party Flows Pinning with Opt-in Full-RBF Spent-nVersion Signaling</title>
    <updated>2023-06-16T02:42:54.912208+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021147.html" rel="alternate"/>
    <summary>Antoine Riard proposed a new policy for multi-party collaborative flows suffering from a low-cost and high-success DoS vector with asymmetric damages. The issue lies in the fact that participants joining inputs together don't have control or even view of the replacement signaling of any potential double-spend of the other participants inputs. A confirmed transaction is considered to have opted in to allowing replacement of any of its spends, if the last bit of the nVersion field is set. Antoine proposed to mark all coins nVersion fields opting fullrbf as a workaround for contracting protocols wallets. However, this policy bookmarking comes as a protocol fingerprint leak for an observer of the transaction logs. Long-term, the annoying privacy issue and the assumption that any wallet will be a Lightning one could lead to the majority of wallets signaling RBF for their spends. Therefore making those wallets incompatible with zeroconf services, slowly economically outlawing them. From Antoine's perspective, it sounds like an alternative full rbf way forward, where rather than having miners deciding on the policy enforcement, they let the users decide with their coins.</summary>
    <published>2022-11-02T13:58:59+00:00</published>
  </entry>
</feed>
