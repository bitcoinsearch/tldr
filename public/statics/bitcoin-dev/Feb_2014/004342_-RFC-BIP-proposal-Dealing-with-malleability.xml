<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] [BIP proposal] Dealing with malleability</title>
  <updated>2023-06-08T02:40:12.160414+00:00</updated>
  <author>
    <name>Alan Reiner 2014-02-12 16:22:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] [BIP proposal] Dealing with malleability</title>
    <updated>2023-06-08T02:40:12.160414+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004342.html" rel="alternate"/>
    <summary>A proposal has been made to get rid of transaction malleability in Bitcoin. The proposal includes adding new rules, such as modifying wallet software and potentially invalidating some script functionality, but these rules would remain optional and controlled by an nVersion increase. A suggestion was also made to define a new, "canonical transaction hash/ID" (cTxID), which would be a hash of the part of the transaction data which is not malleable, and have clients use this internally instead of the traditional transaction hash. It was noted that this solution would require nodes to index all transactions to calculate a cTxID. Armory, a Bitcoin wallet software, did not have any problems with malleability because it only pays attention to whether inputs and outputs are related to your wallets and does not track anything by ID. The solution proposed is to encourage Bitcoin software developers to design their software to use this static ID rather than the full transaction hash, which would correctly identify mutated transactions and prevent issues like those encountered by MtGox.</summary>
    <published>2014-02-12T16:22:19+00:00</published>
  </entry>
</feed>
