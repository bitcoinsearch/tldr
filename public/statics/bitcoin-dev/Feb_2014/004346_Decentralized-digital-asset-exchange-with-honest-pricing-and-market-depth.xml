<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Decentralized digital asset exchange with honest pricing and market depth</title>
  <updated>2023-06-08T02:31:41.724711+00:00</updated>
  <author>
    <name>Dan Carter 2014-02-12 16:34:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Decentralized digital asset exchange with honest pricing and market depth</title>
    <updated>2023-06-08T02:31:41.724711+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004346.html" rel="alternate"/>
    <summary>The author of the post discusses a potential solution to address the disadvantage faced by those who wait for publication confirmation in order to get the best deal possible. The proposed solution involves connecting to as many nodes as possible to examine the stream of unconfirmed asks coming in and sign the best ones before someone else does. However, this may lead to a fully connected network which would not be sustainable in the long run.To address this issue, the post suggests using time-locked partial ask transactions with a network propagation delay and multiple bidder responses. The winner is chosen by lottery and fee priority by the bitcoin/alt-coin miner who confirms the atomic transaction in their block. This would eliminate the advantage of being fully connected and create a more stable network.The post then introduces the concept of proof-of-publication(2) as another potential solution. Alice can embed her incomplete transaction as data in a second, valid transaction and broadcast it to an agreed upon blockchain. Bidders like Bob can then scan the blockchain for offers with an acceptable price. The offers can make use of techniques like prefix filters to allow Bob to only scan part of the blockchain, although he needs to know the status of all assets of the type he is interested in anyway.</summary>
    <published>2014-02-12T16:34:48+00:00</published>
  </entry>
</feed>
