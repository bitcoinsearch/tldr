<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] [BIP proposal] Dealing with malleability</title>
  <updated>2023-06-08T02:41:49.842971+00:00</updated>
  <author>
    <name>Allen Piscitello 2014-02-20 01:29:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] [BIP proposal] Dealing with malleability</title>
    <updated>2023-06-08T02:41:49.842971+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004391.html" rel="alternate"/>
    <summary>The email thread discusses the issue of malleability in transactions and possible solutions to address it. One proposed solution is to add an "only-mine-with-child flag" to ensure that parent transactions are only valid when spent together with the transaction that depends on it. This approach would require all miners to respect the flag to avoid forking the network. Another proposal suggests making version 1 transactions unmalleable and introducing a version 3 that supports malleability features, but this change would take a long time to deploy. The discussion also acknowledges the potential use cases for malleable transactions, such as the sighash flags. However, there are concerns about removing potential functionality through a hard fork. The original poster mentions a specific use case where some parts of the chain need to be in the chain earlier than others and have the same ID as expected. They note that there may be tricks to get it to work, but they haven't worked on it for a while and are rusty in that area. Finally, they suggest that the proposed solutions might be helpful for many use cases but shouldn't be considered final.</summary>
    <published>2014-02-20T01:29:05+00:00</published>
  </entry>
</feed>
