<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP70: Canceling Payments</title>
  <updated>2023-06-08T02:14:49.273755+00:00</updated>
  <author>
    <name>Christophe Biocca 2014-02-03 20:37:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP70: Canceling Payments</title>
    <updated>2023-06-08T02:14:49.273755+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004277.html" rel="alternate"/>
    <summary>In an email exchange on February 3, 2014, Tim Tuxworth, founder of Go-Taxi.biz, asked if BIP70 was limited to HTTP only and questioned how the payment protocol would work in various scenarios. Christophe Biocca responded that unsolicited merchant-to-consumer messages don't work on HTTP or in many other situations, so adding a need for it to the payment protocol wouldn't be usable in the majority of cases. Biocca explained that over HTTP, the merchant doesn't have the ability to reach out to the consumer's bitcoin wallet on their own and sending a "Cancel Payment Request" to the user is impossible. If the customer doesn't want to send, nothing ever needs to happen. So sending a "Reject Payment Request" to the merchant is useless. Tuxworth then suggested that a "Cancel Payment Request" message is required and a "Reject Payment Request" may also be required. He provided many examples of common business scenarios where these messages would be useful. Biocca responded by saying that the unhappy path scenario with Payment Requests (customer paid, but for whatever reason that payment is no longer valid) can be simply solved in one of two ways: If the merchant realizes the mistake, they can refund the money. If the customer realizes the problem, they can contact the merchant, provide the signed request, and ask the merchant to return the funds.</summary>
    <published>2014-02-03T20:37:55+00:00</published>
  </entry>
</feed>
