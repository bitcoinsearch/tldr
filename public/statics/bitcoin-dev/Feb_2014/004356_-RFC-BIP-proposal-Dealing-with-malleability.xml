<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] [BIP proposal] Dealing with malleability</title>
  <updated>2023-06-08T02:40:47.872913+00:00</updated>
  <author>
    <name>Alex Morcos 2014-02-13 00:39:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] [BIP proposal] Dealing with malleability</title>
    <updated>2023-06-08T02:40:47.872913+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004356.html" rel="alternate"/>
    <summary>A member of the Bitcoin-development mailing list has suggested modifying signatures to be of the entire transaction as a long-term solution to malleable transactions. The idea is that there would be no need to zero out inputs if the signature were for the whole transaction. However, this would require a hard fork and extracting signatures first may be tricky. Luke-Jr commented on the proposal, stating that using the modified signatures for input selection would be safe, but not for the merkle tree. He even suggested using hashScript as the sole input value to avoid the index, making CoinJoins safe without breaking chains of transactions. Alan Reiner responded, mentioning that changing the protocol to use static IDs is a fundamental change that would never happen in Bitcoin, but could be useful at an application level. Mark Friedenbach added that consensus depending on data which is not hashed in the Merkle structure of a block could be potentially insecure.</summary>
    <published>2014-02-13T00:39:11+00:00</published>
  </entry>
</feed>
