<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] [BIP proposal] Dealing with malleability</title>
  <updated>2023-06-08T02:40:31.063693+00:00</updated>
  <author>
    <name>Allen Piscitello 2014-02-12 16:38:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] [BIP proposal] Dealing with malleability</title>
    <updated>2023-06-08T02:40:31.063693+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004345.html" rel="alternate"/>
    <summary>The Bitcoin community is discussing the issue of transaction malleability, which makes it difficult to perform chained transactions. For example, if Alice wants to send coins to a multisignature address with Bob, such that both parties are required to spend the coins, she sends Bob a transaction that spends her incoming transaction back to herself, but has a time lock of far into the future. Bob signs this, returns it to Alice, and she broadcasts her funding transaction. However, if Bob disappears or loses his key, her refund transaction may not work because her funding transaction has been modified such that the txhash is different. To solve this problem, developers have proposed using a static ID instead of the full transaction hash. While this is a short-term solution, it does not work for other use cases and a canonical identifier for the transaction before it even gets to the chain would be more ideal in the long run. This would require breaking changes and cannot be implemented without careful consideration.</summary>
    <published>2014-02-12T16:38:18+00:00</published>
  </entry>
</feed>
