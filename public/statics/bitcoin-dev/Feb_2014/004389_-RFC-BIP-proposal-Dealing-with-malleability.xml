<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] [BIP proposal] Dealing with malleability</title>
  <updated>2023-05-19T18:05:55.465385+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-02-19 21:11:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] [BIP proposal] Dealing with malleability</title>
    <updated>2023-05-19T18:05:55.465385+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004389.html" rel="alternate"/>
    <summary>In a discussion regarding transaction malleability, Michael Gronager suggests making version 1 transactions unmalleable and introducing an optional version 3 that supports malleability for experimentation. However, this change is not directly intended to avoid incidents, as software should deal with malleability. The proposed solution is intended to provide non-malleability guarantees for clients willing to restrict their functionality. This is not about outlawing malleability, but rather about allowing clients to choose whether or not they want to use it. Making all the rules non-standard would mean removing potential functionality that can only be re-enabled through a hard fork, which is significantly harder. New transaction and block versions would allow implementing and automatically scheduling a softfork without waiting for wallets to upgrade. However, it is important to note that not all wallets will be instantly modified, and it may not be necessary for some.</summary>
    <published>2014-02-19T21:11:14+00:00</published>
  </entry>
</feed>
