<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fee drop</title>
  <updated>2023-06-08T03:25:43.950172+00:00</updated>
  <author>
    <name>Peter Todd 2014-02-28 11:18:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fee drop</title>
    <updated>2023-06-08T03:25:43.950172+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004460.html" rel="alternate"/>
    <summary>The discussion revolves around the risk associated with opening a historically large discrepancy between MIN_RELAY and the expected minimum fee to actually obtain block inclusion. There is no expiration policy currently in place, which poses a DoS problem. Nodes that are encountering memory pressure can increase their min relay fee locally until their usage fits inside their resources, but it is annoying to do this by hand. The mempool superblock design is suggested as a solution, which keeps getting suggested. It orders the mempool with highest fee/KB first and transactions that paid less than the lowest fee/KB in a max-size mempool would not get relayed at all. However, this makes zero-conf transactions even less safe as attackers can broadcast enough transactions paying X+e fee/KB to push out the unconfirmed tx from mepools around the network and then broadcast a double-spend.</summary>
    <published>2014-02-28T11:18:26+00:00</published>
  </entry>
</feed>
