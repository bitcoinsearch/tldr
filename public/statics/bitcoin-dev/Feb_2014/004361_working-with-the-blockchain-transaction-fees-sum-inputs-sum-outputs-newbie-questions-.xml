<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>working with the blockchain: transaction fees &amp; sum(inputs) != sum(outputs) (newbie questions)</title>
  <updated>2023-06-08T02:59:31.786637+00:00</updated>
  <author>
    <name>Denis Andrejew 2014-02-14 12:20:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>working with the blockchain: transaction fees &amp; sum(inputs) != sum(outputs) (newbie questions)</title>
    <updated>2023-06-08T02:59:31.786637+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004361.html" rel="alternate"/>
    <summary>The poster is new to Bitcoin development and is trying to read the blockchain in order to find all unspent outputs. They are using bitcoind via rpc as their source of information about the blockchain. However, they are confused about how transaction fees work, particularly in relation to situations where there is a gap between the sum of the ins and the sum of the outs in a transaction. They understand that this gap is the transaction fee, but they are unsure how the miner can spend it if it is not assigned as an output of any transaction. The poster wonders if there is special code somewhere that keeps track of all the BTC not spent in all the transactions of a block and allows the miner's address to spend it, but they are unclear on the details of how this would work. The poster is requesting technical explanations of transaction fees and how to find them and account for them in the blockchain. They also ask what other cases might exist where the sum of the input values can be different from the sum of the output values. The only two cases the poster currently understands are "coinbase" transactions that print money and have no inputs, and transactions fees when in &gt; out.</summary>
    <published>2014-02-14T12:20:45+00:00</published>
  </entry>
</feed>
