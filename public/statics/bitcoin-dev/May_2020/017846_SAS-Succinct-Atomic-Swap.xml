<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SAS: Succinct Atomic Swap</title>
  <updated>2023-06-14T01:27:56.433217+00:00</updated>
  <author>
    <name>Ruben Somsen 2020-05-11 15:29:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SAS: Succinct Atomic Swap</title>
    <updated>2023-06-14T01:27:56.433217+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017846.html" rel="alternate"/>
    <summary>The protocol described by Ruben Somsen enables atomic swaps with single signatures and is available on Schnorr+MuSig. The protocol runs with just two on-chain transactions, eliminating the need for time locks on one of the chains. The process can be used for efficient privacy swaps such as Payswap, but access to funds depends on remembering secrets. The protocol has three steps, including locking up coins with a trusted party, completing the swap, and monitoring the chain. A more graceful failure is possible by introducing a second refund_tx with timelock that can be published ahead of the revoke_tx. The protocol can work with hash locks, but it would increase the transaction size. It is possible to implement this protocol on chains supporting absolute timelocks, but Bob must spend his swapped coins before the timelock expires.</summary>
    <published>2020-05-11T15:29:51+00:00</published>
  </entry>
</feed>
