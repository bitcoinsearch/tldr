<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transcript: Online Socratic on MuSig2</title>
  <updated>2023-06-16T00:13:00.562977+00:00</updated>
  <author>
    <name>Michael Folkson 2022-09-12 16:00:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transcript: Online Socratic on MuSig2</title>
    <updated>2023-06-16T00:13:00.562977+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020917.html" rel="alternate"/>
    <summary>In a message to Michael Folkson, Ali Sherief inquires about any research done on the issue of theft or online connectivity with signature generation. Michael responds by explaining that any generation of a signature requires private keys and thus has concerns regarding security and theft of such keys. However, multisig arrangements are better than no multisig arrangement as they prevent loss of funds due to theft of a single private key. With regards to connectivity or interactivity, key aggregation multisig increases the interactivity requirements. Michael also clarifies that in the realm of generating signatures, there isn't really a concept of a "lite node", but it makes more sense in the realm of verification. In the case of Liquid, there is an 11-of-15 threshold signature arrangement where currently 11 signatures go onchain when funds are moved but if Liquid used a key aggregation scheme like FROST only a single signature would need to go onchain. Increasing the 11-of-15 to say a 22-of-30 is possible or having a nested MuSig/FROST scheme behind one of the 11 signers of the 11-of-15 is another option. Ultimately, you are either generating a signature that contributes to the moving of funds or you aren't. If you aren't generating a signature then you are just verifying the signature(s) that go onchain like all other full nodes on the network.</summary>
    <published>2022-09-12T16:00:52+00:00</published>
  </entry>
</feed>
