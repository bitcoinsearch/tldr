<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Spookchains: Drivechain Analog with One-Time Trusted Setup &amp; APO</title>
  <updated>2023-05-22T21:12:21.338460+00:00</updated>
  <author>
    <name>Jeremy Rubin 2022-09-14 18:31:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Spookchains: Drivechain Analog with One-Time Trusted Setup &amp; APO</title>
    <updated>2023-05-22T21:12:21.339460+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020919.html" rel="alternate"/>
    <summary>The article presents a technique for creating drivechains with recursive covenants using ANYPREVOUT and a trusted setup ceremony. The Peano counter graph is used in this process to build a simple 1 to 5 counter that has an inc/dec feature, using a key instead of sha-256. For each Ki, when i &lt; N in Rule Increment, the first signature should cover specified inputs, while for each Ki, when i &gt; 1 in Rule Decrement, the second signature should cover the same inputs.To handle arbitrary deposits or withdrawals, the protocol can be instantiated for every amount or divided using base 2 or another base. Splitting and joining can also be accomplished by pre-signing. All signatures set the input sequence to one block to enforce that only one vote per block is allowed. When a counter reaches the Nth state, there should be some viable state transition at this point, such as sending the money to an OP_TRUE output that the miner incrementing that state is responsible for following the rules of the spookchain.From any K^i_1 state, the transaction transitioning to K^i_2 can be treated as “special,” and the OP_RETURN output type can be used to commit to the outputs that must be created when the Terminal State is reached. The article clarifies the issue of "what is being voted on." Instead of using randomly generated keys for each state, xpubs can be defined and derived for each state/satoshi amount. A single party pre-signs all the transactions for the spookchain, and then deletes their xpriv.The article suggests various ways to improve the trust assumptions in blockchain transactions, including MuSig Multi-Party, Unaggregated Multi-Party, and Soft Forking Away Trust. These solutions enable participants to define a MuSig among all participants in the setup ceremony, N-of-N, allow for unaggregated multi-sig keys in the spec, and propose that clients could reject invalid state transitions or restrict spookchain keys to only sign with known signatures. The article also discusses the advantages of using symmetry of state transition rules and DAG covenants. Lastly, the article evaluates a covenant under a set of assumptions and analyzes how it can be composed.</summary>
    <published>2022-09-14T18:31:55+00:00</published>
  </entry>
</feed>
