<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trustless Address Server – Outsourcing handing out addresses to prevent address reuse</title>
  <updated>2023-06-16T00:41:34.049953+00:00</updated>
  <author>
    <name>Ruben Somsen 2022-09-29 15:39:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trustless Address Server – Outsourcing handing out addresses to prevent address reuse</title>
    <updated>2023-06-16T00:41:34.049953+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020952.html" rel="alternate"/>
    <summary>The post discusses a protocol for non-interactive distribution of bitcoin addresses that outsources interaction to third-party servers, an area that is seemingly underexplored. The sender interacts with the server, which represents the recipient and hands out an address from an xpub. One big remaining problem is the gap limit. The recipient controls and therefore trusts the server, so malicious addresses won't be given out. An alternative mitigation would be to require the sender to reveal their intended transaction to the server before receiving the address. If the transaction doesn't end up getting sent, any subsequent attempt to reuse one of the inputs should either be blacklisted or responded to with the same address that was given out earlier. This protocol seems useful for users that want to use light clients, accept the privacy degradation of handing out their xpub to a third party, and want to receive payments non-interactively.</summary>
    <published>2022-09-29T15:39:18+00:00</published>
  </entry>
</feed>
