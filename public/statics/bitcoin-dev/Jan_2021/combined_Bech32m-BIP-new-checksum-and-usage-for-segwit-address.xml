<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bech32m BIP: new checksum, and usage for segwit address</title>
  <updated>2023-06-14T16:57:45.151141+00:00</updated>
  <author>
    <name>Pieter Wuille 2021-01-05 01:25:29</name>
  </author>
  <author>
    <name>nakagat 2021-01-15 08:01:24</name>
  </author>
  <author>
    <name>nakagat 2021-01-18 05:59:05</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-20 00:29:36</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-05 00:14:12</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-20 00:29:36</name>
  </author>
  <author>
    <name>Rusty Russell 2021-01-09 05:00:24</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-20 00:29:36</name>
  </author>
  <author>
    <name>Rusty Russell 2021-01-09 05:00:24</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-05 01:25:29</name>
  </author>
  <author>
    <name>Rusty Russell 2021-01-09 05:00:24</name>
  </author>
  <author>
    <name>nakagat 2021-01-15 08:01:24</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-18 04:15:49</name>
  </author>
  <author>
    <name>nakagat 2021-01-18 05:59:05</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-19 17:57:08</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-05 01:25:29</name>
  </author>
  <author>
    <name>nakagat 2021-01-15 08:01:24</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-19 17:57:08</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-05 00:14:12</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-18 04:15:49</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-19 17:57:08</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-05 00:14:12</name>
  </author>
  <author>
    <name>Pieter Wuille 2021-01-18 04:15:49</name>
  </author>
  <author>
    <name>nakagat 2021-01-18 05:59:05</name>
  </author>
  <link href="bitcoin-dev/Jan_2021/018339_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018354_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018363_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018368_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018338_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018368_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018344_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018368_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018344_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018339_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018344_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018354_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018362_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018363_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018366_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018339_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018354_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018366_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018338_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018362_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018366_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018338_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018362_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2021/018363_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Bech32m BIP: new checksum, and usage for segwit address</title>
    <updated>2023-06-14T16:57:45.151141+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-January/018339.html" rel="alternate"/>
    <summary>Bitcoin Core developer Pieter Wuille has proposed updates to Bech32, a bitcoin address format. On January 4th, 2021, he shared a BIP draft for changing the checksum in native segwit addresses for v1 and higher, called Bech32m. This replaces the corresponding section in BIP173, which prescribes using Bech32 for v0 witness addresses and Bech32m for other versions. The proposal defines a new encoding called Bech32m, which is a tweaked variant of Bech32.The idea behind this proposal is to create an error-detection algorithm that is better than a hash function. In response to questions regarding using a hash function to compute the checksum instead of Bech32's algorithm, Pieter stated that it would be equivalent to computing the final xorred-in constant from the HRP and the data using a hash function. Takatoshi Nakagawa implemented Bech32m in Go and suggested creating BECH32M_CONST from hrp and data instead of constants to maintain the same error position as Bech32. Pieter Wuille updated several reference implementations and made updates to the BIP draft. Rusty commended the clarity of the write-up and was impressed with the mathematical jujitsu that ensures no bech32 string is a valid bech32m string even with three errors.Pieter is seeking comments, suggestions, and ideas from the community on this proposal. He has updated several reference implementations (C, C++, Python, Javascript) to support Bech32m and added links for more reference implementations. He also opened a pull request on Bitcoin Core and made updates to the BIP draft. The updates include clarifying the title, adding rationale for not permitting both Bech32 and Bech32m for v0, adding a section on error location, and adding links for more reference implementations.Nakagawa had read the BIP draft of Bech32m and implemented it in Go. When he asked if the Checksum had to be fixed, Wuille was unsure of his question and provided three possible interpretations. The discussion on this topic can be found at https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-December/018293.html.</summary>
    <published>2021-01-05T01:25:29+00:00</published>
  </entry>
</feed>
