<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 33 - Stratized Nodes</title>
  <updated>2023-06-06T04:35:22.361944+00:00</updated>
  <author>
    <name>Amir Taaki 2012-05-16 17:32:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 33 - Stratized Nodes</title>
    <updated>2023-06-06T04:35:22.361944+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-May/001462.html" rel="alternate"/>
    <summary>In an email thread between Mike Hearn and Amir Taaki regarding a proposal for stratized nodes, Hearn expressed his belief that the best option would be to implement a design outlined over a year prior. The original design involved using a new protocol command to set a Bloom filter on a connection, where only transactions matching that filter appear in relayed inventory. Blocks requested arrive as a header plus transaction/merkle branch pairs. By strengthening or weakening the Bloom filters, clients can choose their preferred point on the privacy/bandwidth-usage spectrum. The filters are applied to each data block in each script rather than having specific knowledge of addresses, allowing selection for things like multisig outputs or outputs which don't use addresses / pubkeys to authenticate. Hearn suggested he could write a BIP for this alternative protocol if someone else wants to implement it, as simple optimizations to BitcoinJ could keep its performance good enough for the short term.</summary>
    <published>2012-05-16T17:32:51+00:00</published>
  </entry>
</feed>
