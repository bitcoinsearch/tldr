<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - op_checktemplateverify and number of inputs</title>
  <updated>2023-06-13T23:19:00.696207+00:00</updated>
  <author>
    <name>Billy 2020-01-25 01:50:49</name>
  </author>
  <author>
    <name>Jeremy 2020-01-26 17:23:57</name>
  </author>
  <author>
    <name>Jeremy 2020-01-26 17:23:57</name>
  </author>
  <author>
    <name>Billy 2020-01-25 01:50:49</name>
  </author>
  <author>
    <name>Jeremy 2020-01-26 17:23:57</name>
  </author>
  <author>
    <name>Billy 2020-01-25 01:50:49</name>
  </author>
  <link href="bitcoin-dev/Jan_2020/017597_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017598_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017598_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017597_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017598_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017597_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - op_checktemplateverify and number of inputs</title>
    <updated>2023-06-13T23:19:00.696207+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017597.html" rel="alternate"/>
    <summary>The op_ctv Bitcoin script code and the requirement to specify a number of inputs is being questioned by a poster who wonders why it is being enforced. Although they understand why one might want to specify a number of inputs, they do not see why it should be mandatory for users of the op. The poster suggests that if the op allowed both cases, it would provide the best of both worlds. To discuss this topic further, the poster has started a discussion on bitcointalk.org with an unclear outcome in mind.In an email exchange between Billy and Jeremy Rubin, the two discuss the necessity of restricting the number of inputs to preclude TXID malleability. Committing to all required information necessitates committing to the number of inputs in a transaction. This allows for non-interactive layer 2 protocols which depend on TXID non-malleability. Billy raises the point that allowing any number of inputs could be useful. However, Jeremy suggests that the flexibility is better left outside of the OP directly. If one wants an any number of inputs template, they can use something like OP_CAT and pass in the # of inputs and sequences hash as arguments to the function. Jeremy also offers to respond separately to Billy's post on bitcointalk.org as it asks a different set of questions.</summary>
    <published>2020-01-25T01:50:49+00:00</published>
  </entry>
</feed>
