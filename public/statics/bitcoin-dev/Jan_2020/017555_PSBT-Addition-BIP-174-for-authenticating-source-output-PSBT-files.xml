<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PSBT Addition (BIP 174) for authenticating source/output PSBT files</title>
  <updated>2023-06-13T23:07:31.490417+00:00</updated>
  <author>
    <name>Dmitry Petukhov 2020-01-11 20:17:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PSBT Addition (BIP 174) for authenticating source/output PSBT files</title>
    <updated>2023-06-13T23:07:31.490417+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017555.html" rel="alternate"/>
    <summary>The discussion revolves around the authentication of PSBT contents and whether it should be done with data embedded in PSBT itself or with a container that includes PSBT and the authentication information. It is suggested that authenticating the contents of PSBT is independent of the signing action as PSBT might be altered on the path from Creator to Signer. Participants can work from the same PSBT file if they all receive the same PSBT, and not working in chain where the next participant receives updated PSBT from the previous participant. Introducing additional ordering or other structure requirements over simple key-value structure will add complexity to PSBT processing, and adding complexity on such a basic level should have really serious reasons, because that increases effort required for even basic implementations and increases the chance of bugs. It is suggested that if there is some authority on the 'correctness' of 'original' PSBT, participants should check the signature by that authority. The proposal suggests adding two officially-assigned BIP-174 key numbers assigned for these two signatures and then adding them into Coldcard's firmware immediately. The author suggests implementing the scheme envisioned with proprietary keys, documenting and promoting it. If it shows its usefulness, it will either become de-facto standard with proprietary keys, or the scheme will have serious grounds to be converted to standard and have non-proprietary keys assigned.</summary>
    <published>2020-01-11T20:17:05+00:00</published>
  </entry>
</feed>
