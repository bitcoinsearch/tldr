<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Coins: A trustless sidechain protocol</title>
  <updated>2023-06-13T23:12:42.367584+00:00</updated>
  <author>
    <name>Joachim Str√∂mbergson 2020-01-13 17:34:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Coins: A trustless sidechain protocol</title>
    <updated>2023-06-13T23:12:42.367584+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017566.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev mailing list, the topic of Lightning Network (LN) versus Sidechains was raised. The author argues that while LN works well under certain conditions, it is not suitable for the next billion users who may not have reliable internet connections or funds to manage channels' inbound capacity. The solution proposed is to use independent sidechains that are decentralized and trustless, with Bitcoin's LN acting as the central settlement layer for cross-chain transactions. However, ZmnSCPxj suggests using channel factories instead of sidechains, as they offer better trust-minimization. Channel factories can host any contract that its lower layer supports, and anything that can be put onchain can generally also be put offchain. The author suggests putting the payment layer in a bunch of Poon-Dryja channels which support many updates but only two participants per channel, and create a layer that supports changes to the channel topology and is multiparticipant to scale. Instead of broadcasting the entire internal ledgers of those services, only their customers need to know those internal ledgers and sign off on the updates of those ledgers.</summary>
    <published>2020-01-13T17:34:17+00:00</published>
  </entry>
</feed>
