<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Payswap</title>
  <updated>2023-06-13T23:18:38.547711+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-21 04:38:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-24 10:11:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-21 04:38:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-24 10:11:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-21 04:38:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-24 10:11:55</name>
  </author>
  <link href="bitcoin-dev/Jan_2020/017595_Payswap.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017596_Payswap.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017595_Payswap.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017596_Payswap.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017595_Payswap.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017596_Payswap.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Payswap</title>
    <updated>2023-06-13T23:18:38.547711+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017595.html" rel="alternate"/>
    <summary>ZmnSCPxj, a contributor on the lightning-dev forum, has proposed a circular self-payment mechanism to hide payment direction from third-party nodes. This atomic mechanism involves the source paying a larger-than-amount payment to the destination and the destination returning the difference instead. This can be implemented directly on the blockchain using CoinSwap to mislead onchain analysis. Transactions and transaction outputs can be considered nodes and edges of a transaction graph, respectively, and the categorical dual of such a graph can be used to implement the Payswap payment flow.The Payswap payment flow involves more transactions than Payjoin, making it more expensive in blockspace, and the protocol can be aborted by one participant leading to spending onchain fees to back out of the protocol. However, it is an active misleading of chain analysis. The proposal is currently under consideration by the community.The mechanism can also be based on CoinSwap to mislead onchain analysis. The sender and destination set up an unequal CoinSwap where the destination receives all the sender coins and the sender receives the difference between the sender total and the payment amount (change). They execute the CoinSwap and complete the payment protocol. By use of some kind of Scriptless Script, it is possible to as well implement a proof-of-payment system similar to Lightning, which might be useful to prove to an auditor that a payment has been made without revealing this to anyone other than the auditor. Both the payer and payee can generate a scalar. ZmnSCPxj suggests that probably the correct order for this would be for the payer to instantiate the Scriptless Script payment to the payee first, then the payee instantiating the change back to the payer. The protocol can be aborted by one participant, which will lead to spending onchain fees to back out of the protocol. CoinSwap overhead approaches the overhead of setting up a temporary Lightning Network channel, thus it might actually be better to implement all CoinSwap protocols over Lightning instead. The proposal is an active misleading of chain analysis and is even possible today with 2p-ECDSA to make it use P2WPKH with Scriptless Script. However, it involves more transactions than Payjoin, making it more expensive in blockspace. The Payswap payment flow has been under consideration by the community but its implementation may still need further development.</summary>
    <published>2020-01-21T04:38:07+00:00</published>
  </entry>
</feed>
