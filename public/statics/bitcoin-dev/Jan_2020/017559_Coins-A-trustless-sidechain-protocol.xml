<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Coins: A trustless sidechain protocol</title>
  <updated>2023-06-13T23:11:15.310740+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-13 02:33:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Coins: A trustless sidechain protocol</title>
    <updated>2023-06-13T23:11:15.310740+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017559.html" rel="alternate"/>
    <summary>The writer discusses the limitations of Lightning Network (LN) and sidechains, suggesting that connecting sidechains via LN could provide the best of both worlds. The LN works well for those who are always online, can afford BTC transactions, and have BTC to manage channels' inbound-capacity. However, the next billion users do not fit this category, and as Bitcoin becomes more popular, fewer people can afford LN channels. Custodial solutions are a workaround for small amounts, but scaling this globally is not desirable since it requires trusting banks. The writer proposes making internal ledgers public and trustless through independent sidechains, which would allow decentralized blockchains to scale up to a couple million UTXOs with cross-chain communication possible via atomic swaps and LN. The advantages of end-users "living" in sidechains instead of directly in LN include no bitcoin blockspace required for onboarding new users, no need to lock funds, stay online, pay watchtowers or store channel histories, and account balances can be much smaller than BTC TX fees. The writer suggests using multiparticipant offchain updateable cryptocurrency systems such as "channel factories" instead of sidechains. Poon-Dryja, Decker-Wattenhofer, Decker-Russell-Osuntokun constructions, and future such constructions can host any contract that its lower layer can support. Anything that can be put onchain can generally be put offchain, so why use a chain at all except as an ultimate anchor to reality? Poon-Dryja supports only two participants, while Decker-Wattenhofer has limits due to its use of decrementing relative timelocks, so the payment layer can be put in a bunch of Poon-Dryja channels while creating a layer that supports changes to the channel topology and is multiparticipant to scale. The author suggests that instead of using sidechains, channel factories can be used, and only customers need to know internal ledgers, signing off on ledger updates.</summary>
    <published>2020-01-13T02:33:21+00:00</published>
  </entry>
</feed>
