<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PubRef - Script OP Code For Public Data References</title>
  <updated>2023-06-13T20:10:50.602872+00:00</updated>
  <author>
    <name>Mike Brooks 2019-07-27 20:03:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PubRef - Script OP Code For Public Data References</title>
    <updated>2023-06-13T20:10:50.602872+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017178.html" rel="alternate"/>
    <summary>In this email exchange, Mike and ZmnSCPxj discuss the potential benefits and drawbacks of adding an extra opcode to the SCRIPT language used in Bitcoin transactions. Mike argues that the opcode could compress SegWit transactions by 40% and save costs without compromising privacy. ZmnSCPxj raises concerns about the potential for the opcode to encourage pubkey reuse and the fact that a SCRIPT can only access data in the transaction that triggers its execution. They also discuss the need for a database to resolve public references and the computational effort required to maintain it. ZmnSCPxj notes that chain tips are not immutable and can be replaced, so any data referred to using the new opcode can only be referenced if buried under 100 blocks. They also suggest that the creation of a side-chain of indexes could address some of the concerns raised.</summary>
    <published>2019-07-27T20:03:39+00:00</published>
  </entry>
</feed>
