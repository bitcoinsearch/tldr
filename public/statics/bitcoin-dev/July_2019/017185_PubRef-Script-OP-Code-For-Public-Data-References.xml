<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PubRef - Script OP Code For Public Data References</title>
  <updated>2023-06-13T20:10:16.122637+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-07-29 03:39:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PubRef - Script OP Code For Public Data References</title>
    <updated>2023-06-13T20:10:16.122637+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017185.html" rel="alternate"/>
    <summary>In a recent conversation between two individuals named Mike and ZmnSCPxj, the topic of transaction pruning in Bitcoin Core was discussed. While ZmnSCPxj acknowledged the need for pruning to improve scalability, they argued that it could cause issues with a future `OP_PUBREF` referencing pruned data. Pruning involves validating all transactions and then discarding transaction data after validation, while keeping only the UTXO set of all addresses. Thus, if a block references an `OP_PUSHDATA` in a pruned block, how can a pruned validator access the necessary data? It is important to note that pruned nodes are still fullnodes and validate all transactions, not just those involving their wallet.</summary>
    <published>2019-07-29T03:39:15+00:00</published>
  </entry>
</feed>
