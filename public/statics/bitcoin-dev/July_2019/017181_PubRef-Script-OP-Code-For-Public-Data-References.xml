<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PubRef - Script OP Code For Public Data References</title>
  <updated>2023-06-13T20:09:13.921682+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-07-29 01:46:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PubRef - Script OP Code For Public Data References</title>
    <updated>2023-06-13T20:09:13.921682+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017181.html" rel="alternate"/>
    <summary>In an email conversation between Mike Brooks and ZmnSCPxj, the latter suggested using 100 blocks for maturity of miner coinbases. When questioned about the choice of this number, ZmnSCPxj explained that there is a potential for a targeted attack where a large payout going to a `scriptPubKey` that uses `OP_PUBREF` on a recently confirmed transaction could be replaced with one that pays to a different public key, via a history-rewrite attack. This attack can be carried out by miners, which is why 100 blocks might be acceptable as a safeguard against such attacks. The exact number chosen depends on the risk appetite.Furthermore, when Mike Brooks mentioned validators only needing an array of PUSHDATA elements to validate any given SCRIPT at O(1), ZmnSCPxj disagreed, stating that data derived from over 220GB of perpetually-growing blockchain would not fit in memory for many devices that are practical for running full nodes. The indexing and retention of this data is the problem, even more so since current pruned nodes did not retain that data and would be forced to re-download the entire blockchain.</summary>
    <published>2019-07-29T01:46:40+00:00</published>
  </entry>
</feed>
