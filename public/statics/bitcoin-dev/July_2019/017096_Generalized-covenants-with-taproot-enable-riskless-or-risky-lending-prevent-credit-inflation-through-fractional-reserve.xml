<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalized covenants with taproot enable riskless or risky lending,	prevent credit inflation through fractional reserve</title>
  <updated>2023-06-13T19:58:39.695634+00:00</updated>
  <author>
    <name>Eric Voskuil 2019-07-04 16:43:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalized covenants with taproot enable riskless or risky lending,	prevent credit inflation through fractional reserve</title>
    <updated>2023-06-13T19:58:39.695634+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017096.html" rel="alternate"/>
    <summary>The discussion revolves around the potential use of temporarily accessible UTXOs in Bitcoin. One potential use case is for spam protection in a "Bitcoin Classified Ads Network". Advertisements are backed by unspent TXOs, and nodes preferentially keep advertisements with higher UTXO values divided by advertisement size. Spammers would need to rent larger UTXO values or resort to pre-Bitcoin spamming methods. The amount of encumbered coin is relevant to an external observer, and the devolution to 1 sat tracking is only necessary for simple tracking. In establishing a meaningful cost for the output, the cost of encumbrance includes at least one transaction fee and the market cost of the coin rental. The consumed cost, not the encumbered coin face value, matters in this scenario. It is suggested that advertisers simply burn .1 coin for the same privilege, just as miners burn energy. However, it may make more sense to spend that coin in support of the secondary network, paying for confirmation security. While the basic concept of renting a UTXO of substantial value appears sound, generalized covenants are not quite supported as the use-case is already possible on current Bitcoin.</summary>
    <published>2019-07-04T16:43:45+00:00</published>
  </entry>
</feed>
