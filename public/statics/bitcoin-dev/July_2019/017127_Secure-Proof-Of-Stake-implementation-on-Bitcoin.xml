<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Secure Proof Of Stake implementation on Bitcoin</title>
  <updated>2023-06-13T20:03:45.054369+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-07-18 01:13:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Secure Proof Of Stake implementation on Bitcoin</title>
    <updated>2023-06-13T20:03:45.054369+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017127.html" rel="alternate"/>
    <summary>The trust-minimization requirement of Bitcoin requires a consensus algorithm that can get all nodes into agreement about the global state, even after a network partition. A proposal from Kenshiro fails to achieve this without trust in some node under adversarial conditions. History rewrite attacks are worse than censorship because they can be used to steal funds. It is possible to evade detection of malicious behavior in PoS by running multiple masternodes and splitting staking funds among them. Consensus rules should not be based on mempool state as it is not committed to every block. Ethereum's proposed PoS implementation is different from other proposals.</summary>
    <published>2019-07-18T01:13:27+00:00</published>
  </entry>
</feed>
