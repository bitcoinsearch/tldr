<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CoinShuffle: decentralized CoinJoin without trusted third parties</title>
  <updated>2023-06-09T01:53:19.461370+00:00</updated>
  <author>
    <name>Tim Ruffing 2014-08-11 11:38:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CoinShuffle: decentralized CoinJoin without trusted third parties</title>
    <updated>2023-06-09T01:53:19.461370+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006492.html" rel="alternate"/>
    <summary>In this conversation, the participants are discussing the possibility of using lightweight clients in a protocol. They acknowledge that the worst-case scenario for these clients is that a transaction will not confirm, which could lead to a DoS attack. For clients relying on servers, it is reasonable to trust these servers to prevent such attacks. However, for SPV-clients without servers, they need to consider alternative solutions, such as getUTXO or verifying the validity of the transaction that created the input designated for mixing. The only remaining issue would be if the input had been spent already, but one honest client with full information could provide a signed transaction that spends the money, convincing even SPV-clients that the participant with this input is cheating. They also consider the possibility of using merkle proofs for inputs, though this would require at least one confirmation. Overall, they are working to find a policy for lightweight clients to ensure the security of the protocol.</summary>
    <published>2014-08-11T11:38:39+00:00</published>
  </entry>
</feed>
