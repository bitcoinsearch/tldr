<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Encrypt bitcoin messages</title>
  <updated>2023-06-09T02:13:55.683381+00:00</updated>
  <author>
    <name>Mike Hearn 2014-08-20 14:37:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Encrypt bitcoin messages</title>
    <updated>2023-06-09T02:13:55.683381+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006553.html" rel="alternate"/>
    <summary>The author suggests upgrading the P2P protocol with MAC keys and a simple home-grown encryption layer to prevent deanonymization of Bitcoin users by intelligence agencies. The encryption of link-level traffic would make it significantly harder for such attacks, possibly to the point of being unprofitable. While Tor is not a complete solution, SPV clients connecting to Core nodes are the most interesting links to monitor. Java SPV clients have an easy bundled Tor client option, but clients not based on bitcoinj would need to use the full-blown Tor client, which is difficult to bundle and potentially exploitable. Implementing a full Tor client is not reasonable to ask of a wallet developer, but HMAC checks and a simple ECDH exchange + AES would be realistic.</summary>
    <published>2014-08-20T14:37:24+00:00</published>
  </entry>
</feed>
