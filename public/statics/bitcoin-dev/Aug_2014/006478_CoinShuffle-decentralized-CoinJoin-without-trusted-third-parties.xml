<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CoinShuffle: decentralized CoinJoin without trusted third parties</title>
  <updated>2023-06-09T01:53:56.351259+00:00</updated>
  <author>
    <name>Tim Ruffing 2014-08-09 10:04:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CoinShuffle: decentralized CoinJoin without trusted third parties</title>
    <updated>2023-06-09T01:53:56.351259+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006478.html" rel="alternate"/>
    <summary>The discussion revolves around the system issues of CoinShuffle, a decentralized and secure mixing protocol. The communication between Alice, Bob, Charlie, and Dave is established using direct connections to a randomly elected leader who is responsible for broadcasts. CoinShuffle guarantees unlinkability between input and output addresses irrespective of the underlying network used; Coinmux uses TomP2P, a distributed hash table, for communication. Sybil attacks pose a challenge in ensuring that mixing partners are not malicious users. However, it can be made hard for the attacker to put an honest user together only with malicious users by dividing the users to individual groups, i.e., CoinJoins runs whose assignment cannot be influenced by the attacker. For the initial setup step, i.e., creating the pool of participants, a bulletin board is required, which could use an underlying peer-to-peer network like Bitcoin or chans in Bitmessage. Alternatively, several servers could act as bulletin boards, or the announcement messages could be included in the Bitcoin blockchain. It's possible to combine these approaches by joining several pools. A social solution could involve friends revealing that their address is in a particular run. Though no perfect solution exists, several proposals work well enough if implemented correctly.</summary>
    <published>2014-08-09T10:04:51+00:00</published>
  </entry>
</feed>
