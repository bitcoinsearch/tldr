<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CoinShuffle: decentralized CoinJoin without trusted third parties</title>
  <updated>2023-06-09T01:53:31.708497+00:00</updated>
  <author>
    <name>Mike Hearn 2014-08-11 12:08:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CoinShuffle: decentralized CoinJoin without trusted third parties</title>
    <updated>2023-06-09T01:53:31.708497+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006493.html" rel="alternate"/>
    <summary>The discussion revolves around the efficacy of coinjoin. The concern was raised that the input could have already been spent, which would make it invalid. In such a scenario, a signed transaction that spends the money would be sufficient to convince even SPV-clients that the participant with these inputs is trying to cheat. However, getutxo cannot return the spending transaction as the UTXO set doesn't record this information. If you have enough peers and one is honest, the divergence can be detected, and the operation stopped or the user alerted. But, if all peers are lying, and your internet connection is controlled by an attacker, it wouldn't make much difference as they could swallow the transaction you're trying to broadcast anyway. Ultimately, if your peers think a TXO is spent and refuse to relay transactions that spend them, you can't do much about it even in the non-SPV context. You must be able to reach at least one peer who believes in the same world as you do.</summary>
    <published>2014-08-11T12:08:24+00:00</published>
  </entry>
</feed>
