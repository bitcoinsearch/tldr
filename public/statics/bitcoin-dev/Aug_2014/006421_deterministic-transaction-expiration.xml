<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>deterministic transaction expiration</title>
  <updated>2023-06-09T01:44:54.876860+00:00</updated>
  <author>
    <name>Jeff Garzik 2014-08-06 12:55:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>deterministic transaction expiration</title>
    <updated>2023-06-09T01:44:54.876860+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006421.html" rel="alternate"/>
    <summary>The discussion revolves around the idea of using nLockTime for transaction expiration and its potential impact on payment channel refunds and other active uses of nLockTime. It is argued that any approach based on beginning a transaction expiry countdown when a transaction is received seems unviable as it leaves nodes susceptible to re-accepting forgotten transactions. The use of nLockTime for expiration would prevent transaction creators from lying to help transactions live longer without pushing initial confirmation eligibility into the future. This could enable "fill or kill" transactions with a backdated nLockTime, which must be confirmed in a few blocks or start vanishing from mempools. However, existing users and uses of nLockTime could become worthless if they fail to be confirmed before some arbitrary deadline being set. The discussion was held on the Bitcoin-development mailing list.</summary>
    <published>2014-08-06T12:55:51+00:00</published>
  </entry>
</feed>
