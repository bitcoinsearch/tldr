<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP: Custodial Identities</title>
  <updated>2023-06-09T02:24:58.246119+00:00</updated>
  <author>
    <name>21E14 2014-08-21 02:32:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP: Custodial Identities</title>
    <updated>2023-06-09T02:24:58.246119+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006555.html" rel="alternate"/>
    <summary>The author of this message is proposing the creation of an optional identity layer for Bitcoin called Custodial Identities. This layer would be managed by a Bitcoin Assigned Custodial Identities Authority which would delegate Custodial Identity Spaces to Regional Bitcoin Custodial Identity Registries. A Bitcoin Custodial Identity (BCI) account address would consist of a Custodial Identifier allocated by the BACIA/RBCIRs and an account address, allowing for dispute resolution in the legal system for transactions in the BCI address space. This proposal suggests that Custodial Identities could be applied to coinbase transactions as well, providing further incentive to keep nodes honest or enabling a recovery mechanism in catastrophic failure events. Custodians would provide account addresses out of unused address space, alleviating address collisions as a psychological barrier to adoption. The proposal also suggests that custodial to non-custodial transactions could behave much like the UTXO of a coinbase transaction, based on open market competition. Overall, the author believes that there are many applications beyond dispute resolution for Custodial Identities, if they can be effortlessly injected into the blockchain itself as easily as providing 1-of-2 public keys. The proposal is open for feedback and discussion on the mailing list.</summary>
    <published>2014-08-21T02:32:29+00:00</published>
  </entry>
</feed>
