<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>deterministic transaction expiration</title>
  <updated>2023-06-09T01:47:32.233635+00:00</updated>
  <author>
    <name>Peter Todd 2014-08-01 01:06:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>deterministic transaction expiration</title>
    <updated>2023-06-09T01:47:32.233635+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-August/006398.html" rel="alternate"/>
    <summary>The proposal suggests a way to add finite and predictable lifespans to transactions in mempools using nLockTime and a new standardness rule. This could be done in stages, without requiring even a soft fork and would not cause problems with reorgs. Transactions would stop being relayed and drop out of mempools a fixed number of blocks from their creation. However, it is argued that anything that changes the semantics of nLockTime will harm existing and future applications. Additionally, lifetimes will never be deterministic as not everyone runs the same software. In response to the proposal, it is suggested that if one wants to double-spend transactions with higher fees, then implement replace-by-fee. Furthermore, there are concerns that someone will circumvent this IsStandard() rule by submitting "expired" transactions directly to miners with suitable policies. Despite that, a user who needed to get their original "expired" transaction confirmed could still do so by submitting it directly to a miner with suitable policies.</summary>
    <published>2014-08-01T01:06:57+00:00</published>
  </entry>
</feed>
