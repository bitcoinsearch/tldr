<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Optional "wallet-linkable" address format - Payment Protocol</title>
  <updated>2023-06-06T18:55:03.968667+00:00</updated>
  <author>
    <name>Alan Reiner 2013-06-19 20:10:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Optional "wallet-linkable" address format - Payment Protocol</title>
    <updated>2023-06-06T18:55:03.968667+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-June/002786.html" rel="alternate"/>
    <summary>The discussion is about the use of PubKey and ChainCode for forming a persistent relationship between two parties using BIP32. The author suggests that exchanging PubKey and ChainCode beforehand can help in transaction securely forever without ever exchanging any more information, and without any address reuse. They propose that wallets should always dedicate a new child node {PubKey, ChainCode} to each party they transact with. The wallet can organize the contacts and roll-up the transaction history into 'ledgers' and 'balances' based on the underlying BIP32 hierarchy or not. However, there are different use cases where some might prefer having a different parent public key [and chaincode] per contact, some may prefer to synchronize across many contacts. The author suggests that both methods can be options. It doesn't have to be specific to the payment protocol; it can just be alternative address encoding that some apps would use if they have a need for it.</summary>
    <published>2013-06-19T20:10:29+00:00</published>
  </entry>
</feed>
