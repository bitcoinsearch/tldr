<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: MultiBit as default desktop client on bitcoin.org</title>
  <updated>2023-06-06T19:21:46.231714+00:00</updated>
  <author>
    <name>Mike Hearn 2013-06-28 09:05:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: MultiBit as default desktop client on bitcoin.org</title>
    <updated>2023-06-06T19:21:46.231714+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-June/002842.html" rel="alternate"/>
    <summary>The Bitcoinj had a number of issues in the past, particularly with frequent deadlocks. The concurrency was redone to fix it and core locks are now cycle detecting. One deadlock issue still exists though, due to the network library Netty. Netty has some serious design issues internally and is not adding much value for Bitcoinj's use case. Other concerns, such as no proxy support, address reuse, and unclear confirmation levels, have not been fully corrected. However, the primary privacy issue with Bitcoinj is leaks via the block chain rather than the network layer. The distinction between confirmation levels is not very clear in the iconography, but this is more of a presentation issue than a limitation of the library. Overall, Bitcoinj is still being improved with changes to the concurrency design to improve the API.</summary>
    <published>2013-06-28T09:05:51+00:00</published>
  </entry>
</feed>
