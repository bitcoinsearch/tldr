<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Optional "wallet-linkable" address format - Payment Protocol</title>
  <updated>2023-06-06T18:58:46.013833+00:00</updated>
  <author>
    <name>Alan Reiner 2013-06-19 19:00:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Optional "wallet-linkable" address format - Payment Protocol</title>
    <updated>2023-06-06T18:58:46.013833+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-June/002783.html" rel="alternate"/>
    <summary>In an email exchange, Adam Back suggested a method to simplify and make compatible with existing type2 public keys. The method involves sending an ECDSA signature of the multiplier which can be used to compute the parent public key. However, requiring a signature on each multiplier defeats the purpose of a deterministic wallet. Alan argued that in cases with a persistent business relationship, the parent public key is already verified and does not need to be transmitted. Furthermore, computing an alternate {PubKey', Mult'} that produces the same address and then using it in a MitM attack doesn't work here if the two parties pre-verified the public keys. In the case that a business is checking whether the cashout address of a customer is the same as the last time, if the first payout was not replaced by an attacker, then the business already has the correct public key in their DB.</summary>
    <published>2013-06-19T19:00:42+00:00</published>
  </entry>
</feed>
