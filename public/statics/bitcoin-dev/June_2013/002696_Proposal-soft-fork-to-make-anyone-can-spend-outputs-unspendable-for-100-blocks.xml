<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: soft-fork to make anyone-can-spend outputs unspendable for 100 blocks</title>
  <updated>2023-06-06T18:26:27.840286+00:00</updated>
  <author>
    <name>Melvin Carvalho 2013-06-03 23:43:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: soft-fork to make anyone-can-spend outputs unspendable for 100 blocks</title>
    <updated>2023-06-06T18:26:27.840286+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-June/002696.html" rel="alternate"/>
    <summary>Peter Todd, a Bitcoin developer, wrote on the Bitcoin-development mailing list about the most compact way to sacrifice Bitcoins that does not involve making them unspendable. He suggested creating an anyone-can-spend output as the last txout in the coinbase of a block with scriptPubKey: OP_TRUE. However, this mechanism needs miner support and cannot be securely paid for or assured through a contract. Todd also discussed another option, which is an anyone-can-spend in a regular txout, but there is no way to prevent a miner from including a transaction spending that txout in the same block. To solve this problem, he proposed adding a rule where txouts ending in OP_TRUE are unspendable for 100 blocks, similar to coinbases. This can be done as a soft-fork with 95% support. Along with that change, anyone-can-spend outputs should be made IsStandard() so they will be relayed. The alternative to sacrifices to unspendable outputs is sending the money to miners to further strengthen the security of the network, but Todd believes it is very undesirable compared to the proposed solution. In conclusion, Todd emphasized the importance of making it easy for people to write code that does what is best for Bitcoin.</summary>
    <published>2013-06-03T23:43:27+00:00</published>
  </entry>
</feed>
