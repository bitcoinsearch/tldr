<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>is there a way to do bitcoin-staging?</title>
  <updated>2023-06-06T17:15:38.886920+00:00</updated>
  <author>
    <name>Adam Back 2013-06-13 13:39:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>is there a way to do bitcoin-staging?</title>
    <updated>2023-06-06T17:15:38.886920+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-June/002749.html" rel="alternate"/>
    <summary>The author suggests a "fair" merged mining aiming for price parity between altcoins and BTC. The miner would have to choose between the altcoin or BTC at mine time, with the altcoin chain considering BTC unspendable and Bitcoin considering altcoin chain unspendable. The validation process for miners would imply verification of both chains. A hypothetical pure zerocoin altcoin is considered that retains a fair merged mine and exchangeless tradeability with main bitcoin. The author further talks about exchangeless tradeability and contract-based proposals that have race conditions and ransom issues. Matthew Green's idea of homomorphic amounts is discussed, which is like a Brands credential where you can prove in ZK that two attributes sum to a given value without revealing the attributes at all. The author also proposes a way to experiment with new features such as committed coins without imposing a big testing burden on bitcoin main through a form of merged mining. This could be a live system, with real value, but intentionally wanting to avoid forking bitcoin parameters, nor value, nor mindshare dilution.</summary>
    <published>2013-06-13T13:39:32+00:00</published>
  </entry>
</feed>
