<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Vote on the blocksize limit with proof-of-stake voting</title>
  <updated>2023-06-06T18:42:08.965627+00:00</updated>
  <author>
    <name>Melvin Carvalho 2013-06-10 08:14:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Vote on the blocksize limit with proof-of-stake voting</title>
    <updated>2023-06-06T18:42:08.965627+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-June/002733.html" rel="alternate"/>
    <summary>On June 10th, 2013, John Dillon proposed a Proof-of-Stake voting system for determining the blocksize limit in Bitcoin. This would provide a way to balance the asymmetrical power relationship between miners and other Bitcoin participants in deciding the blocksize. The upper limit on the blocksize would be determined by the median of all votes, where each txout in the UTXO set is one vote weighted by txout value. A txout without a corresponding vote is considered to be a vote for the status quo. Votes would consist of a txout with a specific scriptPubKey and scriptSig. To prevent DoS attacks, only votes with known vote_id's will be accepted, and only for txid:vout's already in the blockchain, and a record of txouts for whom votes have already broadcast will be kept. Miners wishing to increase the blocksize can record these votes and include them in the blocks they mine as required. At the beginning of every year, the value considered to be the status quo resets to the mean of the limit at the beginning and end of the interval. This rolling median and periodic reset process ensures that the limit changes gradually and is not influenced by temporary events such as hacks to large exchanges or malicious wallet software. The voting mechanism can be used for additional votes with an additional vote_id. However, coercion and vote buying are possible in this system. Establishing methods of voting can lead to single points of failure. Unless there's a very good reason not to, we should stick with 1 CPU one vote.</summary>
    <published>2013-06-10T08:14:01+00:00</published>
  </entry>
</feed>
