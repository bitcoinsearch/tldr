<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A design for Probabilistic Partial Pruning</title>
  <updated>2023-06-14T18:39:10.842328+00:00</updated>
  <author>
    <name>Yuval Kogman 2021-02-27 22:09:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A design for Probabilistic Partial Pruning</title>
    <updated>2023-06-14T18:39:10.842328+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018487.html" rel="alternate"/>
    <summary>A proposal to increase data redundancy and share the load across nodes has been submitted by Keagan McClelland to the bitcoin-dev community. The proposal aims to alleviate the pressure of full archive nodes on the IBD problem. As a part of this approach, fountain codes are used to create an infinite stream of codewords that can be XORed to recover the full message. SeF, an approach that employs fountain codes, was presented at Scaling Bitcoin 2019. Droplet nodes in SeF retain a fixed number of codewords from the encoding concatenated blocks and serve them to compatible clients. This is considered more robust than retaining a random sample of blocks and performs well according to simulations. The theory of fountain codes and its variants should be of interest, and there is also work on fountain codes in an adversarial setting.</summary>
    <published>2021-02-27T22:09:48+00:00</published>
  </entry>
</feed>
