<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Yesterday's Taproot activation meeting on lockinontimeout (LOT)</title>
  <updated>2023-06-14T17:58:52.761993+00:00</updated>
  <author>
    <name>Jorge Timón 2021-02-22 16:48:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Yesterday's Taproot activation meeting on lockinontimeout (LOT)</title>
    <updated>2023-06-14T17:58:52.761993+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018468.html" rel="alternate"/>
    <summary>In a recent email exchange on the bitcoin-dev mailing list, Jorge Timón proposed a solution to avoid forks in the event of consensus changes. He suggested that those opposing the change could run a client where the "must" is turned into a "must not." This would prevent the activation of the change when miners signal it. By doing this, both sides of the community can remain on the same chain without causing any forks. Matt Corallo agreed with the idea but pointed out that there is still some technical complexity involved in making such a change. In another part of the conversation, Anthony Towns discussed the potential risks involved in a UASF-style command line option that allows consensus rule changes in the short term. Despite these concerns, the conversation remained focused on finding ways to avoid forks caused by consensus changes.</summary>
    <published>2021-02-22T16:48:55+00:00</published>
  </entry>
</feed>
