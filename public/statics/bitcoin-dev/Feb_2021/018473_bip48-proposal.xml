<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bip48 proposal</title>
  <updated>2023-06-14T16:45:18.379342+00:00</updated>
  <author>
    <name>dentondevelopment 2021-02-24 14:02:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bip48 proposal</title>
    <updated>2023-06-14T16:45:18.379342+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018473.html" rel="alternate"/>
    <summary>Fontaine, a developer in the Bitcoin community, provided an update on the "bip48" proposal. The purpose of the BIP is to define an already existing standard that is used in practice across multi-sig wallets. A few key points were brought up during the discussion on Twitter between a few multi-sig wallet developers. One such point was that a `script_type` should not be defined as a path level; otherwise, it could lead to the loss of funds and backward compatibility broken. Another point was that no-one uses the legacy derivation path m/48'/0'/0'/1', so Fontaine removed all references to legacy p2sh derivations in the proposed bip. There was also a suggestion to include a defined "wild card" in the script_type level to define any future address types (e.g. taproot). While Fontaine agreed this could be useful, he thinks a future multi-sig standard for new address types may well be suited for a different BIP which could also address the concern around including `script_type` at all. Therefore, he has not yet added any mention of "wild card" in the proposed bip but kept strictly to p2sh-p2wsh and p2wsh derivations as used in modern-day wallets. Fontaine created a PR so that anyone can easily comment on it, and any concerns can be raised. He believes the community needs this proposal, and it is overdue. He has gotten positive feedback and support from other developers. Feedback is welcome.</summary>
    <published>2021-02-24T14:02:00+00:00</published>
  </entry>
</feed>
