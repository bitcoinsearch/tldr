<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP32/43-based standard for Schnorr signatures &amp; decentralized identity</title>
  <updated>2023-06-14T17:22:20.203601+00:00</updated>
  <author>
    <name>Dr Maxim Orlovsky 2021-02-11 14:38:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP32/43-based standard for Schnorr signatures &amp; decentralized identity</title>
    <updated>2023-06-14T17:22:20.203601+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018397.html" rel="alternate"/>
    <summary>Dr. Maxim Orlovsky had a discussion with Peter Wuille on different topics regarding key derivations, security, key tweaks in context of Schnorr signatures &amp; Taproot. They discussed the need for a new BIP-43 based BIP with a new purpose field for keys used in Schnorr signatures. Keys used in Schnorr signatures must never be used in ECDSA signatures, otherwise there is a risk of private key leak via correlation attack. The issues discussed were reasons to avoid reusing the same key for privacy reasons and reasons to avoid using related keys for cryptographic reasons. Reusing the same key in Bitcoin scripts - for use in distinct signature schemes or not - should always be avoided. It has obvious privacy implications. There are some concerns to address while using related keys across ECDSA and Schnorr, but no known attacks against usage of related keys exist. In conclusion, one should use separate keys/derivation branches for different uses in all circumstances for privacy reasons, and to stay within the realm of provably security it's advisable to make sure ECDSA key and Schnorr keys use distinct hardened derivation steps.</summary>
    <published>2021-02-11T14:38:57+00:00</published>
  </entry>
</feed>
