<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP37: 'getdata' request for filtered blocks is answered with 'merkleblock's even if no filter is set</title>
  <updated>2023-06-14T00:31:54.843134+00:00</updated>
  <author>
    <name>Sebastian Falbesoner 2020-04-02 15:26:40</name>
  </author>
  <author>
    <name>Sebastian Falbesoner 2020-04-02 15:26:40</name>
  </author>
  <author>
    <name>Sebastian Falbesoner 2020-04-02 15:26:40</name>
  </author>
  <link href="bitcoin-dev/April_2020/017743_BIP37-getdata-request-for-filtered-blocks-is-answered-with-merkleblock-s-even-if-no-filter-is-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017743_BIP37-getdata-request-for-filtered-blocks-is-answered-with-merkleblock-s-even-if-no-filter-is-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017743_BIP37-getdata-request-for-filtered-blocks-is-answered-with-merkleblock-s-even-if-no-filter-is-set.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP37: 'getdata' request for filtered blocks is answered with 'merkleblock's even if no filter is set</title>
    <updated>2023-06-14T00:31:54.843134+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017743.html" rel="alternate"/>
    <summary>Sebastian, an independent researcher, has discovered a peculiar behavior in BIP37 bloom filters during his experimentation with the functional test for p2p_filter.py. According to BIP37, 'getdata' commands are only responded to if a filter is set. However, when no BIP37 is set and a filtered block is requested, there should be no response from the node. Instead, there is always a 'merkleblock' message received in reply due to a default filter that matches everything introduced in v0.8.4.This issue has resulted in some "dead code"-spots in the code base since the else-branch is never executed whenever there is a check if a filter is set. Sebastian is seeking suggestions on how to deal with this problem. For those interested in reproducing this issue and understanding the relevant code parts, further details can be found on the corresponding GitHub issue #18483. Andreas Schildbach has already pointed out that this could be a problem for clients and suggests that the connection should be dropped to clients requesting filtered blocks without any filter set.</summary>
    <published>2020-04-02T15:26:40+00:00</published>
  </entry>
</feed>
