<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-06-14T00:39:19.081851+00:00</updated>
  <author>
    <name>David A. Harding 2020-04-22 20:28:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-06-14T00:39:19.081851+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017773.html" rel="alternate"/>
    <summary>In a discussion about implementing a reject message with an extension that returns the transaction IDs of any conflicts, Antoine Riard raised concerns that an attacker could create a local conflict in the mempool. However, Dave countered that a mempool is not necessary to send a transaction and suggested opening connections to random Bitcoin nodes directly, which is what a lite client would do. If the pinned transaction is in the mempools of a significant number of Bitcoin nodes, it should take just a few random connections to find one of those nodes, learn about the conflict, and download the pinned transaction. Alternatively, Dave suggested finding another way to poll a significant number of people with mempools, such as BIP35 mempool messages or reusing the payment hash in a bunch of 1 msat probes to LN nodes who opt-in to scanning their bitcoind's mempools for a corresponding preimage.</summary>
    <published>2020-04-22T20:28:13+00:00</published>
  </entry>
</feed>
