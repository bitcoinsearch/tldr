<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-06-14T00:33:07.813295+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-04-23 04:50:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-06-14T00:33:07.813295+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017783.html" rel="alternate"/>
    <summary>The proposal by Matt suggests changing the contract text in Poon-Dryja channels to allow B and C to agree and show the preimage of some hash H instead of C claiming with a preimage. B provides a signature spending the hashlock branch, to a transaction with normal payment to C and hook output to both B and C for CPFP. This avoids a pinned transaction issue where B is unable to get its timelock-branch transaction in the mempools of miners. Naively, this may seem strange as it allows an undesirable transaction into the mempool that is difficult to evict. However, the reason behind purposely making eviction difficult is to prevent certain DoS attacks on Bitcoin nodes. The author suggests limiting the size of low fee-rate packages so that mempools drop incoming transactions that extend a low-fee-rate tree of transactions to prevent such attacks instead of retaining the 'cannot evict high absolute fee' rule. This would be workable as a general solution to solve the root cause of this problem.</summary>
    <published>2020-04-23T04:50:09+00:00</published>
  </entry>
</feed>
