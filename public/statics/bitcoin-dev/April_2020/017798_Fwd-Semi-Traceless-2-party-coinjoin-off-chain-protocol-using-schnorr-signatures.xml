<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fwd: (Semi)Traceless 2-party coinjoin off-chain protocol using schnorr signatures</title>
  <updated>2023-06-14T00:55:25.630545+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-04-29 07:56:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fwd: (Semi)Traceless 2-party coinjoin off-chain protocol using schnorr signatures</title>
    <updated>2023-06-14T00:55:25.630545+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017798.html" rel="alternate"/>
    <summary>The author of the text has been considering CoinSwap and shares unorganized thoughts on it. They suggest interoperating with JoinMarket and retaining compatibility with its wallet structure. The author is uncertain about handling multitransactions in CoinSwap when considering the mixdepth system and suggests using UTXOs from different mixdepths for each transaction. The author believes that adding CoinSwap to JoinMarket may be better than attempting to detach a market-for-CoinSwap. The text discusses multi-transaction CoinSwaps and suggests that users should send one UTXO to a CoinSwap address instead of splitting it up. It also suggests using any CoinSwap app for spending rather than just mixing back to oneself to avoid accidentally co-spending all CoinSwap outputs in the same transaction. The author proposes creating false positives to build privacy in CoinSwap by requiring standard swap amounts, randomly selecting existing 1-input 1-output transactions, and swapping them for the same sum.Overall, the text provides insights into the use of CoinSwap and how it could interoperate with JoinMarket, handle multi-transactions, and build privacy through false positives.</summary>
    <published>2020-04-29T07:56:16+00:00</published>
  </entry>
</feed>
