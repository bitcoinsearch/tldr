<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-06-14T00:34:40.673992+00:00</updated>
  <author>
    <name>David A. Harding 2020-04-22 18:24:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-06-14T00:34:40.673992+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017770.html" rel="alternate"/>
    <summary>In Lightning-dev mailing list, Matt Corallo reported that a lightning counterparty (C) could spend an HTLC using the preimage with a low-fee transaction if B broadcasts the commitment transaction. This would leave B short the HTLC value, and A could claim it from B via the timeout mechanism. The main problem is that Bob will broadcast a transaction without realizing it conflicts with a pinned transaction in most node's mempools. Dave suggested re-implementing something like a BIP61 reject message but with an extension that returns the txids of any conflicts. Bob could get the pinned transaction, parse out its preimage, and resolve the HTLC. However, this approach isn't perfect because one of the problems that caused BIP61 to be disabled in Bitcoin Core was its unreliability.</summary>
    <published>2020-04-22T18:24:54+00:00</published>
  </entry>
</feed>
