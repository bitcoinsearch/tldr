<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-05-20T22:08:00.451236+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 04:18:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-05-20T22:08:00.451236+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017761.html" rel="alternate"/>
    <summary>The Lightning protocol faces a severe issue where a counterparty can spend an HTLC using the preimage with a low-fee, RBF-disabled transaction if the commitment transaction is broadcasted. ZmnSCPxj suggests adding an RBF carve-out output to HTLC-Timeout, which allows B to exponentially increase the fee as L+1 approaches. With this, B can prevent C from stealing the HTLC value since the UTXO it could steal from has already been spent. The additional output bloats the UTXO set, but Decker-Russell-Osuntokun sidesteps this issue as any timed-out HTLC can be claimed with a fee-bumpable transaction directly without RBF-carve-out. It seems possible to upgrade a Poon-Dryja channel to a Decker-Russell-Osuntokun channel without on-chain activity. If a relay path exists to a miner running full RBF, then B's higher fee rate spend will win over. However, if the malicious node uses a non-RBF signalled transaction to sweep their HTLC, then we enter into another level of race, but this time on the mempool propagation level.</summary>
    <published>2020-04-22T04:18:29+00:00</published>
  </entry>
</feed>
