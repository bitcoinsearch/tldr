<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - PSBT in QR codes</title>
  <updated>2023-06-14T01:03:16.203564+00:00</updated>
  <author>
    <name>Riccardo Casatta 2020-04-27 20:11:43</name>
  </author>
  <author>
    <name>Riccardo Casatta 2020-04-27 20:11:43</name>
  </author>
  <author>
    <name>Riccardo Casatta 2020-04-27 20:11:43</name>
  </author>
  <author>
    <name>Christopher Allen 2020-04-28 01:47:26</name>
  </author>
  <author>
    <name>Christopher Allen 2020-04-28 01:47:26</name>
  </author>
  <author>
    <name>Christopher Allen 2020-04-28 01:47:26</name>
  </author>
  <link href="bitcoin-dev/April_2020/017794_PSBT-in-QR-codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017794_PSBT-in-QR-codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017794_PSBT-in-QR-codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017795_PSBT-in-QR-codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017795_PSBT-in-QR-codes.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2020/017795_PSBT-in-QR-codes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - PSBT in QR codes</title>
    <updated>2023-06-14T01:03:16.203564+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017794.html" rel="alternate"/>
    <summary>The discussion focuses on how to encode a partially signed bitcoin transaction (PSBT) in QR codes. While the specification allows for up to 3706 bytes of data in a version 40 QR code, practical limitations and the size of PSBTs mean that it cannot fit in one code. Various proposals have been suggested, including animated QR codes and alphanumeric mode with custom headers, but these have drawbacks such as difficulty in printing and compatibility issues. The author suggests using binary encoding and structured append, which allows chaining up to 16 QR codes with 1 byte of parity. Despite doubts about the support of structured append in QR code libraries, the widely used zxing library on Android and the Apple built-in scanner both allow access to the scanned raw bytes, enabling parsing of the structured append header. Binary encoding and structured append offer advantages such as efficient encoding, copypaste functionality, and compatibility with bech32.To avoid overwhelming the specter-diy repository, a discussion on the topic of a common QR code compatible format for PSBT has been moved to the BlockchainCommons/AirgappedSigning repository. This new repository will serve as a place to share examples and prototypes until a consensus can be reached among wallet developers. Christopher Allen shared this information in response to a post made by Riccardo Casatta on the bitcoin-dev forum, which included a link to the relevant GitHub issue.</summary>
    <published>2020-04-27T20:11:43+00:00</published>
  </entry>
</feed>
