<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin components.</title>
  <updated>2023-05-26T19:50:26.207590+00:00</updated>
  <author>
    <name>Alan Grimes 2011-07-28 05:25:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin components.</title>
    <updated>2023-05-26T19:50:26.207626+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000249.html" rel="alternate"/>
    <summary>The provided link, https://en.bitcoin.it/wiki/Infrastructure, gives a high-level overview of the Bitcoin Infrastructure but lacks detailed explanations. The writer is working on the peer and wallet boxes on the diagram and wants to implement his own version since the existing code is untrustworthy and poorly commented. The writer has questions about the peer, including whether it has an active component and what operations it performs autonomously. The relationship between the wallet and the miner is unclear. The writer is leaning towards an inetd implementation after reading dox on libdb to minimize the quantity of code at the expense of overhead. A general problem the writer hasn't seen documentation on is that most operating systems are multi-user systems, so each user would keep their wallet in an encrypted store in their home directory. The writer wonders if there are standards for users to set up their personal wallet daemon that connects to a system-wide peer node and provides an interface for only their GUI.</summary>
    <published>2011-07-28T05:25:46+00:00</published>
  </entry>
</feed>
