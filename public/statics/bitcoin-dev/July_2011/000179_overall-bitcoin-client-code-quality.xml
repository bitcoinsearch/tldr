<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>overall bitcoin client code quality</title>
  <updated>2023-05-18T21:23:44.556134+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-07-12 23:40:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>overall bitcoin client code quality</title>
    <updated>2023-05-18T21:23:44.556134+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000179.html" rel="alternate"/>
    <summary>In an email exchange, Michael Offel expressed his belief that every class should be able to stand on its own in order to be reused in other projects or situations within the same project. However, the recipient of the email replied that beliefs have no weight unless they are put into practice through coding. They suggested that shared files causing merge conflicts is not a major issue with modern source control management systems and that aesthetics talk seems pointless given the small size of Bitcoin's software. They agreed with Offel's proposal to reimplement parts as libraries and switch to them after validation. They also emphasized the importance of blockchain validation logic being consistently implemented across all nodes and tested extensively. Additionally, there is disabled functionality in the scripts due to security concerns, and new, clean, secondary implementations of the logic are needed along with automatic testing shims to find inconsistencies between implementations. The recipient suggested that testing rigs are an excellent area of work for new members to the project.</summary>
    <published>2011-07-12T23:40:46+00:00</published>
  </entry>
</feed>
