<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On the regularity of soft forks</title>
  <updated>2023-06-15T02:38:55.859803+00:00</updated>
  <author>
    <name>micaroni at gmail.com 2021-10-15 00:43:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On the regularity of soft forks</title>
    <updated>2023-06-15T02:38:55.859803+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019545.html" rel="alternate"/>
    <summary>The discussion centers around the idea of bundling multiple features together in soft forks. The concern is that too many features bundled together can lead to difficulties in debugging if something goes wrong. It is suggested that bundling related proposals with synergies can be beneficial, but bundling flawed proposals just for the sake of having a batch of features is not ideal. The principle of "first, do no harm" should apply when considering changes. Specific examples are given, such as the bundling of schnorr, Taproot, MAST, OP_SUCCESSx, and CHECKSIGADD, which have synergies and were bundled together. However, the nulldummy soft-fork (bip 147) was deployed concurrently with the segwit soft-fork (bip 141, 143) without any particular synergy or need for them to be combined, reducing the overhead of activation signalling. It is important to consider each proposal on its own merits before bundling them together.</summary>
    <published>2021-10-15T00:43:40+00:00</published>
  </entry>
</feed>
