<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On the regularity of soft forks</title>
  <updated>2023-05-22T15:56:47.545920+00:00</updated>
  <author>
    <name>Anthony Towns 2021-10-14 23:52:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On the regularity of soft forks</title>
    <updated>2023-05-22T15:56:47.545920+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019542.html" rel="alternate"/>
    <summary>In a Bitcoin developers discussion, Jeremy argued for infrequent soft forks with batches of features instead of frequent soft forks with single or minimal features. However, AJ disagreed with this conclusion, stating that it is better to have proposals that don't screw anyone over and result in Pareto improvements. AJ expressed that combining proposals when the combination is better than the individual proposals were is obviously good and related proposals should be combined into a single activation if it is easier to think about the ideas as a set. Specific examples of bundled proposals include schnorr, Taproot, MAST, OP_SUCCESSx, and CHECKSIGADD. On the other hand, nulldummy soft-fork (bip 147) was deployed concurrently with the segwit soft-fork (bip 141, 143), but there was no particular synergy or need for those things to be combined.</summary>
    <published>2021-10-14T23:52:07+00:00</published>
  </entry>
</feed>
