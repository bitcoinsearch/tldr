<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing the Dust Limit</title>
  <updated>2023-06-15T00:50:31.145590+00:00</updated>
  <author>
    <name>shymaa arafat 2021-10-07 09:13:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing the Dust Limit</title>
    <updated>2023-06-15T00:50:31.145590+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019524.html" rel="alternate"/>
    <summary>In a recent discussion on the bitcoin-dev mailing list, a proposal was made to store dust UTXOs in a separate Merkle tree or structure to alleviate the burden of dealing with them. The author, who prefers not to discard anything unnecessary, suggests keeping these UTXOs in secondary storage where they can be verified and deleted. The conversation then turns to the topic of lightweight nodes that ignore UTXOs below the dust limit and do not validate dust transactions, but still validate POW and other transactions. The question is raised about how such a node would treat a transaction that spends multiple dust UTXOs and creates a single non-dust UTXO out of them (after fees). The concern is that since these nodes do not store dust UTXOs, they cannot know if the UTXO being spent by such a transaction is spending dust or trying to spend an already-spent TXO or even inventing a TXO out of `/dev/random`.</summary>
    <published>2021-10-07T09:13:33+00:00</published>
  </entry>
</feed>
