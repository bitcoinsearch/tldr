<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin-NG whitepaper.</title>
  <updated>2023-05-19T22:13:32.172853+00:00</updated>
  <author>
    <name>Matt Corallo 2015-10-28 02:08:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin-NG whitepaper.</title>
    <updated>2023-05-19T22:13:32.172853+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011621.html" rel="alternate"/>
    <summary>On October 14, 2015, a conversation took place regarding the use of microblocks in Bitcoin. Matt Corallo brought up an issue where there is no way to punish people if there is a double spend in a microblock that happens in key block which reorg'd away the first transaction. Ittay responded by saying that such forks should occur almost every key-block publication and that a user should wait before accepting a transaction to make sure there was no key-block missed. The attacker does not need to withold their keyblock at all but can set their hashpower to start mining a keyblock immediately prior to this microblock.The confirmation time for microblocks possibly doesn't need to be a full key-block, but it needs to be a reasonable period after which such an attacker would lose more in fees than the value of their double-spend. This game theory starts to get rather complicated and it doesn't suggest accepting microblocks as confirmations is safe. Greg Slepak brought up a good point on Twitter that users could no longer pick transactions in a mining pool which was set up in such a way (it could be tweaked to do so with separate rewards and pubkeys, but now the user can commit fraud at a much lower cost - their own pool reward, not the block's total reward).Fraud proof removes all the attacker's revenue. It's like the attacker sacrifices an entire block for double spending in the current system.</summary>
    <published>2015-10-28T02:08:52+00:00</published>
  </entry>
</feed>
