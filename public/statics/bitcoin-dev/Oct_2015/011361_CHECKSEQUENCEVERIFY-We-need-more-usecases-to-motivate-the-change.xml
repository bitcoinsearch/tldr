<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>CHECKSEQUENCEVERIFY - We need more usecases to motivate the change</title>
  <updated>2023-05-19T22:11:22.253223+00:00</updated>
  <author>
    <name>Anthony Towns 2015-10-04 08:35:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>CHECKSEQUENCEVERIFY - We need more usecases to motivate the change</title>
    <updated>2023-05-19T22:11:22.253223+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011361.html" rel="alternate"/>
    <summary>In a post to the Bitcoin development mailing list, Peter Todd has asked for more work on the rationale for implementing relative lock-time via nSequence. The idea is that RCLTV/OP_CSV is used in lightning commitment transactions to enforce a delay between publishing the commitment transaction and spending the output. This delay is needed so that the counterparty has time to prove the commitment was revoked and claim the outputs as a penalty. Using absolute CLTV instead of RCLTV would mean that once the effective delay a commitment transaction has decreases over time, causing unwanted delays in claiming funds when no cheating is going on. You can trade those things off and pick something that works, but it's always going to be bad. Compared to using a CLTV with 30 days duration, with RCLTV a channel could be available for years (ie 20x longer), but in the case of problems funds could be reclaimed within hours or days (ie 30x faster).</summary>
    <published>2015-10-04T08:35:25+00:00</published>
  </entry>
</feed>
