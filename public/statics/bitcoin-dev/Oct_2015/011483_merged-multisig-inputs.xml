<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>merged multisig inputs</title>
  <updated>2023-06-11T00:02:19.431672+00:00</updated>
  <author>
    <name>Boris Neklabaro 2015-10-08 19:55:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>merged multisig inputs</title>
    <updated>2023-06-11T00:02:19.431672+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011483.html" rel="alternate"/>
    <summary>The question posed is whether it is possible to merge two utxos and spend from multiple P2SH inputs, or combine inputs from P2SH and P2PKH in a single transaction. The answer to this question lies in the technical workings of Bitcoin transactions. A UTXO, or unspent transaction output, is an output from a previous transaction that has not yet been spent as an input to another transaction. In order to merge two utxos, both of the outputs would need to be owned by the same address. However, spending from multiple P2SH inputs is possible because P2SH, or pay-to-script-hash, allows for more complex scripts to be used as locking conditions for transactions. Therefore, it is possible to have multiple P2SH inputs that are controlled by the same address.Combining inputs from P2SH and P2PKH in a single transaction is also possible. P2PKH, or pay-to-public-key-hash, is a simpler type of Bitcoin transaction that involves sending funds directly to a public key hash. While this may seem less secure than P2SH, it is still a valid form of transaction.Overall, while merging utxos can only be done if both outputs are owned by the same address, spending from multiple P2SH inputs and combining inputs from P2SH and P2PKH in a single transaction are both possible within the technical framework of Bitcoin transactions.</summary>
    <published>2015-10-08T19:55:09+00:00</published>
  </entry>
</feed>
