<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP] Normalized transaction IDs</title>
  <updated>2023-06-11T00:32:07.729315+00:00</updated>
  <author>
    <name>Christian Decker 2015-10-19 19:28:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP] Normalized transaction IDs</title>
    <updated>2023-06-11T00:32:07.729315+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011566.html" rel="alternate"/>
    <summary>In an email exchange on the bitcoin-dev mailing list, Christian Decker points out that transaction inputs must be normalized by replacing malleable hashes with the normalized hashes. This has been mentioned in the PR as well. He assures that he will fix the spec and implementation to reflect this. The previous version was using a hard-fork, and the normalized transaction ID is computed only considering the non-malleable parts of a transaction. In other words, signatures are stripped before computing the hash of the transaction. Tier Nolan via bitcoin-dev asks if the proposal is recursive, to which Christian explains that for non-coinbase transactions, sigScripts should be replaced with empty strings and txids in TxIns should be replaced with n-txid for parents. The second step is recursive starting from the coinbases. The rule is that txids are what they would have been if n-txids had been used right from the start.</summary>
    <published>2015-10-19T19:28:49+00:00</published>
  </entry>
</feed>
