<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP] Normalized transaction IDs</title>
  <updated>2023-05-19T22:17:37.222576+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-10-21 07:48:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP] Normalized transaction IDs</title>
    <updated>2023-05-19T22:17:37.222576+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011576.html" rel="alternate"/>
    <summary>A proposal was implemented to compute the normalized transaction ID when adding them to the UTXO and storing them along with the coin state. However, it still doesn't completely close malleability, which should be documented in the BIP. The implementation of fully malleability-proof wallets could be done by specifying flags upfront in the UTXO-creating transaction, specifying which parts the signature will cover. Additionally, there is a flag to control whether the opcode behaves as VERIFY or not, but non-VERIFY is not possible as a softfork since it can be negated. Flagability cannot work recursively which is necessary for any improvement to be useful for multi-phase protocols. One still wants sighash flags, but they're going to inherently result in malleability. Uniform segregated witness is hard to deploy, adding another id to every utxo set won't be a nice cost. The only real application of this class of improvement is third party mutation prevention by enforced canonical encodings.</summary>
    <published>2015-10-21T07:48:39+00:00</published>
  </entry>
</feed>
