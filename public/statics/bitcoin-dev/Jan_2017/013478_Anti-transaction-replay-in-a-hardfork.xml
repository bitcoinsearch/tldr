<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anti-transaction replay in a hardfork</title>
  <updated>2023-05-20T00:42:04.310116+00:00</updated>
  <author>
    <name>Johnson Lau 2017-01-25 07:05:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anti-transaction replay in a hardfork</title>
    <updated>2023-05-20T00:42:04.310116+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013478.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, it was proposed that old-format transactions be made valid only when paired with a fork-only follow-up transaction which is spending at least one (or all) of the outputs of the old-format transaction. This would introduce new statefulness into the block validation logic but is necessary for maximal fork safety and can be disabled at a later time if deemed no longer necessary. The proposal also suggests that the old network should soft-fork in an identical rule with a follow-up transaction format incompatible with the fork. This would mean that old transactions can not be replayed across forks/networks because they're not valid when stand-alone. Wallet clients would need to be updated or paired with software that intercepts generated transactions and automatically generates the correct follow-up transaction for it (old network only). The rules should be that old-format transactions can't reference new-format transactions, even if only a softfork change differs between the formats to prevent an unnecessary amount of transactions pairs generated by old wallets.</summary>
    <published>2017-01-25T07:05:59+00:00</published>
  </entry>
</feed>
