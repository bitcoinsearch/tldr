<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A BIP for partially-signed/not-signed raw transaction serialization; would it be useful?</title>
  <updated>2023-06-11T21:10:26.780832+00:00</updated>
  <author>
    <name>Chris Priest 2017-01-09 22:15:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A BIP for partially-signed/not-signed raw transaction serialization; would it be useful?</title>
    <updated>2023-06-11T21:10:26.780832+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013464.html" rel="alternate"/>
    <summary>There is a need for a standardized specification for unsigned transactions to eliminate the friction caused by different serialization methodologies used in partially signed multisig raw transactions and not-signed raw transactions. This was proposed by 木ノ下じょな via bitcoin-dev who has seen similar issues across different projects that support multisig with users responsible for partial transaction transport. Electrum, Copay, Coinb.in, Bitcoin Core, etc. all have different serialization methodologies for partially signed multisig raw transactions as well as not-signed raw transactions regardless of scriptPubkey. The proposal for standardization will ensure that all unsigned transactions are of the same form and the signature section of the transaction should contain all the required information to make the signature. To achieve this, someone needs to write up a specification that is standardized so that all unsigned transactions are of the same form. The signature section should contain all the information required to make the signature, and it needs to be encoded in a way that the signing application (a blockchain library like BitcoinJ or BitcoinJS) can tell that it is unsigned. Prior to proposing a BIP, opinions were gathered to know if there is a need for one.</summary>
    <published>2017-01-09T22:15:17+00:00</published>
  </entry>
</feed>
