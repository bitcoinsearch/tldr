<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anti-transaction replay in a hardfork</title>
  <updated>2023-06-11T21:13:18.724636+00:00</updated>
  <author>
    <name>Natanael 2017-01-25 01:22:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anti-transaction replay in a hardfork</title>
    <updated>2023-06-11T21:13:18.724636+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013476.html" rel="alternate"/>
    <summary>On January 24, 2017, a proposal was made on the Bitcoin-Dev mailing list regarding transaction protection from anti-replay in the event of a hardfork. The proposal stated that transactions created before the proposal would not be protected and needed to be accepted by any potential hardforks to maximize their value. To achieve this, old-format transactions could be made valid only when paired with a fork-only follow-up transaction. This introduces new statefulness into the block validation logic, but it is necessary for maximal fork safety. Meanwhile, the old network should soft-fork in an identical rule with a follow-up transaction format incompatible with the fork. This means that old transactions cannot be replayed across forks/networks because they are not valid when stand-alone. Wallet clients need to be updated or paired with software that intercepts generated transactions and automatically generates the correct follow-up transaction for it (old network only). The rules state that old-format transactions cannot reference new-format transactions, even if only a softfork change differs between the formats. This prevents an unnecessary amount of transaction pairs generated by old wallets. Therefore, old outputs can be spent, but not new ones.</summary>
    <published>2017-01-25T01:22:44+00:00</published>
  </entry>
</feed>
