<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transaction Replacement by Fee</title>
  <updated>2023-06-11T21:11:46.906591+00:00</updated>
  <author>
    <name>Andrew 2017-01-28 18:34:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transaction Replacement by Fee</title>
    <updated>2023-06-11T21:11:46.906591+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013518.html" rel="alternate"/>
    <summary>The user in this context has been attempting to get RBF (Replace-By-Fee) working on a multisig input. They set the nSequence to 0, but the script failed to verify when using python-bitcoinlib. The user is using the SignatureHash(...) method of signing and not rpc.signrawtransaction(...). BIP125 (Bitcoin Improvement Proposal) is mentioned as the standard way to signal. A link to BIP125 is provided for further information. Additionally, some miners mine full replace-by-fee, which has no limitations on nSequence. Peter Todd's implementation (for v0.13.2) can be found on Github, which is identical to Bitcoin Core modulo the nSequence stuff being removed, and a special service bit added to allow full-rbf nodes to preferentially peer with each other to make sure replacement transactions get propagated.It is noted that in practice full-RBF works fairly well, so while it is even faster to use the nSequence signalling specified in BIP-125, doing so is not mandatory so long as you can get your replacement transaction to a full-RBF node. Contact information for Peter Todd is also provided.</summary>
    <published>2017-01-28T18:34:58+00:00</published>
  </entry>
</feed>
