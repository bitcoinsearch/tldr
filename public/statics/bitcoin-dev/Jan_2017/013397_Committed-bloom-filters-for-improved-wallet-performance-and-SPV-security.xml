<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-06-11T04:59:39.477675+00:00</updated>
  <author>
    <name>Jonas Schnelli 2017-01-01 21:01:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-06-11T04:59:39.477675+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013397.html" rel="alternate"/>
    <summary>The authors of this article introduce several concepts that aim to improve the current model of lightweight Bitcoin clients. They propose the use of a new filter, called BFD, which can replace BIP37 and be cached between clients without needing to be recomputed. This allows normal pruned nodes to do re-scans locally of their wallet without needing to have the block data available to scan or reading the entire blockchain from disk. The article then poses a question about the preferred/recommended way to handle 0-conf/mempool filtering if and once BDF is deployed, with the concern being the user experience of incoming funds taking several minutes to hours before they appear. Using BIP37 bloom filters just for mempool filtering would result in the same unwanted privacy-setup.</summary>
    <published>2017-01-01T21:01:23+00:00</published>
  </entry>
</feed>
