<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-06-11T04:59:19.736980+00:00</updated>
  <author>
    <name>Aaron Voisine 2017-01-04 08:56:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-06-11T04:59:19.736980+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013426.html" rel="alternate"/>
    <summary>The conversation between Aaron and Jonas Schnelli discusses the importance of unconfirmed transactions in the Bitcoin network. While unconfirmed transactions are important for real-world use cases, it is crucial to recognize that bitcoin serves a wide variety of use cases with different profiles for time sensitivity and fraud risk. However, offering users/merchants an SPV feature against random peers can be fundamentally insecure and may lead to large-scale fiascos, hurting Bitcoin's reputation and trust from merchants. To eliminate this issue, education and offering different solutions to merchants is necessary. There are plenty of more sane options, such as co-using a wallet-service with centralized verification or running a full-node as a merchant. For end-users, disabling unconfirmed transactions during SPV against random peers and enabling them only when using SPV against a trusted peer with preshared keys after BIP150 is recommended. Additionally, users should be educated about the risks of unconfirmed transactions during low-conf phase (1-5). Finally, the conversation touches on sacrificing the "incoming funds..." feature in SPV wallets for the sake of stability and risk-scaling and using privacy-preserving BFDs instead.</summary>
    <published>2017-01-04T08:56:21+00:00</published>
  </entry>
</feed>
