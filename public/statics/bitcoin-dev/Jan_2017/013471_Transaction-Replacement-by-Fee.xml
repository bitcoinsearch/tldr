<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transaction Replacement by Fee</title>
  <updated>2023-06-11T21:11:37.779297+00:00</updated>
  <author>
    <name>Peter Todd 2017-01-12 19:58:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transaction Replacement by Fee</title>
    <updated>2023-06-11T21:11:37.779297+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013471.html" rel="alternate"/>
    <summary>In a post to the bitcoin-dev mailing list, Greg Sanders explains that BIP125 is the standard way to signal. This GitHub link should have everything needed to understand BIP125. Some miners mine full replace-by-fee, which has no limitations on nSequence. Peter Todd's implementation (for v0.13.2) of this can be found on his GitHub page. It is identical to Bitcoin Core modulo the nSequence stuff being removed, and a special service bit added to allow full-rbf nodes to preferentially peer with each other to make sure replacement transactions get propagated. In practice full-RBF works fairly well, so while it's even faster to use the nSequence signalling specified in BIP-125, doing so is not mandatory so long as you can et your replacement transaction to a full-RBF node.</summary>
    <published>2017-01-12T19:58:30+00:00</published>
  </entry>
</feed>
