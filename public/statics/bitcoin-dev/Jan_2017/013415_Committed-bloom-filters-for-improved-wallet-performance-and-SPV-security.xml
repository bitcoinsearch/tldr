<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-06-11T04:56:56.988277+00:00</updated>
  <author>
    <name>bfd at cock.lu 2017-01-03 20:18:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-06-11T04:56:56.988277+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013415.html" rel="alternate"/>
    <summary>A new concept that offers secure, efficient and privacy compatible model for Bitcoin client has been introduced. The concept known as the BFD can replace BIP37 and be cached between clients without needing to be recomputed. It can also be used by normal pruned nodes to do re-scans locally of their wallet without needing to have the block data available to scan, or without reading the entire block chain from disk. However, a user on the Bitcoin-dev mailing list raised concerns about handling 0-conf/mempool filtering using BDF after it is deployed. The user believes that this issue is important because otherwise incoming funds can take several minutes to hours until they appear. They suggested that using BIP37 bloom filters just for mempool filtering would result in an unwanted privacy-setup. Meanwhile, the system where miners commit to potential transaction inclusion with fractional difficulty blocks is possible but there are some concerns. Although unconfirmed transaction display in a wallet may provide useful information, the user has very little to gain from this knowledge until the transaction is in a block. As such, the privacy trade-off may not be worth displaying unconfirmed transactions in wallets.</summary>
    <published>2017-01-03T20:18:59+00:00</published>
  </entry>
</feed>
