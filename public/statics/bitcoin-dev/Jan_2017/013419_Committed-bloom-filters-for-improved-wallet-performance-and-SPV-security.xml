<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-06-11T04:55:14.959738+00:00</updated>
  <author>
    <name>Aaron Voisine 2017-01-03 23:46:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-06-11T04:55:14.959738+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013419.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around unconfirmed transactions and mempool filtering for lightweight Bitcoin clients. While light/SPV wallets display mempool transactions, only a full node can determine if a transaction will get confirmed or is nonsense. Some argue that the privacy trade-off of displaying unconfirmed transactions isn't worth it until they are in a block. However, others stress the importance of unconfirmed transactions, citing use cases such as merchants accepting credit card payments and needing instant transactions. The committed bloom filters are seen as an improvement over the current bloom filter setup, especially for lightning network use cases, where not finding out about a transaction could lead to losing money. Additionally, there is a suggestion to start grabbing headers at some point a while ago before a set of keys was generated, which would be worthwhile even with GB-scale disk usage.</summary>
    <published>2017-01-03T23:46:00+00:00</published>
  </entry>
</feed>
