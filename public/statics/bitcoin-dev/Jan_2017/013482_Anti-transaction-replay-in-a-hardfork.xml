<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anti-transaction replay in a hardfork</title>
  <updated>2023-05-20T00:38:21.890587+00:00</updated>
  <author>
    <name>Johnson Lau 2017-01-25 07:42:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anti-transaction replay in a hardfork</title>
    <updated>2023-05-20T00:38:21.890587+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013482.html" rel="alternate"/>
    <summary>In an email exchange between Natanael and Johnson Lau, the question of whether Alice is protected in a hardfork scenario was discussed. Lau proposed a scenario where Alice pays Bob with an old style time-locked transaction and after the hardfork, Bob is still able to confirm the transaction on both networks. He can fulfill the new rules by sending the outputs to himself again with a different transaction format, ultimately receiving all the money on both forks. However, if Alice has full control, she is already protected by Natanael's proposal which does not require any protecting child transaction. In the case of a 2-of-2 multisig where Bob receives the payment, if the time-locked transaction is unprotected, Bob will receive all the money from both forks without any need for renegotiation with Alice.</summary>
    <published>2017-01-25T07:42:13+00:00</published>
  </entry>
</feed>
