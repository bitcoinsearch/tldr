<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Script Abuse Potential?</title>
  <updated>2023-06-11T21:03:51.516242+00:00</updated>
  <author>
    <name>Johnson Lau 2017-01-03 03:39:19</name>
  </author>
  <author>
    <name>Jeremy 2017-01-04 00:13:39</name>
  </author>
  <author>
    <name>Jorge Timón 2017-01-04 14:45:54</name>
  </author>
  <author>
    <name>Jeremy 2017-01-05 16:22:34</name>
  </author>
  <author>
    <name>Jeremy 2017-01-05 16:22:34</name>
  </author>
  <author>
    <name>Steve Davis 2017-01-02 21:39:24</name>
  </author>
  <author>
    <name>Jeremy 2017-01-03 03:27:44</name>
  </author>
  <author>
    <name>Johnson Lau 2017-01-03 03:39:19</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-01-03 05:04:50</name>
  </author>
  <author>
    <name>Steve Davis 2017-01-02 21:39:24</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-01-03 05:04:50</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-01-04 03:13:54</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-01-04 03:13:54</name>
  </author>
  <author>
    <name>Steve Davis 2017-01-02 21:39:24</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-01-03 05:04:50</name>
  </author>
  <author>
    <name>Jeremy 2017-01-04 00:13:39</name>
  </author>
  <author>
    <name>Jeremy 2017-01-03 03:27:44</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-01-04 03:13:54</name>
  </author>
  <author>
    <name>Jeremy 2017-01-04 00:13:39</name>
  </author>
  <author>
    <name>Jorge Timón 2017-01-04 14:45:54</name>
  </author>
  <author>
    <name>Jeremy 2017-01-03 03:27:44</name>
  </author>
  <author>
    <name>Johnson Lau 2017-01-03 03:39:19</name>
  </author>
  <author>
    <name>Jorge Timón 2017-01-04 14:45:54</name>
  </author>
  <author>
    <name>Jeremy 2017-01-05 16:22:34</name>
  </author>
  <link href="bitcoin-dev/Jan_2017/013408_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013420_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013429_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013434_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013434_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013406_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013407_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013408_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013409_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013406_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013409_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013423_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013423_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013406_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013409_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013420_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013407_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013423_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013420_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013429_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013407_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013408_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013429_Script-Abuse-Potential-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013434_Script-Abuse-Potential-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Script Abuse Potential?</title>
    <updated>2023-06-11T21:03:51.517242+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013408.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list has been discussing the potential risks associated with the opcode OP_CAT. While some members have suggested implementing a direct limit on OP_CAT, others prefer a general memory limit. In the past, the limit for OP_CAT was 5000 bytes, but Satoshi disabled it and added a limit of 520 bytes on August 15, 2010. During the discussion, a specific pk_script was mentioned that includes multiple instances of the OP_2DUP opcode. However, there is a limit of 201 opcodes in a script, meaning that the maximum number of OP_2DUP instances would be 198. The MAX_SCRIPT_ELEMENT_SIZE is also set at 520 bytes, which means that the worst-case scenario for this particular script would be approximately 10MB. The group also discussed the potential threat posed by bugs related to op_dup/op_cat, which could cause out of memory errors. Therefore, the group is considering the best approach to ensure future memory-risky opcodes do not cause issues. Jeremy Rubin mentioned that the elements alpha proposal to reenable a limited op_cat to 520 bytes is somewhat controversial. Russell O'Connor stated that Satoshi had added the OP_CAT limit of 520 bytes on August 15, 2010, at the same time that OP_CAT was disabled; the previous limit was 5000 bytes. The discussion also touched on the memory usage cost of each instruction and the need to reasonably bound it. The chief argument against a general memory limit is that it is tricky to make a non-implementation dependent memory limit, though this is not seen as a strong argument. In summary, the discussion on the bitcoin-dev mailing list focused on finding the best approach to handle potential risks associated with opcodes in bitcoin scripts. While a potential attack vector involving a pk_script with multiple "op_2dup" commands was discussed, the maximum size for OP_CAT is 520 bytes, limiting the potential damage to approximately 10 MB. The group is considering various options to ensure that future memory-risky opcodes do not cause issues, including implementing a direct limit on OP_CAT or a general memory limit.</summary>
    <published>2017-01-03T03:39:19+00:00</published>
  </entry>
</feed>
