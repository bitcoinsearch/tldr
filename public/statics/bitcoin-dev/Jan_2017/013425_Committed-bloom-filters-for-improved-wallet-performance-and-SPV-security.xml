<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-06-11T04:59:10.141484+00:00</updated>
  <author>
    <name>Jonas Schnelli 2017-01-04 07:47:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-06-11T04:59:10.141484+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013425.html" rel="alternate"/>
    <summary>The writer agrees that unconfirmed transactions are important but not over Simplified Payment Verification (SPV) against random peers. Merchants accepting payments with the risk of chargebacks is a costly option, and bitcoin serves different use cases with varying levels of time sensitivity and fraud risk. The writer suggests eliminating merchants' use of zero-confirmation SPV transactions from random peers through education and offering different solutions. These solutions include running a full-node or using a wallet service with centralized verification and two-factor authentication, such as Copay. For end-users, the writer recommends disabling unconfirmed transactions during SPV against random peers, enabling them for trusted peers with preshared keys after BIP150, educating users on the risks of low-conf phase (1-5), and showing how to enable unconfirmed transactions by running a full-node. Finally, the writer suggests sacrificing the "incoming funds" feature in SPV wallets for stability and risk-scaling, using privacy-preserving Blind Federated Drops instead.</summary>
    <published>2017-01-04T07:47:10+00:00</published>
  </entry>
</feed>
