<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing the Dust Limit</title>
  <updated>2023-05-21T03:26:45.926828+00:00</updated>
  <author>
    <name>Anthony Towns 2021-08-12 22:03:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing the Dust Limit</title>
    <updated>2023-05-21T03:26:45.926828+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-August/019333.html" rel="alternate"/>
    <summary>A recent email exchange on the bitcoin-dev mailing list discussed the trim-to-dust evaluation and its relationship to the lifetime of a Hashed Time-Locked Contract (HTLC). The consensus was that determining what is economical for an HTLC should be done each time the channel commitment is updated, rather than once for the contract's lifetime. Dust limits set a fixed size lower limit for outputs at around 305 satoshis for pay-to-witness-script-hash (P2WSH) outputs. However, this limit only applies to outputs requiring only a pubkey reveal and signature to spend. An HTLC that requires revealing a script, two hashes, two pubkeys, a hash preimage, and two signatures with the same dust threshold value for P2WSH of ~305 satoshis would already be uneconomical at about 2.1 sat/vbyte and unviable at 2.75 sat/vbyte.From a Lightning Network viewpoint, the discussion identified solving a price discovery issue as the primary challenge. Specifically, the cost to write on the UTXO set in a distributed system where any deviation from the "honest" price means you trust your LN counterparty more. At these amounts, participants are already trusting their LN counterparty not to unilaterally close the channel at high fees and waste their funds in fees instead of executing a more efficient mutual/cooperative close.</summary>
    <published>2021-08-12T22:03:39+00:00</published>
  </entry>
</feed>
