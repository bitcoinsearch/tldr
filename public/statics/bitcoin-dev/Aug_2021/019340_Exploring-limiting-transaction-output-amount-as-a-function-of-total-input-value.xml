<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Exploring: limiting transaction output amount as a function of total input value</title>
  <updated>2023-06-15T00:31:23.820038+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-08-16 11:48:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Exploring: limiting transaction output amount as a function of total input value</title>
    <updated>2023-06-15T00:31:23.820038+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-August/019340.html" rel="alternate"/>
    <summary>In the conversation, one party agrees that establishing whether the proposed functionality can be implemented without making any changes to consensus is important. The other party shares a technical counterproposal which explores an implementation on top of Bitcoin as-is. They discuss the differences between the proposals and highlight some major gaps. One issue with the counterproposal is that keys for unrestricted spending are required to come online in several situations. Another issue is that presigning transactions is required in the counterproposal, while it is not required in the original proposal. The number of windows is also limited in the counterproposal but unlimited in the original proposal. The first party feels that these gaps are significant enough to state that the counterproposal does not meet the basic requirements of the original proposal. They believe that implementing consensus changes in order to support the proposed functionality would be preferable over the counterproposal. They suggest looking into covenant opcodes instead of the counterproposal, as their application is very close to one of the motivating examples for covenants in the first place.</summary>
    <published>2021-08-16T11:48:43+00:00</published>
  </entry>
</feed>
