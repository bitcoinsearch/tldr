<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bitcoin-ps | Desktop application to test Bitcoin Core using PowerShell scripts</title>
  <updated>2023-06-15T01:06:01.927537+00:00</updated>
  <author>
    <name>Prayank 2021-08-14 01:15:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bitcoin-ps | Desktop application to test Bitcoin Core using PowerShell scripts</title>
    <updated>2023-06-15T01:06:01.927537+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-August/019337.html" rel="alternate"/>
    <summary>The author has been working on an intern project which is almost ready for its first release. The project is related to Bitcoin Core and .NET projects, and the author is seeking feedback from developers in those areas. The project repository can be found at https://github.com/prayank23/bitcoin-ps, and other details about related milestones can be found at https://github.com/BlockchainCommons/Community/discussions/51. The project is inspired by Burp Suite and is intended to test privacy and security of Bitcoin Core RPC using GUI. The author used WPF instead of Avalonia to save time and will use it in the future to make bitcoin-ps cross-platform. The author has shared a proof of concept in milestones link above in which the application works fine on Ubuntu with no pwsh installed. There is an issue that hopefully will be resolved soon at https://github.com/AvaloniaUI/Avalonia/issues/4361.There are four default scripts included in the project: CPU_RAM_sendtoaddress.ps1, onlynet_i2p.ps1, lock_unspent.ps1, and custom_change_rbf.ps1. These scripts check CPU and RAM usage while using some wallet RPCs multiple times, make outbound connections to onion peers while onlynet=i2p is used without any proxy, check if locked UTXOs are unlocked on restart, and compare the inputs for Tx1 and Tx2 where Tx1 is RBF transaction with 1 input, 2 outputs (custom change address with label), and Tx2 is a replacement transaction, respectively.The author chose to use PowerShell because they have worked on two similar projects in the past, testing using different languages locally doesn't impact Bitcoin Core or require any changes, it is easier to write, and devs who use PowerShell scripts in their projects could relate to it, find interesting and maybe start contributing to Bitcoin Core. Additionally, it can be done using bash or maybe python scripts as well. For the author, using PowerShell in this project is like meeting a college friend and exploring new places. Lastly, the author expresses gratitude to everyone involved in Blockchain Commons and suggests starting with "Learning Bitcoin from the Command Line" if readers have recently started reading about Bitcoin. The author wishes they could do more projects but will work on DEX and OfflineTx even after the internship ends to complete by the end of this year.</summary>
    <published>2021-08-14T01:15:20+00:00</published>
  </entry>
</feed>
