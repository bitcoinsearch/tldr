<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Message Signing based authentication</title>
  <updated>2023-06-07T18:54:23.328881+00:00</updated>
  <author>
    <name>Allen Piscitello 2013-11-03 01:19:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Message Signing based authentication</title>
    <updated>2023-06-07T18:54:23.328881+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003525.html" rel="alternate"/>
    <summary>In a discussion thread dated November 2, 2013, on the bitcoin-dev mailing list, Allen Piscitello expressed concerns about implementing a scheme where you sign a refund transaction before the original transaction is broadcast. Initially, he tried to pass a hash and have the server sign it but had no way to know that what he was signing wasn't a transaction that was spending his coins. To mitigate this, he changed the code to require sending the full transaction, not just the hash. Luke-Jr responded by saying that there's no use case to sign with an address that has already been sent coins. However, the main problem with enforcing this is that someone cannot be stopped from sending to an "identity" address. Another participant in the thread suggested generating a new key when needed to set up a 2 of 2 Multisig Refund Tx or making sure there are no unspent outputs. The use case of doing this was laziness in just creating a single key.</summary>
    <published>2013-11-03T01:19:51+00:00</published>
  </entry>
</feed>
