<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Auto-generated miner backbone</title>
  <updated>2023-05-19T17:40:38.174025+00:00</updated>
  <author>
    <name>Pieter Wuille 2013-11-04 14:34:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Auto-generated miner backbone</title>
    <updated>2023-05-19T17:40:38.174025+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003545.html" rel="alternate"/>
    <summary>In a discussion thread on Bitcoin development, Peter Todd suggested that the correct and rational approach for a miner is to mine to extend the block that the majority of hashing power is trying to extend. However, current relay rules do not provide this information. He proposed two things to address this issue: relaying all blocks that meet the PoW target and relaying block headers that nearly meet the PoW target. By using these "near-blocks," miners can estimate the hashing power on each fork and switch if they are not on the majority side. Another participant in the thread asked if selective blocking of near-PoW headers could bias peers into preferring to mine on those with near-PoW headers, turning the attack around. It was noted that because of their smaller size, headers are likely much harder to slow down in propagation speed than full blocks.</summary>
    <published>2013-11-04T14:34:35+00:00</published>
  </entry>
</feed>
