<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Auto-generated miner backbone</title>
  <updated>2023-06-07T19:07:37.575876+00:00</updated>
  <author>
    <name>Peter Todd 2013-11-04 14:46:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Auto-generated miner backbone</title>
    <updated>2023-06-07T19:07:37.575876+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003546.html" rel="alternate"/>
    <summary>In a discussion about mining strategy, Pieter Wuille wrote that the current strategy is to mine to extend the first block seen as it has likely propagated to a large portion of the total hashing power. However, if "near-blocks" are received that are under the PoW target, they should be used to estimate the hashing power on each fork and switch if necessary. In response, someone asked if selectively blocking these near-PoW headers could bias peers into preferring to mine on them instead, but Wuille pointed out that the attack described in the paper doesn't depend on the ability to selectively block or slow down anything - it works even on an unlimited bandwidth jam-free network as long as latency is non-zero. Furthermore, if you can selectively block or slow down certain near-target headers, you haven't achieved anything novel as the original purpose of broadcasting them is still achieved.</summary>
    <published>2013-11-04T14:46:31+00:00</published>
  </entry>
</feed>
