<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Zeroconf-safe tx replacement (replace-for-fee)</title>
  <updated>2023-06-07T19:04:39.334479+00:00</updated>
  <author>
    <name>Peter Todd 2013-11-04 10:52:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Zeroconf-safe tx replacement (replace-for-fee)</title>
    <updated>2023-06-07T19:04:39.334479+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003533.html" rel="alternate"/>
    <summary>In an email exchange from 2013, John Dillon and Peter Todd discuss the flaws of Bitcoin estimates and the importance of backups. Todd shares his work on replace-for-fee, which allows for infrastructure preparation for eventual replace-by-fee usage while avoiding the politics around zero-conf transactions. The rules for replacement are simple: every output in the old transaction must have a corresponding output in the new with the same scriptPubKey and of equal or greater value, and all old tx outputs must also be unspent. However, Todd notes a flaw in Bitcoin wallet code where a transaction with double-spent inputs forever blocks those inputs from being spent. Though this doesn't happen too often, any CoinJoin implementation violates that assumption and could cause issues. Todd suggests the wallet recognize when a transaction's inputs no longer exist and mark remaining inputs as unspent.</summary>
    <published>2013-11-04T10:52:43+00:00</published>
  </entry>
</feed>
