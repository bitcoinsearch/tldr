<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Auto-generated miner backbone</title>
  <updated>2023-06-07T19:08:00.620058+00:00</updated>
  <author>
    <name>Peter Todd 2013-11-04 15:04:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Auto-generated miner backbone</title>
    <updated>2023-06-07T19:08:00.620058+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003547.html" rel="alternate"/>
    <summary>In an email thread, Ittay raises concerns about the vulnerability of Bitcoin mining pools to attacks by selfish miners. Even if selfish miners lose every time on a 1:1 competition, they can still benefit in pools larger than 33%, which is often the case. Ittay fears that employing an anti-sybil mechanism may expose new vulnerabilities. The current approach only gives the attacker a slight timing advantage and prevents network partitioning. However, their proposed approach replaces network-induced arbitrariness with explicit randomness, offering protection from 25% attacks but not as good as the previously assumed 51% security.The problem with randomly picking which side of the fork to mine on is that it isn't rational for individual miners. The time they hear about a block matters because the first block is more likely to have propagated to the majority of the hashing power than the second one. Therefore, miners are incentivized to always mine on the majority side, except for the previous block being theirs. Peter Todd suggests that near-target broadcast solution can give miners honest proof of what the majority actually is and that making use of that information is the economically rational choice even at an individual level. This solution defeats the attack and does better at returning the threshold to the originally assumed 51% level.</summary>
    <published>2013-11-04T15:04:06+00:00</published>
  </entry>
</feed>
