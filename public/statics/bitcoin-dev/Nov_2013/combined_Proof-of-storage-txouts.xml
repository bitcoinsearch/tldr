<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proof-of-storage txouts</title>
  <updated>2023-06-07T21:29:48.299808+00:00</updated>
  <author>
    <name>Peter Todd 2013-11-27 15:24:58</name>
  </author>
  <author>
    <name>Peter Todd 2013-11-27 15:24:58</name>
  </author>
  <author>
    <name>Peter Todd 2013-11-27 15:24:58</name>
  </author>
  <link href="bitcoin-dev/Nov_2013/003748_Proof-of-storage-txouts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003748_Proof-of-storage-txouts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003748_Proof-of-storage-txouts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proof-of-storage txouts</title>
    <updated>2023-06-07T21:29:48.299808+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003748.html" rel="alternate"/>
    <summary>A new approach was suggested for the Bitstorage scheme after it was concluded that the original idea would not work. This new approach requires people to prove they are still holding data by publishing transactions with scriptPubKeys of a specific form. The scheme involves publishing data and storing a smaller random set of samples for later retrieval.To improve this approach, private keys could be derived from the random data samples using a block cipher with key k, which can be created using HMAC(i, K). Rewards for proof can be released incrementally while only storing a single secret key. The distribution of k_i is made easier as the tiny 128-bit numbers should be signed to avoid DoS attacks.</summary>
    <published>2013-11-27T15:24:58+00:00</published>
  </entry>
</feed>
