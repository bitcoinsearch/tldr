<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 1. Re: On the optimal block size and why transaction fees are 8</title>
  <updated>2023-06-07T19:59:44.210918+00:00</updated>
  <author>
    <name>Goss, Brian C., M.D. 2013-11-08 16:21:35</name>
  </author>
  <author>
    <name>John Dillon 2013-11-13 20:27:52</name>
  </author>
  <author>
    <name>John Dillon 2013-11-13 20:27:52</name>
  </author>
  <author>
    <name>Goss, Brian C., M.D. 2013-11-08 16:21:35</name>
  </author>
  <author>
    <name>Goss, Brian C., M.D. 2013-11-08 16:21:35</name>
  </author>
  <author>
    <name>John Dillon 2013-11-13 20:27:52</name>
  </author>
  <link href="bitcoin-dev/Nov_2013/003628_1-Re-On-the-optimal-block-size-and-why-transaction-fees-are-8.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003641_1-Re-On-the-optimal-block-size-and-why-transaction-fees-are-8.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003641_1-Re-On-the-optimal-block-size-and-why-transaction-fees-are-8.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003628_1-Re-On-the-optimal-block-size-and-why-transaction-fees-are-8.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003628_1-Re-On-the-optimal-block-size-and-why-transaction-fees-are-8.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003641_1-Re-On-the-optimal-block-size-and-why-transaction-fees-are-8.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - 1. Re: On the optimal block size and why transaction fees are 8</title>
    <updated>2023-06-07T19:59:44.211918+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003628.html" rel="alternate"/>
    <summary>Peter Todd, in an email exchange on the Bitcoin development mailing list from November 2013, responds to a question about propagation time within a mining pool. He outlines three potential outcomes dependent on the amount of hashing power a miner has and defines t_prop as the time it takes for a block to propagate from a miner to 100% of the hashing power and t_int as the average interval between blocks. Todd calculates probabilities for each outcome, taking into account Q, and defines P_fork(Q) = (t_prop/t_int * (1-Q))(1-Q) = t_pop/t_int * (1-Q)^2. He then recalculates break-even fee/KB using Q and finds that larger pools have a significant advantage because they can charge lower fees for transactions and earn more money. Todd notes that this problem is inherent to Bitcoin's design and regardless of the block size or network speed, the current consensus protocol rewards larger mining pools with lower costs per KB to include transactions. He argues that an unlimited block size would make the problem worse by increasing fixed costs, but keeping the block size at 1MB forever doesn't solve the underlying issue either. Todd warns that the perverse incentives to publish blocks to only a minority of hashing power is a disaster for decentralization.In response to Brian Goss, a medical doctor, who asked about the propagation time within a mining pool and its impact on the analysis of Q for a mining pool made up of ASICs connected by 300 baud modems, Peter explains that even now, the propagation time from the pool to the miner is significant, especially for pools that do not pay for stale shares. He also talks about how selfish mining and orphans are becoming more important in general, which could lead to the physical location of hashing power becoming centralized. If there is a 100ms delay to a pool, miners may locate their mining equipment physically closer to the pool to avoid losing profits. This could lead to pools wanting to be located closer to each other. Peter suggests that if all Bitcoin mining were done in one place, such as Iceland, it would not be good. Finally, he reassures Brian that his questions are not ignorant.</summary>
    <published>2013-11-08T16:21:35+00:00</published>
  </entry>
</feed>
