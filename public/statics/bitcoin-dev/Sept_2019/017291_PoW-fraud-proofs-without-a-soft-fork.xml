<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PoW fraud proofs without a soft fork</title>
  <updated>2023-06-13T21:17:57.949397+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-09-09 06:58:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PoW fraud proofs without a soft fork</title>
    <updated>2023-06-13T21:17:57.949397+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017291.html" rel="alternate"/>
    <summary>The email conversation between Ruben and ZmnSCPxj revolves around the security concerns related to Sybil attacks on the Bitcoin blockchain. Ruben clarifies that in both cases, i.e., a full node or an SPV, valid PoW is required to fool nodes, and victims can be fooled into accepting invalid payments. However, ZmnSCPxj highlights the differences between the two situations. He states that during a sybil attack, a full node will stall, while an SPV using this style will follow the false blockchain. ZmnSCPxj further explains how automated payment processing systems using a full node will refuse incoming payments and generate warnings on the possibility of a sybil attack occurring, whereas systems using an SPV with PoW fraud proofs will be able to see incoming payments but may fail to detect false payments. ZmnSCPxj also mentions the possibility of a larger scale attack through miner-supported miner-subsidy-increase/blocksize-increase hard fork by forcing enough SPV nodes to use the hard fork, which might incentivize them to support the hard fork rather than back-compatible consensus chain.</summary>
    <published>2019-09-09T06:58:12+00:00</published>
  </entry>
</feed>
