<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-13T21:32:16.370468+00:00</updated>
  <author>
    <name>Christian Decker 2019-09-30 13:23:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-13T21:32:16.370468+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017326.html" rel="alternate"/>
    <summary>The email discusses the `sighash_noinput` proposal (BIP-118) and AJ's `bip-anyprevout` proposal, both of which allow rebinding of transactions to new outputs by adding a sighash flag that excludes the output when signing. The proposals are complementary and not competing. There are a couple of unclear points which need to be addressed, including general agreement on the usefulness of the proposals beyond eltoo and whether to merge BIP-118 and bip-anyprevout. The email also discusses various tradeoffs, such as the dangers of `sighash_noinput`, which may encourage wallet creators to only implement the noinput variant, and the use of chaperone signatures, which ensure there is no third-party malleability of transactions but have downsides such as additional size and the possibility of protocols using a globally known privkey. Output tagging is another proposal that would achieve the same disincentive to use non-smart-contract cases by making the output scripts unaddressable. While this idea hurts fungibility, it could create two domains: one for user-addressable destinations and one domain for contracts. The email concludes with open questions, such as the need for general agreement on the usefulness of the proposals, support or opposition to chaperone signatures and output tagging, and anything else that needs to be addressed.</summary>
    <published>2019-09-30T13:23:56+00:00</published>
  </entry>
</feed>
