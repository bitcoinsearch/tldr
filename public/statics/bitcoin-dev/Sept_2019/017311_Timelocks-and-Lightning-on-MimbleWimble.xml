<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Timelocks and Lightning on MimbleWimble</title>
  <updated>2023-06-13T21:23:06.794883+00:00</updated>
  <author>
    <name>Martin Schwarz 2019-09-19 08:39:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Timelocks and Lightning on MimbleWimble</title>
    <updated>2023-06-13T21:23:06.794883+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017311.html" rel="alternate"/>
    <summary>In a recent email exchange on the Bitcoin-dev mailing list, ZmnSCPxj discussed the use of relative lock-time in MimbleWimble's blockchain. While absolute lock-time exists in MimbleWimble, it lacks relative lock-time which is essential for indefinite-lifetime channel constructions with practical off-chain updateable cryptocurrency systems. This means that while two-of-two constructs are possible in MimbleWimble, HTLC-like constructs are only achievable through the use of two transaction alternatives: one timelocked and the other hashlocked. The lack of relative lock-time also makes validating transactions difficult as a new node would have to validate all transactions from its creation rather than starting from the current UTXO set, seriously damaging the point of using MimbleWimble in the first place. Overall, ZmnSCPxj argues that the lack of relative lock-time, not the lack of SCRIPT, is what prevents Lightning-over-MimbleWimble.</summary>
    <published>2019-09-19T08:39:00+00:00</published>
  </entry>
</feed>
