<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Introcing a side memory network to bitcoin for ads</title>
  <updated>2023-05-20T20:57:57.435689+00:00</updated>
  <author>
    <name>Tamas Blummer 2019-09-14 13:21:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Introcing a side memory network to bitcoin for ads</title>
    <updated>2023-05-20T20:57:57.435689+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017299.html" rel="alternate"/>
    <summary>Defiads is a side memory network to bitcoin that serves decentralized finance applications with an infrastructure to distribute advertisements, order books, coinjoin proposals, etc. It is implemented in Rust and built on top of rust-bitcoin, murmel, hammersbald, rust-bitcoinconsenus, rust-wallet, all Rust open source free to grab at github.com/defiads/defiads. Every defiads node maintains a copy of a network-wide shared 1GB memory pool of current ads. An ad is replicated to other nodes as long as there is some bitcoin locked to it on the bitcoin network. Locking means someone transferred some sats to an address that is associated with the ad using the pay-to-contract protocol. The address does not release the bitcoins until a predefined time span that is the duration of the advertisement. The ad will be evicted from the pool as soon as the coins locked to it are spendable again. Defiads ranks advertisements by the ratio of used space divided by bitcoins locked and will only replicate the top 1GB of this ranked list. You may read the ads by starting a defiads process of your own and querying the content through its JSON-RPC API. To place ads, one needs to deposit some bitcoins into their defiads node's wallet, prepare an ad, providing its category, abstract, and content, fund the ad by locking some of the bitcoins to it for a limited term of the advertisement, and withdraw coins from the defiads node's wallet after the advertisement expires. Defiads handles the association with ads, locking and unlocking coins. Defiads connects to both the bitcoin and its own peer-to-peer network. One does not need to run a bitcoin node as defiads only needs a small fraction of the information on the bitcoin blockchain and retrieves that on its own, as an SPV node. The defiads node's wallet is compatible with that of TREZOR, Ledger, Greenwallet, and many other wallets that support BIP38, BIP44, BIP48, BIP84 key generation and use standards. Defiads uses Invertible Bloom Lookup Tables to synchronize the ads pool with its peers. It seems to work, but one should not yet use it with real bitcoins; therefore, by default, it connects the bitcoin's test network. There is no discovery for the network yet, so one will have to know some peer in the network to see other than their own ads. Future development may lead to the competition for the use of the 1GB pool, and people might pay others to lock their bitcoins to fund an advertisement. Defiads network could match both sides and thereby give rise to bitcoin's first truly riskless interest rate market. Defiads is currently downloading, but not storing, the blocks after its birth date. This will no longer be needed once BIP158 filters are served and committed by Bitcoin Core. Tamas Blummer hopes that someone builds a nice UI on top of the JSON RPC as that is not his area of expertise.</summary>
    <published>2019-09-14T13:21:28+00:00</published>
  </entry>
</feed>
