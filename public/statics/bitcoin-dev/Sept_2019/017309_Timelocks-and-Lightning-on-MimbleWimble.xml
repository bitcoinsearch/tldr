<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Timelocks and Lightning on MimbleWimble</title>
  <updated>2023-06-13T21:22:56.061476+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-09-19 07:52:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Timelocks and Lightning on MimbleWimble</title>
    <updated>2023-06-13T21:22:56.061476+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017309.html" rel="alternate"/>
    <summary>The post discusses the use of `nLockTime` in MimbleWimble and its potential for cross-system atomic swaps. The author also asserts that Lightning and similar offchain protocols are not possible on MimbleWimble due to the lack of relative locktime, which is necessary for practical channel constructions with indefinite lifetime. The post explains the need for a "timeout" in all practical offchain updateable cryptocurrency systems and how it could be implemented using relative or absolute lock time. The author suggests that the lack of relative locktime prevents validation of output in the UTXO set and forces us back to the old "validate all transactions" model of starting a new node. The post concludes by stating that it is the lack of relative locktime in MimbleWimble that prevents Lightning-over-MimbleWimble, rather than the lack of SCRIPT.</summary>
    <published>2019-09-19T07:52:11+00:00</published>
  </entry>
</feed>
