<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Stroll through Fee-Bumping Techniques : Input-Based vs Child-Pay-For-Parent</title>
  <updated>2023-06-14T22:16:51.124390+00:00</updated>
  <author>
    <name>Lloyd Fournier 2021-06-15 00:59:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Stroll through Fee-Bumping Techniques : Input-Based vs Child-Pay-For-Parent</title>
    <updated>2023-06-14T22:16:51.124390+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019071.html" rel="alternate"/>
    <summary>In an email thread, Lightning Labs developer Antoine Riard raised concerns about a fee-bumping reserve system. He asked how to prevent a broadcast at a feerate lower than agreed upon, thus burning a lot of the fee-bumping reserve. One mitigation is making a contribution to a common fee-bumping output reserve proportional to what has been contributed as funding collateral. However, this could lead to time bleeding on the fee-bumping reserve if off-chain balances fluctuate to be out-of-proportion with the reserve contribution. LL suggested a single-party managed fee-bumping system that solves all fee-bumping requirements of lightning without needing external utxos and without additional interaction or fee pre-agreement between parties. On the commit tx, the balance goes exclusively towards the holder who can unilaterally reduce it to increase the fee up to whatever threshold desired. With a HTLC or PTLC, there is always a tx with an output that can be unilaterally drained to bump fee. LL claimed that his idea can be enabled on all Bitcoin transactions. Even for normal wallet-to-wallet payments, the receiver could efficiently increase the tx fee by making a signature under the key of their output and replacing the original tx without interacting with the sender who provided the funds for the payment.</summary>
    <published>2021-06-15T00:59:12+00:00</published>
  </entry>
</feed>
