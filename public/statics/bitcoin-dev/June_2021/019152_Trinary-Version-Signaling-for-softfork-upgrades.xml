<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trinary Version Signaling for softfork upgrades</title>
  <updated>2023-06-14T23:40:18.709644+00:00</updated>
  <author>
    <name>Jorge Tim√≥n 2021-06-29 19:28:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trinary Version Signaling for softfork upgrades</title>
    <updated>2023-06-14T23:40:18.709644+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019152.html" rel="alternate"/>
    <summary>The concept of "Confirmation" not being needed for softforks has been discussed in the bitcoin community. Many developers do not seem to understand that miners controlling confirmation does not mean they control the rules, as users choose what to run. Splitting between disagreeing users may be the only way Bitcoin can continue as a decentralized currency, but it is not necessary in all cases. Coordinating a split requires coordinated action, which goes against the idea of proof of work mining. Soft forks are rule changes and are incompatible unless enforced by majority hash power. Ultimately, the solution lies in getting majority hash power support.Mining is voting by trading capital now for more later, and anyone can mine. The market resolves the question of conflicting wants in Bitcoin. If enough people want to enforce a soft fork or otherwise censor, they can do so. Anyone can start a new coin, but it is dishonest to imply that all others will surely follow.The recent controversy over upgrade mechanisms for the non-controversial taproot upgrade has led to a proposal by Billy Tetrud, which uses trinary version signaling rather than binary signaling. The proposal allows for three signaling states: actively support the change, actively oppose the change, and not signaling (neither support nor oppose). This additional information can be used to release non-contentious upgrades much quicker, with a much lower percentage of miners signaling support. For contentious upgrades, miners who oppose the change are incentivized to update their software to a version that can actively signal opposition to the change. The more opposition there is, the higher the threshold necessary to lock in the upgrade. With the proposed parameters, a chart shows how much support signaling would be necessary given a particular amount of active opposition signaling. If no one signals opposition, a 60% threshold should be relatively safe, as it is a supermajority amount that is unlikely to change significantly very quickly. This gives an incentive for lazy miners to upgrade if they actually oppose the change while allowing these lazy miners to remain lazy without slowing down the soft fork activation much.However, Eric Voskuil argues that activation without majority hash power support does not ensure preventing a split. Without majority hash power support, activation simply means a chain split, and anyone can split off from a chain by changing a rule at any time. Luke Dashjr via bitcoin-dev adds that BIP8 LOT=True just ensures miners cannot block an upgrade entirely; they can still slow it down. He also claims that no additional bit is needed, as softforks are coordinated between users, NOT miners, who have no particular say in them, aside from their role as also being users. The miner involvement is only out of necessity and potentially to accelerate activation by protecting upgrade-lagging users.Overall, while the proposal by Billy Tetrud aims to solve problems brought up by both sides, there are differing opinions on whether it will actually prevent potential issues and splits. The discussion highlights the complexity and challenges of implementing upgrades in a decentralized system like Bitcoin.</summary>
    <published>2021-06-29T19:28:20+00:00</published>
  </entry>
</feed>
