<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Full-RBF in Bitcoin Core 24.0</title>
  <updated>2023-06-14T22:40:01.288920+00:00</updated>
  <author>
    <name>Antoine Riard 2021-06-15 16:55:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Full-RBF in Bitcoin Core 24.0</title>
    <updated>2023-06-14T22:40:01.289920+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019074.html" rel="alternate"/>
    <summary>The proposal is to deprecate opt-in RBF in favor of full-RBF as the default replacement policy in Bitcoin Core version 24.0, with deployment aimed a year from now assuming agreement is reached. The rationale for this change is based on ongoing and anticipated changes in the Bitcoin ecosystem. One issue with RBF opt-out is that it can be used as a DoS vector against multi-party funded transactions, affecting protocols such as Coinjoin, onchain DLCs, and dual-funded LN channels. Additionally, there is a risk of mempools malicious partitions where an attacker exploits network topology or divergence in mempools policies to partition network mempools in different subsets. To enhance 0-confs security, proactive security models such as double-spend monitoring/receiver-side fee-topping with package relay and reactive security models such as economic reputation-based compensations could be considered. Ultimately, the goal is to preserve the current interests of 0-confs users while enabling upcoming interests of fancy L2s to flourish. If there is agreement on switching to full-RBF, but 0.24 sounds too early, the proposal suggests deferring it to 0.25 or 0.26.</summary>
    <published>2021-06-15T16:55:14+00:00</published>
  </entry>
</feed>
