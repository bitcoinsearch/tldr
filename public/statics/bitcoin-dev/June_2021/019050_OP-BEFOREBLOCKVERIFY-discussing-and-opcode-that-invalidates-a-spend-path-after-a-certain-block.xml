<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>OP_BEFOREBLOCKVERIFY - discussing and opcode that invalidates a spend path after a certain block</title>
  <updated>2023-05-21T02:40:23.819851+00:00</updated>
  <author>
    <name>Billy Tetrud 2021-06-10 17:35:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>OP_BEFOREBLOCKVERIFY - discussing and opcode that invalidates a spend path after a certain block</title>
    <updated>2023-05-21T02:40:23.819851+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019050.html" rel="alternate"/>
    <summary>Bitcoin developer BT has proposed a new opcode called OP_BEFOREBLOCKVERIFY (OP_BBV) that would allow for switch-off transactions. The opcode would take as a parameter a block height, marking the transaction invalid if the current block is greater than or equal to that height. Such functionality is useful for expiring payments or reversible payments that require a sequence of multiple transactions, but can be handled in one transaction with OP_BBV. BT specifically mentioned a more efficient wallet vault application for this opcode. However, he also noted concerns about opcodes that could invalidate valid transactions, namely: 1) creating a DOS vector where malicious actors spam the mempool with transactions containing the opcode, and 2) causing "bad" reorg behavior. BT believes that while the former issue is solvable, the latter is not much of a problem since users should generally wait for six confirmations before considering a transaction final. BT wrote a bip for OP_BBV and discussed these issues in detail in his Design Tradeoffs and Risks section. He is seeking feedback on this proposal from the Bitcoin community.</summary>
    <published>2021-06-10T17:35:25+00:00</published>
  </entry>
</feed>
