<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Full-RBF in Bitcoin Core 24.0</title>
  <updated>2023-06-14T22:38:49.994617+00:00</updated>
  <author>
    <name>Corey Haddad 2021-06-30 14:06:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Full-RBF in Bitcoin Core 24.0</title>
    <updated>2023-06-14T22:38:49.994617+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019169.html" rel="alternate"/>
    <summary>The debate over whether to continue supporting 0-conf transactions in Bitcoin has been ongoing. Some argue that design decisions should not be based on making these transactions more or less difficult to double-spend, while others argue that 0-conf transactions can be useful in situations where there is some level of trust between parties. However, there are concerns about the security risks of 0-conf transactions, particularly when it comes to multi-party funded transactions, which can be vulnerable to DoS attacks through RBF opt-out double-spends.To address these concerns, proposals have been made to replace opt-in RBF with full-RBF as the default replacement policy in Bitcoin Core version 24.0. This would help prevent DoS attacks and mempools malicious partitions, which could compromise the security of the network. However, it is important to consider the impact of such a change on those who rely on 0-conf transactions for their services. Proactive security models such as double-spend monitoring and receiver-side fee-topping with package relay have also been proposed to enhance the security of 0-conf transactions.The email thread discusses the use of reactive security models, specifically economic reputation-based compensations, to address risks associated with 0-confirmation transactions. The approach involves reacting after a double-spend has occurred by slashing the service account of the sender if they are already known to the service provider or relying on "side-trust" models for low-trusted counterparties. The use of trust-minimized, decentralized solutions is expected to be adopted by the Lightning Network ecosystem to patch risks when entering into a channel/HTLC operation with an anonymous counterparty. Other tools to enhance 0-conf security are also being considered.The thread also raises the issue of preserving the interests of 0-conf users while enabling the upcoming interests of Layer 2 solutions to flourish. The possibility of switching to full-RBF is discussed but it is suggested that it be deferred to future updates if deemed too early. Links to relevant resources such as previous email threads and GitHub pull requests are provided. The email thread is part of the bitcoin-dev mailing list. Overall, while there are arguments for and against supporting 0-conf transactions in Bitcoin, it is clear that measures must be taken to ensure their security and prevent potential attacks on the network.</summary>
    <published>2021-06-30T14:06:50+00:00</published>
  </entry>
</feed>
