<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Waiting SIGHASH_ANYPREVOUT and Packing Packages</title>
  <updated>2023-06-14T23:22:09.434746+00:00</updated>
  <author>
    <name>Antoine Riard 2021-06-21 08:13:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Waiting SIGHASH_ANYPREVOUT and Packing Packages</title>
    <updated>2023-06-14T23:22:09.434746+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019092.html" rel="alternate"/>
    <summary>Antoine Riard, a Lightning Network developer, recently discussed the pre-signed feerate issue and proposed two potential solutions to address it. The first solution he suggested was package-relay, which allows for dynamically adding inputs and modifying outputs for fees. This approach is useful for CPFP fee bumping of very low feerate transactions received from an external party. The second solution Antoine proposed was SIGHASH_ANYPREVOUT, which has been touted as a way to solve pinning, but there has not been a clear discussion on how this would work beyond those LN meetings logs.During the conversation, Dave Harding raised concerns about the potential malicious attacks and eltoo's ability to work with SIGHASH_ANYPREVOUT. To address these concerns, Antoine suggested adding a per-participant key to lockdown the transaction to avoid in-flight malleability. He also emphasized the importance of fee-bumping reserve and warned against miner-harvesting attacks against LN nodes.Antoine additionally highlighted the need for concrete numbers and dates to minimize CVE-2020-26895 style-of-bugs across the ecosystem. He urged the Bitcoin community to take action on safety holes before they manifest in the wild. Despite his ideas being put forward, Antoine admitted that they could be wrong and encouraged others to teach him back.In another email, the author discusses the benefits of package relay and its applications. However, the author cautions against creating timelines for deployment as it depends on the work of many contributors who have not yet been consulted. As such, the author believes that things will get done when they get done.</summary>
    <published>2021-06-21T08:13:32+00:00</published>
  </entry>
</feed>
