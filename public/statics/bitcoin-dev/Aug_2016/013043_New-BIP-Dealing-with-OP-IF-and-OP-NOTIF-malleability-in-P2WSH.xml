<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New BIP: Dealing with OP_IF and OP_NOTIF malleability in P2WSH</title>
  <updated>2023-06-11T19:44:41.380097+00:00</updated>
  <author>
    <name>Sergio Demian Lerner 2016-08-18 00:11:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New BIP: Dealing with OP_IF and OP_NOTIF malleability in P2WSH</title>
    <updated>2023-06-11T19:44:41.380097+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013043.html" rel="alternate"/>
    <summary>The issue at hand is that witness data size is not signed, leading to potential malleability issues and problems for systems with hard limits on the size of witness programs they can accept. A proposed solution is to soft-fork and add an opcode OP_PROGSIZE that pushes the size of the segwit program being evaluated onto the stack, which would allow scripts to take action based on the size. This would prevent an attacker from creating a clone of a transaction with a witness ECDSA signature longer than 0x50 bytes. The discussion also touches on workarounds for current behavior and the need to enforce MINIMALIF in some cases, with the suggestion to make it a relay policy first before considering a softfork.</summary>
    <published>2016-08-18T00:11:16+00:00</published>
  </entry>
</feed>
