<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hardware Wallet Standard</title>
  <updated>2023-06-11T19:40:15.751382+00:00</updated>
  <author>
    <name>Peter Todd 2016-08-17 00:14:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hardware Wallet Standard</title>
    <updated>2023-06-11T19:40:15.751382+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013025.html" rel="alternate"/>
    <summary>In an email thread on the bitcoin-dev mailing list, Aiqin Li asked why a normal ECC-enabled smart card can't be used for the hardware signing component of a wallet app and if its standardisation has been discussed. Peter Todd, a Bitcoin Core developer, responded saying that he is not aware of any ECC-enabled smart cards that can sign the specific curve that Bitcoin uses. Additionally, the smartcards generally only speak higher level protocols than raw signature generation, which precludes the signing of bitcoin transactions. The other serious problem with smartcards in general is that without Bitcoin-specific logic, users are just signing blindly, which was seen in the Bitfinex/BitGo hack. Even then, without a screen, most hardware wallets are still just signing blindly, with at best hard-to-use limits on maximum funds moved per-transaction. It's worth noting that even hardware wallets with a screen, like Trezor, aren't yet able to authenticate who you are paying.</summary>
    <published>2016-08-17T00:14:07+00:00</published>
  </entry>
</feed>
