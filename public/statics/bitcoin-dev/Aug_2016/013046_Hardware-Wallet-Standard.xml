<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hardware Wallet Standard</title>
  <updated>2023-06-11T19:41:41.794669+00:00</updated>
  <author>
    <name>Jonas Schnelli 2016-08-18 06:54:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hardware Wallet Standard</title>
    <updated>2023-06-11T19:41:41.794669+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013046.html" rel="alternate"/>
    <summary>The discussion revolves around the concept of driving signing workflow by wallet software which the user fundamentally disagrees with. The required data to verify and sign a standard bitcoin transaction, including P2WSH multi-sig, is manageable. Currently, the TREZOR protocol works like device is a server and wallet is a client calling methods on it. Multiple rounds would still be possible with a clever design and passing a 300kb chunk over a URI scheme requires a couple of milliseconds on standard Smartphones or PCs. The user thinks that rather than finding any minimal URI-based API good enough for communicating with all vendors, some third party libraries defining high-level API and implementing hardware-specific protocols and transports as plugins would be more likely. The URI-based API allows transmitting data of multiple megabytes while there is no need for dependencies of any form, library support for a particular language, or platform that supports the dependencies of the library.</summary>
    <published>2016-08-18T06:54:04+00:00</published>
  </entry>
</feed>
