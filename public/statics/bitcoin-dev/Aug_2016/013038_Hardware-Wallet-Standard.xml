<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hardware Wallet Standard</title>
  <updated>2023-06-11T19:42:13.841087+00:00</updated>
  <author>
    <name>Dana L. Coe 2016-08-17 10:13:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hardware Wallet Standard</title>
    <updated>2023-06-11T19:42:13.841087+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013038.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Jonas Schnelli suggested that the URI scheme is a modern way for applications to interact with each other while not directly knowing each other. He argued that registering a URI scheme like "bitcoin://" has some concrete advantages over just piping through stdio and the approach does not require any sorts of wallet app level configuration. Furthermore, the stdio/piping approach does not work for mobile platforms where the URI scheme works. However, Dana from BitLox pointed out that the URI scheme ignores the fact that hardware wallet vendors do most of the work on talking between the computer/mobile and the wallet on a lower level of communication. In the case of BitLox, the base protocol is Google's ProtoBuf, which can be implemented on a wide variety of platforms. The URI would be handled in the specific application - nowhere near the actual hardware communications layer.</summary>
    <published>2016-08-17T10:13:29+00:00</published>
  </entry>
</feed>
