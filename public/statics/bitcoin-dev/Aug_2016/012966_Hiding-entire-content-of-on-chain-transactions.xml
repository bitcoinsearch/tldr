<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hiding entire content of on-chain transactions</title>
  <updated>2023-06-11T19:24:57.008237+00:00</updated>
  <author>
    <name>Tony Churyumoff 2016-08-08 23:42:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hiding entire content of on-chain transactions</title>
    <updated>2023-06-11T19:24:57.008237+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/012966.html" rel="alternate"/>
    <summary>The proposed design aims to enhance the privacy of Bitcoin transactions. It suggests hiding all inputs and outputs of Bitcoin transactions and publishing only their hash in the blockchain. The plaintext of inputs and outputs is sent directly to the payee via a private message, and each new owner of the coin will have to store its entire history. When someone spends the coin, they forward the entire history to the next owner and extend it with their own transaction.To prove that the outputs being spent are valid, the payer has to send the plaintexts of earlier transactions that produced them, and so on, until the issue transactions that created the initial private coins. To avoid the rapid growth of ownership history, each private transaction must have exactly one input. This forbids any coin merges but still allows coin splits. With fixed denominations and one input per transaction, coin histories grow linearly, which should not be a concern in regard to scalability.The Bitcoin network protocol lacks encryption, so private payments are only private when Bitcoin is used over tor. After a user sends a private payment to another user, the sender will know when the coin was spent, but nothing more. No hard or soft fork is required since the proposal suggests creating a separate privacy-preserving currency on top of the Bitcoin blockchain. The same private keys and addresses can be used for both Bitcoin Cash (BCC) and Bitcoin (BTC).However, every BCC transaction must be enclosed by a small BTC transaction that stores the OP_RETURNs and pays for the fees. The design has been questioned for any flaws, but no feedback was given due to other issues being prioritized such as bitfinex drama and mimblewimble. The discussion continues on the bitcoin-dev mailing list, where Henning Kopp from the Institute of Distributed Systems at Ulm University in Germany provides his contact information.</summary>
    <published>2016-08-08T23:42:03+00:00</published>
  </entry>
</feed>
