<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hardware Wallet Standard</title>
  <updated>2023-06-11T19:40:38.196921+00:00</updated>
  <author>
    <name>Marek Palatinus 2016-08-17 17:06:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hardware Wallet Standard</title>
    <updated>2023-06-11T19:40:38.196921+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013041.html" rel="alternate"/>
    <summary>In a Bitcoin developer forum, a proposal was made to have a standardized hardware wallet interface. One member disagreed with the idea of driving signing workflow through the wallet software, as it may not know all necessary data in advance. Instead, he suggested high-level APIs that implement hardware-specific protocols and transports as plugins. Another member added that the proposed URI scheme would only be handled in the specific application and not near the actual hardware communications layer. The detached-signing proposal was also mentioned, which moves the current plugin design into a separate application to avoid using plugins in security and privacy-critical wallet software. Defining a standard on the hardware interaction layer is possible but requires a different approach.</summary>
    <published>2016-08-17T17:06:08+00:00</published>
  </entry>
</feed>
