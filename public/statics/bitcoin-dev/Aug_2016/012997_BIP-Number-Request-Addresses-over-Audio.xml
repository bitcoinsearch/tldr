<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Number Request: Addresses over Audio</title>
  <updated>2023-06-11T19:29:09.266015+00:00</updated>
  <author>
    <name>Jorge Tim√≥n 2016-08-12 15:49:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Number Request: Addresses over Audio</title>
    <updated>2023-06-11T19:29:09.266015+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/012997.html" rel="alternate"/>
    <summary>The conversation in this context revolves around the use of bip32 public seeds as an alternative to one-use addresses when multiple payments are expected from a single payer. Anyone with the bip32 public seed can act as a "watch only" receiver, while the actual receiver has the ability to spend the coins. It's noted that giving a different bip32 public seed to each payer would allow for starting at zero and incrementing with each new payment. However, it's unclear if this would be useful in practice. The discussion then shifts to Erik Aronesty's proposal of a "publishable seed," which would allow someone to derive a random bitcoin address and receive funds, but also be able to scan the blockchain efficiently to determine which addresses they have the keys to. Gregory Maxwell suggests that generating all possible addresses from a BIP32 public seed would take about 8 hours with competent software on a quad-core laptop.</summary>
    <published>2016-08-12T15:49:23+00:00</published>
  </entry>
</feed>
