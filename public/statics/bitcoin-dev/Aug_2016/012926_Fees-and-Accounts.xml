<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fees and Accounts</title>
  <updated>2023-06-11T19:16:55.600728+00:00</updated>
  <author>
    <name>James MacWhyte 2016-08-03 18:33:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fees and Accounts</title>
    <updated>2023-06-11T19:16:55.600728+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/012926.html" rel="alternate"/>
    <summary>Based on a message posted to the bitcoin-dev mailing list, it seems that many people build their own account systems separately and use bitcoind just for sending, receiving, and verifying transactions. Bitcoind is not designed to be a complete solution for running an entire bitcoin deposit and withdrawal system; it provides only the bare tools required to build such a system. If a pre-built solution is needed, there are companies like BitGo that offer those types of services as a platform.The message posted to the mailing list raises concerns about the deprecation of accounts in bitcoind. The poster notes that if they have accounts, they need to ensure that account holders do not overcharge their account. They suggest using "createrawtransaction() + fundrawtransaction() + signrawtransaction()" to ensure that the transaction can be paid by an account. However, since accounts have been deprecated and there is no sendrawtransactionfrom() method, the poster must either build their own account system or speculate that the account code will not be untangled and hack bitcoind to have a sendfrom with a fixed fee parameter that overrides the size multiplication. The poster argues that an integrated account system in bitcoind is necessary to track all incoming funds to all addresses effectively. They note that without accounts, bitcoind is only a person-to-person manual client and cannot support many-to-many automatic "organizations" on top of its platform. The poster suggests that there are likely hundreds if not thousands of developers in a similar situation and that deprecating accounts without providing a suitable alternative could discourage further development related to bitcoin.</summary>
    <published>2016-08-03T18:33:41+00:00</published>
  </entry>
</feed>
