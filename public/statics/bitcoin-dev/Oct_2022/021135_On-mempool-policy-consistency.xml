<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On mempool policy consistency</title>
  <updated>2023-05-22T22:09:07.107275+00:00</updated>
  <author>
    <name>Suhas Daftuar 2022-10-31 13:02:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On mempool policy consistency</title>
    <updated>2023-05-22T22:09:07.107275+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021135.html" rel="alternate"/>
    <summary>The Bitcoin Core project is currently evaluating changes to its mempool policy regarding the `-mempoolfullrbf` flag. The author of an email suggests that the current relay policy should be maintained, where replacements are rejected for transactions that don't opt-in to RBF as described in BIP 125. They propose removing the flag from release candidates unless circumstances change on the network. The email discusses technical issues related to enabling fullrbf on the network, including a DoS vector that interferes with multi-party funded transactions. The author argues that fullrbf does not solve any problems for RBF users who are already free to choose to subject their transactions to BIP 125's RBF policy. Enabling it would take away user choice to opt a transaction into a non-replacement policy regime. Users may still use the BIP 125 signaling method to indicate non-replaceability, but the author argues that this is not harmful to the network, and there are legitimate use cases for such signaling. The email also explores the idea of opt-in transaction replacement policies and whether they would interfere with anti-DoS mempool acceptance algorithms or run counter to the interests of miners or node operators. The author suggests that the philosophy of transaction relay policy in Bitcoin Core should be to support disparate use cases to make everything work better, rather than break things prematurely because others might break them eventually anyway. They acknowledge that other software projects might choose differently, but the permissionless nature of the network allows for different approaches.</summary>
    <published>2022-10-31T13:02:02+00:00</published>
  </entry>
</feed>
