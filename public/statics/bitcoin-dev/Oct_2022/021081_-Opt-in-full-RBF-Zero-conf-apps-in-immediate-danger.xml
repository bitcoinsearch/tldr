<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>[Opt-in full-RBF] Zero-conf apps in immediate	danger</title>
  <updated>2023-05-22T21:49:06.781018+00:00</updated>
  <author>
    <name>Eloy 2022-10-20 22:02:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>[Opt-in full-RBF] Zero-conf apps in immediate	danger</title>
    <updated>2023-05-22T21:49:06.781018+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021081.html" rel="alternate"/>
    <summary>The Bitcoin-dev mailing list is currently discussing the use of Replace-By-Fee (RBF) and how it could affect zeroconf transactions. One concern with opt-in RBF is that it is not treated as zeroconf, leaving a risk for fiat/BTC exchange rate changes between transaction and confirmation. This poses a problem for payees that opt-in to RBF. One suggested solution is collaboration between wallet developers and merchant developers to come up with better answers for on-chain payments. One proposal is to credit accounts in BTC and work out USD conversions for the purchase, allowing customers to use any remaining BTC from their on-chain payment however they like.Another proposal is to punish nodes that replace transactions by stopping propagation of the block when a miner publishes a block with NO RBF that is replaced. Developers prefer full RBF to force users to use centralized stuff, which is why the full RBF option is already on core. However, it's important to keep in mind that there is always a way to enforce a policy that can keep zeroconf working.The Lightning network currently accounts for around 15% of all bitcoin payments, but it's difficult to predict when adoption will reach 80% or more. In the meantime, developers are encouraged to focus on productive things.</summary>
    <published>2022-10-20T22:02:13+00:00</published>
  </entry>
</feed>
