<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>brickchain</title>
  <updated>2023-06-16T02:15:12.079109+00:00</updated>
  <author>
    <name>mm-studios 2022-10-19 16:03:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>brickchain</title>
    <updated>2023-06-16T02:15:12.079109+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021061.html" rel="alternate"/>
    <summary>The original message proposes an idea to increase throughput in the Bitcoin network by allowing a miner to include transactions until the block is filled, creating a "brick." Once a brick is fully filled with transactions, it is broadcasted as usual with a nonce corresponding to a minimum numeric value of its hash found until it got filled. The miner then starts working on a new brick linked with the previous one. Nodes would allow incoming regular blocks and bricks with hashes that don't satisfy the difficulty rule, provided the brick is fully filled of transactions. However, reduced settlement speed is a desirable feature, and the focus should be on layer 2 protocols like MWEB that allow holding and transferring uncommitted transactions as pools/joins so that layer 1's decentralization and incentives can remain undisturbed. The main concerns regarding increasing block size are not to increase the workload of full-nodes to prevent negative centralization effects and to avoid undermining L2 systems like LN. While the idea may completely flush mempools, keep transaction fees low, and increase throughput without raising concerns related to propagation, it needs better definition and validation.</summary>
    <published>2022-10-19T16:03:45+00:00</published>
  </entry>
</feed>
