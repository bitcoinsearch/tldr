<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
  <updated>2023-05-22T21:34:05.469333+00:00</updated>
  <author>
    <name>Anthony Towns 2022-10-12 05:42:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
    <updated>2023-05-22T21:34:05.469333+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021001.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list discussed the merging of a pull request (#25353) which adds an opt-in flag for full-RBF. Dario Sneidermanis raised concerns about the potential risk to zero-conf applications if the flag is adopted by enough nodes to enable full-RBF. He explained that the activation of full-RBF works in three stages, with the third stage having enough density of full-RBF nodes that almost all full-RBF nodes can replace transactions via full-RBF. Since most nodes are currently running Bitcoin Core, adding an opt-in flag makes it easier for node operators to pick up full-RBF. However, this also makes zero-conf applications at severe risk, as per the logic in the initial email. The discussion concluded that if adding the option does nothing, then there's no point adding it, and no harm in restricting it to test nets only. But if adding the option enables full-RBF, businesses using zero-conf need to react immediately or will go from approximately zero risk of losing funds to substantial risk.</summary>
    <published>2022-10-12T05:42:14+00:00</published>
  </entry>
</feed>
