<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On mempool policy consistency</title>
  <updated>2023-05-22T22:16:52.562170+00:00</updated>
  <author>
    <name>Anthony Towns 2022-10-27 17:21:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On mempool policy consistency</title>
    <updated>2023-05-22T22:16:52.562170+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021124.html" rel="alternate"/>
    <summary>In an email thread discussing the use of zeroconf and opt-in replace-by-fee (RBF), a bitcoin developer admits to being biased against zeroconf, stating that they would not personally trust it for their own incoming funds. They argue that they are more interested in a world where chargebacks are impossible rather than relying on technology from five or ten years ago. The developer acknowledges that those who are willing to tolerate the risks of zeroconf should be involved in the discussion. The developer also addresses a claim that opt-in RBF has been an option for years, arguing that Antoine's claim that opt-in RBF isn't enough to avoid a denial-of-service issue when utxos are jointly funded by untrusting partners is the main motivation for addressing this now. They provide a scenario in which A, B, and C create a transaction, agree that it looks great, but before publishing it, A spams the network with an alternative transaction, double-spending her input. This could cause issues for B and C, as they may waste time trying to fee bump the transaction to get it mined or similar.The developer concludes by questioning whether accusations of passive aggression, escalation, unfair advantage, oppressive, dark-pattern design, strong-arming, and shoe-horning are helping the cause of those advocating for zeroconf.</summary>
    <published>2022-10-27T17:21:53+00:00</published>
  </entry>
</feed>
