<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Trustless Address Server ? Outsourcing handing out addresses</title>
  <updated>2023-06-16T00:45:03.778764+00:00</updated>
  <author>
    <name>Peter 2022-10-01 04:36:44</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 10:18:49</name>
  </author>
  <author>
    <name>Peter 2022-10-01 04:36:44</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 10:18:49</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 10:18:49</name>
  </author>
  <author>
    <name>Peter 2022-10-01 04:36:44</name>
  </author>
  <link href="bitcoin-dev/Oct_2022/020961_Trustless-Address-Server-Outsourcing-handing-out-addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020963_Trustless-Address-Server-Outsourcing-handing-out-addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020961_Trustless-Address-Server-Outsourcing-handing-out-addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020963_Trustless-Address-Server-Outsourcing-handing-out-addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020963_Trustless-Address-Server-Outsourcing-handing-out-addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020961_Trustless-Address-Server-Outsourcing-handing-out-addresses.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Trustless Address Server ? Outsourcing handing out addresses</title>
    <updated>2023-06-16T00:45:03.778764+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/020961.html" rel="alternate"/>
    <summary>Peter Kroll discusses important considerations regarding the use of xpubs and invoice addresses in Bitcoin transactions. One issue with handing out xpubs is the quadratic gap limit problem, where wallets have to scan multiple xpubs and their receive addresses. The Lightning network offers a solution by using Lightning addresses that use plus addresses. Another issue is the need for an expiry date on layer 1 addresses to ensure that the receiver still has the corresponding keys. The Lightning network also has a solution for this. There is also a discussion about using a deterministic path that doesn't split receive and change addresses. Satoshi's original wallet concept included an ever-growing key pool with a 100 address gap, which could potentially solve the gap limit problem. Btcpayserver may also have a solution with its configurable gap limit and ability to issue fresh addresses even if they're not used. Ruben suggested that handing out xpubs could lower the gap limit for generated addresses because there is less of a reason to expect a gap if those addresses are used by the same person. Peter added some points for discussion, including how handing out xpubs can make the gap limit problem quadratic, and questioned whether there could be an exotic deterministic path that doesn't split receive and change addresses. He also proposed adding invoice functionality to wallets that manage issuing fresh addresses even without them being used and have a configurable gap limit. Additionally, he suggested embedding a sunset date in the address format to allow an expiry for layer 1 addresses, similar to PGP keys.These are important considerations for businesses and individuals conducting Bitcoin transactions.</summary>
    <published>2022-10-01T04:36:44+00:00</published>
  </entry>
</feed>
