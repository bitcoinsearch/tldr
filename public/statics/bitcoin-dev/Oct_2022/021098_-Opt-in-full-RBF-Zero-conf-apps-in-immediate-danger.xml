<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
  <updated>2023-06-16T00:51:06.564740+00:00</updated>
  <author>
    <name>Sergej Kotliar 2022-10-21 12:02:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
    <updated>2023-06-16T00:51:06.564740+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021098.html" rel="alternate"/>
    <summary>The discussion among Bitcoin developers centers around the question of whether to break backwards compatibility in favor of progress. The majority of wallets and services today use custodial rails, which could potentially encumber protocol developers to KYC/AML institutions. The issue of Binance not supporting Lightning in favor of BNC-wrapped BTC is a concern, but the bigger question is at what point do we break backwards compatibility with legacy patterns and features that prevent progress? In the past, Bitcoin Core has chosen to keep backwards compatibility and only roll out opt-in changes with broad consensus over them, with the default behavior being to not roll out controversial changes. However, there may be a point where it's necessary to back away from this approach, and the community should have a higher-level discussion on when that might be.The conversation also explored the challenges of opt-in RBF, which is a pain for two reasons: people don't like that it's not treated as zeroconf, and the risk of fiat/BTC exchange rate changes between now and when the tx actually confirms is worrying even if it hasn't caused real problems yet. Furthermore, if someone systematically exploits stores via this mechanism, we will have to find another solution for RBF payments. However, this option isn't available to normal payment processor type businesses.Currently, Lightning represents around 15% of total bitcoin payments, while 60% of on-chain payments seem fine for zeroconf. Opt-in RBF accounts for 20% of on-chain payments and is excluded from zeroconf, while 5% of on-chain payments are shady and are also excluded from zeroconf. RBF is a strictly worse UX as proven by anyone accepting bitcoin payments at scale, and building bitcoin businesses on the lie that unconfirmed txs are safe and won't be replaced will eventually cause problems. Therefore, the focus should be on making RBF better rather than pushing back against it indefinitely.For some, it would be an easier discussion to have when Lightning is at 80%+ of all bitcoin transactions. However, it's hard to estimate when that might be given current trends. It could take years, and the growth pattern may not be linear. Nonetheless, having actual numbers to watch the progress might make it easier to be patient about waiting for lightning adoption to hit 80% or whatever and focus on productive things in the meantime.</summary>
    <published>2022-10-21T12:02:24+00:00</published>
  </entry>
</feed>
