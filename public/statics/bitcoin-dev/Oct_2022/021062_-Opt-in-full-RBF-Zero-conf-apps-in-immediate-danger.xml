<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
  <updated>2023-06-16T01:04:44.275509+00:00</updated>
  <author>
    <name>Sergej Kotliar 2022-10-19 16:04:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
    <updated>2023-06-16T01:04:44.275509+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021062.html" rel="alternate"/>
    <summary>A discussion on the dangers of replace-by-fee (RBF) as a default policy was had on the Bitcoin-dev mailing list. One concern mentioned was the "American call option" risk, where a user can make a low-fee transaction and then wait to see if BTCUSD moves. If it does, they can cancel their transaction and make a new, cheaper one, which could end up systematically abusing the system. This risk would be available to 100% of all users and has no cost to the user. Bitrefill currently processes 1500-2000 onchain payments every day, and if bitcoin becomes de facto RBF by default, they would likely turn off the BIP21 model for onchain payments. The benefits of Lightning are many and obvious, but a world where Lightning adoption is 100% by means of disabling on-chain commerce could lead to many bitcoin users not using bitcoin anymore and shifting to an altcoin. On the efficacy of RBF to "unstuck" stuck transactions, most users don't have access to that functionality, and only power users understand how RBF works. CPFP is somewhat more viable but requires lots of edge case code to handle abuse vectors. In the end, a risk-based approach to decide on which payments are non-trivial to reverse is the easiest, taking account user experience and such.</summary>
    <published>2022-10-19T16:04:30+00:00</published>
  </entry>
</feed>
