<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Validity Rollups on Bitcoin</title>
  <updated>2023-06-16T01:48:58.180423+00:00</updated>
  <author>
    <name>Greg Sanders 2022-10-12 13:28:22</name>
  </author>
  <author>
    <name>John Light 2022-10-12 15:40:10</name>
  </author>
  <author>
    <name>AdamISZ 2022-11-02 17:19:23</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-11-04 20:29:26</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-04 23:07:56</name>
  </author>
  <author>
    <name>Greg Sanders 2022-10-12 13:28:22</name>
  </author>
  <author>
    <name>Trey Del Bonis 2022-11-04 19:53:31</name>
  </author>
  <author>
    <name>John Light 2022-10-11 15:40:52</name>
  </author>
  <author>
    <name>John Light 2022-10-11 15:40:52</name>
  </author>
  <author>
    <name>Trey Del Bonis 2022-11-04 19:53:31</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-04 23:07:56</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-11-04 20:29:26</name>
  </author>
  <author>
    <name>John Light 2022-10-11 15:40:52</name>
  </author>
  <author>
    <name>AdamISZ 2022-11-02 17:19:23</name>
  </author>
  <author>
    <name>Russell O'Connor 2022-11-04 20:29:26</name>
  </author>
  <author>
    <name>Trey Del Bonis 2022-11-04 19:53:31</name>
  </author>
  <author>
    <name>John Light 2022-10-12 15:40:10</name>
  </author>
  <author>
    <name>Greg Sanders 2022-10-12 13:28:22</name>
  </author>
  <author>
    <name>John Light 2022-10-12 15:40:10</name>
  </author>
  <author>
    <name>AdamISZ 2022-11-02 17:19:23</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-04 23:07:56</name>
  </author>
  <link href="bitcoin-dev/Oct_2022/021004_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021005_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021153_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021165_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021166_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021004_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021164_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020998_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020998_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021164_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021166_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021165_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020998_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021153_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021165_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021164_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021005_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021004_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021005_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021153_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021166_Validity-Rollups-on-Bitcoin.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Validity Rollups on Bitcoin</title>
    <updated>2023-06-16T01:48:58.180423+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021004.html" rel="alternate"/>
    <summary>Several discussions and reports have been published regarding the implementation of validity rollups on Bitcoin, with ongoing conversations among Bitcoin developers about the technical details. The goal is to improve scalability, privacy, and programmability without sacrificing Bitcoin's core values or functionality as a peer-to-peer electronic cash system.John Light's report, titled "Validity Rollups on Bitcoin," examines the potential benefits of validity rollups for Bitcoin and existing layer two protocols such as the Lightning Network. The report explores the history, technical workings, and potential risks and benefits of implementing validity rollups on Bitcoin, concluding that they could improve scalability, privacy, and programmability without sacrificing Bitcoin's core values or functionality as a peer-to-peer electronic cash system.Trey Del Bonis discusses various possibilities for making rollups work with different tradeoffs in a recent post on the Bitcoin development mailing list. He suggests using granular transaction introspection opcodes from a list in Elements and some math and byte manipulation opcodes that were disabled years ago but are re-added. Trey also highlights the complicated part of actual proof verification and suggests building a verifying for a modern proof system if we used pairings as a primitive. Moreover, he suggests using lightning nodes to pick who gets to be in the quorum, semi-verifiably checking for long-lived nodes with a consistent level of activity as a proxy for honesty.ZmnSCPxj proposes several potential new opcodes for Taproot, including one that would remove the necessity for introspection and a limited version of OP_EVAL. Additionally, he explores the idea of reusing pay-to-contract to store a commitment to the state. The proposed opcode would take an "internal internal" pubkey, a current state, and an optional expected new state. This mechanism only needs some way to compute the new state from the old state.In an email exchange between AdamISZ/waxwing and John Light via the bitcoin-dev mailing list, they discuss the minimal functionality required on-chain for general-purpose off-chain contracting that is provable. The conversation touches on Optimism's security model, regarded as laughable, while Arbitrum has centralized sequencers. The validity rollup model is discussed as a good choice in comparison to other possible L2s that focus on functionality with a mild censorship and centralization tradeoff. There is also a discussion about using 1 of N security models for trusted setup here, where PLONK type stuff is just as interesting as STARKS which are big and computationally heavy.</summary>
    <published>2022-10-12T13:28:22+00:00</published>
  </entry>
</feed>
