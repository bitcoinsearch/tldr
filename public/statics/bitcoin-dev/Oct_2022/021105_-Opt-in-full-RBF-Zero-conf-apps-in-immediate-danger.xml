<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
  <updated>2023-06-16T00:52:06.437889+00:00</updated>
  <author>
    <name>Peter Todd 2022-10-21 19:43:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Opt-in full-RBF] Zero-conf apps in immediate danger</title>
    <updated>2023-06-16T00:52:06.437889+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021105.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around the question of whether to break backwards compatibility with legacy wallets and services that are still using zeroconf and other outdated features. This would allow for faster implementation of new features like Lightning Network and full RBF, but would also encumber protocol developers to KYC/AML institutions. The example of depreciating P2PKH addresses during rollout of Segwit was given as an analogy. While RBF is seen as less disruptive than deprecating an entire address standard, it is unfortunate that it wasn't implemented sooner. The fact that a tiny minority of users attempt to use zeroconf, which has never worked reliably, was also mentioned. It is unclear at which point backwards compatibility should be broken with legacy users.</summary>
    <published>2022-10-21T19:43:33+00:00</published>
  </entry>
</feed>
