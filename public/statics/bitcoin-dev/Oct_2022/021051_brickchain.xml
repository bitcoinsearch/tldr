<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>brickchain</title>
  <updated>2023-06-16T02:14:10.345424+00:00</updated>
  <author>
    <name>mm-studios 2022-10-19 09:04:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>brickchain</title>
    <updated>2023-06-16T02:14:10.345424+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021051.html" rel="alternate"/>
    <summary>The author proposes a new method to increase the throughput in the Bitcoin network by changing the Proof of Work (PoW) algorithm. The current system limits the number of transactions that can be settled globally due to the limited capacity of blocks produced by miners. While big-blockers proposed the removal of limits, this was widely rejected due to undesirable effects. The author suggests preserving small blocks while allowing all transactions to go into a block by introducing a new structure called a 'brick'. A brick is a block that does not meet the difficulty rule and is filled with transactions to its full capacity. Once a brick is fully filled, it would be broadcasted, and the miner would start working on a new brick linked with the previous one. Nodes would allow incoming regular blocks and bricks with hashes that don't satisfy the difficulty rule, provided the brick is fully filled. If a series of minimum hashes is computationally equivalent to the network difficulty, then the full 'brickchain' is valid as a block. This could flush mempools, keep transaction fees low and increase throughput without an increase in block size.</summary>
    <published>2022-10-19T09:04:50+00:00</published>
  </entry>
</feed>
