<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On mempool policy consistency</title>
  <updated>2023-06-16T02:22:38.462020+00:00</updated>
  <author>
    <name>email at yancy.lol 2022-10-30 11:06:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On mempool policy consistency</title>
    <updated>2023-06-16T02:22:38.462020+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021134.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Anthony Towns addressed the issue of transaction propagation failure rates. He stated that whether or not a 5% failure rate is terrible depends on how easy it is to retry after a failure and how likely the retry is to succeed. He suggested that it's conceivable for a 5% failure rate to be detectable and automatically rectified, but there's no clear way of doing so efficiently, privately, and in a decentralized manner. David A. Harding shared some napkin math, which showed that if only 30% of nodes have adopted a more permissive policy, lightweight clients would need to connect to over 50 randomly selected nodes to ensure one transaction per year fails to initially propagate. For a more permissive policy adopted by only 10% of nodes, the lightweight client would need to connect to almost 150 nodes. Anthony Towns added that with a target failure probability of 1-in-1e8 and no preferential peering, a majority of listening nodes would need to support the transaction features in most reasonable scenarios.</summary>
    <published>2022-10-30T11:06:32+00:00</published>
  </entry>
</feed>
