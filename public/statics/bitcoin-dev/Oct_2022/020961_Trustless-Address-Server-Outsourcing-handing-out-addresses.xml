<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Trustless Address Server ? Outsourcing handing out addresses</title>
  <updated>2023-05-22T21:26:42.025202+00:00</updated>
  <author>
    <name>Peter 2022-10-01 04:36:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Trustless Address Server ? Outsourcing handing out addresses</title>
    <updated>2023-05-22T21:26:42.025202+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/020961.html" rel="alternate"/>
    <summary>In this conversation, Peter Kroll raises some important points related to the use of xpubs and invoice addresses in Bitcoin transactions. One issue is that handing out xpubs can lead to a quadratic gap limit problem, where wallets have to scan multiple xpubs and their receive addresses. In the Lightning network, it's possible to use Lightning addresses that use plus addresses to avoid this problem. Another issue is the need for an expiry date on layer 1 addresses to ensure that the receiver still has the corresponding keys. The Lightning network also has a solution for this. Additionally, there is a discussion about the possibility of using a deterministic path that doesn't split receive and change addresses. Satoshi's original wallet concept included an ever-growing key pool with a 100 address gap, which could be a solution to the gap limit problem. Btcpayserver may also have a solution with its configurable gap limit and ability to issue fresh addresses even if they're not used. Overall, these are important considerations for businesses and individuals conducting Bitcoin transactions.</summary>
    <published>2022-10-01T04:36:44+00:00</published>
  </entry>
</feed>
