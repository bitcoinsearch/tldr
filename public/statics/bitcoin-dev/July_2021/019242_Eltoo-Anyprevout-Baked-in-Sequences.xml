<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Eltoo / Anyprevout &amp; Baked in Sequences</title>
  <updated>2023-05-21T03:15:52.192435+00:00</updated>
  <author>
    <name>Anthony Towns 2021-07-08 08:44:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Eltoo / Anyprevout &amp; Baked in Sequences</title>
    <updated>2023-05-21T03:15:52.192435+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019242.html" rel="alternate"/>
    <summary>In a recent Bitcoin-dev discussion, it was noted that overloading the CLTV clause makes it impossible to use Eltoo and an absolute lock time. It is already not possible to spend two inputs simultaneously if one requires a locktime specified by mediantime, and the other by block height. One potential solution mentioned was to define a new CSV type, however, this would disallow using a relative locktime and an absolute locktime for the same input. Instead, adding a per-input absolute locktime to the annex was proposed. This could also be used to add a commitment to an historical block hash in order to disambiguate which branch of a chain split or reorg a transaction is valid for. Overall, there seems to be agreement that per-input locktimes would be beneficial and satisfy multiple concerns.</summary>
    <published>2021-07-08T08:44:16+00:00</published>
  </entry>
</feed>
