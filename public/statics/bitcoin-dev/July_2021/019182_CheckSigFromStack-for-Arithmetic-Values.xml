<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CheckSigFromStack for Arithmetic Values</title>
  <updated>2023-06-14T23:54:51.741474+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-07-02 23:58:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CheckSigFromStack for Arithmetic Values</title>
    <updated>2023-06-14T23:54:51.741474+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019182.html" rel="alternate"/>
    <summary>In an email to Bitcoin Devs, Rubin proposes the use of a Lamport signature in script for arithmetic values by using a binary expanded representation. The blog post shared by Rubin explains the process in Python code and then translates to bitcoin script. A concrete use case is also illustrated where a third party can post-hoc sign a sequence lock. The proposed SCRIPT allows Lamport signatures for arbitrary values representable in small binary numbers (16 bits in the above example). Merkle signatures were also considered as an alternative but the proposed approach was preferred due to the simplicity of the SCRIPT and no advantage in pushing the size towards the signature rather than the pubkey. Since both Lamport and Merkle are single-use-only, there is no encouragement for pubkey reuse.</summary>
    <published>2021-07-02T23:58:14+00:00</published>
  </entry>
</feed>
