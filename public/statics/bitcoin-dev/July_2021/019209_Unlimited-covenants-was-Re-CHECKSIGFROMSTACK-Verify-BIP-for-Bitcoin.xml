<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Unlimited covenants, was Re: CHECKSIGFROMSTACK/{Verify} BIP for Bitcoin</title>
  <updated>2023-05-21T03:13:29.131110+00:00</updated>
  <author>
    <name>Anthony Towns 2021-07-05 05:04:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Unlimited covenants, was Re: CHECKSIGFROMSTACK/{Verify} BIP for Bitcoin</title>
    <updated>2023-05-21T03:13:29.131110+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019209.html" rel="alternate"/>
    <summary>The discussion around enabling covenants is centered on whether OP_CAT should be allowed or not. Multisig alone can enable recursive covenants, as a government could require that funds be deposited into a multisig of "2   2 CHECKMULTISIG" and that the recipient has gone through KYC. In this scenario, the government can refuse to sign with gov_key unless the funds are being spent to a new address that follows the same rules. This approach is already used by Liquid, which locks bitcoins into a multisig and enforces an off-chain covenant that those bitcoins can only be redeemed after some valid set of signatures are entered into the Liquid blockchain. BTC-on-Ethereum tokens and coins held in exchanges/custodial wallets also use similar approaches. In essence, escaping from this type of recursive covenant would require a change in signing policy by the government (or Liquid functionaries, or exchange admins). However, one could equally escape any consensus-enforced covenant by having a hard fork to stop doing consensus-enforcement. This difference appears to be more of a procedural and difficulty-based issue than a fundamental difference in kind.</summary>
    <published>2021-07-05T05:04:21+00:00</published>
  </entry>
</feed>
