<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof of reserves - recording</title>
  <updated>2023-06-15T00:08:08.993072+00:00</updated>
  <author>
    <name>Eric Voskuil 2021-07-06 07:37:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof of reserves - recording</title>
    <updated>2023-06-15T00:08:08.993072+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019220.html" rel="alternate"/>
    <summary>The discussion revolves around the fallacy of auditability and how it applies to solvency audits. Perfect accuracy is not possible in such audits, and trust becomes a factor. However, users can share their individual and temporary audits with each other publicly, allowing for reasonably high accuracy of estimated solvency. Insolvency is difficult to prevent, as lending implies risk. It is important for people to know the degree of insolvency of institutions in which they invest. PoR (proof of reserve) would greatly help this, but reckless behavior is subjective, and proofs will not insure any investment. The issue of ownership of funds is conditional on knowledge of keys, and knowledge is easily copyable. For instance, there is no way to prove that there is no alternate copy of the privkeys. Custodian proof-of-reserves only proves that the funds were owned under a particular key at some snapshot of the past, but it does not prove that the key will not get lost or salvaged by someone else later. Lightning channel states change fairly quickly, making it challenging for custodian lightning nodes to "freeze" a snapshot of its current state and make an atomic proof-of-reserves of all channels.</summary>
    <published>2021-07-06T07:37:07+00:00</published>
  </entry>
</feed>
