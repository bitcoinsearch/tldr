<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CHECKSIGFROMSTACK/{Verify} BIP for Bitcoin</title>
  <updated>2023-06-14T23:57:04.195692+00:00</updated>
  <author>
    <name>Russell O'Connor 2021-07-03 17:50:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CHECKSIGFROMSTACK/{Verify} BIP for Bitcoin</title>
    <updated>2023-06-14T23:57:04.195692+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019193.html" rel="alternate"/>
    <summary>The email that is being discussed focuses on the development of an updated OP_CHECKSIGFROMSTACK implementation for tapscript on elements. The main goal is to support the variable-length extension of BIP-0340 schnorr signatures effectively. This will remove DER encoding and allow batch verifiability, along with other BIP-0340 transaction signatures and taproot tweak verification. Moreover, the email also discusses adapting the "CheckDataSig" specification for a BIP in Bitcoin using 2 OP_SUCCESSX opcodes. The email reproduces the BIP text from Bitcoin Cash's (MIT-Licensed) specification as it provided an easy starting point for discussion rather than drafting something from scratch. Additionally, the email lists design questions worth considering as modifications, including whether CSFS should require some sort of tagged hash, split the signature's R &amp; S value stack items for some applications that otherwise may require OP_CAT, support a cheap way to reference the taproot internal or external key, and whether invalid public key types should be a NOP to support future extended pubkey types.The Bitcoin Improvement Proposal (BIP) suggests introducing a new opcode called OP_CHECKDATASIGVERIFY. This opcode will verify inline signatures within the script and enable more complex smart contract functionality on the Bitcoin Cash network. The implementation is based on Andrew Stone's previously proposed OP_DATASIGVERIFY and has been modified following peer-review and feedback. The BIP references several other important specifications, including OP_CHECKSIG, Strict DER Encoding, and Low-S and Nullfail Specification, as well as implementations by Bitcoin ABC.Overall, this proposal aims to improve the efficiency and flexibility of the Bitcoin Cash network.</summary>
    <published>2021-07-03T17:50:21+00:00</published>
  </entry>
</feed>
