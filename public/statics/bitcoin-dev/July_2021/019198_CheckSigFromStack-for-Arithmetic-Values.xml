<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CheckSigFromStack for Arithmetic Values</title>
  <updated>2023-06-14T23:54:35.606461+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-07-04 13:10:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CheckSigFromStack for Arithmetic Values</title>
    <updated>2023-06-14T23:54:35.606461+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019198.html" rel="alternate"/>
    <summary>ZmnSCPxj wrote an email to Erik and Jeremy discussing the cleverness of using `OP_ADD` for implementing `OP_CHECKSIGFROMSTACK`. He mentioned that this cleverness is more of an argument against ever enabling `OP_ADD` and friends. However, he also found out that `OP_ADD` is still enabled in Bitcoin, but limited to 32 bits. ZmnSCPxj thought that this idea is "overall bad but still ridiculously clever" and the script and witness sizes are fairly awful. Despite this, it's worth discussing in case it triggers someone else to think of a related idea that takes some of the cleverness but is overall better.ZmnSCPxj also discussed the possibility of implementing the "Lamport-sign the EC sig" idea, which would mean Bitcoin is already quantum-safe. However, he mentioned that it has a fairly lousy quantum-safe signing scheme, and he does not know the characteristics of better ones.</summary>
    <published>2021-07-04T13:10:36+00:00</published>
  </entry>
</feed>
