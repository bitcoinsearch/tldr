<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CheckSigFromStack for Arithmetic Values</title>
  <updated>2023-06-14T23:54:59.657914+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-07-04 00:22:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CheckSigFromStack for Arithmetic Values</title>
    <updated>2023-06-14T23:54:59.657914+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019196.html" rel="alternate"/>
    <summary>In a recent bitcoin-dev post, Jeremy discussed the possibility of using arithmetic operations in combination with Lamport signatures to enable signing operations. This implementation uses a bitwise expansion of a number and a lamport signature to sign transactions. The resulting script can be used for arbitrary values representable in small binary numbers. This is demonstrated with an example of signing a sequence lock of 16 bits. ZmnSCPxj notes that enabling `OP_ADD` could lead to the implementation of such signatures; however, this is not necessarily recommended, as these signatures are single-use-only and encouraging pubkey reuse should be avoided. Additionally, it seems more of a "bad but clever thing" than something that Bitcoin should fully embrace.</summary>
    <published>2021-07-04T00:22:18+00:00</published>
  </entry>
</feed>
