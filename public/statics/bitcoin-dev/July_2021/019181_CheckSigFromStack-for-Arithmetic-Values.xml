<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CheckSigFromStack for Arithmetic Values</title>
  <updated>2023-06-14T23:54:43.526221+00:00</updated>
  <author>
    <name>Jeremy 2021-07-02 22:20:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CheckSigFromStack for Arithmetic Values</title>
    <updated>2023-06-14T23:54:43.526221+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019181.html" rel="alternate"/>
    <summary>A developer named Jeremy Rubin has shared a technique on how to do a lamport signature in script for arithmetic values by using a binary expanded representation. He posted about it in his blog and provided a python code and a bitcoin script translation of the technique. The technique involves expanding a number into its bitwise representation and using a lamport signature. It is possible to use this for certain applications such as bonding contracts where possessing any K_i_0 and K_i_1 allows the burning of funds. However, the technique can be a bit bulky and expensive, but it is still doable. Keys can be reused across scripts, but signatures may only be constructed one time to prevent unintended values.</summary>
    <published>2021-07-02T22:20:16+00:00</published>
  </entry>
</feed>
