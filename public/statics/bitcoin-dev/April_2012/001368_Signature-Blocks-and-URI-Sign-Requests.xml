<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Signature Blocks and URI Sign Requests</title>
  <updated>2023-06-06T03:54:38.585726+00:00</updated>
  <author>
    <name>Alan Reiner 2012-04-04 00:01:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Signature Blocks and URI Sign Requests</title>
    <updated>2023-06-06T03:54:38.585726+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-April/001368.html" rel="alternate"/>
    <summary>The email conversation between Alan Reiner and Mike Koss on the Bitcoin-development mailing list discusses proposals that do not impact the protocol itself but aim to solve existing problems. BIP 10 is deemed critical to the success of multi-sig, as the ability to actually execute them in less than 14 steps is necessary for user adoption. Without a standard solution, users may resort to solving the problem on their own, causing fragmentation in the market. The proposed solution should be easy to exchange, size-efficient, and promised to be interoperable. While some clients implement a URI scheme differently, the Satoshi client uses it. The mailing list is a good place to discuss the issue, but labeling it as a BIP might not be appropriate. Some applications might benefit from users being able to sign messages with existing Bitcoin identities, and what can be done to accommodate that out of band. It is not a high priority, but most codebases already have everything they need in place to implement it. There is a suggestion to use PGP/EC to sign and verify messages instead of creating a new solution. However, this sign message feature is dragging too much of the kitchen sink into Bitcoin, according to Wladimir. Instead, Bitcoin should add simplicity for now and avoid rapid bulk up of the protocol.</summary>
    <published>2012-04-04T00:01:10+00:00</published>
  </entry>
</feed>
