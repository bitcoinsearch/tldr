<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taproot (and graftroot) complexity (reflowed)</title>
  <updated>2023-05-20T21:45:20.886066+00:00</updated>
  <author>
    <name>Pieter Wuille 2020-02-18 23:29:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taproot (and graftroot) complexity (reflowed)</title>
    <updated>2023-05-20T21:45:20.886066+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017632.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev mailing list, Pieter Wuille highlighted the importance of Taproot in incentivizing protocols and implementations that can use the key path. This maximizes privacy and makes it appealing even to those who don't care about it. He argued that having a separate MAST-no-Taproot spending type is not beneficial as it reduces incentives for those who don't care about spending policy privacy to build key-path-spendable protocols. Wuille also mentioned that there are other options to make verification constructions cheap but they disregard incentives for privacy, such as account-based state/payments. However, this would result in a discount for those willing to reduce their privacy, hurting everyone and indirectly affecting the fungibility of the system as a whole.</summary>
    <published>2020-02-18T23:29:21+00:00</published>
  </entry>
</feed>
