<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Taproot (and graftroot) complexity (reflowed)</title>
  <updated>2023-06-13T23:35:49.157079+00:00</updated>
  <author>
    <name>Bryan Bishop 2020-02-09 20:47:29</name>
  </author>
  <author>
    <name>David A. Harding 2020-02-10 00:15:54</name>
  </author>
  <author>
    <name>Jonas Nick 2020-02-10 16:28:32</name>
  </author>
  <author>
    <name>David A. Harding 2020-02-14 22:36:42</name>
  </author>
  <author>
    <name>David A. Harding 2020-02-10 00:15:54</name>
  </author>
  <author>
    <name>David A. Harding 2020-02-14 22:36:42</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-02-18 23:29:21</name>
  </author>
  <author>
    <name>Jeremy 2020-02-14 20:07:15</name>
  </author>
  <author>
    <name>Bryan Bishop 2020-02-09 20:47:29</name>
  </author>
  <author>
    <name>Jeremy 2020-02-14 20:07:15</name>
  </author>
  <author>
    <name>Bryan Bishop 2020-02-09 20:47:29</name>
  </author>
  <author>
    <name>Jonas Nick 2020-02-10 16:28:32</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-02-18 23:29:21</name>
  </author>
  <author>
    <name>Jonas Nick 2020-02-10 16:28:32</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-02-18 23:29:21</name>
  </author>
  <author>
    <name>Jeremy 2020-02-14 20:07:15</name>
  </author>
  <author>
    <name>David A. Harding 2020-02-10 00:15:54</name>
  </author>
  <author>
    <name>David A. Harding 2020-02-14 22:36:42</name>
  </author>
  <link href="bitcoin-dev/Feb_2020/017618_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017621_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017625_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017630_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017621_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017630_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017632_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017628_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017618_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017628_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017618_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017625_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017632_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017625_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017632_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017628_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017621_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017630_Taproot-and-graftroot-complexity-reflowed-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Taproot (and graftroot) complexity (reflowed)</title>
    <updated>2023-06-13T23:35:49.157079+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017618.html" rel="alternate"/>
    <summary>A group of anonymous developers have raised concerns about the proposed Taproot upgrade to Bitcoin, suggesting that it may not be more private or cheaper than using Schnorr signatures separately from BIP-340, BIP-341, and BIP-342. They argue that Taproot is a probability assumption about the frequency and likelihood of the signature case over the script case, which may not be a good assumption. The developers propose an alternative deployment path for Taproot, suggesting separate soft-forks for Merkle Branch Witnesses based on Taproot, Schnorr Signatures, and enabling Taproot and Graftroot. They also suggest modifying Taproot's specification in BIP-341 by adding a rule that attempts hashing an element against the witness program, and if it's not a match but is 65 bytes, tries signature validation.The group does not strongly advocate for or against deploying Taproot at this point in the review cycle, but suggests carefully considering the benefits of Taproot versus simpler primitives and embracing incremental improvements that can work together. Pieter Wuille, however, highlighted the importance of Taproot in incentivizing protocols and implementations that can use the key path. He argued that having a separate MAST-no-Taproot spending type is not beneficial as it reduces incentives for those who don't care about spending policy privacy to build key-path-spendable protocols. It was confirmed in a recent bitcoin-dev discussion that when schnorr and taproot are used together, four transaction types can be part of the same set, representing an overwhelming percentage of the spends seen on the blockchain today and throughout Bitcoin's entire history to date, making optimizing them for anonymity set inclusion a huge benefit.In a recent Bitcoin-dev email thread, multiple topics related to the Taproot upgrade were discussed. The first topic revolved around whether Taproot is cheaper than using bare MAST and Schnorr separately. It was noted that while there is an overhead of about 23% to the size of the input, it is considered worth considering optimizations to allow for the creation of a larger anonymity set. However, users of advanced scripts may have to pay an extra 23% for their inputs if they cannot produce mutual closes. Encouraging script-path spenders to look for mutually-agreed contract resolutions could minimize blockchain use and increase the size of the anonymity set.Another topic discussed in the email thread was whether using Schnorr + Merkle Branch without Taproot optimization is equivalent to using Taproot. Dave responded that it's only true if everyone constructs their merkle tree in the same way, with a single `OP_CHECKSIG` as one of the top leaves. However, Taproot standardizes the position of the all-parties-agree condition, leading to a larger anonymity set and easier participation by pure single-sig users.It was noted that although taproot scriptPubKeys are larger than P2WPKH scriptPubKeys, its witness data is considerably smaller, giving receivers an incentive to demand P2TR payments even if spenders don't like paying the extra 12 vbytes per output. Dave provides rough sums for the various types of PubKeys and witness data. He also concludes by stating that this branch of the email thread is rehashing points covered two years ago.Finally, when discussing what evidence exists to support the assumption that it will be more common to use Taproot with a key than script cases, it was noted that current users of single-sig, n-of-n, and k-of-n (for small n) with a default k-set, and mutual-agreed contract protocol outcomes vastly outweigh all other transaction inputs today and for all of Bitcoin's history to date.</summary>
    <published>2020-02-09T20:47:29+00:00</published>
  </entry>
</feed>
