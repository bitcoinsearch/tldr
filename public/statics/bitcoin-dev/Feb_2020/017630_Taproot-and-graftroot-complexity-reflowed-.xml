<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taproot (and graftroot) complexity (reflowed)</title>
  <updated>2023-06-13T23:33:40.532237+00:00</updated>
  <author>
    <name>David A. Harding 2020-02-14 22:36:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taproot (and graftroot) complexity (reflowed)</title>
    <updated>2023-06-13T23:33:40.532237+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017630.html" rel="alternate"/>
    <summary>In a Bitcoin-dev email thread, Jeremy asks if using Schnorr + Merkle Branch without Taproot optimization is the same. Dave responds that it's true only if everyone constructs their merkle tree in the same way, with a single `OP_CHECKSIG` as one of the top leaves. However, Taproot standardizes the position of the all-parties-agree condition, which leads to a larger anonymity set and allows for easier participation by pure single-sig users. Although taproot scriptPubKeys are larger than P2WPKH scriptPubKeys, its witness data is considerably smaller, giving receivers an incentive to demand P2TR payments even if spenders don't like paying the extra 12 vbytes per output. Dave provides rough sums for the various types of PubKeys and witness data. He concludes by stating that this branch of the thread is rehashing points covered two years ago.</summary>
    <published>2020-02-14T22:36:42+00:00</published>
  </entry>
</feed>
