<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fwd:  BIP 340 updates: even pubkeys, more secure nonce generation</title>
  <updated>2023-06-13T23:44:02.053173+00:00</updated>
  <author>
    <name>Russell O'Connor 2020-02-26 03:26:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fwd:  BIP 340 updates: even pubkeys, more secure nonce generation</title>
    <updated>2023-06-13T23:44:02.053173+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017649.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list has been discussing changes to the BIP 340 standard, specifically around more secure nonce generation. The proposed changes include integrating actual signing-time randomness into the nonce generation process to protect against fault injection attacks. However, there are concerns about standardizing on a non-deterministic nonce generation scheme, as it could make private key exfiltration a bigger concern for hardware signing devices. With a deterministic nonce scheme, it is possible to spot check hardware devices to ensure they are producing signatures in accordance with their specified nonce scheme. To mitigate this issue, the BIP proposes using Nonce exfiltration protection, but there are no references on how to implement it. The suggestion is to introduce a new section in the BIP addressing this problem in the future or provide references to more information about the Nonce exfiltration protection mentioned. The goal is to avoid a world where hardware signing devices have a hard-to-detect underhanded communications channel.</summary>
    <published>2020-02-26T03:26:42+00:00</published>
  </entry>
</feed>
