<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Purge attacks (spin on sabotage attacks)</title>
  <updated>2023-06-13T23:22:37.203503+00:00</updated>
  <author>
    <name>Mike Kelly 2020-02-07 13:55:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Purge attacks (spin on sabotage attacks)</title>
    <updated>2023-06-13T23:22:37.203503+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017609.html" rel="alternate"/>
    <summary>In early January, Mike Kelly proposed the idea of eliminating transaction replacement that are consensus compatible and introduced "Uncontested Safe" in a medium article. He sought feedback on his proposal. On February 1st, Hasu from Bitcoin-dev discovered a form of sabotage attack named after the movie 'The Purge'. The attacker replaces the most recent blocks full of transactions with empty blocks, causing previously confirmed transactions to return into the mempool where they can be double-spent by anyone with technical knowledge or public tools. This attack undermines trust in Bitcoin's assurances and disrupts coordination among users. By giving some users a chance to benefit from the attack, the attacker gives them a vested interest in staying on the attack chain. If enough users accept the invitation to double-spend, it might become harder to come to consensus on how to deal with the attack. While Purge attacks don't constitute a bigger risk than other known forms of sabotage attacks, they seem like an interesting spin where the attacker specifically targets the pre-coordination of defenders. Mitigations against sabotage attacks are discussed in detail in the full report provided in the link.</summary>
    <published>2020-02-07T13:55:29+00:00</published>
  </entry>
</feed>
