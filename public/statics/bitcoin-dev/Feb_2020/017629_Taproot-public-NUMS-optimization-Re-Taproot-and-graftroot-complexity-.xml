<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taproot public NUMS optimization (Re: Taproot (and graftroot) complexity)</title>
  <updated>2023-06-13T23:31:48.035182+00:00</updated>
  <author>
    <name>Jeremy 2020-02-14 21:21:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taproot public NUMS optimization (Re: Taproot (and graftroot) complexity)</title>
    <updated>2023-06-13T23:31:48.035182+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017629.html" rel="alternate"/>
    <summary>A group of developers have proposed a modification to the Taproot specification in BIP-341 by adding a rule that would reduce some of its overhead. The proposal seeks to optimize Taproot's public NUMS by removing the need for it, as well as introducing bare MAST (Merkleized Abstract Syntax Trees) to prevent the use of different public NUMS from leaking metadata. If greater anonymity is required, a NUMS point can still be used in Taproot at the expense of additional data, but the proposal suggests it should only be used when a single use nonce can be sent. It is noted that private NUMS provide more privacy benefits and a small hit to likelihood of losing funds. The proposal has received both support and alternative responses, such as adding a discounting rule if P is the Public NUMS that discounts the extra weight somehow, or taking a bit out of the leaf version portion of C[0] to denote Public NUMS and then elide having to include the point.</summary>
    <published>2020-02-14T21:21:15+00:00</published>
  </entry>
</feed>
