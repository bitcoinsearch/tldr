<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LN &amp; Coinjoin, a Great Tx Format Wedding</title>
  <updated>2023-06-13T23:37:30.489069+00:00</updated>
  <author>
    <name>Antoine Riard 2020-02-24 18:26:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LN &amp; Coinjoin, a Great Tx Format Wedding</title>
    <updated>2023-06-13T23:37:30.489069+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017644.html" rel="alternate"/>
    <summary>The discussion revolves around Lightning Network (LN) and CoinJoin transactions. The post highlights the use of `nSequence` and a "weird watermark" on unilateral closes in LN channels, as well as the absence of HTLCs on mutual closes. The focus is on LN-cooperative cases, which should be the majority of channels if the network is reliable. However, concerns are raised about potential privacy leaks from transaction analysis due to UTXO age and spending frequency. Splicing may help address this issue, but it is difficult to predict its frequency without deployment. Non-equal-value CoinJoin could emulate a Lightning open + close, but most Lightning channels will have thousands or tens of thousands of blocks between the open and the close. The post also discusses the use of RBF-by-default, even though there is no facility to re-interact and bump fees higher yet. Finally, the issue of utxo bloat/fees is raised, with concerns about artificially increasing the number of outputs to mimic CoinJoin transactions.</summary>
    <published>2020-02-24T18:26:52+00:00</published>
  </entry>
</feed>
