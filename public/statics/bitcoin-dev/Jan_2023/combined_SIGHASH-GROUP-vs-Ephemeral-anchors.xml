<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SIGHASH_GROUP vs Ephemeral anchors</title>
  <updated>2023-06-16T03:55:25.018052+00:00</updated>
  <author>
    <name>Anthony Towns 2023-01-11 08:00:14</name>
  </author>
  <author>
    <name>Anthony Towns 2023-01-11 08:00:14</name>
  </author>
  <author>
    <name>Antoine Riard 2023-01-12 02:06:21</name>
  </author>
  <author>
    <name>Antoine Riard 2023-01-12 02:06:21</name>
  </author>
  <author>
    <name>Anthony Towns 2023-01-11 08:00:14</name>
  </author>
  <author>
    <name>Antoine Riard 2023-01-12 02:06:21</name>
  </author>
  <link href="bitcoin-dev/Jan_2023/021334_SIGHASH-GROUP-vs-Ephemeral-anchors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021334_SIGHASH-GROUP-vs-Ephemeral-anchors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021335_SIGHASH-GROUP-vs-Ephemeral-anchors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021335_SIGHASH-GROUP-vs-Ephemeral-anchors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021334_SIGHASH-GROUP-vs-Ephemeral-anchors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021335_SIGHASH-GROUP-vs-Ephemeral-anchors.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - SIGHASH_GROUP vs Ephemeral anchors</title>
    <updated>2023-06-16T03:55:25.018052+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html" rel="alternate"/>
    <summary>The comparison between SIGHASH_GROUP and Ephemeral anchors is an interesting topic being discussed on the bitcoin-dev mailing list. SIGHASH_GROUP allows inputs to divide outputs into non-overlapping groups, while Ephemeral anchors are a policy level rule that creates a 0-value output with sPK of OP_TRUE. Ephemeral anchors offer an alternative way of getting the same benefits of SIGHASH_GROUP, but they have some limitations, such as being unable to duplicate the behavior of two signatures, one using SIGHASH_GROUP and the other SIGHASH_ALL. Proposed rules for ephemeral anchors state that the transaction must have one or more CScript([OP_2]) output and must be 0-fee while having the ephemeral anchor output spent in the same mempool relay package. In theory, Ephemeral anchors get most of the potential benefits of SIGHASH_GROUP, particularly if the (v3.4b) rule can be removed or loosened somehow. SIGHASH_ALL can be used instead of SIGHASH_GROUP by creating three transactions and signing them accordingly. However, Ephemeral anchors are much less costly to implement as they only operate at the transaction level, so there's no need to worry about pinning of inputs vs whole transactions. Removing or loosening the v3.4b rule could allow ephemeral anchors to provide fees for multiple input/output groups, but it may introduce replacement issues. Overall, ephemeral anchors appear to offer most of the benefits of SIGHASH_GROUP, particularly with the potential to save on costs and consensus changes. The context provided includes a link to a mailing list for Bitcoin developers hosted on lists.linuxfoundation.org, which allows developers to collaborate on the development of Bitcoin. The email also includes an HTML attachment, but no information about its contents is given.</summary>
    <published>2023-01-11T08:00:14+00:00</published>
  </entry>
</feed>
