<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why Full-RBF Makes DoS Attacks on Multiparty Protocols Significantly More Expensive</title>
  <updated>2023-06-16T03:52:17.400221+00:00</updated>
  <author>
    <name>Peter Todd 2023-01-13 23:37:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why Full-RBF Makes DoS Attacks on Multiparty Protocols Significantly More Expensive</title>
    <updated>2023-06-16T03:52:17.400221+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021340.html" rel="alternate"/>
    <summary>In an email exchange, David A. Harding and Peter Todd discuss how decentralized coinjoin can implement "conflict monitoring" for more reliable coinjoining. The first method proposed is to run a relay node with a conflict-detection patch. Bitcoin Core can detect when a transaction conflicts with another in the mempool and could be modified to list the inputs that caused the conflict. This method is fast and attributes fault but requires Alice's node to be online at the time of the conflict. The second method suggested is to assume a conflict exists if several new blocks have bottom feerates well below the unconfirmed coinjoin transaction's feerates, making it slow and not attributing fault. Peter Todd argues that relying on these methods risks tying up coins for hours rather than enabling full-rbf, which would provide better defense against attacks on coinjoins and other decentralized multi-party protocols. He questions why highly centralized, often AML/KYC'd, unconfirmed tx acceptance services are prioritized over decentralized protocols that provide privacy and security for more users.</summary>
    <published>2023-01-13T23:37:04+00:00</published>
  </entry>
</feed>
