<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
  <updated>2023-06-16T03:25:46.381002+00:00</updated>
  <author>
    <name>Daniel Lipshitz 2023-01-14 20:15:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for Full RBF to not exclude Zero Conf use case</title>
    <updated>2023-06-16T03:25:46.381002+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021346.html" rel="alternate"/>
    <summary>In an email exchange between Peter Todd and Daniel Lipshitz, Lipshitz clarified that GAP600 is not a transaction processor or liquidity provider; rather, the company services merchants, payment processors, and non-custodial liquidity providers by enabling 0-conf transactions. Clients access their service via API, sending GAP600 the transaction hash and output address; they do not collect AML/KYC information. Todd argued that by learning the transaction hash and output address, GAP600 learns which addresses are associated with real-world entities paying for their service, which poses a significant privacy concern. Todd suggested implementing full-RBF to destroy their business and stop the collection of that data. Lipshitz responded that they only have standard commercial information about their clients, such as payment processors, non-custodial liquidity providers, and merchants. They do not have any KYC/AML information or telephone numbers on who is sending their clients Bitcoin for deposit. Lipshitz stated that they only receive public Bitcoin information such as the transaction hash and output address. When asked about examples of merchants using GAP600's service, Lipshitz referred to Max CEO from Coinspaid, who has provided Coinspaid address clusters and may choose to share further information on the merchants they support. Todd suggested that limiting full-RBF to at least the inputs of Trx1 being in Trx2 without flagging required could mitigate the risks. However, Todd was corrected that one of the most important use cases for full-RBF is multi-party transactions, and adding that limitation negates that use case. Todd argued that 0-conf should not be ignored, as it is a long-standing and significant use case in Bitcoin. Finally, Todd noted that there is ongoing debate about the need for full RBF.</summary>
    <published>2023-01-14T20:15:30+00:00</published>
  </entry>
</feed>
