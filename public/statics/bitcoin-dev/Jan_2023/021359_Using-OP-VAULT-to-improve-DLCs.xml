<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Using OP_VAULT to improve DLCs</title>
  <updated>2023-06-16T03:55:34.574793+00:00</updated>
  <author>
    <name>Billy Tetrud 2023-01-19 22:42:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Using OP_VAULT to improve DLCs</title>
    <updated>2023-06-16T03:55:34.574793+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021359.html" rel="alternate"/>
    <summary>A proposal to use the OP_UNVAULT opcode has been brought up as a way to create not-so-simple covenants. By restricting the script using OP_UNVAULT to only contain that one opcode call, it can be used for Jeremy Rubin's congestion control transactions. However, with the addition of a scriptPubKey for authorizing recovery, more general covenants can be created by setting unvault-target-hash to an unsatisfiable number and placing arbitrary conditions on spending the utxo to the "recovery address." This could be used as a general CTV-like covenant. The idea was proposed by Ben Carman after reading James O'Beirne's OP_VAULT proposal. The proposal would use more blockchain space but should have all the same computational savings as the original CTV proposal. The main downside is that the final spending script will be slightly larger.</summary>
    <published>2023-01-19T22:42:43+00:00</published>
  </entry>
</feed>
