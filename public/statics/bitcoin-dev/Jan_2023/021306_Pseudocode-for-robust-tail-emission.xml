<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pseudocode for robust tail emission</title>
  <updated>2023-06-16T03:39:10.517015+00:00</updated>
  <author>
    <name>jk_14 at op.pl 2023-01-01 22:27:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pseudocode for robust tail emission</title>
    <updated>2023-06-16T03:39:10.518005+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021306.html" rel="alternate"/>
    <summary>The proposal is to calculate the average difficulty of 100 last retargets and compare it with the maximum of all such values calculated before every 210,000 blocks. If the average difficulty of the last 100 retargets is greater than the maximum of all previous average difficulties, halving will be done, otherwise, nothing will be done. However, this proposal cannot address the immediate danger we have with halvings, in which profit margins tend towards marginal costs rather than total costs. This could lead to a significant amount of hashing power just barely able to afford prior to the halving, resulting in all that hashing power immediately having to shut down, leading to fees increasing dramatically and chaotically. On the other hand, a demurrage soft-fork has a much more plausible route towards implementation. The demurrage fee is averaged out over many future blocks but is not a hardcoded value and is regulated by a free market. The problem with demurrage is that the fee is taken when you spend, and there is no additional income for miners if people are still hoarding. In tail emission, even if people are still hoarding, the fee is taken immediately and is distributed to miners. Despite the possibility of hoarding in demurrage due to an appealing long-term risk/reward, it may still exist because of global adoption ahead, which may increase the price and market cap of Bitcoin by an order of magnitude.</summary>
    <published>2023-01-01T22:27:38+00:00</published>
  </entry>
</feed>
