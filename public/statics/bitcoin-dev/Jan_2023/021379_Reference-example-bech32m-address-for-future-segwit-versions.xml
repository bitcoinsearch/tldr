<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reference example bech32m address for future segwit versions</title>
  <updated>2023-06-16T04:09:29.702317+00:00</updated>
  <author>
    <name>David A. Harding 2023-01-31 00:02:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reference example bech32m address for future segwit versions</title>
    <updated>2023-06-16T04:09:29.702317+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021379.html" rel="alternate"/>
    <summary>A proposal has been made for a canonical example of future segwit addresses that are designed to be very unlikely to interfere with future soft forks but which would still reasonably exercise wallets supporting bech32m. This is equivalent to the RFC2606 domain "example.com" which has been reserved for examples in documentation. The proposed addresses include one each for mainnet and testnet. The Witness version is 16, which is the last segwit version, while the Witness program is 0x0000; two bytes is the minimum allowed by BIP141, but it's far too small to make any sort of secure commitment. The benefit of this proposal is that spender wallets shouldn't need to be upgraded to pay segwit outputs defined in future soft forks. However, testing this behavior in production can create an annoyance for developers of future soft forks as they will need to deal with any existing outputs paid to the templates used in that proposed soft fork. Therefore, reserved addresses will enable testing without using block space that could otherwise be used by actual value transfers and also avoid polluting the UTXO set.  Outputs paid to reserved addresses will still be anyone-can-spend, so there's no change required to Bitcoin Core or other software, and those outputs can still be cleaned out of the UTXO set. Additionally, if we ever *really* need that address space for a soft fork, it will be available.</summary>
    <published>2023-01-31T00:02:51+00:00</published>
  </entry>
</feed>
