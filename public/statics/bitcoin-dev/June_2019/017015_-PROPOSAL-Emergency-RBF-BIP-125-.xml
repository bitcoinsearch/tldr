<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
  <updated>2023-06-13T19:23:00.127263+00:00</updated>
  <author>
    <name>Rusty Russell 2019-06-06 03:08:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
    <updated>2023-06-13T19:23:00.127263+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017015.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Rusty Russell proposed a new "emergency RBF" rule for Bitcoin transactions. This rule would allow users to replace an unconfirmed transaction with a new one that has a higher fee and thus be more likely to be included in a block. However, there were concerns raised about the possibility of spamming the mempool by repeatedly using this feature to push transactions down the queue, effectively griefing other nodes. Russell O'Connor pointed out that it may be possible for someone to alternate RBFing two transactions to push each other down the queue, and suggested that the proposal could be amended to mitigate this issue. Rusty Russell agreed that this could be annoying for the recipient, but was unsure how practical it would be to execute across multiple non-direct peers.</summary>
    <published>2019-06-06T03:08:50+00:00</published>
  </entry>
</feed>
