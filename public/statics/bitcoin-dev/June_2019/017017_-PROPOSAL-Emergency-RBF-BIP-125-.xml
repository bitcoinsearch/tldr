<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
  <updated>2023-06-13T19:23:51.236263+00:00</updated>
  <author>
    <name>Russell O'Connor 2019-06-09 04:21:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
    <updated>2023-06-13T19:23:51.236263+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017017.html" rel="alternate"/>
    <summary>On June 8, 2019, a discussion took place on the Bitcoin development mailing list regarding a new "emergency RBF" rule proposed by Rusty Russell. The rule states that if the original transaction was not in the first 4,000,000 weight units of the fee-ordered mempool and the replacement transaction is, rules three, four, and five do not apply. Russell O'Connor raised concerns about whether Alice could grief Bob's node by alternating RBFing two transactions, each one placing itself at the bottom of Bob's top 4,000,000 weight mempool which pushes the other one below the top 4,000,000 weight, and then repeating with the other transaction. He suggested amending the proposal to partially mitigate this issue. Russell responded that it may be hard to play these games across swathes of non-direct peers since mempools are in constant flux and propagation is a bit random. However, he also asked for suggestions on mitigations for the issue. One possible solution suggested was to change the proposal so that if the replacement transaction is in the first 2,000,000 weight units of the fee-ordered mempool, the rule applies.</summary>
    <published>2019-06-09T04:21:19+00:00</published>
  </entry>
</feed>
