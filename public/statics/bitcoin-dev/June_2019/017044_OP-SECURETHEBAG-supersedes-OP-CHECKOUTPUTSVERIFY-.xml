<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_SECURETHEBAG (supersedes OP_CHECKOUTPUTSVERIFY)</title>
  <updated>2023-06-13T19:12:13.689825+00:00</updated>
  <author>
    <name>Jeremy 2019-06-24 22:47:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_SECURETHEBAG (supersedes OP_CHECKOUTPUTSVERIFY)</title>
    <updated>2023-06-13T19:12:13.689825+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017044.html" rel="alternate"/>
    <summary>The author of the context disagrees that OP_IF provides composability semantics and suggests that it may be feasible to get rid of it for tapscripts. P2SH and segwit are also noted as breaking this due to the concatenation of two scripts not being the same as them separately. The author believes that OP_SECURETHEBAG's use of pushdata is a backwards compatible hack that can be redefined later on. They suggest two approaches for upgrading the script parser, with the second approach being better in their opinion. This involves creating a new interpreter for Tapscript and cleaning up various semantics such as multibyte opcodes, templated scripts, Huffman encoding opcodes, and OP_IF handling. The author suggests that the architecture of script parser versioning can be non-controversial using tapleaf versions and proposes a proof of concept fork that uses two identical script parsers. Overall, the author's plan involves modifying one of the script versions substantially and making it clear that future script versions can be added easily.</summary>
    <published>2019-06-24T22:47:44+00:00</published>
  </entry>
</feed>
