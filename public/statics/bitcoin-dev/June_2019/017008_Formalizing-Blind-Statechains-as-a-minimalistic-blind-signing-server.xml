<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Formalizing Blind Statechains as a minimalistic blind signing server</title>
  <updated>2023-06-13T19:26:07.884805+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-06-06 00:09:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Formalizing Blind Statechains as a minimalistic blind signing server</title>
    <updated>2023-06-13T19:26:07.884805+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017008.html" rel="alternate"/>
    <summary>A blind signing server with two functions for users to call has been proposed as a way of transferring ownership of a Bitcoin UTXO off-chain. The use of blind signatures makes the entity unaware of what it is signing, and assuming the server is honest, it can be used to transfer the signing rights of a private key without actually changing the key itself. A Decker-Russell-Osuntokun construction ("eltoo") is not strictly required, as the Decker-Wattenhofer construction can be used instead. The trust can be distributed by turning the server into a multisig threshold key, making security on par with federated sidechains. However, there is still the possibility of an exit scam once a few "big enough" swaps are in position to be stolen, trading off earned reputation for cold-stored cash.</summary>
    <published>2019-06-06T00:09:28+00:00</published>
  </entry>
</feed>
