<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalized covenants with taproot enable riskless or risky lending,	prevent credit inflation through fractional reserve</title>
  <updated>2023-06-13T19:57:22.761381+00:00</updated>
  <author>
    <name>Eric Voskuil 2019-06-29 21:21:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalized covenants with taproot enable riskless or risky lending,	prevent credit inflation through fractional reserve</title>
    <updated>2023-06-13T19:57:22.761381+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017071.html" rel="alternate"/>
    <summary>Tamas Blummer introduces the concept of a riskless zero bond, which is a contract between two parties where one party receives an amount less than P and has to pay back P at maturity. The difference between the amount received and P represents the contract's interest. To implement loans with full reserve check in Bitcoin, Bob forgoes his ability to use his unconditionally available coins by giving them to Alice with a covenant that guarantees Bob will receive them back later. Alice pays for this in advance. She can transfer these encumbered coins, but they will eventually return to Bob unconditionally. Encumbered coins demonstrate that the loan is fully backed by reserves.Eric Voskuil raises concerns about the assumptions made and the economic implications of the proposal. He suggests addressing requirements bugs first before considering fractional reserve lending as a systemic problem rather than the nature of lending itself. Eric also points out that interest cannot be guaranteed, and there is always a risk involved.The context also discusses the concept of lending discounted money using Bitcoin covenants. Alice can send a promissory note to Charlie via a covenant instead of sending cash directly to him. If Charlie accepts this output, he trusts that Alice will make regular payments before maturity. Each encumbered coin is not fungible with any other of a distinct discount schedule, leading to additional overhead costs.Alice cannot issue promissory notes in excess of her capital or capital she borrowed, reducing Charlie's credit risk. Due to the transitive covenant, Charlie could pass on the coins to another temporary owner until maturity when Bob would re-collect them unconditionally. If Charlie is no longer comfortable with Alice's promise or needs immediate cash, he could turn to Dan and do a repurchase (repo) agreement with him. Dan would charge high interest through a discount since he bears Charlie's credit risk.Bob gives a riskless credit to Alice by giving 1 pk(Bob) and receiving 1 or(b,pk(Alice) covenant c) and 0.1 pk(Alice) for a fee of 0.0001. Alice could send a 0.5 promissory note to Charlie by sending 1 or(pk(Alice) covenant c) and receiving 0.5 or(b,pk(Charlie) covenant c), 0.5 or(b,pk(Alice) covenant c), and 0.9999 pk(Alice) for a fee of 0.0001.Alternatively, Charlie borrows from Dan at high interest by sending 0.5 or(b,pk(Charlie) covenant c) and receiving 0.5 or(b,pk(Dan) covenant c) and 0.3001 pk(Dan) for a fee of 0.0001. Charlie then re-purchases the temporary coins before maturity, making good of the repo with Dan by sending 0.5 or(b,pk(Dan) covenant c) and receiving 0.5 or(b,pk(Charlie) covenant c) and 0.5001 pk(Charlie) for a fee of 0.0001.The transactions spending inputs with covenants need to follow certain rules such as allocating inputs with different covenants to outputs in input order and ensuring that the sum of covenant outputs exactly add up to the input(s). Bob would re-collect his coins at maturity unconditionally, and who followed through promises or defaulted down the transitive chain is irrelevant to him. The proposal has potential, and further details on how covenants would be integrated with taproot are being worked out.</summary>
    <published>2019-06-29T21:21:20+00:00</published>
  </entry>
</feed>
