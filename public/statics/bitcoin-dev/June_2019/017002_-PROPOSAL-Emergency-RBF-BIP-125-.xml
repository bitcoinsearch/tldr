<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
  <updated>2023-05-20T20:36:11.851202+00:00</updated>
  <author>
    <name>Matt Corallo 2019-06-03 09:48:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
    <updated>2023-05-20T20:36:11.851202+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017002.html" rel="alternate"/>
    <summary>Rusty Russell has proposed a modification to rules 3, 4 and 5 of BIP 125. With the new "emergency RBF" rule, it will allow RBF in adversarial conditions such as lightning unilateral closes where the adversary has another valid transaction. This is a problem when we allow differential fees between the two current lightning transactions. RBF can be used without knowing about miner's mempools, or that the above problem is occurring. One simply gets close to the required maximum height for lightning timeout, and bids to get into the next block. The proposal also makes RBF miner-incentive compatible. However, there are some concerns regarding the proposal which need to be addressed. For instance, with respect to rule 3, no evicted transactions would be allowed to be in the next block range. The worst-case free relay needs to be calculated out. The proposal should have benchmarks and not just vague protections for time-critical transactions. There is a ton more client-side knowledge required and complexity to RBF decisions here than other previous, more narrowly-targeted proposals, and this one use-case being not optimal should not prevent such a proposal.</summary>
    <published>2019-06-03T09:48:31+00:00</published>
  </entry>
</feed>
