<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Formalizing Blind Statechains as a minimalistic blind signing server</title>
  <updated>2023-06-13T19:27:51.626059+00:00</updated>
  <author>
    <name>Ruben Somsen 2019-06-12 21:26:01</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-14 07:18:27</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-04 11:28:26</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-06 06:31:45</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-12 21:26:01</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-13 01:22:38</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-04 11:28:26</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-12 21:26:01</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-14 07:18:27</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-06 06:31:45</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-14 07:18:27</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-06 00:09:28</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-06 05:20:31</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-06 00:09:28</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-06 05:20:31</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-13 01:22:38</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-13 01:22:38</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-06 00:09:28</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-06 05:20:31</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-06-06 06:31:45</name>
  </author>
  <author>
    <name>Ruben Somsen 2019-06-04 11:28:26</name>
  </author>
  <link href="bitcoin-dev/June_2019/017025_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017029_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017005_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017010_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017025_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017026_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017005_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017025_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017029_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017010_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017029_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017008_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017009_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017008_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017009_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017026_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017026_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017008_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017009_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017010_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017005_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Formalizing Blind Statechains as a minimalistic blind signing server</title>
    <updated>2023-06-13T19:27:51.627045+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017025.html" rel="alternate"/>
    <summary>Ruben Somsen and ZmnSCPxj recently discussed Statechains in an email conversation. Statechains is a technology that allows for the off-chain transfer of UTXO ownership without giving full custodial control over one's coins. Ruben suggested using blind signature servers to transfer the ownership of a Bitcoin UTXO off-chain in order to avoid changing the key itself. The functionality can be described as having a blind signing server with two functions users can call: requestNewKey(userPubkey) and requestBlindSig(userSignature, blindedMessage, nextUserPubkey).By utilizing adaptor signatures, the userSignature can be tied to the blindSignature. Trust can be distributed by turning the server into a multisig threshold key, meaning security can be on par with federated sidechains. Anything that requires UTXO ownership can be achieved off-chain via Blind Statechains, including Coinjoin, Lightning channel opening/adjusting/closing, Discreet Log Contract style bets, cross-chain atomic swaps, and more. The blind signing server functionality is non-specific to Bitcoin, making it useful for non-cryptocurrency related use cases as well.Ruben also proposed the use of blind signatures to transfer ownership of a Bitcoin UTXO off-chain. The server used here is unaware that it's handling a BTC transaction, making it "non-custodial" and secure with multisig threshold key distribution. A Decker-Wattenhofer construction can be used instead of Decker-Russell-Osuntokun for statechains, as the former provides more leverage from the maximum relative wait time. However, there is still a possibility of an exit scam once a few "big enough" swaps are in position to be stolen, trading off earned reputation for cold-stored cash.The email conversation between Ruben and ZmnSCPxj further discusses the problems with channel factories and how they can be fixed using `SIGHASH_NOINPUT` for all unilateral paths. They also discussed the potential privacy concerns if `SIGHASH_ANYPREVOUT` requires a chaperone signature. Additionally, anything that can be done with a UTXO on-chain can also be done off-chain via any updateable offchain cryptocurrency system, including Statechains, Spillman, Decker-Wattenhofer, Poon-Dryja, or Decker-Russell-Osuntokun.In summary, Statechains via MuSig is the best approach for off-chain transfer of UTXO ownership. While adding scripting is not Ruben's preferred approach, Smart Contracts Unchained (SCU) can be inserted as a separate smart contracting layer. ZmnSCPxj notes that any updateable off-chain cryptocurrency system can accomplish what Statechains does and suggests presenting further transactions to the system in order to append them to existing unilateral-case transactions and cut-through on the next update.</summary>
    <published>2019-06-12T21:26:01+00:00</published>
  </entry>
</feed>
