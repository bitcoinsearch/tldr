<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
  <updated>2023-06-13T19:22:41.597025+00:00</updated>
  <author>
    <name>Rusty Russell 2019-06-14 05:50:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PROPOSAL] Emergency RBF (BIP 125)</title>
    <updated>2023-06-13T19:22:41.597025+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017028.html" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin-dev mailing list, Rusty Russell stated that he did not think a proposed change to RBF (Replace-By-Fee) would make things worse. However, David A. Harding disagreed and provided a scenario that he thinks shows the proposal being at least 20 times worse. He believes that the current rules are insufficient and that changes need to be made. Although he understands the desire not to make things worse, he will roll in some changes and re-propose. Harding also expressed his concern about the constraints of the proposal, which he believes produce a recipe for paying extremely high feerates. He worries that this may not be significantly better than dealing with the existing transaction pinning issue where one needs to pay a high total fee to evict a bunch of junk descendents. Rusty responded by stating that without RBF changes, a lightning wallet needs to assume it needs to replace a 400kSipa tx @feerate-for-next-block. With some RBF change, it need only replace @feerate-for-next-block. He also noted that when you see a block, you can guess the fees required for the next block. You need some smoothing to avoid wild spikes, but in practice, you can start this “desperation mode” ten blocks before your deadline.</summary>
    <published>2019-06-14T05:50:17+00:00</published>
  </entry>
</feed>
