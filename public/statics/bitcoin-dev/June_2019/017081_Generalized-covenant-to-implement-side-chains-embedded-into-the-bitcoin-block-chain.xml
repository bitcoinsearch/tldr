<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalized covenant to implement side chains embedded into the bitcoin block chain</title>
  <updated>2023-06-13T20:00:31.797827+00:00</updated>
  <author>
    <name>Tamas Blummer 2019-06-30 22:25:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalized covenant to implement side chains embedded into the bitcoin block chain</title>
    <updated>2023-06-13T20:00:31.797827+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017081.html" rel="alternate"/>
    <summary>Tamas Blummer introduces a generalized covenant in a more generic use case. He discusses the concept of reducing control by the current owner and exploring the least invasive predicates first to unlock new use cases. Offering alternate control paths is what taproot was designed for, therefore a covenant that requires that a control path is inherited seems a fit. There are other predicates with exciting use, such as one on total work performed by miner which Pieter Wuille said it could be a candidate for the annex.Tamas then talks about a covenant that would put a coin under the alternative control of a Transfer and Exit keys together with the script in control of the current owner. Additional transaction level validations of transactions spending input with covenants apply as in the previous example. The result is a federated side chain embedded into the Bitcoin block chain. He gives an example scenario where Bob purchases some asset guarded by the federation and Alice might be approved to exit with the exit signature of the federation. ZmnSCPxj questions whether covenants are useful if there exist some alternative that does not involve some kind of fixed `Transfer` signer set, but still requires a covenant. In addition, he suggests Smart Contracts Unchained may be useful in this context. Tamas responds to these concerns and provides an alternative covenant that allows for unrestricted flexibility to the unchained platform with the exception that it has to maintain the exit option.</summary>
    <published>2019-06-30T22:25:03+00:00</published>
  </entry>
</feed>
