<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An alternative: OP_CAT &amp; OP_CHECKSIGFROMSTACK</title>
  <updated>2023-06-13T18:57:36.610229+00:00</updated>
  <author>
    <name>Tamas Blummer 2019-06-13 08:14:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An alternative: OP_CAT &amp; OP_CHECKSIGFROMSTACK</title>
    <updated>2023-06-13T18:57:36.610229+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017027.html" rel="alternate"/>
    <summary>A proposal to implement OP_CAT and OP_CHECKSIGFROMSTACKVERIFY as new Script operations has been put forward by Russell O'Connor. These two operations would enable a range of features, including oracle signature verification, secure multiparty computations, transaction introspection, and weak covenants. In contrast to other recent proposals, such as SIGHASH_ANYPREVOUT and OP_CHECKOUTPUTHASHVERIFY, which are designed for narrow applications, O'Connor argues that generic building blocks are necessary to achieve the full potential of Bitcoin Script. The proposed operations could also facilitate the implementation of oracle less difficulty contracts without the need for CISC type OP_WORKVERIFY. A concrete example of such a contract is provided, which involves an European digital call option on target difficulty after maturity and 10 blocks notice period. The contract can be soft forked in by redefining OP_NOP as a prefix (OP_EXTENSION).</summary>
    <published>2019-06-13T08:14:02+00:00</published>
  </entry>
</feed>
