<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Squashing redundant tx data in blocks on the wire</title>
  <updated>2023-06-09T01:12:40.434987+00:00</updated>
  <author>
    <name>Kaz Wesley 2014-07-18 17:53:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Squashing redundant tx data in blocks on the wire</title>
    <updated>2023-06-09T01:12:40.434987+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006305.html" rel="alternate"/>
    <summary>A Bitcoin developer, Kaz Wesley, proposed a new method for peers to exchange mempool priority policies. The idea is to exchange priority policies in peer introductions and assign unique sequential IDs in the order of the transactions inved per peer. A getdata for a tx updates last-known-peer-received inv to all invs up to the one referenced. Possible new messages include sparse block, invack message, and gettx. Wesley suggested that ordering policies should allow arbitrary algebraic combinations of their parameters, as well as thresholds. One potential pitfall is that this allows for an environment of completely heterogeneous mempool policies. It may be worthwhile to add a parallel mechanism for relay policies, to differentiate between what a node would keep in its mempool vs. what it wouldn't even relay and doesn't want to see at all. An interesting additional use of policy-scripts would be a standardized way for miners to include a policy script in a coinbase allowing miners a mechanism to advertise things like their relative price of sigops vs bytes.</summary>
    <published>2014-07-18T17:53:12+00:00</published>
  </entry>
</feed>
