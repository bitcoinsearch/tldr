<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Squashing redundant tx data in blocks on the wire</title>
  <updated>2023-06-09T01:09:59.423383+00:00</updated>
  <author>
    <name>Kaz Wesley 2014-07-31 21:41:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Squashing redundant tx data in blocks on the wire</title>
    <updated>2023-06-09T01:09:59.423383+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006392.html" rel="alternate"/>
    <summary>The conversation between Gregory Maxwell and Kaz Wesley on July 31, 2014, discusses the communication overhead of transmitting a transaction list. The current approach of sending 32 bits per transaction is said to have double the communication overhead as compared to the simple approach. This approach only provides a bound on the probability of needing a round trip. Kaz Wesley suggests using the "What's the Difference" approach to operate effectively on full transactions instead of sending 32 bits per transaction. Gregory Maxwell explains how this can be done on the network block coding page. According to him, the sender sends non-syndromic forward error correcting code data larger than their estimate of how much data the user is missing. This approach does not have any overhead except for FEC blocks that are incompletely missing. Furthermore, there is a need to have transmitted the transaction list and sizes first, which requires more bandwidth but not an additional round trip. It is important to note that knowing the sizes and orders of the transactions is necessary for this approach to work effectively.</summary>
    <published>2014-07-31T21:41:33+00:00</published>
  </entry>
</feed>
