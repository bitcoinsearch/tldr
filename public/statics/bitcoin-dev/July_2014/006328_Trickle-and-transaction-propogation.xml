<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trickle and transaction propogation</title>
  <updated>2023-06-09T01:25:29.684856+00:00</updated>
  <author>
    <name>Mike Hearn 2014-07-20 22:02:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trickle and transaction propogation</title>
    <updated>2023-06-09T01:25:29.684856+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006328.html" rel="alternate"/>
    <summary>The inv trickling mechanism in Bitcoin serves two purposes: to protect casual users' privacy by slightly obscuring a transaction's originating node and to reduce invs unnecessarily sent both directions for a connection. However, this process slows down transaction propagation and delays knowledge between two nodes of what transactions are mutually known. These drawbacks will be especially costly once optimizations based on mutually-known transactions are available. The proposed techniques of push staggering and directional parity could solve these issues more efficiently and still protect user privacy. Currently, most users are not using the Core wallet anymore, but rather use either SPV wallets or more centralized blockchain/coinbase style gateways to the network. SPV wallets don't relay, so any transaction sent from them must be originated by that wallet. Centralized services accept transaction submissions via SSL and can easily improve their users' privacy by sending transactions out via a node that isn't listening. Thus, optimizing the network for the common use case rather than only helping Core wallet users would benefit everyone. If the proposed techniques let Bitcoin have its cake and eat it too, fantastic, otherwise, tx trickling should be removed.</summary>
    <published>2014-07-20T22:02:39+00:00</published>
  </entry>
</feed>
