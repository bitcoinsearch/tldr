<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ASIC-proof mining</title>
  <updated>2023-06-09T00:40:45.038877+00:00</updated>
  <author>
    <name>Andy Parkins 2014-07-04 10:27:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ASIC-proof mining</title>
    <updated>2023-06-09T00:40:45.038877+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006184.html" rel="alternate"/>
    <summary>In a blog post by Mike Hearn, the notion that it is impossible to have an ASIC-proof proof of work algorithm was discussed. In response to this idea, Dr. Andy Parkins suggests that while it may be true that no algorithm can exist that cannot be implemented in an ASIC, it is only true for algorithms that are CPU bound. To protect against ASIC mining, the algorithm could instead be IO-bound, rather than CPU-bound. By making the proof-of-work hash for a block hash of [NEW_BLOCK] [ALL_PREVIOUS_BLOCKS] [NEW_BLOCK], in which [ALL_PREVIOUS_BLOCKS] is 20GB and growing, every byte of the blockchain must be fed through the hashing engine, making it IO-bound. This would render any hashing engine effectively the same, despite the bus used to feed it. Dr. Parkins makes the assumption that SHA-256 is not cacheable from the middle outwards, so the entire blockchain must be transferred for every hash. While this idea may seem unconventional, it could offer a solution to the problem of ASIC mining.</summary>
    <published>2014-07-04T10:27:51+00:00</published>
  </entry>
</feed>
