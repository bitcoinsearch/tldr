<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment Protocol for Face-to-face Payments</title>
  <updated>2023-06-08T01:01:24.213172+00:00</updated>
  <author>
    <name>Andreas Schildbach 2014-07-01 09:48:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment Protocol for Face-to-face Payments</title>
    <updated>2023-06-08T01:01:24.213172+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006170.html" rel="alternate"/>
    <summary>Mike Hearn discusses the main problem with BIP72, which is that there is no way to provide a fallback alternative URI for payment request fetch if client wallet supports BIP70. He suggests using multiple r= parameters or just using the other ones as a fallback. The current Bitcoin Wallet falls back to BIP21 if fetching the PR via the r= URL fails. The idea is that the recipient wallet uploads to the internet and exposes the payment request over Bluetooth simultaneously. Link-layer encryption has to be an add-on to the current unencrypted connection like HTTPS is on top of HTTP. However, this is unrelated to the question of how to provide fallback URLs.There is also a similar issue with the BIP70 payment URL, where it doesn't allow for fallbacks either. Mike brought up this issue in the discussion phase of BIP70, but it was dismissed because of "let's not get too complex for the first version". The fallback here is to send the transaction via the P2P network.</summary>
    <published>2014-07-01T09:48:44+00:00</published>
  </entry>
</feed>
