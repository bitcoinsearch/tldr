<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Squashing redundant tx data in blocks on the wire</title>
  <updated>2023-06-09T01:10:17.516549+00:00</updated>
  <author>
    <name>Jeff Garzik 2014-07-18 15:06:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Squashing redundant tx data in blocks on the wire</title>
    <updated>2023-06-09T01:10:17.516549+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006298.html" rel="alternate"/>
    <summary>The email thread is discussing the possibility of an agreed-upon canonical ordering, which would allow transactions to be sorted more efficiently when broadcasting. The idea is to start with a set of transactions that are known and select a subset based on miner's policy which would then be sorted using the canonical ordering algorithm. This would make broadcasting more efficient by taking shortcuts assuming most peers already know the set started with and expect the same canonical ordering. However, it is noted that too-young transactions should not be included as they are still propagating around the network.Another idea discussed is advertising technical attributes about a pool or chain's policy, which would give nodes a better ability to predict what is in an upcoming block. Multiple p2pool-esque chains could exist, each with their own policy and reward pattern, creating a decentralized system. GHash/BTCGuild/Eligius could run a semi-centrally managed chain ultimately guaranteed by administrators' digital signatures. While predictions may not always be perfect, there needs to be a fallback case that is not overly painful. Jeff Garzik, the author of the email, is a Bitcoin core developer and open source evangelist for BitPay Inc.</summary>
    <published>2014-07-18T15:06:23+00:00</published>
  </entry>
</feed>
