<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pay to MultiScript hash:</title>
  <updated>2023-06-09T01:01:53.596974+00:00</updated>
  <author>
    <name>Jeremy 2014-07-16 17:56:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pay to MultiScript hash:</title>
    <updated>2023-06-09T01:01:53.596974+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006272.html" rel="alternate"/>
    <summary>Jeremy Rubin proposed a new transaction type that matches on script hashes similar to pay to script hash but checks for one of N scripts. The motivation behind this idea is to create "permission groups" where multiple groups can spend a utxo. Currently, expressing this would require additional costs in terms of complicated control flows. Therefore, Jeremy proposed the use of OP_HASH160 [20-byte-hash-value 1]...[20-byte-hash-value N] OP_N OP_MULTISCRIPTHASHVERIFY which could be spent with signatures and serialized script. While the permission group example is just one use case, there could be other interesting combinations as well. However, there is an implication in terms of increased utxo pool bloat and increased transaction complexity. Each 20 byte hash allows for a 500 byte script, but only one of the 500 byte scripts has to be permanently stored on the blockchain. Jeremy is looking forward to feedback regarding this preliminary idea.</summary>
    <published>2014-07-16T17:56:54+00:00</published>
  </entry>
</feed>
