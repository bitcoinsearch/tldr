<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment Protocol for Face-to-face Payments</title>
  <updated>2023-06-08T01:03:32.986397+00:00</updated>
  <author>
    <name>Michael Wozniak 2014-07-01 10:42:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment Protocol for Face-to-face Payments</title>
    <updated>2023-06-08T01:03:32.986397+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006171.html" rel="alternate"/>
    <summary>In a discussion between Andreas Schildbach and Mike Hearn on the Bitcoin-development mailing list, they discussed the issue of providing fallback URLs for payment request fetch if the client wallet supports BIP70 but doesn't support fetching over Bluetooth or Bluetooth connection fails for any reason. They suggested using multiple r= parameters to allow for this fallback. However, Michael Wozniak argued that adding a new parameter would be better as current implementations will break if multiple r parameters are used. He suggested that the current implementations should just ignore the new parameter if they don't support it. Andreas Schildbach agreed with the idea of using multiple r= parameters or using other radio layers as a fallback. He also brought up the issue of not being able to provide fallbacks with the BIP70 payment URL. The fallback in this case is to send the transaction via the P2P network. He mentioned that he plans to look into using Bluetooth 4 LE and WIFI Direct as radio layers in the future. They also briefly discussed the lack of link-layer encryption with Bluetooth support, which could be addressed through an add-on like HTTPS. Overall, there was a discussion around finding a solution for providing fallback URLs for payment request fetch.</summary>
    <published>2014-07-01T10:42:33+00:00</published>
  </entry>
</feed>
