<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 38 NFC normalisation issue</title>
  <updated>2023-06-09T00:57:07.566337+00:00</updated>
  <author>
    <name>Andreas Schildbach 2014-07-16 09:17:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 38 NFC normalisation issue</title>
    <updated>2023-06-09T00:57:07.566337+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006261.html" rel="alternate"/>
    <summary>The problem with Unicode astral plane is caused by a plain old (ASCII) control character, \u0000. It is suggested to ban/filter ISO control characters to solve this issue. However, it is assumed that Character.isISOControl() works consistently across platforms. Aaron Voisine suggests limiting the spec to the subset of Unicode that all popular platforms can support if JVMs can't support Unicode NFC. Mike Hearn recommends refusing any passphrase that includes characters outside the BMP for compatibility with JVM based wallets. He suspects that Java may not/won't support this kind of thing because it uses 16 bit characters internally. The email also includes a link to Black Duck Code Sight for indexing and searching up to 200,000 lines of code.</summary>
    <published>2014-07-16T09:17:44+00:00</published>
  </entry>
</feed>
