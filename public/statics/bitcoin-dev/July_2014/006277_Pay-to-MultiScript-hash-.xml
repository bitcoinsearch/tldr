<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pay to MultiScript hash:</title>
  <updated>2023-06-09T01:02:17.897881+00:00</updated>
  <author>
    <name>Jeremy 2014-07-17 05:59:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pay to MultiScript hash:</title>
    <updated>2023-06-09T01:02:17.897881+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006277.html" rel="alternate"/>
    <summary>The proposed method of using 20-byte hash to represent a permission group would incur additional costs in terms of chance of user error/application error and extra bytes for control flow. However, this method allows for hidden-till-spent permission groups, reduces blockchain bloat and enables repeated spends with groups without having to recall all participants. The author suggests an interesting way to push the sigs onto the stack and have implicit orders, then do expressions with their aliases, and then be able to assign "spending groups". This can be done using a little SAT scripting language with an eval. Doing boolean logic with multisig groups is quite possible, e.g. "group AND group", "group OR (group AND group)" etc. and is referred to as "multi-multisig".</summary>
    <published>2014-07-17T05:59:25+00:00</published>
  </entry>
</feed>
