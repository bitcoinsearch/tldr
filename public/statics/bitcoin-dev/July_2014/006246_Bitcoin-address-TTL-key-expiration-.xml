<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin address TTL &amp; key expiration?</title>
  <updated>2023-06-09T00:50:33.370834+00:00</updated>
  <author>
    <name>Luke Dashjr 2014-07-15 14:48:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin address TTL &amp; key expiration?</title>
    <updated>2023-06-09T00:50:33.370834+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006246.html" rel="alternate"/>
    <summary>In this email conversation, Jeff Garzik suggests a useful feature that would limit the lifetime of a Bitcoin address and intentionally prevent bitcoins being sent to a pubkey/pkh after the key expires. The metadata would not be digitally signed, but it would be hash-sealed. Wallet clients would enforce such a rule, however, the best insertion point in the protocol for key expiration is an open question. Jeff agrees that this would be useful for the "permit" case, but not the "confirm" case. He thinks that it's important that transactions valid in block X also be equally valid in block X+1 to avoid reorg issues. Jeff admits he does not have good answers, but he thinks it's valuable to prevent users from accidentally sending to an "expired" TxOut/pkh, discourage address reuse, and enable sites that generate lots of keys to rotate ancient keys off their core systems. He also mentions that HD wallets mitigate some of these issues. However, Luke points out that wallets/services can already ignore transactions using an address more than once and that there might be race attacks if this feature is implemented in an immediate fashion.</summary>
    <published>2014-07-15T14:48:55+00:00</published>
  </entry>
</feed>
