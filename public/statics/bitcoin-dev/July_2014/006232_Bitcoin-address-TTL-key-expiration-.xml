<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin address TTL &amp; key expiration?</title>
  <updated>2023-06-09T00:50:03.025367+00:00</updated>
  <author>
    <name>Jeff Garzik 2014-07-15 08:00:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin address TTL &amp; key expiration?</title>
    <updated>2023-06-09T00:50:03.025367+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006232.html" rel="alternate"/>
    <summary>Jeff Garzik, a Bitcoin core developer and open-source evangelist, suggested a useful feature for the Bitcoin protocol. In a request made at CoinSummit, he proposed limiting the lifetime of a Bitcoin address, which would intentionally prevent bitcoins from being sent to a pubkey/pkh after the key expires. He suggested appending "don't ["permit"|confirm] after X [time|block]" to the address and explained that the metadata wouldn't be digitally signed, but it would be hash-sealed. Garzik pointed out that while the Bitcoin protocol knows about keys, key expiration is an open question in terms of finding the best insertion point in the protocol. He raised the possibility of flagging "no more TxOuts exactly like this [after X block?]" as an alternative. He admitted that he didn't have all the answers but believed that preventing users from accidentally sending to an "expired" TxOut/pkh was valuable, as it happens in the field. Additionally, he felt that his proposal could discourage address reuse and enable sites generating lots of keys to rotate ancient keys off their core systems. He noted that HD wallets mitigate some of these issues. Garzik emphasized that wallet clients would be the ones enforcing such a rule because "address" is a client-side notion.</summary>
    <published>2014-07-15T08:00:41+00:00</published>
  </entry>
</feed>
