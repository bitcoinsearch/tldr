<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>getmemorypool BIP process</title>
  <updated>2023-06-06T03:19:29.436965+00:00</updated>
  <author>
    <name>Michael Gr√∏nager 2012-03-03 17:08:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>getmemorypool BIP process</title>
    <updated>2023-06-06T03:19:29.436965+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-March/001300.html" rel="alternate"/>
    <summary>The client-server model of HTTP and JSON-RPC does not allow the server to make calls to the client. Clients cannot run their own JSON-RPC server and many cannot listen on WAN ports at all. Stefan suggests using http keep-alive combined with an event system to create an update function for JSON-RPC similar to how web chat applications work. BitcoinJS currently uses this method for real-time updating a web wallet, and Libcoin has an advanced non-blocking server prepared for it. There is a question for Stefan about the standard or best practice way of doing S-&gt;C JSON-RPC and which JavaScript library to use. Cloud computing makes use of virtualization and focuses on delivering computing as a service.</summary>
    <published>2012-03-03T17:08:57+00:00</published>
  </entry>
</feed>
