<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>0.7 merge recommendations/status</title>
  <updated>2023-06-06T03:48:06.916541+00:00</updated>
  <author>
    <name>Michael Gr√∏nager 2012-03-31 11:16:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>0.7 merge recommendations/status</title>
    <updated>2023-06-06T03:48:06.916541+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-March/001353.html" rel="alternate"/>
    <summary>A message from Michael Gronager suggests pushing libcoin to bitcoin, which he believes solves most of the problems. The libcoin RPC supports keep_alive and pipelining, runs in its own thread using async operation and there is no blocking of the main thread due to rpc methods, except for a sendto. In addition, Ipv6 is easy to implement in libcoin. Pieter Wuille prefers more frequent releases and encourages a decent encapsulation of wallet and blockchain data structures that allow making their mutexes private. Luke-Jr proposes multithreaded JSON-RPC with keep-alive support and other optimizations that double performance of JSON-RPC. Pieter's getalltransactions and Luke-Jr's getblock_full provide what is needed to completely replace Jeff's old dumpblock call with bitcoind's new getblock. Finally, Pieter Wuille remarks on the status of IPv6 support, including the technical part of supporting IPv6, removing IsIPv4 checks and adding listen/connect code that is IPv6-compatible. There are some issues about relaying, but supporting IPv6 could pave the way for bitcoin functioning as a Tor or I2P hidden service.</summary>
    <published>2012-03-31T11:16:56+00:00</published>
  </entry>
</feed>
