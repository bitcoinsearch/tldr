<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>0.7 merge recommendations/status</title>
  <updated>2023-06-06T03:47:45.587344+00:00</updated>
  <author>
    <name>Luke-Jr 2012-03-31 04:03:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>0.7 merge recommendations/status</title>
    <updated>2023-06-06T03:47:45.587344+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-March/001349.html" rel="alternate"/>
    <summary>The author of this post has compiled a list of changes in the Bitcoin codebase that are ready for merging into version 0.7, which is currently in the release candidate (RC) phase. The first recommendation is to merge Matt's CBlockStore (#771), which is mostly a major code cleanup and requires post-merge testing. Next up are some changes already ACK'd for 0.7: Hearn's "pong" message (#932) and Wladimir's Visual C++ 2010 fixes (#949). getmemorypool BIP standardization (#936) is also ACK'd, but it might be good to wait until later in the merge window considering its low impact and high potential for change as the BIP gets closer to Accepted status.Multithreaded JSON-RPC with keep-alive support (#568) should be merged sooner rather than later, according to the author, who claims that it's long overdue for bitcoind having had a lot of testing, and pretty much required for any sort of high-volume bitcoind usage (such as solo mining). Some other optimizations by Joel such as the optimized ToHex function (#562) and FastGetWork (#565) have also had plenty of testing; all combined, these optimizations more than double the performance of JSON-RPC.Other changes include Pieter's getalltransactions (#841) and my getblock_full (#886), which provide what is needed to completely replace Jeff's old dumpblock call with bitcoind's new getblock. There is also Chris's neat refactoring of the coin selection algorithm (#905, #898), Michael's patch to get the standard reopen-log-files-on-SIGHUP (#917), Matt's protocol documentation on the wiki and BitcoinJ both expect the 'getheaders' message to return at most only 2000 headers, so recommends we enforce that in the core (#951), Philip's trivial flip to the backslashes in debug.log for Windows (#971), and some p2pool miners' bounty for a JSON-RPC call to customize fee requirements (#989) that would help make Bitcoin more decentralized.Scott has a pull request for Bitcoin-Qt to behave more like other close-to-systray applications by toggling the hide/show action (#855). He's also contributed a patch to show miners' immature balances on the overview screen (#837; it leaves only a blank space for non-miners). Nils, on the other hand, has been working with a UI designer to totally remodel Bitcoin-Qt. Coderrr has rebased his Coin Control features (#415) to the latest version, which seem to be popular, so should probably be merged as soon as it's had proper review. Finally, the author hopes for Pieter's IPv6 support to be ready for 0.7, but right now all he sees submitted for this is support for multiple local IPs (#829) though.</summary>
    <published>2012-03-31T04:03:17+00:00</published>
  </entry>
</feed>
