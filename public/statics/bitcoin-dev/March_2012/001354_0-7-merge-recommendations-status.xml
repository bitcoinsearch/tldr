<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>0.7 merge recommendations/status</title>
  <updated>2023-05-19T00:34:06.351613+00:00</updated>
  <author>
    <name>Pieter Wuille 2012-03-31 12:28:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>0.7 merge recommendations/status</title>
    <updated>2023-05-19T00:34:06.351613+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-March/001354.html" rel="alternate"/>
    <summary>Michael Gr√∏nager has suggested pushing libcoin to bitcoin in order to solve some of the problems listed. He has also offered to change the copyright/license if needed. However, it would not be possible to merge anything without a license change. Libcoin is designed with no global thread mutexes and there is no blocking of the main thread due to rpc methods except for a sendto. In addition, a reorganize only locks the main thread for a split second while the final commit is done. Despite liking its design and refactorings, Pieter is not entirely convinced about its thread-safety. He suggests making each publicly accessible method of BlockChain grab either a reader lock (if it's a const function) or an upgradable lock, and take a writer lock in each method that actually performs changes. The libcoin rpc supports keep_alive and pipelining, runs in its own thread but can also run in the same thread as the node, and uses async operation. Ipv6 is easy to implement in libcoin as the CAddress/Endpoint class is implemented as a subclass of boost::endpoint, only thing holding back is deciding on an ipv6 format on IRC. Lastly, Pieter would like to reverse the order of the last 12 bytes in the address db since they are opposite to boost.</summary>
    <published>2012-03-31T12:28:28+00:00</published>
  </entry>
</feed>
