<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Announcement: libcoin</title>
  <updated>2023-06-05T02:52:13.486082+00:00</updated>
  <author>
    <name>Peter Vessenes 2012-03-22 16:34:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Announcement: libcoin</title>
    <updated>2023-06-05T02:52:13.486082+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-March/001343.html" rel="alternate"/>
    <summary>Peter expresses his desire to see a comprehensive list of tests that alt processors/generators can run against. He suggests that it would be a good early project for someone who wants to help by getting together inputs and expected outputs/stack states for implementers to check against. Currently, their codebase is split; they rely on the client to check the validity of a transaction, balance of an address, and converse with the network while most of their own code is written for block generation. They expect to do the same for transaction creation.Another conversation between Michael and Thiago discusses issues with libcoin's bitcoind. Thiago cannot start libcoin's bitcoind using high ports as it always tries to listen at 8332, no matter what he does. Michael suggests upgrading to boost 1.46.1 library to fix it. In addition, Thiago has encountered some problems with "getaccountaddress" and "listaccounts" commands which require username/password authentication. Finally, Martinx thanks Michael for creating libcoin and reports that he was unable to compile libcoin under Ubuntu 11.04 due to compatibility issues with openssl 1.0.The libcoin is a crypto currency library which is based on the bitcoin/bitcoin "Satoshi" client. The Satoshi client code has been refactored, properly encapsulating classes, removing all globals, moving from threads and mutexes to a pure asynchronous approach. It has functionalities that have been divided into logical units and libraries, minimizing dependencies for e.g. thin clients. libcoin is chain agnostic, all chain specific settings are maintained from a single class (Chain) and hence experiments with chain settings, mining, security and digital currencies for research and educational purposes are easily accessible.libcoin maintains a version of bitcoind that is a 100% compatible drop-in replacement of the bitcoin/bitcoind client. You can use it on the same computer on the same files and you can call it with the same scripts. And you can easily extend it without touching the basic bitcoin source files. The build system of libcoin is based on CMake and supports builds of static and dynamic libraries on Linux, Mac OS X, and Windows.The libcoin license is LGPL v. 3 which means that you can use it in open source as well as in commercial projects, but improvements should go back into the libcoin library. The libcoin/bitcoind client downloads the entire block chain 3.5 times faster than the bitcoin/bitcoind client. This is less than 90 minutes on a modern laptop.The author provided an error message while trying to make the installation and asked for help. The error occurred due to undefined reference to some functions like BN_init, BN_copy, BN_set_negative, SHA256, etc.The given context consists of multiple repetitions of the contact information of Michael Gronager, PhD, Director of Ceptacle. The information includes his name, address, mobile number, email id, and website link. The context also includes a sponsored advertisement for trying Windows Azure for free for 90 days by clicking on a link provided. Additionally, there is contact information provided for Peter J. Vessenes, the CEO of CoinLab, including his name, mobile number, and an HTML attachment that has been scrubbed. Lastly, the context contains information about a Bitcoin-development mailing list with a link to subscribe and unsubscribe from the list.</summary>
    <published>2012-03-22T16:34:34+00:00</published>
  </entry>
</feed>
