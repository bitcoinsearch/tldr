<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trustless hash-price insurance contracts</title>
  <updated>2023-06-13T22:00:32.015347+00:00</updated>
  <author>
    <name>Lucas H 2019-10-20 21:33:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trustless hash-price insurance contracts</title>
    <updated>2023-06-13T22:00:32.015347+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017422.html" rel="alternate"/>
    <summary>The Bitcoin-dev mailing list has been discussing a trustless contract that guarantees minimum profitability of a mining operation in case the Bitcoin/hash price goes too low. The issue being discussed is that if a miner invests in new mining equipment and the hash-rate goes up too much, they will experience a loss. To address this problem, a trustless hash-price insurance contract or an option to sell hashes at a given price can be negotiated between an insurer and a miner who believes that it's unlikely the price of a hash will go down a lot. There are three conditions for paying the insurance: after expiry date, both miner and insurer can spend at any time by mutual agreement or before expiry, miner can spend by providing a pre-image that produces a hash within certain difficulty constraints. The discussion also highlights the difference between operational profitability (P) and Return on investment (ROI) and explains how the instrument protects against scenarios where ROI becomes negative while P&gt;0.The author of a post on the Bitcoin-dev mailing list proposes a new instrument for guaranteeing a minimum profitability of the mining operation. The proposal involves the use of an insurance deposit, where the miner can compensate for a lower-than-expected reward by using part of the deposit. If hashing becomes cheap enough, it may become profitable to spend resources finding a suitable pre-image instead of mining Bitcoin. The difficulty requirement needs to be implemented in a hacky way due to limitations with arithmetic comparisons with long integers. In conclusion, the discussion on the feasibility of such contracts to protect against operational profitability but technical feasibility of the contract given the economic assumptions is more interesting than its economic practicality in the present. The post ends with a request for feedback on the proposed idea.</summary>
    <published>2019-10-20T21:33:24+00:00</published>
  </entry>
</feed>
