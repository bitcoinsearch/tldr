<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Draft BIP for SNICKER</title>
  <updated>2023-06-13T21:07:54.566357+00:00</updated>
  <author>
    <name>SomberNight 2019-10-20 00:29:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Draft BIP for SNICKER</title>
    <updated>2023-06-13T21:07:54.566357+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017411.html" rel="alternate"/>
    <summary>A proposal called SNICKER (Simple Non-Interactive Coinjoin with Keys for Encryption Reused) has been introduced as an alternative type of CoinJoin by Adam Gibson. The proposal has been shared in the form of a draft BIP. It is designed to break common chain-analysis assumptions further, indirectly benefiting the ecosystem as a whole, and is easy to implement for the "Receiver" role in a light wallet. The Receiver can find all his outputs and reconstruct all corresponding private keys deterministically from seed words and the blockchain. However, SNICKER breaks watch-only wallets as the scheme is fundamentally incompatible with them. Users would have to make a choice during wallet creation time whether they want to use xpubs or potentially participate in SNICKER coinjoins as a "Receiver". If SNICKER is not supported by the default choice, it is less likely to take off and, hence, less useful for the user; if xpubs are not supported by the default choice, existing user expectations are broken. It is unclear how the SNICKER scheme could be adjusted to fix this, as `c` needs to be known exactly by the two coinjoin-participants and no one else.</summary>
    <published>2019-10-20T00:29:25+00:00</published>
  </entry>
</feed>
