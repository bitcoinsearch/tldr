<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Draft BIP for SNICKER</title>
  <updated>2023-06-13T21:06:48.553459+00:00</updated>
  <author>
    <name>Riccardo Casatta 2019-10-21 11:00:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Draft BIP for SNICKER</title>
    <updated>2023-06-13T21:06:48.553459+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017424.html" rel="alternate"/>
    <summary>A discussion about implementing SNICKER in Electrum for the "Receiver" role was recently held between waxwing, ThomasV, and SomberNight via bitcoin-dev. The proposed scheme is fundamentally incompatible with watch-only wallets as the "Receiver" can restore from seed but to calculate `c` he needs access to his private keys. However, David A. Harding suggested that it is okay to consider requiring interaction with the cold wallet and proposed a recovery procedure from the SNICKER documentation. The set of candidate transactions produced in step #2 can be bundled up and copied to the corresponding cold wallet using the same means used for PSBTs (e.g. USB drive, QR codes, etc). The cold wallet could then perform step #3 using its private keys and return a file/QRcode/whatever to the hot wallet telling it any shared secrets it found. This process may need to be repeated several times if an output created by one SNICKER round is spent in a subsequent SNICKER round.</summary>
    <published>2019-10-21T11:00:26+00:00</published>
  </entry>
</feed>
