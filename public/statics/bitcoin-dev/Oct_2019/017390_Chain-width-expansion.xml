<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Chain width expansion</title>
  <updated>2023-06-13T21:47:58.803124+00:00</updated>
  <author>
    <name>Joachim Str√∂mbergson 2019-10-12 17:56:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Chain width expansion</title>
    <updated>2023-06-13T21:47:58.803124+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017390.html" rel="alternate"/>
    <summary>A proposal for a "seed" based system to prevent dishonest peers from disrupting chains was discussed on the Bitcoin-dev mailing list. The idea is that each peer provides proof of the header with the lowest digest on their main chain, and chains ending at the strongest seeds are kept preferentially when discarding chains. This requires a way to download chains backwards, which the protocol currently does not support. Additionally, bandwidth and RAM allowances would be allocated to each connected peer and forks off their own chain before reaching current time would be discarded. The issue of a timewarp attack was also brought up, in which a malicious node could generate a much longer chain with superslow timestamp increase without increasing difficulty, producing a chain ~2500 times longer than the main chain without multiple branches. It was suggested that nodes should stay "headers-only" until they hit a minimum chainwork threshold to mitigate vulnerabilities during initial sync when joining the network, and that minimum chainwork could be defined based on the current chainwork. However, such definitions could also be used to prevent nodes from joining the network. The concept of "min. diff. checkpoints" was compared to hash checkpoints, with the former being equivalent to a checkpoint without being called a checkpoint. The "checkpoint" is replaced by a statement by the dev team that "there exists at least one valid chain with C chainwork," which is equivalent to "the longest valid chain has at least C chainwork."</summary>
    <published>2019-10-12T17:56:51+00:00</published>
  </entry>
</feed>
