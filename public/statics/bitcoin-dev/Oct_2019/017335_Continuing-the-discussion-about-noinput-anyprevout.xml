<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-13T21:32:47.649457+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-10-01 15:35:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-13T21:32:47.649457+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017335.html" rel="alternate"/>
    <summary>In this conversation, ZmnSCPxj and Christian discuss the implementation of Decker-Russell-Osuntokun. They mention a standard MuSig 2-of-2 bip-schnorr SegWit v1 Funding Transaction Output, a "translator transaction," and an update transaction signed with SIGHASH_NOINPUT spending the output. They also discuss using trigger transactions to separate timeout start and the actual update/settlement pairs. ZmnSCPxj argues that trigger transactions are not necessary for Decker-Russell-Osuntokun. The two also discuss using plain bip-schnorr-signed outputs in cooperative cases to increase anonymity sets. They consider whether off-chain payment networks can keep outputs as unidentifiable as possible since they gossip about the existence of channels. They note that Lightning supports unpublished channels and channels that have been cooperatively closed are no longer widely gossiped. Finally, ZmnSCPxj highlights the importance of striving for ideal cases even if they cannot be fully achieved.</summary>
    <published>2019-10-01T15:35:34+00:00</published>
  </entry>
</feed>
