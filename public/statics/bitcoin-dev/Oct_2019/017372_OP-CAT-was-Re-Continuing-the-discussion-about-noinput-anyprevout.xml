<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_CAT was Re: Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-13T21:41:32.712810+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-10-06 08:46:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_CAT was Re: Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-13T21:41:32.712810+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017372.html" rel="alternate"/>
    <summary>In a discussion on the Lightning-dev mailing list, Jeremy had raised a point about constructing midstate using scriptPubKey with SHA256STREAM. However, ZmnSCPxj argued that there is no real advantage of using SHA256STREAM over OP_CAT as both are limited by the size of the script. Additionally, theoretically, `OP_CAT` is less efficient than `OP_SHASTREAM`. This is because `OP_CAT` may lead to possible O( n^2 ) behavior if new backing memory must be allocated elsewhere and the existing data copied. Meanwhile, `OP_SHASTREAM` would not require any copying or new allocations once the stream state is in place. However, it was noted that a sufficiently-limited maximum `OP_CAT` output would be helpful in reducing the worst-case `OP_CAT` behavior but 64 bytes feels too small, especially for Merkle tree proofs.</summary>
    <published>2019-10-06T08:46:59+00:00</published>
  </entry>
</feed>
