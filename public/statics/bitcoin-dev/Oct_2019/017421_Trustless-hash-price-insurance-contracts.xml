<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trustless hash-price insurance contracts</title>
  <updated>2023-06-13T21:57:31.501913+00:00</updated>
  <author>
    <name>Lucas H 2019-10-20 19:45:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trustless hash-price insurance contracts</title>
    <updated>2023-06-13T21:57:31.501913+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017421.html" rel="alternate"/>
    <summary>The author of this post is proposing a trustless hash-price insurance contract that guarantees minimum profitability of a mining operation in case Bitcoin/hash price goes too low. The main uncertainty the miner is trying to protect against isn't the inefficiency of his new equipment, but how much new mining equipment is being deployed worldwide, which he can't know in advance (as the system is permissionless). There are two different metrics that can mean "profitable" that are getting confused: operational profitability and ROI. The instrument the author describes above protects against the scenario where P &gt; 0, but ROI 0 for all miners using the new equipment. A miner with great confidence that he is running optimal hardware and has optimal electricity and labor costs probably wouldn't be interested in purchasing insurance for a high price, but if it was cheap enough, it would still be worth it. And any potential new entrants on the edge of jumping in would enter when they otherwise would not have because of the decreased costs (decreased risk). It's basically an instrument for guaranteeing a minimum profitability of the mining operation. The insurer negotiates a contract with the miner implemented as a Bitcoin transaction. Inputs: a deposit from the insurer and a premium payment by the miner. Output1: simply the premium payment to the insurer. Output2 - the actual insurance. There are three OR'ed conditions for paying it: A. After expiry date (in blocks) insurer can spend. B. Both miner and insurer can spend at any time by mutual agreement. C. Before expiry, miner can spend by providing a pre-image that produces a hash within certain difficulty constraints. The thing that makes it a hash-price insurance (or option, pardon my lack of precise financial jargon), is that if hashing becomes cheap enough, it becomes profitable to spend resources finding a suitable pre-image, rather than mining Bitcoin. Of course, both parties can reach an agreement that doesn't require actually spending these resources -- so the miner can still mine Bitcoin and compensate for the lower-than-expected reward with part of the insurance deposit. If the price doesn't go down enough, the miner just mines Bitcoin, and the insurer gets his deposit back.</summary>
    <published>2019-10-20T19:45:49+00:00</published>
  </entry>
</feed>
