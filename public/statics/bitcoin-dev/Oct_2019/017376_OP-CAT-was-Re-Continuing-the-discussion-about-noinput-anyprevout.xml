<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_CAT was Re: Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-13T21:43:04.672279+00:00</updated>
  <author>
    <name>Andrew Poelstra 2019-10-09 16:56:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_CAT was Re: Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-13T21:43:04.672279+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017376.html" rel="alternate"/>
    <summary>In an email thread started by Ethan Heilman on October 3, 2019, the topic of discussion shifted from NO_INPUT to OP_CAT. Heilman opined that OP_CAT is an important opcode that was removed because of the dire situation with scripts at the time; however, most protocols he has wanted to build on Bitcoin are limited by the inability to concatenate stack values. He suggested that enabling OP_CAT would allow for far smaller transaction sizes in protocols like TumbleBit. Adding to the conversation, Andrew Poelstra, Director of Research at Blockstream, stated that OP_CAT enables the creation of Merkle trees, manipulating signatures, enforcing EC points come from a hash with no known discrete log, and more. He noted that he has cut off many lines of inquiry because they were impossible without this opcode. In conclusion, OP_CAT could unlock numerous possibilities for Bitcoin's development.</summary>
    <published>2019-10-09T16:56:51+00:00</published>
  </entry>
</feed>
