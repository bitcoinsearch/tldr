<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_SECURETHEBAG (supersedes OP_CHECKOUTPUTSVERIFY)</title>
  <updated>2023-06-13T19:12:46.563207+00:00</updated>
  <author>
    <name>Jeremy 2019-10-03 23:22:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_SECURETHEBAG (supersedes OP_CHECKOUTPUTSVERIFY)</title>
    <updated>2023-06-13T19:12:46.563207+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017349.html" rel="alternate"/>
    <summary>Jeremy Rubin has updated the BIP to no longer be based on Taproot but instead based on an OP_NOP upgrade. The BIP defines OP_NOP4 with the same semantics as previously presented, enabling OP_SECURETHEBAG for segwit and bare script, but not P2SH. The prior version of the BIP remains available. An example implementation and tests have also been updated, and a bare OP_SECURETHEBAG script is now standard as it is a common use case. In response to Dmitry Petukhov's feedback, multibyte opcodes can be more cleanly specified once Tapscript is fully prepared with more thorough script parsing improvements. Petukhov suggests using another signature to commit to the whole transaction to eliminate malleability and explains how a control-sig could be used to restrict outputs. He also proposes two additional flags for sighash: NOPREVOUT and NOSCRIPT, which would allow for ANYPREVOUT/NOINPUT and ANYPREVOUTANYSCRIPT, respectively. Petukhov suggests using this mechanism to transfer the right to spend certain UTXOs without actually moving them. Anthony Towns suggests simulating OP_SECURETHEBAG with an ANYPREVOUT (NOINPUT) sighash and calculates a signature for some pubkey P. Both scripts are automatically satisfied when revealed with the correct set of outputs and require no additional witness data. If X is constructed via script instead of hardcoded, the same effect can be achieved with CAT, LEFT, and RIGHT.</summary>
    <published>2019-10-03T23:22:47+00:00</published>
  </entry>
</feed>
