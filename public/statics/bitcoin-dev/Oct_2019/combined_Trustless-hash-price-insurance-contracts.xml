<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Trustless hash-price insurance contracts</title>
  <updated>2023-06-13T22:02:43.429226+00:00</updated>
  <author>
    <name>Lucas H 2019-10-18 22:01:54</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 16:16:57</name>
  </author>
  <author>
    <name>Lucas H 2019-10-20 19:45:49</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 05:03:09</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 20:17:03</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-21 03:34:12</name>
  </author>
  <author>
    <name>JW Weatherman 2019-10-20 16:10:53</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 16:16:57</name>
  </author>
  <author>
    <name>JW Weatherman 2019-10-20 16:10:53</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 05:03:09</name>
  </author>
  <author>
    <name>JW Weatherman 2019-10-20 16:10:53</name>
  </author>
  <author>
    <name>Lucas H 2019-10-20 21:33:24</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 16:16:57</name>
  </author>
  <author>
    <name>JW Weatherman 2019-10-20 14:10:55</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 05:03:09</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 20:17:03</name>
  </author>
  <author>
    <name>Lucas H 2019-10-20 19:45:49</name>
  </author>
  <author>
    <name>Lucas H 2019-10-20 21:33:24</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 14:57:37</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 20:17:03</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-21 03:34:12</name>
  </author>
  <author>
    <name>JW Weatherman 2019-10-20 14:10:55</name>
  </author>
  <author>
    <name>Lucas H 2019-10-18 22:01:54</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 14:57:37</name>
  </author>
  <author>
    <name>Lucas H 2019-10-20 19:45:49</name>
  </author>
  <author>
    <name>Lucas H 2019-10-20 21:33:24</name>
  </author>
  <author>
    <name>Lucas H 2019-10-18 22:01:54</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-20 14:57:37</name>
  </author>
  <author>
    <name>Eric Voskuil 2019-10-21 03:34:12</name>
  </author>
  <author>
    <name>JW Weatherman 2019-10-20 14:10:55</name>
  </author>
  <link href="bitcoin-dev/Oct_2019/017410_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017416_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017421_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017412_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017417_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017418_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017420_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017416_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017420_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017412_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017420_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017422_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017416_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017419_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017412_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017417_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017421_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017422_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017415_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017417_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017418_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017419_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017410_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017415_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017421_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017422_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017410_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017415_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017418_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2019/017419_Trustless-hash-price-insurance-contracts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Trustless hash-price insurance contracts</title>
    <updated>2023-06-13T22:02:43.430230+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017410.html" rel="alternate"/>
    <summary>Bitcoin miner Lucas has proposed a trustless insurance contract that guarantees minimum profitability of mining operations in case the price hash drops too low. The contract is implemented as a Bitcoin transaction with inputs from both the insurer and miner, and an output that involves both parties. The contract includes three conditions for paying it: expiry date, mutual agreement, and pre-image that produces a hash within certain difficulty constraints.However, implementation issues arise due to the inability to do arithmetic comparison with long integers &gt;32bit in the script, so a hacky solution may be needed. The pre-images are chosen by the insurer, and an honesty deposit or other mechanism may be necessary to punish the insurer if they choose a hash that doesn't correspond to any short-length pre-image.The proposed idea is for a hash-price insurance or option for Bitcoin mining operations. If hashing becomes cheap enough, it becomes profitable to spend resources finding a suitable pre-image, rather than mining Bitcoin. Both parties can reach an agreement that doesn't require actually spending these resources. The instrument is for guaranteeing a minimum profitability of the mining operation, and it decreases the costs for potential new entrants on the edge of jumping in.The discussion between Lucas and Eric revolves around the profitability of Bitcoin mining. Lucas suggests that miners can protect themselves from losses due to increasing hash rate by purchasing hash-price insurance contracts. Eric questions the assumption behind this problem statement, as hash rate increase does not necessarily imply unprofitability.Moreover, the existence of attractive insurance contracts would lower the barrier to entry for new competitors in mining and increase Bitcoin's security. The proposal was discussed on the bitcoin-dev mailing list, where the context highlights the factors that affect Bitcoin mining profitability and the potential use of hash-price insurance contracts to mitigate risks.Another proposed idea is for a trustless contract that guarantees minimum profitability of a Bitcoin mining operation in case the hash price drops too low. The proposal involves an insurance deposit where the miner can compensate for a lower-than-expected reward by using part of the deposit, and there are three conditions for paying the insurance. However, implementation issues arise due to the inability to do arithmetic comparison with long integers &gt;32bit in the script, so a hacky solution may be needed. The pre-images are chosen by the insurer, and a "honesty" deposit or other mechanism may be needed to punish the insurer if they choose a hash that doesn't correspond to any short-length pre-image.The discussion also highlights the difference between operational profitability and ROI and explains how the instrument protects against scenarios where ROI becomes negative while P&gt;0. Eric Voskuil questions the assumption behind the problem statement, and Lucas clarifies that the main uncertainty a miner tries to protect against is not the inefficiency of new equipment but how much new mining equipment is being deployed worldwide.The proposed idea is for a hash-price insurance or option for Bitcoin mining operations, which is an instrument for guaranteeing a minimum profitability of the mining operation. The discussion sheds light on the technical feasibility of the contract given the economic assumptions rather than its economic practicality in the present. The bitcoin-dev mailing list recently discussed the potential use of hash-price insurance contracts to mitigate risks and factors that affect Bitcoin mining profitability. Eric Voskuil argues that an increase in hash rate implies an expectation of increasing return on investment, making insuring investments a zero-sum game. However, a trustless insurance contract can guarantee a minimum profitability for a mining operation, which could decrease potential losses for miners and increase Bitcoin's security. The insurer negotiates a contract with the miner where one output is the premium payment to the insurer, and the other output is the insurance. There are three conditions for paying the insurance, and the miner can still mine bitcoin and compensate for the lower-than-expected reward with part of the insurance deposit.Lucas is more interested in the technical feasibility of the contract than its economic practicality in the present. One of the implementation issues is not being able to do arithmetic comparison with long integers &gt;32bit in the script, so implementation of the difficulty requirement needs to be hacky. The proposed insurance contract could potentially lower the barrier to entry for new competitors in mining and make it easier for them to enter the market without risking significant losses.</summary>
    <published>2019-10-18T22:01:54+00:00</published>
  </entry>
</feed>
