<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Trustless hash-price insurance contracts</title>
  <updated>2023-06-13T22:00:41.616440+00:00</updated>
  <author>
    <name>JW Weatherman 2019-10-20 14:10:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Trustless hash-price insurance contracts</title>
    <updated>2023-06-13T22:00:41.616440+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017419.html" rel="alternate"/>
    <summary>A miner investing in new mining equipment risks making a loss if the hash-rate increases more than expected. Eric Voskuil questions this assumption, stating that an increasing hash rate implies an expectation of increasing return on investment. A trustless insurance contract can guarantee a minimum profitability for a mining operation, which would be prudent for a miner to decrease their potential loss by buying insurance for this possibility. This could lower the barrier to entry for new competitors in mining and increase Bitcoin's security. The insurer negotiates a contract with the miner where one output is the premium payment to the insurer, and the other output is the insurance. There are three conditions for paying it. The miner can still mine bitcoin and compensate for the lower-than-expected reward with part of the insurance deposit. Implementation issues include not being able to do arithmetic comparison with long integers &gt;32bit in the script, so implementation of the difficulty requirement needs to be hacky.</summary>
    <published>2019-10-20T14:10:55+00:00</published>
  </entry>
</feed>
