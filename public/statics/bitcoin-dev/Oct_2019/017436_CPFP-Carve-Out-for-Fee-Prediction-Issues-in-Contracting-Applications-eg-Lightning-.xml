<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
  <updated>2023-06-13T15:50:01.021538+00:00</updated>
  <author>
    <name>Johan Torås Halseth 2019-10-25 07:05:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
    <updated>2023-06-13T15:50:01.021538+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017436.html" rel="alternate"/>
    <summary>The discussion pertains to the addition of a carve-out rule in the bitcoind 0.19 release, which affects on-chain contracts such as Lightning commitment transactions. The original rule required at least one non-CSV output per party, but the new rule allows for CPFP-ing the commitment as long as there is an output available without any descendants. Johan Torås Halseth suggests relaxing the current mempool limits to avoid the need for adding a 1 CSV to all outputs and instead proposes a new rule where the last transaction added to a package of dependent transactions in the mempool must have no more than one unconfirmed parent. Matt Corallo explains that this would allow adding a large transaction to each output of the unconfirmed parent, which could potentially exceed the MAX_PACKAGE_VIRTUAL_SIZE limit. Rusty Russell suggests a simplified RBF approach that only allows replacement if the feerate is higher, the new transaction is in the first 4Msipa of the mempool, and the old transaction isn't.</summary>
    <published>2019-10-25T07:05:15+00:00</published>
  </entry>
</feed>
