<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin Archaeology</title>
  <updated>2023-06-14T16:17:32.928715+00:00</updated>
  <author>
    <name>Dan Bryant 2020-11-15 05:41:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin Archaeology</title>
    <updated>2023-06-14T16:17:32.928715+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-November/018271.html" rel="alternate"/>
    <summary>The author of the post has successfully compiled Bitcoin versions 0.1.0 to 0.3.13, after which the compiler was changed. They plan to refine their work and post binary builds on the repository. The IRC bot might be disabled to prevent spamming the `#bitcoin` IRC channel. The author mentions a patch process that will make it straightforward. The author plans to stop at version 0.8.6 since official builds start from there. In an earlier post, the author detailed how they built old OpenSSL releases in MSYS/MinGW v1.0.11. The author attempted to recreate the vintage Oct 2009 toolchains used by Satoshi. Using VMs, the author found that most things built okay except for OpenSSL, which failed due to issues in mk1mf.pl. The author explored different options such as finding out how Satoshi did the MinGW OpenSSL build, trying to do the OpenSSL build through Cygwin, or using Msys2 with later versions of perl and libc. The author realized that reproducing these old builds is important, but it may also just be their OCD.</summary>
    <published>2020-11-15T05:41:33+00:00</published>
  </entry>
</feed>
