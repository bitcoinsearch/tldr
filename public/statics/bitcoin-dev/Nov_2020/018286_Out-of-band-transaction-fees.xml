<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Out-of-band transaction fees</title>
  <updated>2023-06-14T16:22:17.032698+00:00</updated>
  <author>
    <name>Sebastian Geisler 2020-11-30 23:03:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Out-of-band transaction fees</title>
    <updated>2023-06-14T16:22:17.032698+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-November/018286.html" rel="alternate"/>
    <summary>The possibility of out-of-band transaction fee payments is a well-known fact, but the potential use cases have seen little interest. One such use case is sending UTXOs "intact" which could be transferred as a whole without introducing taint. Out-of-band transaction "accelerators" already exist and taking fee payment out-of-band can not be effectively prevented. However, any such proposal will probably have slight centralizing effects. Therefore, having a standard for it is preferable to having every pool implement their own API making it harder for small pools to get into the market. The central questions are how to build such an out-of-band "transaction bounty" system, how to standardize it, and how can the centralizing effects from it be mitigated. Each service would need to announce which means of payment it supports and allow users and miners to choose when paying/redeeming fees. Miners that included a transaction need a way to authenticate when claiming the bounty. One possibility would be to include a unique public key in the coinbase scriptsig after the height push, which could be used to claim any bounties after a certain confirmation threshold is met. This could avoid lazy implementations leading to dangerous precedents.</summary>
    <published>2020-11-30T23:03:06+00:00</published>
  </entry>
</feed>
