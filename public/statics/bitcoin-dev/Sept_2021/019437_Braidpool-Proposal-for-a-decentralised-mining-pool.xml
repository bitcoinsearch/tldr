<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Braidpool: Proposal for a decentralised mining pool</title>
  <updated>2023-06-15T01:18:01.876585+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-09-11 01:09:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Braidpool: Proposal for a decentralised mining pool</title>
    <updated>2023-06-15T01:18:01.876585+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-September/019437.html" rel="alternate"/>
    <summary>In the email exchange, Filippo is raising questions about the proposal that every share can reference more than one previous share. He argues that a rogue miner would have an incentive to not reference any shares from other miners so they won't have to share the reward with anyone. This could make the pool unprofitable for good miners. He also expresses doubts about how conflicts between different valid states will be resolved. The two methods he suggests are using the longest chain or the one with more work, but both present issues. However, the proposed attack assumes that a single hasher refers only to shares that the hasher itself makes. A good hasher will refer to its own shares as well as shares of the "bad" hasher. Honest hashers will be based on the share that refers to the most total work. Therefore, even if a bad hasher creates many shares with low difficulty and attaches them to the longest chain, if someone else finds a block and gets rewarded, they will attach the funded block to the share that refers to the most total work.</summary>
    <published>2021-09-11T01:09:30+00:00</published>
  </entry>
</feed>
