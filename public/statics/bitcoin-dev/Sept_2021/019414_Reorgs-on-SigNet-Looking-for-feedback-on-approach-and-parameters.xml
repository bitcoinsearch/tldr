<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reorgs on SigNet - Looking for feedback on approach and parameters</title>
  <updated>2023-06-15T01:32:36.120079+00:00</updated>
  <author>
    <name>Jeremy 2021-09-07 16:44:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reorgs on SigNet - Looking for feedback on approach and parameters</title>
    <updated>2023-06-15T01:32:36.120079+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-September/019414.html" rel="alternate"/>
    <summary>The developers of SigNet, a Bitcoin test network, are seeking feedback on implementing support for planned chain reorganizations. The team is considering two scenarios for implementation within the current SigNet miner script, both of which would trigger automatically in a fixed block interval. The first scenario simulates a race between two chains competing for D blocks, while the second simulates a chain rollback where the top D blocks get replaced by a chain that outgrows the earlier branch. To allow users to opt-out of reorgs in case they want to remain unaffected, the team proposes setting a 'to-be-reorged' version bit flag on the blocks that won't end up in the most work chain. Node operators could choose not to accept these SigNet blocks via a configuration argument.The reorg depth D is proposed to be deterministically random between a minimum and a maximum based on the block hash or the nonce of the last block before the reorg, allowing reorg-handling tests and external tools to calculate the expected reorg depth. The frequency of reorgs, as well as their depth, is dependent on user needs. While a short reorg interval allows developers in all time zones to be awake during one or two reorgs per day, too frequent reorgs could hinder other SigNet users. The team plans to implement Scenario 1, the race between two chains, first and set up a public test-SigNet along with a faucet, block explorer, and a block tree visualization. If there is interest, chain rollbacks can be implemented, and future work will add the possibility to include conflicting transactions in the two branches.</summary>
    <published>2021-09-07T16:44:17+00:00</published>
  </entry>
</feed>
