<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Human readable checksum (verification code) to avoid errors on BTC public addresses</title>
  <updated>2023-06-15T01:07:36.746278+00:00</updated>
  <author>
    <name>ts 2021-09-03 05:08:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Human readable checksum (verification code) to avoid errors on BTC public addresses</title>
    <updated>2023-06-15T01:07:36.746278+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-September/019397.html" rel="alternate"/>
    <summary>In this email conversation, Marek Palatinus and Pieter Wuille express their disagreement with a proposal to add a verification code to Bitcoin addresses. The proposal aims to reduce the risk of sending funds to the wrong address and make the transaction process more user-friendly, especially for inexperienced users. However, Marek and Pieter argue that such a code is unnecessary because Bitcoin addresses already have built-in checksums to protect against random typos. They suggest that comparing a few characters of the address is just as good as using an external checksum.The proposal's author responds by suggesting that a verification code could be implemented in a way that does not worsen the current system. For example, the code could be made from specific characters of the address instead of a checksum. By showing these characters to the user separately and in a bigger font, he believes that users will be encouraged to verify all of them. He also acknowledges the convenience of copy-pasting Bitcoin addresses compared to SEPA/wire transfer fields.Pieter further explains that a visual/drawing/color coding checksum would be more effective than an additional text-based checksum, but the difficulty of getting the ecosystem to adopt such changes should not be disregarded. In response, the proposal's author suggests that no fundamental changes are needed, only an agreement or recommendation on which algorithm for the code generation should be used. Once this is done, developers of wallets and exchanges can implement the feature as they see fit. Overall, the proposal's author believes that such a verification code would improve the user experience and reduce errors.</summary>
    <published>2021-09-03T05:08:42+00:00</published>
  </entry>
</feed>
