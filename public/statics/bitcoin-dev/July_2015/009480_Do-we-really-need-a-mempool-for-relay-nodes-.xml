<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Do we really need a mempool? (for relay nodes)</title>
  <updated>2023-06-10T02:58:02.172315+00:00</updated>
  <author>
    <name>Patrick Strateman 2015-07-18 19:46:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Do we really need a mempool? (for relay nodes)</title>
    <updated>2023-06-10T02:58:02.172315+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009480.html" rel="alternate"/>
    <summary>In a post on the Bitcoin-dev mailing list in 2015, Peter Todd discussed whether relay nodes need to keep a record of the transactions they have relayed. He concluded that they do not strictly need to, as long as some mechanism is in place to avoid DoS issues. To mitigate these concerns, there should be a per-UTXO limit on bandwidth relayed, which could be accomplished by maintaining a record of weighted fee and fee/KB. This would provide a clear and simple upper limit of lifetime bandwidth. Additionally, bandwidth moment-to-moment could be limited by asking peers for highest fee/KB transactions they advertise first, stopping when the bandwidth limit is reached. While relay nodes do not require a mempool, wallet nodes can use it for fee estimation in addition to looking at past blocks. Todd suggests that IsStandard() could be removed entirely with an increasingly expensive "replacement" policy, relying on it alone to provide anti-DoS measures. Miners would still want to have a mempool, but simplifying the codebase for relaying could make it easier for them. This approach could even be used for a scalable general-purpose messaging network paid by coin ownership if the UTXO set is split up, and some kind of expiration over time policy is implemented.</summary>
    <published>2015-07-18T19:46:01+00:00</published>
  </entry>
</feed>
