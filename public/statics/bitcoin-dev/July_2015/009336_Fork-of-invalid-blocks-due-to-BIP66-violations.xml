<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fork of invalid blocks due to BIP66 violations</title>
  <updated>2023-06-10T02:06:42.933684+00:00</updated>
  <author>
    <name>Justus Ranvier 2015-07-04 15:18:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fork of invalid blocks due to BIP66 violations</title>
    <updated>2023-06-10T02:06:42.933684+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009336.html" rel="alternate"/>
    <summary>Peter Todd, a Bitcoin developer, pointed out that Simplified Payment Verification (SPV) means relying on others to check the rules. Although bitcoinj could have and should have checked BIP66 soft-fork rules, there are no straightforward solutions to this problem in general. However, Justus Ranvier, from the Open Bitcoin Privacy Project, suggests that validating full nodes could broadcast proofs to SPV nodes explaining why the branch with the most proof of work is invalid. Proving the non-existence of a particular transaction in a specific block could be simplified by ordering transactions in the merkle tree by their hashes. In such cases, only a few nodes would need to show that the transaction was not in the expected location. The only instance where producing such proofs would be complicated is when a block is invalid since it contains a transaction that references an output that does not exist.</summary>
    <published>2015-07-04T15:18:19+00:00</published>
  </entry>
</feed>
