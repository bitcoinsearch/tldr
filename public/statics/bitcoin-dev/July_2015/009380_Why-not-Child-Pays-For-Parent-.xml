<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why not Child-Pays-For-Parent?</title>
  <updated>2023-06-10T02:17:40.859876+00:00</updated>
  <author>
    <name>Jeff Garzik 2015-07-10 16:31:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why not Child-Pays-For-Parent?</title>
    <updated>2023-06-10T02:17:40.859876+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009380.html" rel="alternate"/>
    <summary>The email thread discusses the issue of reachability in Bitcoin transactions. The first transaction sent out on the network, TX_a, may have insufficient fee to get mined and may not have even reached all miners. Simply sending out a second transaction, TX_b, with added fee does not guarantee that nodes suddenly have TX_a, which they may have ignored or dropped before. The discussion then moves on to the topic of child pays for parent (CPFP) transactions and how to determine the appropriate fee for such transactions. The highest fee should be chosen, and compound transactions can be created with CPFP. A 2-pass system could be used to efficiently process transactions based on their BTC per byte value and whether their parents are already in the pool or a previous block.</summary>
    <published>2015-07-10T16:31:01+00:00</published>
  </entry>
</feed>
