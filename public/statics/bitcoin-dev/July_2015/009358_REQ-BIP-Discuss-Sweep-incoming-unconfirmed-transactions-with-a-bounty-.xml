<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>REQ BIP # / Discuss - Sweep incoming unconfirmed transactions with a bounty.</title>
  <updated>2023-06-10T01:59:58.577500+00:00</updated>
  <author>
    <name>Micha Bailey 2015-07-06 04:20:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>REQ BIP # / Discuss - Sweep incoming unconfirmed transactions with a bounty.</title>
    <updated>2023-06-10T01:59:58.577500+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009358.html" rel="alternate"/>
    <summary>The discussion on Bitcoin development mailing list is about child pays for parent (CPFP) and Replace-by-fee (RBF). CPFP is a transaction selection policy in which the high fee from a child transaction is used to pay for its unconfirmed parent's fee. A pull request, #1647, has been created to implement CPFP but it only addresses miner policy. Matt Whitlock argues that wallets also need to offer users a way to goose up incoming transactions for CPFP to be effective. The sweep transaction UI issue is out of scope for the BIP proposal. Dan Bryant suggests talking with wallet authors to get them interested in this feature enhancement when PR1647 commits. The risks involved if CPFP is not enabled but the sweep tx enters the mempool are discussed and how miners may take the high fee "children" but ignore the low fee "parents," leading to potential issues. Peter Todd's article outlines the two forms of RBF: the countermeasure form and the anyonecanpay form. In the countermeasure form, the spender gives the receiver a partially signed "countermeasure" transaction with juiced-up fees. In the anyonecanpay form, the spender signs the transaction with ANYONECANPAY bit allowing the receiver to add fees at will. It is clarified that a transaction that is not completely signed won't be relayed, correct, and it cannot be mined. Lastly, Dan Bryant states he will try to clean up the draft BIP to include CPFP dependencies and RBF capabilities and will outline his thoughts in a doc.</summary>
    <published>2015-07-06T04:20:30+00:00</published>
  </entry>
</feed>
