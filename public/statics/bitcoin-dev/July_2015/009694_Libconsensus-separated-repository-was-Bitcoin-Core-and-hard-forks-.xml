<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libconsensus separated repository (was Bitcoin Core and hard forks)</title>
  <updated>2023-06-10T03:37:22.555337+00:00</updated>
  <author>
    <name>Jorge Timón 2015-07-28 10:09:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libconsensus separated repository (was Bitcoin Core and hard forks)</title>
    <updated>2023-06-10T03:37:22.555337+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009694.html" rel="alternate"/>
    <summary>In a conversation between Wladimir J. van der Laan and Jorge Timón via bitcoin-dev, it was discussed whether Bitcoin Core would use libconsensus as opposed to just having a subtree/subrepository, like with libsecp256k1. Wladimir stated that he didn't see any reason why Bitcoin Core wouldn't use the consensus library. However, he also mentioned that refactoring the code to load to a more complete consensus library could result in code that is not bug-for-bug compatible with previous versions, introducing fork risk. Wladimir noted that if this could be avoided, he was all for the change. Moving libconsensus to a separate repository as a subtree/subrepository of Bitcoin Core was listed as one of the steps needed before implementing the consensus library. This step does not require Bitcoin Core to use the API, as a subtree is enough at first. Wladimir emphasized that code review capacity was still their greatest bottleneck, but code separations could help with this issue. He acknowledged that many people had enough knowledge to review the qt or even policy parts than there are people able to review consensus changes.</summary>
    <published>2015-07-28T10:09:22+00:00</published>
  </entry>
</feed>
