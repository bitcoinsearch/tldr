<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP draft: Hardfork bit</title>
  <updated>2023-06-10T03:50:55.202831+00:00</updated>
  <author>
    <name>Tier Nolan 2015-07-23 17:59:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP draft: Hardfork bit</title>
    <updated>2023-06-10T03:50:55.202831+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009589.html" rel="alternate"/>
    <summary>The discussion revolves around the issue of hardforks in Bitcoin. It is mentioned that full nodes and SPV nodes may not be aware of a hardfork deployment and unknowingly accept devalued legacy tokens. The change itself is a hard fork, therefore clients must be updated to get the benefits. Another scenario discussed is when the original consensus rules are also valid under new consensus rules, users following the new chain may unexpectedly reorg back to the original chain and lose money. To avoid this, flag block is constructed that must have the hardfork bit setting to 1, include a short predetermined unique description, and follow other rules required by the hardfork. Nodes with the original consensus rules must reject a flag block, while nodes with new consensus rules must reject a block if it is not a flag block. When a flag block is found on the network, full nodes and SPV nodes should look into its coinbase and alert their users or stop accepting incoming transactions if it is an unknown hardfork. If the rule was that hard forks only take effect 100 blocks after the flag block, then this problem is eliminated. However, emergency hard forks may still have to take effect immediately.</summary>
    <published>2015-07-23T17:59:40+00:00</published>
  </entry>
</feed>
