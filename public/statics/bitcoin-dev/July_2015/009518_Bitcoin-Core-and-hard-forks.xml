<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin Core and hard forks</title>
  <updated>2023-06-10T03:20:48.329554+00:00</updated>
  <author>
    <name>Milly Bitcoin 2015-07-22 17:32:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin Core and hard forks</title>
    <updated>2023-06-10T03:20:48.329554+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009518.html" rel="alternate"/>
    <summary>In the world of coding and programming, default in case of controversy is no change. This means that no controversial changes ever get implemented via this process, leaving others to hard fork the code and eventually make this process irrelevant. The need for close to 100% agreement makes the irrelevance come as a step function, which will manifest itself in a rather disruptive manner. The question at hand is whether hard-forking disruption is worse than coming up with some kind of process to handle controversial changes. It is important to consider the impact and consequences of both options before making a decision. If the default of no change remains, it is likely that the process will become irrelevant and lead to hard-forking, causing disruption and potentially damaging consequences. On the other hand, if a process is put in place to handle controversial changes, it may take time and effort to develop and implement. However, it could ultimately prevent hard-forking and disruption down the line. It is crucial to weigh the pros and cons of each option and determine the best course of action to take.</summary>
    <published>2015-07-22T17:32:00+00:00</published>
  </entry>
</feed>
