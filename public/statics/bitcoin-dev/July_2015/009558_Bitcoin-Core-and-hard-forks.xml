<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin Core and hard forks</title>
  <updated>2023-06-10T03:17:28.603075+00:00</updated>
  <author>
    <name>Ross Nicoll 2015-07-23 07:24:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin Core and hard forks</title>
    <updated>2023-06-10T03:17:28.603075+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009558.html" rel="alternate"/>
    <summary>The discussion in this context is centered around the possibility of changing consensus arguments in the codebase without forking an existing blockchain. This would allow users to choose between different configurations at runtime, rather than having to use separate software versions. The proposal has been met with some skepticism, as implementing new consensus rules is not a trivial task and requires significant developer time. Additionally, unless a fork has overwhelming support, blockchains cannot guarantee irreversibility of transactions, which undermines their entire purpose. However, the idea of a modularized codebase that supports dynamic linking is seen as a potential solution to the problem of Core being the consensus/policy gatekeeper. Implementing this would require loading values from disk rather than hard-coding them, which is a straightforward extension to the code. An example of what this could look like can be found at https://github.com/rnicoll/dogecoin/commit/949b1ccd88ff13c74a3c1a7b9faa7f36c1085904.</summary>
    <published>2015-07-23T07:24:48+00:00</published>
  </entry>
</feed>
