<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fork of invalid blocks due to BIP66 violations</title>
  <updated>2023-06-10T02:07:00.492359+00:00</updated>
  <author>
    <name>Justus Ranvier 2015-07-04 16:01:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fork of invalid blocks due to BIP66 violations</title>
    <updated>2023-06-10T02:07:00.492359+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009339.html" rel="alternate"/>
    <summary>In a discussion, Tier Nolan suggests that UTXO set commitments can handle the issue of proving an entryÂ doesn't exist. However, the reliability of committed UTXO sets arises when we ask how to determine if they are valid. It is reasonable to assume that if a majority of hashing power is willing to extend an invalid branch, it would be willing to commit an invalid UTXO set as well. Therefore, in order for the committed UTXO set to be reliable, it should contain at a source block reference for each item in the set which would enable fraud proof to show that the set contains invalid entries. The discussion further progresses towards how this information should be committed in an extra commitment produced by the miner instead of changing the transaction format. One of the issues raised is the need to prove these commitments too, which can be easily solved by sorting the items in the proof tree.</summary>
    <published>2015-07-04T16:01:37+00:00</published>
  </entry>
</feed>
