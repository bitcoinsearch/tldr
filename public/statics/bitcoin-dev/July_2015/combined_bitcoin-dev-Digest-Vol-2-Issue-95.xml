<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - bitcoin-dev Digest, Vol 2, Issue 95</title>
  <updated>2023-06-10T04:00:23.812326+00:00</updated>
  <author>
    <name>Dave Scotese 2015-07-24 16:32:34</name>
  </author>
  <author>
    <name>Dave Scotese 2015-07-24 16:32:34</name>
  </author>
  <author>
    <name>Dave Scotese 2015-07-24 16:32:34</name>
  </author>
  <link href="bitcoin-dev/July_2015/009661_bitcoin-dev-Digest-Vol-2-Issue-95.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009661_bitcoin-dev-Digest-Vol-2-Issue-95.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009661_bitcoin-dev-Digest-Vol-2-Issue-95.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - bitcoin-dev Digest, Vol 2, Issue 95</title>
    <updated>2023-06-10T04:00:23.812326+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009661.html" rel="alternate"/>
    <summary>The suggestion is to display a percentage rather than a meaningless number for transactions by using the double spend improbability or "confidence" over a certain number of blocks. The code can determine how many blocks at the current depth of the transaction were orphaned, divide that by the total number of blocks solved in that time frame, and use that as the historical number (H). To calculate the "51% attack" number (A), it can be assumed that a bad actor has 51% of hashing power for 24 hours, and the chance of the block holding the transaction being orphaned can be calculated. The resulting report would then display "# confirmations" as "99.44% confidence" using [100% - max(H,A)].</summary>
    <published>2015-07-24T16:32:34+00:00</published>
  </entry>
</feed>
