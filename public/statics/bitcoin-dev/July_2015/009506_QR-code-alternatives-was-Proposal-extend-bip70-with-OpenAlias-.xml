<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>QR code alternatives (was: Proposal: extend bip70 with OpenAlias)</title>
  <updated>2023-06-10T02:59:21.707930+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2015-07-21 14:58:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>QR code alternatives (was: Proposal: extend bip70 with OpenAlias)</title>
    <updated>2023-06-10T02:59:21.707930+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009506.html" rel="alternate"/>
    <summary>In a message from July 20, 2015, Mike Hearn proposed an idea for generating QR codes for Bitcoin payment requests. He suggested using a single payment address with no merge avoidance tricks and provided an example of what such a QR code could look like. However, this method would require text mode and waste bytes at the front for the URI type. To avoid this issue, it was suggested that assuming the payment request is a single standard output + amount would cover 99% of cases and generate a serialized bip70 PR from the parameters found in the URI. The string would then be signed, and the signature added to the URI. An example was provided, including a timestamp, duration of validity, domain name of the signer, and signature. This approach saves a few bits by expressing the duration of validity as one week. The resulting QR code can be scanned with a phone.</summary>
    <published>2015-07-21T14:58:39+00:00</published>
  </entry>
</feed>
