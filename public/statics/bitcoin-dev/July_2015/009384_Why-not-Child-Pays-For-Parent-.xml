<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why not Child-Pays-For-Parent?</title>
  <updated>2023-06-10T02:16:11.639474+00:00</updated>
  <author>
    <name>Alex Morcos 2015-07-10 17:51:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why not Child-Pays-For-Parent?</title>
    <updated>2023-06-10T02:16:11.639474+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009384.html" rel="alternate"/>
    <summary>The email conversation between Jeff Garzik and Justus Ranvier on the bitcoin-dev mailing list discusses the challenges of merging Child Pays For Parent (CPFP) in its current implementation. Garzik argues that CPFP does not address reachability, as nodes may have ignored or dropped the first transaction (TX_a) sent out on the network due to insufficient fees. Simply sending out a second transaction (TX_b) with added fees does not guarantee that nodes suddenly have TX_a. Ranvier, on the other hand, points out that CPFP is initiated by the recipient of the parent transaction, so they must have a copy of the parent transaction which can broadcast at the same time as the child transaction. He believes that if the child reaches a CPFP miner, then presumably the parent transaction made it as well, allowing both transactions to be mined simultaneously. Overall, the discussion highlights one of the challenges in implementing CPFP and the need for further development to improve its efficiency in certain situations.</summary>
    <published>2015-07-10T17:51:00+00:00</published>
  </entry>
</feed>
