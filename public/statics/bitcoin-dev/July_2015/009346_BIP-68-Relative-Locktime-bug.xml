<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BIP 68 (Relative Locktime) bug</title>
  <updated>2023-05-19T20:53:28.645474+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-07-05 16:21:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BIP 68 (Relative Locktime) bug</title>
    <updated>2023-05-19T20:53:28.645474+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009346.html" rel="alternate"/>
    <summary>A discussion was held among developers on the bitcoin-dev mailing list regarding locktime in transactions. The original poster suggested that adding a locktime to transactions may help against fee sniping, even in transactions with dependencies that can be mined at the same time. Another developer asked for an example of when enforced locktime would be needed in transactions with unconfirmed inputs. The conversation then shifted to the use of nSequence to specify relative locktime in transactions. It was noted that nSequence also conditions the transaction-level locktime, which prevents a transaction from having an effective nLocktime without requiring at least one of its inputs to be mined ahead of its parent. The proposed fix is to shift the semantics of nSequence so that MAX_INT - 1 specifies 0 relative locktime instead of 1, while preserving the semantics of transactions created with the specific nSequence value of MAX_INT - 1. This discussion demonstrates ongoing efforts by bitcoin developers to improve the functionality and security of the cryptocurrency's transaction process.</summary>
    <published>2015-07-05T16:21:44+00:00</published>
  </entry>
</feed>
