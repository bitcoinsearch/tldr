<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin Guarantees Strong, not Eventual, Consistency.</title>
  <updated>2023-06-11T04:14:51.280350+00:00</updated>
  <author>
    <name>Emin GÃ¼n Sirer 2016-03-02 16:56:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin Guarantees Strong, not Eventual, Consistency.</title>
    <updated>2023-06-11T04:14:51.280350+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012498.html" rel="alternate"/>
    <summary>The concept of eventual consistency is used in distributed computing to guarantee high availability by ensuring that all accesses to a given data item will eventually return its last updated value if no new updates are made. The definition does not require a system to have a final state, as most practical database systems operate continuously without one. Regarding Bitcoin, the reference client's listreceivedbyaddress returns the number of confirmations by default, and getbalance and getreceivedbyaddress take a number of confirmations as an argument to shield the application from suffix reorgs. While there may be a difference between 0 probability and epsilon probability, practically, little difference exists due to hardware errors. Therefore, one can select an omega such that the chance of processor mis-execution is higher than observing a reorganization. Finally, Bitcoin provides probabilistic accumulative probability, not perfect probability, which drops exponentially but is not exactly 0, similar to hash collisions, on which Bitcoin relies for its correctness.</summary>
    <published>2016-03-02T16:56:28+00:00</published>
  </entry>
</feed>
