<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pruning in the reference client: ultraprune mode</title>
  <updated>2023-05-19T03:55:21.685560+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-07-06 17:19:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pruning in the reference client: ultraprune mode</title>
    <updated>2023-05-19T03:55:21.685560+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-July/001648.html" rel="alternate"/>
    <summary>Pieter Wuille's performance numbers are considered conservative due to the reference client wasting time in redundant serialization and hashing operations. This information is supported by profiles on ultraprune, which shows that this is the major time sink. Once this issue is resolved, the system should perform significantly faster. It is important to note that this issue is not directly related to recent proposals for pruning that involve an alt chain with an index of unspent coins and addresses merged mined with the main chain. However, it could be a step towards such a system. Replacing the BDB indexing in ultraprune with a hash committed tree structure, whose root is committed in the blockchain, would result in a txout commitment scheme. Ultraprune handles most of the structural work for such a scheme. The remaining differences are mostly related to storage.</summary>
    <published>2012-07-06T17:19:59+00:00</published>
  </entry>
</feed>
