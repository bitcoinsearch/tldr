<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Coinbase script parse failures</title>
  <updated>2023-05-19T04:04:03.496457+00:00</updated>
  <author>
    <name>Matt Corallo 2012-07-23 16:11:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Coinbase script parse failures</title>
    <updated>2023-05-19T04:04:03.496457+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-July/001725.html" rel="alternate"/>
    <summary>A script engine for pynode, a python script which tokenizes the data stream of a scriptPubKey and scriptSig without execution, was written by Jeff Garzik. In testing the engine, he found over 8,000 tokenization failures in the blockchain, with 100% of those being in coinbase transactions' scriptSig. The scripts used to generate this can be found on GitHub. Matt mentioned on IRC that even though sigops that appear in coinbase transactions are not executed and required to be well-formed, they are still counted, which could be an interesting attack if a miner could put a byte in there equivalent to OP_CHECKSIG since sigops in the coinbase scriptSig are not counted during mining. However, Luke pointed out that the content of coinbase scriptSigs is always pushed properly by default, and modifying the code requires researching it thoroughly; if it breaks, it's their fault. Jeff Garzik provided a data dump of invalid scripts he found in the blockchain, some of which are included in his post.</summary>
    <published>2012-07-23T16:11:43+00:00</published>
  </entry>
</feed>
