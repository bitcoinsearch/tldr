<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Currency/exchange rate information API</title>
  <updated>2023-06-11T21:59:54.537360+00:00</updated>
  <author>
    <name>Luke Dashjr 2017-03-06 22:14:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Currency/exchange rate information API</title>
    <updated>2023-06-11T21:59:54.537360+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013678.html" rel="alternate"/>
    <summary>In a discussion on March 6, 2017, Tim Ruffing suggested that having the exchange rate at the time of payment would be useful but there is currently no query that tells the server to give the value closest to timestamp t. While clients can download and keep a large part of history and extract the information on their own, not all clients want to do that and they don't know in advance the bounds that they must query. It could be considered a privacy leak to request only specific timestamps, and some wallets lack basic privacy. To address the bounds issue, Ruffing specified that when from/to don't have an exact record, the previous/next (respectively) is provided. The client or server cannot specify granularity in the current draft, and if the client wants one value per day for an entire year, it has to perform many requests or download and process a very large response. The "timedelta" field solves this problem by allowing the client to put 86400 if they want one value per day. Ruffing also suggested that the type field should have some precisely defined values (e.g. low/high/open/close/typical) in addition to allowing for arbitrary user-defined values. Currently, it's not clear what "low" means for a timestamp (as opposed to a time span). It's suggested that the server should specify this in the description of the given currency-pair feed.</summary>
    <published>2017-03-06T22:14:47+00:00</published>
  </entry>
</feed>
