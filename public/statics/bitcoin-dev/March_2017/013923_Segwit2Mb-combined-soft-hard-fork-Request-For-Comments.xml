<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Segwit2Mb - combined soft/hard fork - Request For	Comments</title>
  <updated>2023-05-20T01:25:31.787239+00:00</updated>
  <author>
    <name>Matt Corallo 2017-03-31 21:18:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Segwit2Mb - combined soft/hard fork - Request For	Comments</title>
    <updated>2023-05-20T01:25:31.787239+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013923.html" rel="alternate"/>
    <summary>In a recent email to the Bitcoin-dev mailing list, Sergio Demian Lerner proposed Segwit2Mb as a way to merge into Bitcoin a minimal patch that aims to untangle the current conflict between different political positions regarding segwit activation vs. an increase of the on-chain blockchain space through a standard block size increase. The proposal combines segwit as it is today in Bitcoin 0.14+ with a 2MB block size hard-fork activated ONLY if segwit activates (95% of miners signaling), but at a fixed future date. The sole objective of this proposal is to re-unite the Bitcoin community and avoid a cryptocurrency split. However, Matt Corallo responded to Lerner's proposal, stating that it appears to ignore the last two years of Bitcoin hardfork research and understanding, recycling instead BIP 102 from 2015. Corallo suggested that there are many proposals which have pushed the state of hard fork research much further since then. In terms of pure technical changes, Corallo suggested several points such as utilizing the "hard fork signaling bit" in the nVersion of the block, fixing the n**2 sighash and FindAndDelete runtime and memory usage issues by either limiting non-SegWit transactions in some way or fix them by utilizing the new sighash type which many wallets and projects have already implemented for SegWit in the spending of non-SegWit outputs, and providing additional commitments at the top of the merkle root.Corallo also mentioned that Lerner's parameters pose significant risk to the Bitcoin ecosystem broadly, and that activating a hard fork with less than 18/24 months (and even then...) from a fully-audited and supported release of full node software to activation date poses significant risks to many large software projects and users. He suggested having the hard fork activate technical changes, and then slowly increasing the block size over the following several years keeps things nice and continuous and also keeps us from having to revisit ye old blocksize debate again six months after activation. Finally, Corallo said that there aren't many great technical solutions to some of these issues, but it's something that needs to be incredibly carefully considered before betting the continued security of Bitcoin on exponential on-chain growth, something which we have historically never seen.Sergio Demian Lerner has released a proof-of-concept code for a combined soft-fork that would activate SegWit and a 2MB block size increase within the Bitcoin network. The patch was built by forking the master branch of Bitcoin Core, mixing a few lines of code from Jeff Garzik's BIP102, and defining a second versionbits activation bit (bit 2) for the combined activation. The hard-fork is conditional to 95% of the hashing power approving the segwit2mb soft-fork and the segwit soft-fork being activated. The tentative lock-in and hard-fork dates are April 29th, 2017 and August 29th, 2017 for bit 2 signaling start time and timeout respectively, with a hard-fork time of December 14th, 2017. If segwit2mb locks-in, before hard-fork occurs all bitcoin nodes should be updated to a Segwit2Mb enabled node to prevent them being forked-away in a chain with almost no hashing-power. Lerner suggests that the community discuss the hard-fork date and delay it if there is a real need to.</summary>
    <published>2017-03-31T21:18:25+00:00</published>
  </entry>
</feed>
