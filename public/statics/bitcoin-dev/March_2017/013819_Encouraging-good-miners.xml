<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Encouraging good miners</title>
  <updated>2023-06-11T22:37:33.506453+00:00</updated>
  <author>
    <name>Stian Ellingsen 2017-03-27 17:50:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Encouraging good miners</title>
    <updated>2023-06-11T22:37:33.506453+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013819.html" rel="alternate"/>
    <summary>In an email to the bitcoin-dev mailing list, a new proposal was suggested that would add a preference for mined blocks to have more transactions than others. This would apply when two blocks of the same height are found and the first good block mined would be orphaned if it had fewer transactions than another. The proposal would incentivize miners to include tiny junk transactions in their blocks, leaving larger, more space-efficient transactions in the mempool. This would increase the incentive for full blocks because a miner thinking the faster propagation of a smaller block will win him the reward, but that would no longer be a good assumption. However, some miners could still attack a chain by mining small or empty blocks. "Good" miners should build upon the block with a set of transactions more similar to what they themselves would include based on their mempool at the time. However, miners don't currently have an incentive to do so. Instead, they may be better off building upon the block that leaves the most valuable transactions in the mempool, e.g. a small or empty block, and maybe leave some valuable transactions in the mempool for the next miner. This issue could possibly be addressed by a soft-fork that requires miners to pay a portion of their fees to future miners. A link to a related article is provided as reference.</summary>
    <published>2017-03-27T17:50:12+00:00</published>
  </entry>
</feed>
