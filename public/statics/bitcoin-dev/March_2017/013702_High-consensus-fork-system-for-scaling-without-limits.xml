<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>High consensus fork system for scaling without limits</title>
  <updated>2023-05-20T01:02:41.497898+00:00</updated>
  <author>
    <name>Andrew Chow 2017-03-08 21:21:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>High consensus fork system for scaling without limits</title>
    <updated>2023-05-20T01:02:41.498900+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013702.html" rel="alternate"/>
    <summary>The email thread discusses a BIP proposal that allows users to signal readiness by publishing an absolute upper bound, EB. The miners can also signal readiness by publishing their own EB in a block. If 95% of blocks within a one month signalling period contain an EB greater than the previous consensus EB, a fork date is triggered at 6 months using the smallest 5th percentile EB published. After 6 months, any users which already have the new EB or greater begin actually using it to validate transactions. Users use the EB or the latest 95% consensus triggered value - whichever is less. Users are free to safely set very high EB levels, based on their current hardware and network speeds. These EB levels don't cause those users to accept invalid blocks ever. If a smaller block size is needed, a reduced size can also be published and agreed upon by both users and miners using the same mechanism, but the largest 5th percentile is used. Any new node can simply follow these rules to validate all the blocks in a chain... even if the sizes changes a lot (at most twice per year). In order to implement the system, some sort of versioning system is used to ensure that the two networks (old and new) are incompatible, and this would require a soft fork beforehand. It would be in the best interests of major exchanges and users to publicly announce their EB's. 'Scaling' includes a lot more than just the block size, there is much more to scaling than just increasing the block size.</summary>
    <published>2017-03-08T21:21:15+00:00</published>
  </entry>
</feed>
