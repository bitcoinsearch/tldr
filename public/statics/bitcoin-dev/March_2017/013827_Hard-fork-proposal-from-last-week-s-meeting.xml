<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hard fork proposal from last week's meeting</title>
  <updated>2023-05-20T01:17:22.956649+00:00</updated>
  <author>
    <name>Johnson Lau 2017-03-28 17:34:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hard fork proposal from last week's meeting</title>
    <updated>2023-05-20T01:17:22.956649+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013827.html" rel="alternate"/>
    <summary>A proposal for a hard fork approach to prepare for the block size limit has been suggested. The proposal includes removing the 1MB limit at the next block halving in spring 2020 and only limiting the block size to 32MiB which is the maximum size the current p2p protocol allows. This patch must be in the immediate next release of Bitcoin Core. With this patch in Core's next release, Bitcoin works just as before and no fork will ever occur until spring 2020. Third party services, libraries, wallets, and exchanges will have enough time to prepare for it over the next three years. The proposal also suggests that we may want to relocate the witness commitment to a better place and fix Satoshi's sighash bug in a hard fork. If we really want to get prepared for a potential HF with unknown parameters, setting a time bomb in the client, which will stop processing of transactions with big warning in GUI, is also suggested. Alternatively, instead of increasing the block size, making a soft fork to decrease the block size to 1kB and block reward to 0, activating far in the future is proposed. The proposal aims to make hard forks less risky and well-prepared while giving enough time to deploy it.</summary>
    <published>2017-03-28T17:34:23+00:00</published>
  </entry>
</feed>
