<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An alternative: OP_CAT &amp; OP_CHECKSIGFROMSTACK</title>
  <updated>2023-06-13T18:58:33.546584+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-05-23 16:59:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An alternative: OP_CAT &amp; OP_CHECKSIGFROMSTACK</title>
    <updated>2023-06-13T18:58:33.546584+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016950.html" rel="alternate"/>
    <summary>Russell O'Connor, a Bitcoin developer, recently criticized the SIGHASH_ANYPREVOUT and OP_CHECKOUTPUTHASHVERIFY proposals as being too narrow in their applications and adding complexities to Bitcoin operations. Instead, he proposed implementing the OP_CAT and OP_CHECKSIGFROMSTACKVERIFY operations which would enable several applications such as oracle signature verification, amortized secure multiparty computations, and transaction introspection, including simulated SIGHASH_ANYPREVOUT. Russell believes that these two straightforward opcodes whose semantics are pure computational operations on stack values embody the idea of "programmable money" and can be further optimized for popular constructions that come up in the future.</summary>
    <published>2019-05-23T16:59:15+00:00</published>
  </entry>
</feed>
