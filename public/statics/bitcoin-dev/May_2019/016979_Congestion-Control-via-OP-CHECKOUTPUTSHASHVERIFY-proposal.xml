<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Congestion Control via OP_CHECKOUTPUTSHASHVERIFY proposal</title>
  <updated>2023-06-13T18:54:24.451043+00:00</updated>
  <author>
    <name>Jeremy 2019-05-24 21:15:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Congestion Control via OP_CHECKOUTPUTSHASHVERIFY proposal</title>
    <updated>2023-06-13T18:54:24.451043+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016979.html" rel="alternate"/>
    <summary>The OP_COSHV Taproot key is a better option for withdrawal requests from an exchange as compared to MuSig and other distributed signing solutions because they require interaction for payout guarantee. With OP_COSHV, one can request a withdrawal that pays out to multiple people at once, without having to withdraw multiple times and pay separately. The exchange doesn't have to know about this, and they can also aggregate multiple withdrawal requests into a tree without requiring permission from the recipients. Additionally, the payment can be made into a payment channel between the user and the exchange, which allows undoing the withdrawal by routing money back to the exchange over lightning. With just pre-signing, none of these operations work well as they require permission first. OP_COSHV allows the payer or recipient to commit funds to a complex transaction structure without talking to anyone else.Furthermore, in terms of DoS, if one user drops out during the last step of building a tree with N users' payment requests, the process has to be restarted, excluding that user. With OP_COSHV, once all the requests are received, issuing the transaction is the only thing left to do, allowing for a smoother process.</summary>
    <published>2019-05-24T21:15:07+00:00</published>
  </entry>
</feed>
