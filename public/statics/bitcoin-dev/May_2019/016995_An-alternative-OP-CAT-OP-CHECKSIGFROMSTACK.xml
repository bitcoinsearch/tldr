<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An alternative: OP_CAT &amp; OP_CHECKSIGFROMSTACK</title>
  <updated>2023-06-13T18:59:04.537337+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-05-28 03:41:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An alternative: OP_CAT &amp; OP_CHECKSIGFROMSTACK</title>
    <updated>2023-06-13T18:59:04.537337+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016995.html" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin-dev mailing list, Anthony Towns suggested that a lack of tools rather than a lack of use may be responsible for the infrequent use of certain features in Bitcoin Script. He argued in favor of implementing a pure functional language which could be compiled down to SCRIPT and leveraged with OP_CHECKSIGFROMSTACK. This would require a proof-of-existence compiler targeting Liquid/Elements SCRIPT. Towns also mentioned his Smart Contracts Unchained technique as a way to implement Simplicity on top of Bitcoin, using a semi-trusted user-selected federation to enforce Simplicity execution. This would allow for actual use if it was possible to run this on Bitcoin.</summary>
    <published>2019-05-28T03:41:58+00:00</published>
  </entry>
</feed>
