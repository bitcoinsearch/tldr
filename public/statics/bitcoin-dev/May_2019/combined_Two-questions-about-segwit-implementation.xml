<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Two questions about segwit implementation</title>
  <updated>2023-06-13T19:11:01.900361+00:00</updated>
  <author>
    <name>Aymeric Vitte 2019-05-25 23:56:48</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 17:24:13</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-05-26 17:54:08</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 16:28:57</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 16:18:46</name>
  </author>
  <author>
    <name>Thomas Kerin 2019-05-26 19:34:55</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-25 23:56:48</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 16:28:57</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 17:09:31</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 14:33:06</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 16:28:57</name>
  </author>
  <author>
    <name>Kostas Karasavvas 2019-05-27 07:26:21</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 17:24:13</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 17:09:31</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 17:24:13</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-05-26 17:54:08</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 16:18:46</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 17:09:31</name>
  </author>
  <author>
    <name>Thomas Kerin 2019-05-26 19:34:55</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 21:17:30</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-25 23:56:48</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 14:33:06</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-05-26 17:54:08</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 21:17:30</name>
  </author>
  <author>
    <name>Kostas Karasavvas 2019-05-27 07:26:21</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-26 14:33:06</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 16:18:46</name>
  </author>
  <author>
    <name>Thomas Kerin 2019-05-26 19:34:55</name>
  </author>
  <author>
    <name>Aymeric Vitte 2019-05-26 21:17:30</name>
  </author>
  <author>
    <name>Kostas Karasavvas 2019-05-27 07:26:21</name>
  </author>
  <link href="bitcoin-dev/May_2019/016982_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016987_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016989_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016986_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016988_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016991_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016982_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016986_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016990_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016985_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016986_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016993_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016987_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016990_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016987_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016989_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016988_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016990_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016991_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016992_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016982_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016985_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016989_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016992_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016993_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016985_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016988_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016991_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016992_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016993_Two-questions-about-segwit-implementation.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Two questions about segwit implementation</title>
    <updated>2023-06-13T19:11:01.901358+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016982.html" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin development mailing list, there was clarification on the implementation of segwit-enabled inputs in transactions. The author had realized that their segwit implementation was incorrect due to a misunderstanding of the specifications and had two questions. First, why is OP_0 represented as 00 in witness data instead of 0100? Second, for non-segwit inputs, why is there a 00 length in segwit data and what is the rationale for that? Johnson Lau clarified that an empty scriptSig does not necessarily imply a segwit input and can still be spent with an empty scriptSig if the previous scriptPubKey is OP_1, which does not allow witness. Similarly, Aymeric Vitte suggested that the transaction creator can parse the transaction and associate the correct input to the correct witness data without using "00" for non-segwit inputs. However, upon further reflection, he realized that if the validator sees an empty or witness script in scriptSig, then this is a segwit input. By doing this one-by-one, the validator can associate the correct segwit data to the correct segwit input, making the use of "00" unnecessary.The lack of clear documentation on this topic is noted as a concern. The discussion sheds light on the nuances of implementing segwit and highlights some misconceptions regarding its implementation. Regarding the representation of OP_0 as 00 in witness data, Johnson Lau explains that the witness is not script and provides a detailed explanation of how it works for each input. The "00" element signifies zero size and creates an empty element on the stack. For non-segwit inputs, the "00" indicates that the input has no witness stack element. This information is necessary because it is difficult to determine whether an input is segwit-enabled or not until you look up the UTXO, which may not always be available. The Bitcoin scriptSig populates the stack for opcode operations, while witnesses are similar to the script stack and are passed in as such. OP_0 pushes a zero-length value onto the stack, while OP_1 pushes 0x01, serialized as 0101. The witness structure can be considered as vector&gt; and its length must equal the number of inputs. While Vitte questioned the need for "00" in non-segwit inputs, Lau emphasizes that validators have no way of knowing which inputs are segwit-enabled until they look up the UTXO set, so there needs to be a way to tell the validator that "the witness for this input is empty," and it is the "00". The discussion highlights some misconceptions regarding the implementation of segwit and sheds light on the nuances of its implementation.</summary>
    <published>2019-05-25T23:56:48+00:00</published>
  </entry>
</feed>
