<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_ANYPREVOUT proposal</title>
  <updated>2023-06-13T18:50:43.995287+00:00</updated>
  <author>
    <name>Rusty Russell 2019-05-27 01:26:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_ANYPREVOUT proposal</title>
    <updated>2023-06-13T18:50:43.995287+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016983.html" rel="alternate"/>
    <summary>The discussion on the safety of ANYPREVOUT continues between Rusty Russell and Anthony Towns. Rusty suggests renaming it to SIGHASH_UNSAFE_ANYPREVOUT and adding a warning about its unsafe nature for general wallet usage. Anthony Towns agrees that if something needs a warning, it should not be included in the consensus layer. He suggests finding a way to make ANYPREVOUT safe enough so that it doesn't require scary warnings. Anthony argues that funds are safe in Bitcoin if they're held in a cryptographically secured UTXO and under 'enough' proof of work that a reorg is 'sufficiently' unlikely. He theorizes that if an individual only uses ANYPREVOUT to sign transactions that pay the money back to themselves, their funds will remain safe. Rusty disagrees and believes that sharing with an untrusted party is insecure without further complex arrangements. Rusty expresses his concern over the risk to non-ANYPREVOUT using txs, marking it as a bad idea but concludes that it is not the case. The secondary concern is accidentally using ANYPREVOUT which he believes is unlikely since keys need to be marked now. Finally, he highlights the concern of using correctly but nasty gotchas, which is inherent in rebinding. However, that concern is fully addressed by Don't Reuse Addresses.</summary>
    <published>2019-05-27T01:26:01+00:00</published>
  </entry>
</feed>
