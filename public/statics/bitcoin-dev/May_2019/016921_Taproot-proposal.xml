<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taproot proposal</title>
  <updated>2023-06-13T18:37:07.718145+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-05-08 03:44:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taproot proposal</title>
    <updated>2023-06-13T18:37:07.718145+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016921.html" rel="alternate"/>
    <summary>In this conversation between Luke and ZmnSCPxj, they discuss the use of Taproot construct while retaining external script limitations that involved parties cannot agree to override. They consider enforcing unconditional CLTV off-chain by participants refusing to sign a transaction unless it has an `nLockTime` of the agreed-upon "unconditional CLTV". This way, the CLTV only needs to be on branches which have a strict subset of the participants as signers. ZmnSCPxj also suggests adding a salt to tap branches and asks if it would suffice to add `OP_PUSH() OP_DROP` to the leaves. However, he is uncertain whether salting every node is necessary. He mentions that using different public keys for each contract rather than reusing keys can help randomize and prevent creating rainbow tables of scripts. Additionally, they discuss signing an additional script not committed to by the witness program and suggest that the annex can be used for this by having it contain both the script and signature somehow concatenated.</summary>
    <published>2019-05-08T03:44:29+00:00</published>
  </entry>
</feed>
