<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SIGHASH_ANYPREVOUT proposal</title>
  <updated>2023-06-13T18:50:58.830461+00:00</updated>
  <author>
    <name>Rusty Russell 2019-05-22 02:47:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SIGHASH_ANYPREVOUT proposal</title>
    <updated>2023-06-13T18:50:58.830461+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016938.html" rel="alternate"/>
    <summary>In a bitcoin-dev post, Anthony Towns shared a followup BIP draft that enables SIGHASH_ANYPREVOUT and SIGHASH_ANYPREVOUTANYSCRIPT on top of taproot/tapscript. Rusty, another member, expressed his interest in the proposal but suggested that chaparone signature requirement should be eliminated. He provided four reasons why he believes the benefits of chaparones do not justify enshrining their complexity into the protocol. The first reason is that the change is already hard to implement even once you're on v1 segwit and the second is that chaparones don't seem to help with accidental key reuse. Rusty also noted that miners can reorg and invalidate downstream txs, however, this principle will remain true with ANYPREV because for lightning the locktime will be fairly high before these txs are generally spendable and doing this would require special software. Lastly, he feels that rebinding is a new power in bitcoin, but objections must be backed in facts. Rusty suggested that chaparones can be opt-in and don't need to burden the protocol.</summary>
    <published>2019-05-22T02:47:31+00:00</published>
  </entry>
</feed>
