<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Congestion Control via OP_CHECKOUTPUTSHASHVERIFY proposal</title>
  <updated>2023-05-20T20:29:36.428211+00:00</updated>
  <author>
    <name>Anthony Towns 2019-05-22 20:49:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Congestion Control via OP_CHECKOUTPUTSHASHVERIFY proposal</title>
    <updated>2023-05-20T20:29:36.428211+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016945.html" rel="alternate"/>
    <summary>In a bitcoin-dev thread, ZmnSCPxj expressed their opinion that the CoinJoin feature is not much improved by a recent opcode addition. However, one user countered that this feature could make it easier to do a coinjoin during a high fee period and still claim funds later. The user also added that coordination may not be made much easier by this addition unless the coinjoin group stays in a Layer 2-ish protocol and coordinates to cut-through transactions. The user provided an example of how this could work but added that it comes with much harder coordination problems.Regarding the replacement of `SIGHASH_NOINPUT` with the new opcode, the same user disagrees with this idea. They believe that this does not replace ANYPREVOUT or similar features. They also think that lightning is improved by this opcode because it makes it cheaper to create lightning channels during a high fee period. Users can create 1000 channels via a single output with this opcode and wait until there's a low fee period to publish the funding transaction cheaply. The user thinks that eltoo could also be slightly simplified with this opcode.</summary>
    <published>2019-05-22T20:49:11+00:00</published>
  </entry>
</feed>
