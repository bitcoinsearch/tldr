<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Congestion Control via OP_CHECKOUTPUTSHASHVERIFY proposal</title>
  <updated>2023-06-13T18:57:25.732918+00:00</updated>
  <author>
    <name>Matt Corallo 2019-05-21 19:41:22</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 05:11:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-23 03:45:39</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 08:10:23</name>
  </author>
  <author>
    <name>Anthony Towns 2019-05-22 20:49:11</name>
  </author>
  <author>
    <name>Jeremy 2019-05-24 20:36:03</name>
  </author>
  <author>
    <name>Jeremy 2019-05-20 20:58:03</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 05:11:55</name>
  </author>
  <author>
    <name>Anthony Towns 2019-05-22 20:49:11</name>
  </author>
  <author>
    <name>Jeremy 2019-05-24 21:15:07</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 01:47:11</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-22 02:51:52</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 08:10:23</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-24 19:12:32</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-25 03:56:22</name>
  </author>
  <author>
    <name>Jeremy 2019-05-24 20:36:03</name>
  </author>
  <author>
    <name>Jeremy 2019-05-24 21:15:07</name>
  </author>
  <author>
    <name>Jeremy 2019-05-20 20:58:03</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-23 03:45:39</name>
  </author>
  <author>
    <name>Jeremy 2019-05-24 21:15:07</name>
  </author>
  <author>
    <name>Matt Corallo 2019-05-21 19:41:22</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 01:47:11</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-22 06:04:27</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 08:10:23</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-24 19:12:32</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-25 03:56:22</name>
  </author>
  <author>
    <name>Jeremy 2019-05-20 20:58:03</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-22 06:04:27</name>
  </author>
  <author>
    <name>Anthony Towns 2019-05-22 20:49:11</name>
  </author>
  <author>
    <name>Matt Corallo 2019-05-21 19:41:22</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 01:47:11</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-22 02:51:52</name>
  </author>
  <author>
    <name>Jeremy 2019-05-22 05:11:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-22 06:04:27</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-24 19:12:32</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-25 03:56:22</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-22 02:51:52</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-05-23 03:45:39</name>
  </author>
  <author>
    <name>Jeremy 2019-05-24 20:36:03</name>
  </author>
  <link href="bitcoin-dev/May_2019/016936_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016940_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016949_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016942_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016945_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016976_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016934_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016940_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016945_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016979_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016937_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016939_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016942_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016972_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016974_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016976_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016979_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016934_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016949_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016979_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016936_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016937_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016941_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016942_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016972_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016974_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016934_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016941_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016945_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016936_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016937_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016939_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016940_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016941_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016972_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016974_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016939_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016949_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016976_Congestion-Control-via-OP-CHECKOUTPUTSHASHVERIFY-proposal.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Congestion Control via OP_CHECKOUTPUTSHASHVERIFY proposal</title>
    <updated>2023-06-13T18:57:25.733897+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016936.html" rel="alternate"/>
    <summary>A Bitcoin developer, ZmnSCPxj, discusses the process of removing a covenant before spending in a transaction. They state that if a sender wants to ensure that the recipient can remove the covenant, they may request a signature of a challenge string from the recipients. However, recipients have the option to destroy the private key after providing the requested signature. Additionally, the recipients have the ability to refuse to cooperate with signing using the taproot branch, which would result in spending via the `OP_CHECKOUTPUTSHASHVERIFY` branch instead.ZmnSCPxj also expresses their opinion on the usage of CoinJoin with a new opcode called OP_CHECKOUTPUTSHASHVERIFY (COHV) as a subset of ANYPREVOUT (NOINPUT). They argue that this opcode does not improve CoinJoin significantly because users would only sign off if one of the transaction outputs belonged to them, which is not enhanced by the new opcode. Using this for congestion control may increase blockchain usage and add unnecessary intermediate transaction outputs during times of congestion. However, it allows creating multiple outputs at a lower cost and participants can move coins without revealing the outputs created by the CoinJoin until needed, making the protocol more stable with respect to input choice.Jeremy Rubin, another Bitcoin developer, proposes a new opcode called OP_CHECKOUTPUTSHASHVERIFY (OP_COSHV) in a BIP draft. The opcode is designed to enable an easy-to-use trustless congestion control technique via a rudimentary, limited form of covenant which does not bear the same technical and social risks of prior covenant designs. Congestion control allows Bitcoin users to confirm payments to many users in a single transaction without creating the UTXO on-chain until a later time. The proposal suggests deploying the change simultaneously with Taproot as an OPSUCCESS but can be deployed separately if needed.The proposed OP_CHECKOUTPUTSHASHVERIFY opcode offers a potential solution for congestion control in Bitcoin transactions, although it may increase blockchain usage. It also has potential benefits for CoinJoin and Lightning channels. The conversation discusses the benefits and limitations of using the OP_CHECKOUTPUTSHASHVERIFY opcode in CoinJoin. It can help improve the stability of the protocol with respect to input choice and enable creating multiple outputs at a lower cost. However, using this opcode for congestion control increases blockchain usage by one TXO and one input, which may increase congestion. Nonetheless, it improves quality of service for most users and helps to have a backlog of low-priority transactions to support the fee market.The conversation also touches upon using n-of-n MuSig for simple "close only" channel factories in Bitcoin Lightning, which can work just as well as the `OP_CHECKOUTPUTSHASHVERIFY` opcode. The OP_COSHV Taproot key enables withdrawal requests from an exchange without requiring interaction for payout guarantee. One can request a withdrawal that pays out to multiple people at once, without having to withdraw multiple times and pay separately. With pre-signing, none of these operations work well as they require permission first. OP_COSHV allows the payer or recipient to commit funds to a complex transaction structure without talking to anyone else.Overall, ZmnSCPxj provides valuable information regarding the intricacies of removing covenants in transactions and the various options available to both parties involved. They also discuss the benefits and limitations of the `OP_CHECKOUTPUTSHASHVERIFY` opcode in CoinJoin and how it can be used for congestion control. Jeremy Rubin's proposal for a new opcode called OP_CHECKOUTPUTSHASHVERIFY (OP_COSHV) is also discussed in detail. A new opcode draft called OP_CHECKOUTPUTSHASHVERIFY has been proposed by Bitcoin developer Jeremy Rubin, which aims to enable congestion control techniques that are easy to use and trustless through a rudimentary form of covenant. This will confirm payments to many users in a single transaction without creating the UTXO on-chain until later, improving throughput while increasing spendability latency and average block space utilization. There are concerns regarding restricting OP_COSHV compared to ANYPREVOUT in the eltoo use case, but the author suggests relaxing the "one input" rule to a "first input" rule, allowing more inputs as fees and rescuing UTXOs. The proposal covers this use case in detail, and an initial reference implementation of the consensus changes and tests demonstrating how to use it for basic congestion control is available on Github.</summary>
    <published>2019-05-21T19:41:22+00:00</published>
  </entry>
</feed>
