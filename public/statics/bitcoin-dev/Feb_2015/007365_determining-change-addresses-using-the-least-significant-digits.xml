<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>determining change addresses using the least significant digits</title>
  <updated>2023-06-09T16:28:11.520149+00:00</updated>
  <author>
    <name>Justus Ranvier 2015-02-06 03:16:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>determining change addresses using the least significant digits</title>
    <updated>2023-06-09T16:28:11.520149+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007365.html" rel="alternate"/>
    <summary>The Bitcoin client has traditionally hidden which output addresses are change addresses going back to the payer. However, with dynamically calculated miner fees, this may often be ineffective because the least significant digits will often be zero for the payment, but not for the change amount. This makes it easy for an observer to classify the output addresses. One possible approach to handle this issue would be to add a randomized offset amount to the payment amount. Another approach is to randomize the number of change outputs from transaction to transaction. By doing this, it would be possible to make change outputs that mimic real spends with a low number of s.d. It is recommended to support online privacy by using email encryption whenever possible and to learn how to do so at http://www.youtube.com/watch?v=bakOKJFtB-k.</summary>
    <published>2015-02-06T03:16:13+00:00</published>
  </entry>
</feed>
