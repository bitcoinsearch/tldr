<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal to address Bitcoin malware</title>
  <updated>2023-06-09T16:13:59.289952+00:00</updated>
  <author>
    <name>Eric Voskuil 2015-02-03 07:38:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal to address Bitcoin malware</title>
    <updated>2023-06-09T16:13:59.289952+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007299.html" rel="alternate"/>
    <summary>The discussion is about the effectiveness of multiple signatures in providing greater security than a single signature. The key factor for such a system is the independence of multiple secrets. If an attack compromises one factor, it should not be able to reduce the difficulty of obtaining the other factors, or else there is only one secret. Multiple factors within the same security perimeter are compromised coincidentally and have the same effect as dependence. Therefore, if m factors are dependent/coincident on others, the relation becomes 1 in 2^(n-m). A multi-factor web wallet that handles the user's keys in the browser and authenticates the user in the browser to authorize service signing is effectively single factor. Malware can launch an attack against the web app, executing in the browser, gaining coincident access to two secrets. The difficulty is 1 in 2 compared to the expected 1 in 4. Increasing user complexity without increasing integrity or privacy is a poor trade, and worse if the user is misled.</summary>
    <published>2015-02-03T07:38:07+00:00</published>
  </entry>
</feed>
