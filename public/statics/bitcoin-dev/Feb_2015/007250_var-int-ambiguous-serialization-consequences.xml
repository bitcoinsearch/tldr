<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>var_int ambiguous serialization consequences</title>
  <updated>2023-06-09T16:19:26.095986+00:00</updated>
  <author>
    <name>Wladimir 2015-02-01 10:44:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>var_int ambiguous serialization consequences</title>
    <updated>2023-06-09T16:19:26.095986+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007250.html" rel="alternate"/>
    <summary>A discussion about the consequences of using longer than necessary forms of var_int was initiated by Tamas Blummer in 2015. However, the topic being discussed was actually CompactSize and not VarInt as pointed out by Wladimir. The representation of CompactSizes is redundant, meaning the same number can be represented in up to four different byte sequences. In contrast, VARINTs were designed to not have any redundancy in their representation but are not currently used anywhere in the block chain. Tamas expressed interest in the possible implications of applying size limits to a block since transaction count is var_int but not part of the hashed header or merkle tree. Wladimir questioned the relevance of this concern since non-canonical CompactSizes are forbidden, which is flagged in serialize.h's ReadCompactSize function.</summary>
    <published>2015-02-01T10:44:46+00:00</published>
  </entry>
</feed>
