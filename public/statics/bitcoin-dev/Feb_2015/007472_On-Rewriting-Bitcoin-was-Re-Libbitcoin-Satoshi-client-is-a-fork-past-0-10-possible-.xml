<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On Rewriting Bitcoin (was Re: [Libbitcoin] Satoshi client: is a fork past 0.10 possible?)</title>
  <updated>2023-06-09T17:22:16.407662+00:00</updated>
  <author>
    <name>Peter Todd 2015-02-15 17:02:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On Rewriting Bitcoin (was Re: [Libbitcoin] Satoshi client: is a fork past 0.10 possible?)</title>
    <updated>2023-06-09T17:22:16.407662+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007472.html" rel="alternate"/>
    <summary>In this email exchange, Tamas Blummer responds to Peter Todd's suggestion that the consensus critical code should be moved out of Bitcoin Core and into a standalone library. Blummer argues that such a library would essentially be the same as Bitcoin Core, minus the P2P service rules, wallet, and RPC server. He also notes that while P2P service rules are weakly consensus critical, relaying valid blocks is easy and there are many mechanisms for doing so. Additionally, OpenSSL is being replaced by libsecp256k1, a library designed for consensus-critical applications, and strategies are being developed to make databases less relevant to consensus. Blummer takes issue with Todd's characterization of those who work on feature extensions within the Core code base as "stereotypical programmers" who are "dicking around on Github." He argues that the legacy design and ancient technology of the Core code base make it unfriendly to feature extensions, but acknowledges the hard work and progress made by the Core team within these limits. Blummer ultimately decides not to work within the Core's legacy technology limits, instead choosing to create successful commercial products by re-digging down the rabbit hole. However, Todd counters that such an effort is orders of magnitude more work than using the foreign function interface or running Bitcoin Core for validation. Todd reminds Blummer that consensus-critical crypto is a brand new field within software engineering with very unique requirements, pioneered by Bitcoin itself.</summary>
    <published>2015-02-15T17:02:29+00:00</published>
  </entry>
</feed>
