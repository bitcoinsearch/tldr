<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On Rewriting Bitcoin (was Re: [Libbitcoin] Satoshi client: is a fork past 0.10 possible?)</title>
  <updated>2023-06-09T17:21:06.700076+00:00</updated>
  <author>
    <name>Peter Todd 2015-02-19 03:44:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On Rewriting Bitcoin (was Re: [Libbitcoin] Satoshi client: is a fork past 0.10 possible?)</title>
    <updated>2023-06-09T17:21:06.700076+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007487.html" rel="alternate"/>
    <summary>In this message, Troy Benjegerdes suggests that the Bitcoin community should start treating the consensus code as a buggy and poorly defined proof-of-concept rather than holy scripture. He recommends looking at the git commit history for the consensus-critical part of the Bitcoin Core codebase as much work has been done in cleaning it up and refactoring for v0.10.0/libconsensus. There are concerns that using the code resulting from Tamas's reimplementation over Satoshi Bitcoin/libconsensus is foolish. While the secp256k1 work and other modularity efforts are impressive, main.cpp needs to undergo some critical review if bitcoin wants to remain relevant. However, people are working towards untangling main.cpp at a speed that may be a bit too rapid.</summary>
    <published>2015-02-19T03:44:34+00:00</published>
  </entry>
</feed>
