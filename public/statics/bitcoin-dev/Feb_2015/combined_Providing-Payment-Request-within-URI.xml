<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Providing Payment Request within URI</title>
  <updated>2023-06-09T18:07:43.147021+00:00</updated>
  <author>
    <name>Andreas Schildbach 2015-02-26 12:11:48</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-24 15:58:57</name>
  </author>
  <author>
    <name>Mike Hearn 2015-02-25 20:44:55</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-26 11:14:22</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-24 15:58:57</name>
  </author>
  <author>
    <name>Andreas Schildbach 2015-02-26 09:32:15</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-26 09:48:49</name>
  </author>
  <author>
    <name>Andreas Schildbach 2015-02-26 09:32:15</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-26 11:14:22</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-24 15:58:57</name>
  </author>
  <author>
    <name>Mike Hearn 2015-02-25 20:44:55</name>
  </author>
  <author>
    <name>Andreas Schildbach 2015-02-26 09:32:15</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-26 09:48:49</name>
  </author>
  <author>
    <name>Andreas Schildbach 2015-02-26 12:11:48</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-26 09:48:49</name>
  </author>
  <author>
    <name>Andreas Schildbach 2015-02-26 12:11:48</name>
  </author>
  <author>
    <name>Mike Hearn 2015-02-25 20:44:55</name>
  </author>
  <author>
    <name>Oleg Andreev 2015-02-26 11:14:22</name>
  </author>
  <link href="bitcoin-dev/Feb_2015/007616_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007600_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007610_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007615_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007600_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007613_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007614_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007613_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007615_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007600_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007610_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007613_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007614_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007616_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007614_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007616_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007610_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2015/007615_Providing-Payment-Request-within-URI.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Providing Payment Request within URI</title>
    <updated>2023-06-09T18:07:43.147021+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007616.html" rel="alternate"/>
    <summary>A unique alphabet, Base43, has been developed to match the "Alphanumeric" input mode of QR codes while still being allowed in URIs. It is uncertain whether Base58 or Base64 takes up more space than Base43 on QR codes. Despite this, it is important to note that the primary objective of using Base43 is to optimize the storage of binary data within QR codes. Utilizing this variation of the BaseX standard may result in efficiency and storage capacity improvement.In a conversation between Oleg Andreev and Andreas Schildbach, they discussed the standard way to put Payment Request data into bitcoin: URI or directly into QR code. The goal was to allow the device to generate a multi-output payment request on its own without relying on the server and x509 certificates. Andreas suggested using "BITCOIN:-" plus the payment request in Base43 encoded form because it is optimized for QR codes. However, in response to a question about how Base58 and Base64 compare, Andreev explains that these methods force QR codes into binary encoding, resulting in wasted space. Specifically, Base64 can take up to 6 bits per character, whereas binary has 8 bits per character, so using Base64 results in 25% wasted space. On the other hand, Base43 takes log2(43) = 5.43 bits per character, which is only a waste of 1.3% as each character uses up 5.5 bits in QR codes in 'Alphanumeric' encoding.In a discussion on the Bitcoin mailing list, Oleg Andreev asked if there is a standard way to put payment request data into a bitcoin: URI or directly into QR code. Though there isn't a standard for this, he wondered if it would be a good idea to extend BIP72. In response, someone suggested using the Base43 encoding of the payment request in a QR code with "BITCOIN:-" preceding it. This approach is optimized for QR codes and should work well for simple use cases. However, X509 signing or too many outputs could make scanning the QR code difficult. Links to relevant code on GitHub were provided.In another discussion on the Bitcoin mailing list, Oleg Andreev shared his thoughts on the possibility of a standard way to incorporate Payment Request data into bitcoin: URI or directly into QR codes. He suggested generating a multi-output payment request on its own without relying on a server and x509 certificates. To make it secure, no additional authentication would be needed if scanned via QR code from a POS. Andreas' wallet supports this but he advised not doing it as payment requests can get larger in the future, even without signing, and exploding the capacity of a QR code is very easy. Instead, he recommended taking a look at the Bluetooth/NFC discussion happening in a different thread.</summary>
    <published>2015-02-26T12:11:48+00:00</published>
  </entry>
</feed>
