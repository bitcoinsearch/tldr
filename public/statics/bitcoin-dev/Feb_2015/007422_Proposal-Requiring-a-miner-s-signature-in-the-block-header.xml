<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Requiring a miner's signature in the block header</title>
  <updated>2023-06-09T16:46:40.912216+00:00</updated>
  <author>
    <name>Ittay 2015-02-12 13:56:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Requiring a miner's signature in the block header</title>
    <updated>2023-06-09T16:46:40.912216+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007422.html" rel="alternate"/>
    <summary>A proposal has been made to require a miner's signature in the block header in order to prevent mining centralization. The proposal suggests that each miner must sign the block header prior to hashing, with the signature included in the data that is hashed. The coinbase for the block must only pay out to the public key counterpart of the private key used to sign the block header. This would make it difficult to form a cooperating pool of miners who may not trust each other, as the block rewards will be controlled by disparate parties and not by the pool operator. However, some argue that this solution would increase technical trust requirements and break P2Pool. Moreover, threshold signatures (group signatures) could probably be used by an actual distrusting pool's miners, making it possible for such a pool to work. For a more general view of nonoutsourceable puzzles, Miller et al.'s paper provides a useful resource. Sirer and Ittay also proposed a similar idea as part of two-phase proof of work (2P-PoW). In 2P-PoW, the first phase involves standard PoW while the second phase requires the signature. This approach allows for a gradual transition from the current PoW to the signature-based one without losing mining power (i.e. security) overnight and slowly phasing out existing hardware and mining datacenters.</summary>
    <published>2015-02-12T13:56:02+00:00</published>
  </entry>
</feed>
