<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>determining change addresses using the least significant digits</title>
  <updated>2023-05-19T19:48:38.868268+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-02-06 18:21:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>determining change addresses using the least significant digits</title>
    <updated>2023-05-19T19:48:38.868268+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007379.html" rel="alternate"/>
    <summary>In a discussion about Bitcoin client, Isidor Zeuner proposed a possible issue with the current functionality of hiding change addresses going back to the payer. With dynamically calculated miner fees, it may be easy for an observer to classify the output addresses because users sending payments often enter the payment amount only up to the significant digits, while the least significant digits are often zero. To handle this issue, adding a randomized offset amount to the payment amount is suggested. However, sending too much can cause issues with accounting, so another strategy proposed is to create two change outputs and make one equal to the payment amount or split the change evenly. One user suggested randomly rounding up the output when paying to a depository account, but a user interface for this feature has not been determined yet.</summary>
    <published>2015-02-06T18:21:09+00:00</published>
  </entry>
</feed>
