<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>determining change addresses using the least significant digits</title>
  <updated>2023-06-09T16:28:01.592363+00:00</updated>
  <author>
    <name>Isidor Zeuner 2015-02-04 14:23:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>determining change addresses using the least significant digits</title>
    <updated>2023-06-09T16:28:01.592363+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007319.html" rel="alternate"/>
    <summary>In the world of Bitcoin, there is a potential vulnerability that could allow anyone to classify an output address as a change address going back to the payer. This occurs due to the fact that users sending payments using the Bitcoin client will only enter the payment amount up to a certain number of significant digits, which often means that the least significant digits are zero. With dynamically calculated miner fees, this is not always the case for the change amount, making it easier for observers to classify the output addresses. To combat this issue, a possible solution would be to add a randomized offset amount to the payment amount that is small in comparison but helps to hide the change address.</summary>
    <published>2015-02-04T14:23:23+00:00</published>
  </entry>
</feed>
