<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bloom filtering, privacy</title>
  <updated>2023-06-09T17:31:57.528131+00:00</updated>
  <author>
    <name>Mike Hearn 2015-02-21 16:47:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bloom filtering, privacy</title>
    <updated>2023-06-09T17:31:57.528131+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007526.html" rel="alternate"/>
    <summary>The conversation revolves around the efficiency of querying a single node when an address in a wallet matches the block filter. One person thinks it's efficient, while the other disagrees. The latter argues that with Bitcoin growing, there could be up to 15,000 transactions per block, each containing five unique keys/elements that might need matching. With a false-positive rate of 0.1%, this means 131.63KB per block extra overhead, which is equivalent to 18MB of data per day's worth of sync. This amount of data may not be fast enough for mobile devices and may hinder competitiveness. However, the former believes that it doesn't matter because anyone monitoring the wire close to a user knows which transactions are theirs, and running a node allows them to follow the transaction chain to figure out which other transactions might belong to them. Additionally, even if a user requests only one block from a peer, the peer knows they will eventually request more blocks since one of the transactions given was spent in that block.</summary>
    <published>2015-02-21T16:47:43+00:00</published>
  </entry>
</feed>
