<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Providing Payment Request within URI</title>
  <updated>2023-06-09T18:05:53.546457+00:00</updated>
  <author>
    <name>Andreas Schildbach 2015-02-26 12:11:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Providing Payment Request within URI</title>
    <updated>2023-06-09T18:05:53.546457+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007616.html" rel="alternate"/>
    <summary>In a discussion on the benefits of using Base43 for storing binary data in QR codes, Oleg Andreev explains that Base43 is similar to other BaseX standards but uses an alphabet of 43 characters. This makes it efficient for use with QR codes as the alphabet matches the 'Alphanumeric' input mode of QR codes as closely as possible while still being allowed in URIs. In response to a question about how Base58 and Base64 compare, Andreev explains that these methods force QR codes into binary encoding, resulting in wasted space. Specifically, Base64 can take up to 6 bits per character, whereas binary has 8 bits per character, so using Base64 results in 25% wasted space. On the other hand, Base43 takes log2(43) = 5.43 bits per character, which is only a waste of 1.3% as each character uses up 5.5 bits in QR codes in 'Alphanumeric' encoding. The source for the QR code standard is provided as a link to Wikipedia.</summary>
    <published>2015-02-26T12:11:48+00:00</published>
  </entry>
</feed>
