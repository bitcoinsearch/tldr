<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for deterministic pay-to-script-hash multi-signature addresses</title>
  <updated>2023-06-09T17:13:35.440150+00:00</updated>
  <author>
    <name>Luke Dashjr 2015-02-12 22:13:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for deterministic pay-to-script-hash multi-signature addresses</title>
    <updated>2023-06-09T17:13:35.440150+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007457.html" rel="alternate"/>
    <summary>On February 12, 2015, Thomas Kerin drafted a Bitcoin Improvement Proposal (BIP) with Jean Pierre and Ruben that describes a method to deterministically generate multi-signature transaction scripts. The purpose of this proposal is to allow services to declare themselves as BIPXX compliant, working towards interoperability of services and simplifying the derivation of scripts and their addresses by all parties.This BIP focuses on defining how the public keys must be encoded and sorted so that the redeem script and corresponding P2SH address are always the same for a given set of keys and number of required signatures. By adopting a sorting and encoding standard, compliant wallets will always produce the same P2SH (pay-to-script-hash) address for the same given set of keys and required signature count, making it easier to recognize transactions involving that multi-signature account.Most web wallets do not presently facilitate the setup of multisignature accounts with users of a different service, conventions which ensure cross-compatibility should make it easier to achieve this. This standard will help in enabling a party other than the service provider to recover the wallet without any help from the service provider.For a set of public keys, ensure that they have been received in compressed form, sort them lexicographically according to their binary representation before using the resulting list of keys in a standard multisig redeem script. Hash the redeem script according to BIP-0016 to get the P2SH address.Implementations that do not conform with this BIP will have compatibility issues with strictly-compliant wallets. If a group of users were not entirely compliant, there is the possibility that a participant will derive an address that the others will not recognize as part of the common multisig account.BIP45 - Structure for Deterministic P2SH Multisignature Wallets, Bitcore, and Haskoin are a few examples of usage &amp; implementations of this standard. Test vectors for this standard are also provided.The context provided discusses the development of a Bitcoin Improvement Proposal (BIP) for the integration of multi-signature transactions with Armory, a popular Bitcoin wallet. The BIP will be hosted on GitHub and is open to feedback and discussion from the community. Additionally, a link is provided to a website that allows users to generate multi-signature brainwallets, which can be integrated with Armory using the proposed BIP.</summary>
    <published>2015-02-12T22:13:33+00:00</published>
  </entry>
</feed>
