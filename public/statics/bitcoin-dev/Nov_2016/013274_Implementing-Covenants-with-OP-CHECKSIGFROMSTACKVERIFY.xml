<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Implementing Covenants with OP_CHECKSIGFROMSTACKVERIFY</title>
  <updated>2023-06-11T20:31:28.083827+00:00</updated>
  <author>
    <name>Jeremy 2016-11-07 19:30:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Implementing Covenants with OP_CHECKSIGFROMSTACKVERIFY</title>
    <updated>2023-06-11T20:31:28.083827+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013274.html" rel="alternate"/>
    <summary>Russell O'Connor has detailed how it is possible to implement covenants using two script extensions: OP_CAT and OP_CHECKSIGFROMSTACKVERIFY. Both of these op codes are already available in the Elements Alpha sidechain, so it is possible to construct covenants in Elements Alpha today. The Moeser-Eyal-Sirer vault has been constructed as an example. It is possible to create an output that is spendable by everybody if a user ever double-spends the output with two different transactions. This is done by adding a case to the script which allows spending if two valid signatures on different message under the public key of the output are given. The same functionality can be achieved in a simpler way just using OP_CAT.</summary>
    <published>2016-11-07T19:30:26+00:00</published>
  </entry>
</feed>
