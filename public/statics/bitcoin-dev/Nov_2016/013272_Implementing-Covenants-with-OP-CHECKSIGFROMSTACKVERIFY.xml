<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Implementing Covenants with OP_CHECKSIGFROMSTACKVERIFY</title>
  <updated>2023-06-11T20:31:21.386759+00:00</updated>
  <author>
    <name>Russell O'Connor 2016-11-03 20:02:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Implementing Covenants with OP_CHECKSIGFROMSTACKVERIFY</title>
    <updated>2023-06-11T20:31:21.386759+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013272.html" rel="alternate"/>
    <summary>In a discussion between Daniel Robinson and Russell O'Connor on the bitcoin-dev mailing list, they discussed the possibility of implementing "poison transactions" using OP_CHECKSIGFROMSTACKVERIFY. O'Connor explained that while he had not studied poison transactions very carefully, the transaction data is easily recoverable and adding transaction introspection operations would save everyone a bunch of work. He also mentioned that there are no specific plans to put transaction introspection opcodes into Elements at this moment, but it is a possibility in the future.Johnson Lau also joined the conversation, mentioning that he has implemented OP_CHECKSIGFROMSTACKVERIFY in a different way from the Elements implementation. Instead of hashing the data on stack, he directly put the 32 byte hash to the stack, which he believes should be more flexible as not every system uses double-SHA256.O'Connor then detailed how covenants can be implemented using two script extensions: OP_CAT and OP_CHECKSIGFROMSTACKVERIFY, both of which are already available in the Elements Alpha sidechain. He provided an example of constructing scripts for the Moeser-Eyal-Sirer vault. O'Connor expressed interest in collecting and implementing other useful covenants and encouraged others to share their ideas.</summary>
    <published>2016-11-03T20:02:33+00:00</published>
  </entry>
</feed>
