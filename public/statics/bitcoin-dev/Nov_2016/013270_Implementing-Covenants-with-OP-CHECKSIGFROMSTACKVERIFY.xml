<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Implementing Covenants with OP_CHECKSIGFROMSTACKVERIFY</title>
  <updated>2023-06-11T20:30:39.272219+00:00</updated>
  <author>
    <name>Daniel Robinson 2016-11-03 07:37:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Implementing Covenants with OP_CHECKSIGFROMSTACKVERIFY</title>
    <updated>2023-06-11T20:30:39.272219+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013270.html" rel="alternate"/>
    <summary>A recent discussion on the Bitcoin-dev mailing list explored the possibility of implementing covenants using two script extensions: OP_CAT and OP_CHECKSIGFROMSTACKVERIFY. Both opcodes are already available in the Elements Alpha sidechain, allowing for the construction of covenants in Elements Alpha today. Russell O'Connor detailed how this construction works in a blog post and provided scripts for the Moeser-Eyal-Sirer vault as an example. The discussion also touched on the implementation of "poison transactions" and the use of more flexible introspection opcodes in Elements. Johnson Lau shared his own implementation of OP_CHECKSIGFROMSTACKVERIFY in a different way from the Elements.</summary>
    <published>2016-11-03T07:37:29+00:00</published>
  </entry>
</feed>
