<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP30 and BIP34 interaction (was Re: [BIP Proposal] Buried Deployments)</title>
  <updated>2023-05-20T00:07:03.445787+00:00</updated>
  <author>
    <name>Johnson Lau 2016-11-17 18:08:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP30 and BIP34 interaction (was Re: [BIP Proposal] Buried Deployments)</title>
    <updated>2023-05-20T00:07:03.446786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013313.html" rel="alternate"/>
    <summary>The issue of banning an invalid block hash is not purely a peer-to-peer protocol issue, as some implementations ban it while others do not. This suggests that a bridge node would not be helpful in unifying a pure peer-to-peer split. Banning an invalid block hash is an implicit "first seen" consensus rule. Eric Voskuil describes two possibilities for creating a new valid block out of an old one: it could cause a reorg, but there would not be a chain split due to a different interpretation of valid. Rather, there would simply be two valid competing chains. However, this scenario would require both block and transaction validity with a transaction hash collision, as well as the transaction being valid within the block. The chances of this happening are low, but it could produce a deep reorg. If a new invalid block is created, it is discarded by everyone. However, this does not invalidate the hash of that block. Permanent blocking, as described by jl2012, would be a design choice for the peer-to-peer protocol, rather than a consensus issue. Libbitcoin does not ban invalidated hashes at all; it discards the block and drops the peer.</summary>
    <published>2016-11-17T18:08:09+00:00</published>
  </entry>
</feed>
