<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Non-equal value CoinJoins. Opinions.</title>
  <updated>2023-06-13T22:56:40.468218+00:00</updated>
  <author>
    <name>Lucas Ontivero 2019-12-30 01:14:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Non-equal value CoinJoins. Opinions.</title>
    <updated>2023-06-13T22:56:40.468218+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017544.html" rel="alternate"/>
    <summary>The CashFusion research proposes a combinatorial approach to avoid amount linkages in non-equal value coinjoins. However, this idea is not similar to the one presented in the Knapsack paper in 2017, which splits the original outputs into many partitions that match a selected group of outputs. The simulation with 7 participants found 14,599 valid transactions in 42 minutes and 18 seconds, while the same simulation with 8 participants found 35,781 valid transactions in about 4 hours. With 9 participants, the algorithm did not finish running all day. Therefore, the number of valid transactions grows so incredibly fast that it is impossible to know which of those are the real ones even if one finds a way to find all the partitions. Additionally, the attacks on this mechanism seem simple, generating doubts about its effectiveness. Furthermore, the proposal's numbers look weird because the example is using ten inputs in the neighborhood of ~0.1 BTC, which means it could work in a very specific scenario. On the other hand, Knapsack provides a general solution with good math behind and has been backtested against historical data extracted from Bitcoin's blockchain. In summary, in unequal inputs/outputs coinjoins, Knapsack is currently the best solution available, but it is not as effective as equal-outputs transactions. This proposal is inferior and not supported by good math.</summary>
    <published>2019-12-30T01:14:19+00:00</published>
  </entry>
</feed>
