<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Composable MuSig</title>
  <updated>2023-06-13T22:23:41.738786+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-08 01:15:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Composable MuSig</title>
    <updated>2023-06-13T22:23:41.738786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017515.html" rel="alternate"/>
    <summary>In this context, the author discusses the need for a composable commitment scheme appropriate for MuSig R coin tossing. The author defines a composable commitment scheme as having operations `ComposeCommitments()` and `ComposeOpenings()`. The multi-`R` proposal is presented as an example of such a scheme, using hash functions to create commitments and concatenation operations to compose them. The desired property is that there must not exist a `NegateCommitment()` operation that can cancel out a commitment. The author then conjectures that signature schemes like Schnorr and ECDSA can also be viewed as commitment schemes on points by using random scalars and hash functions to create commitments. Signatures can be composed in a way that prevents cancellation of public keys, making them suitable as composable commitments in a MuSig scheme. The author concludes that any composable commitment scheme that does not allow cancellation can be used in the 3-phase MuSig framework.</summary>
    <published>2019-12-08T01:15:51+00:00</published>
  </entry>
</feed>
