<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blind Merged Mining with covenants ( sighash_anyprevout / op_ctv )</title>
  <updated>2023-06-13T22:55:15.744865+00:00</updated>
  <author>
    <name>Ruben Somsen 2019-12-26 02:23:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blind Merged Mining with covenants ( sighash_anyprevout / op_ctv )</title>
    <updated>2023-06-13T22:55:15.744865+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017534.html" rel="alternate"/>
    <summary>Blind Merged Mining (BMM) is a consensus mechanism that allows other external blockchains to outsource their mining work to the Bitcoin blockchain. BMM involves committing the hash of another blockchain into a unique location on the Bitcoin blockchain and paying a Bitcoin fee to miners in return for getting the hash committed. BMM increases the total Proof-of-Work (PoW) on the Bitcoin blockchain, adding to its security. The inclusion of sighash_anyprevout into Bitcoin is sufficient to make BMM work, as it allows generating op_checktemplateverify style covenants without any trusted setup. A complete transaction flow diagram for BMM can be found in a GitHub link provided in the context. The Bitcoin blockchain will be unaware of the BMM chain, but the opposite does not have to be true. This enables some possibilities, such as making a conditional BMM token transfer that only goes through if a specific Bitcoin transaction occurs within a certain period of time, thus enabling atomic swaps. It would also be possible to create contracts based on Bitcoin's hashrate and such. The lack of a block subsidy may hinder the development of the BMM chain, however, BMM reorgs are somewhat unique in that they will have to compete for the same unique location that the original chain is using. If fee pressure of new transactions is targeted exclusively towards the original chain during this time, there would be forward pressure that makes reorgs more expensive. It is worth noting that BMM may interfere with the existing incentive structure of Bitcoin. However, a much more inefficient version of BMM is already possible today, where one could simply use up lots of block space instead of specifying a unique location for the hash. Private key security is irrelevant with BMM since the exact signature is committed ahead of time. Assuming taproot, the spending script will be inside a taproot leaf, meaning there is a key spend path that should be made unusable to enforce the covenant.</summary>
    <published>2019-12-26T02:23:10+00:00</published>
  </entry>
</feed>
