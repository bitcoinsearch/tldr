<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Composable MuSig</title>
  <updated>2023-06-13T22:21:35.847613+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-02 02:05:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Composable MuSig</title>
    <updated>2023-06-13T22:21:35.847613+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017501.html" rel="alternate"/>
    <summary>In a discussion about Pedersen commitments and their use in the MuSig protocol, it is suggested that using `X`, which is committed to using Pedersen commitments, in place of `q * G` in an ElGamal commitment could prevent a cancellation attack. It is proposed that this can be achieved by including a Schnorr signature using `q * G` with the target message or any constant string. This method would be appropriate for composable MuSig. However, signatures using the contributions `R[a]` and `R[b]` as public keys are also suggested as another way to commit to `R` while ensuring that your own `R` cannot cancel the other participant's `R`. However, this method increases the complexity of the signing algorithm.</summary>
    <published>2019-12-02T02:05:01+00:00</published>
  </entry>
</feed>
