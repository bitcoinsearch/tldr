<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Analysis of Bech32 swap/insert/delete detection and next steps</title>
  <updated>2023-06-13T22:52:31.108993+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-10 01:50:38</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-12-10 06:36:20</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-12-09 22:31:13</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-12-09 22:31:13</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-10 01:50:38</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-12-09 22:31:13</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-10 01:50:38</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-12-10 06:36:20</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-12-10 06:36:20</name>
  </author>
  <link href="bitcoin-dev/Dec_2019/017522_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017523_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017521_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017521_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017522_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017521_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017522_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017523_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017523_Analysis-of-Bech32-swap-insert-delete-detection-and-next-steps.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Analysis of Bech32 swap/insert/delete detection and next steps</title>
    <updated>2023-06-13T22:52:31.108993+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017522.html" rel="alternate"/>
    <summary>Pieter has conducted an analysis of Bech32's detection abilities and found that the only deviation from the expected failure to detect chance is inserting or deleting a 'q' right before a final 'p'. He suggests updating BIP173 to include the insertion weakness as an erratum and amending segwit addresses to be restricted to only length 20 or 32. Additionally, he proposes defining a variant of Bech32 with the modified constant so that non-BIP173 uses of Bech32 can choose a non-impacted version if they worry about this class of errors. To address the issue in BIP173 and SegWit addresses, Pieter recommends adding an erratum section to BIP173, restricting SegWit addresses to only length 20 or 32, and defining a variant of Bech32 with the modified constant. Two variants of checksum should be defined for readers of Bech32-based formats, and both should be supported. It is suggested that using the modified Bech32 variant should only be implemented if there is a need for non-32-byte witness programs for a particular non-0 SegWit version. Pieter believes that the impact on production systems will be minimal, as many wallets already do not accept unknown witness versions in outputs.</summary>
    <published>2019-12-10T01:50:38+00:00</published>
  </entry>
</feed>
