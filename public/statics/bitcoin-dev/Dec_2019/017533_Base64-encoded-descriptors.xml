<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Base64-encoded descriptors</title>
  <updated>2023-06-13T22:53:21.151546+00:00</updated>
  <author>
    <name>William Casarin 2019-12-25 17:17:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Base64-encoded descriptors</title>
    <updated>2023-06-13T22:53:21.151546+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017533.html" rel="alternate"/>
    <summary>Chris Belcher, a developer at bitcoin-dev, proposed that descriptors should become the standard for master public keys. However, he acknowledged that one downside is that users cannot easily copy and paste them to make watch-only wallets because the descriptors contain parenthesis and commas which stop highlighting by double-clicking, and the syntax might look scary to new users. An obvious solution would be to base64 encode the descriptors, resulting in a text blob as the master public key without any extra details to bother users. This solution was suggested by achow101 during discussions with Chris. Will, another developer, disagreed with the idea of encoding descriptors as it obfuscates useful information that can be viewed at a glance. Encoding makes more sense if it's non-human-readable binary data that needs to be transferred over a plaintext channel. Will had previously suggested using base58 or base62 +hrp for PSBT in another discussion on bitcoin-dev mailing list, as they are better than base64 for double-click copy-pasting. He preferred bech32, base58, or base62, and felt that encoding of any kind didn't make much sense in this case.</summary>
    <published>2019-12-25T17:17:18+00:00</published>
  </entry>
</feed>
