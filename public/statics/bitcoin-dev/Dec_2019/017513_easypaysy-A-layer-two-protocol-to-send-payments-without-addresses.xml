<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>easypaysy - A layer-two protocol to send payments without addresses</title>
  <updated>2023-06-13T22:49:12.143234+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-06 17:16:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>easypaysy - A layer-two protocol to send payments without addresses</title>
    <updated>2023-06-13T22:49:12.143234+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017513.html" rel="alternate"/>
    <summary>The email exchange discusses various features of a proposed protocol related to master accounts, control transactions and the use of easypaysy identifier. The whitepaper proposes that service providers won't have control over user funds and would only aggregate account info in case of master accounts. However, it is not clear how this feature will mesh with the rest of the protocol. Sign-to-contract is suggested as an alternative to OP_RETURN for further updates on the single account backed by funding TXO. The need for mirror servers is highlighted to mitigate the risk of losing account information if the service provider disappears. The issue of control transactions on top of the funding txo is also discussed, where retaining partial control can lead to user inability to update their account. Finally, there is a discussion about the easypaysy identifier, which refers to the funding txo that roots the further control transactions, and the need to change the identifier if the user makes a control transaction.</summary>
    <published>2019-12-06T17:16:44+00:00</published>
  </entry>
</feed>
