<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-05-20T08:29:12.656666+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-22 01:15:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-05-20T08:29:12.657665+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/016002.html" rel="alternate"/>
    <summary>In a recent update on bitcoin-dev mailing list, Laolu Osuntokun shared the script results and compared them to the original median size of the same block range. The data shows a 34% reduction in filter size when compared to the current filter with both txid, prev outpoint, output scripts. On the application level, switching to the input prev output script may make things awkward as it would need access to an additional (outpoint -&gt; script) map to locate the matching transaction without access to an up-to-date UTOX set. If the filter sizes need to drop further, then the false positive rate might need to be raised. Laolu asked for estimates or direct measures w.r.t how much bandwidth current BIP 37 light clients consume. He suggested removing the current "extended" filter from the BIP altogether and re-adding it later with a distinct service bit if a compelling use case for being able to filter the sigScript/witness arises. Pieter Wuille responded that all the data needed for such a filter is in the block + undo files (the latter contain the scriptPubKeys of the outputs being spent). Laolu also shared that his script hasn't finished yet due to the increased I/O load to look up the scripts when indexing and he will report back once it's finished.</summary>
    <published>2018-05-22T01:15:22+00:00</published>
  </entry>
</feed>
