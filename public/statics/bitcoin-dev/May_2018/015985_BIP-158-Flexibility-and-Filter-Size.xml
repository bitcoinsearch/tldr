<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-06-13T02:27:03.605486+00:00</updated>
  <author>
    <name>Jim Posen 2018-05-17 20:19:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-06-13T02:27:03.605486+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015985.html" rel="alternate"/>
    <summary>The author expresses doubt that lite clients cross-checking will ever be implemented due to bandwidth overhead and complexity, as well as the fact that many lite clients already don't implement certain sanity checks. However, the author argues that designing the protocol in an insecure way solely due to lite client shortcuts is overly pessimistic, and if the protocol can provide additional security options, it should. On the topic of filtering, the author suggests that filtering by txid of spending transaction may be preferable to filtering by outpoint spend because there are fewer transactions in a block than txins. However, this approach wouldn't work for malleable transactions. The author is open to the idea of splitting the basic filter into three separate filters based on data type but notes some bandwidth concerns and suggests that splitting the filters themselves while still having the basic filter header cover all three filters could be a solution. This would mean that full nodes would have to compute all three filters to compute the filter header.</summary>
    <published>2018-05-17T20:19:17+00:00</published>
  </entry>
</feed>
