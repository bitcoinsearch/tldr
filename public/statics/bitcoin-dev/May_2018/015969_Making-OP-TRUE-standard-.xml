<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making OP_TRUE standard?</title>
  <updated>2023-06-13T02:07:35.064612+00:00</updated>
  <author>
    <name>Rusty Russell 2018-05-17 02:44:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making OP_TRUE standard?</title>
    <updated>2023-06-13T02:07:35.064612+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015969.html" rel="alternate"/>
    <summary>Luke Dashjr, a Bitcoin Core developer, suggests having a consensus rule that a bit must be set for an expected behavior and the bit may only be set when the last output is exactly 00000000000000000181. He also proposes having a template that when combined with a 0-value is always valid only if spent in the same block. Meanwhile, Rusty Russell, another Bitcoin Core developer, believes the best mitigation against UTXO bloat is to make the fees as low as possible, put a CSV delay on the to-remote output, and attach more value to the OP_TRUE output, say 1000 satoshi. However, it turns out they probably don't want an OP_TRUE output nor P2SH, because then the spending tx would be malleable. So P2WSH is preferred. Russell suggests that the network benefits from using OP_TRUE outweighs the risk, but it would be nice if OP_TRUE P2WSH spends were always considered RBF.</summary>
    <published>2018-05-17T02:44:53+00:00</published>
  </entry>
</feed>
