<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>[bitcoin-discuss] Checkpoints in the Blockchain.</title>
  <updated>2023-05-20T13:16:31.219893+00:00</updated>
  <author>
    <name>Damian Williamson 2018-05-20 05:12:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>[bitcoin-discuss] Checkpoints in the Blockchain.</title>
    <updated>2023-05-20T13:16:31.219893+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015996.html" rel="alternate"/>
    <summary>The Bitcoin-discuss forum has been discussing the importance of having deep blockchain corruption recovery mechanisms and the potential issues with using something like Stuxnet to change copies of the blockchain. Some members suggest rendering the blockchain into something memorable to prevent hijacking of memory, with others arguing that the blockchain itself is the perfect solution due to its internal consistency and inability to be subject to a Sybil attack or other hijacking.However, concerns have been raised about the possibility of two versions of the code being created, one with a fake checkpoint that is useful to a powerful attacker. The discussion highlights the need for a shared memory of the state of a recent UTXO Set to obviate the need for historical transaction data and the challenges of choosing between multiple options. Ultimately, the discussion emphasizes the importance of maintaining the integrity of the blockchain to ensure the validity of transactions and the security of the network.One suggestion put forth by Dave Scotese on the mailing list is to render a SHA256 hash into something memorable and difficult to forget. Each of the 256 bits could be used to specify something important about the rendering, which is memorable in an instinctive human-memory way. If everyone involved in Bitcoin recognizes this protection, it relieves the need to retain the full blockchain to validate the UTXO Set at that point, as enough people will recognize it and it can be validated without reference to any kind of prior computer record.Scott Roberts disagreed with this premise and proposed using words as a common way of doing what Scotese was thinking about. If the checkpoint could be a hash that meets a difficulty target, the possibilities are 2^182 at the current hashrate instead of 2^256, requiring only 12 or 13 common words with their various possible endings (30,000). To solve the issue of forgetting passphrases, Scotese suggests coupling the data with far more items than we normally do, creating a phrase memorable only in the language for which the algorithm is developed.An algorithm could be used with the Bip39 word list to categorize the words according to parts of speech. The bits could then be used to determine which word goes next in a kind of ad-lib, but this creates a phrase that is only memorable in the language for which the algorithm is developed. Overall, the discussion highlights the importance of finding ways to maintain the integrity of the blockchain while making it more accessible and user-friendly.</summary>
    <published>2018-05-20T05:12:23+00:00</published>
  </entry>
</feed>
