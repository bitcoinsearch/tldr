<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-06-13T02:29:22.757084+00:00</updated>
  <author>
    <name>Johan Tor√•s Halseth 2018-05-21 08:35:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-06-13T02:29:22.757084+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015999.html" rel="alternate"/>
    <summary>The idea of letting full-nodes decide which subsets of elements to serve filters for has been proposed for light wallets to download the minimum amount of data required to operate. Instead of deciding up front which subset of elements will be most useful, a full node would advertise the subsets it can serve filters for and a light client could choose to download the minimal filter type covering its needs. The benefits are minimal bandwidth usage for the light client and the ability for filter types to grow organically with full-node implementations having sane defaults for served filter types. The main disadvantage is the exponential blowup in the number of possible filter types in the number of element types. However, this would allow starting out small with only the necessary elements and node operators could serve subsets corresponding to regular and extended filters anyway. This approach would also provide data on the most widely used filter types for making decisions on what should be part of filters to eventually commit to in blocks.</summary>
    <published>2018-05-21T08:35:28+00:00</published>
  </entry>
</feed>
