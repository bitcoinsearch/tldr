<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making OP_TRUE standard?</title>
  <updated>2023-06-13T02:08:34.519993+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-05-10 03:07:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making OP_TRUE standard?</title>
    <updated>2023-06-13T02:08:34.519993+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015946.html" rel="alternate"/>
    <summary>A low value OP_TRUE-only script was identified as an example of where the weight doesn't reflect the true cost, causing it to use a UTXO forever while only costing a weight of 4. Johnson's idea is to have a template, such as OP_2-only, that when combined with a 0-value is always valid only if spent in the same block. On the Lightning side, two commitment transaction options were proposed to address this issue. The first option involves using the minimum feerate but always having the above OP_TRUE output, which requires more blockchain space for unilateral closes. The second option stores two versions of a commitment transaction: one with a negotiated feerate without the OP_TRUE output and another with a slightly increased feerate and an OP_TRUE output. At unilateral close, the version with a negotiated feerate is used if possible, but if not, the other version is RBF'd with a higher feerate and CPFP'd on top. There are no legitimate reasons for having multiple dummy outputs.</summary>
    <published>2018-05-10T03:07:49+00:00</published>
  </entry>
</feed>
