<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Should Graftroot be optional?</title>
  <updated>2023-05-20T13:17:05.388522+00:00</updated>
  <author>
    <name>Pieter Wuille 2018-05-24 01:58:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Should Graftroot be optional?</title>
    <updated>2023-05-20T13:17:05.388522+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/016019.html" rel="alternate"/>
    <summary>Pieter Wuille, a Bitcoin Core contributor and blockchain expert, has raised concerns about the deployment of Taproot and Graftroot. In an email sent to the Bitcoin developers' mailing list, he suggested that a practical deployment could require a way to explicitly enable or disable Graftroot spending. Wuille listed several approaches to this, but noted that all of them are less efficient or private than always permitting Graftroot spends directly. He suggested that the community should focus on reasons why a lack of commitment to enabling Graftroot may result in it being incompatible with certain use cases, or other reasons why it could interfere with applications adopting such outputs. Wuille clarified that his concerns only apply to a new hypothetical Taproot/Graftroot output type that combines pay-to-pubkey and pay-to-script in a single scriptPubKey that just contains a public key. He also noted that the concern of making Graftroot optional does not apply to Taproot, as the Taproot spending path's script is committed to, allowing the script to be explicitly chosen to be a non-spendable script.</summary>
    <published>2018-05-24T01:58:11+00:00</published>
  </entry>
</feed>
