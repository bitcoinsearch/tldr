<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>UHS: Full-node security without maintaining a full UTXO set</title>
  <updated>2023-06-13T02:19:51.186096+00:00</updated>
  <author>
    <name>Cory Fields 2018-05-17 17:16:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>UHS: Full-node security without maintaining a full UTXO set</title>
    <updated>2023-06-13T02:19:51.186096+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015980.html" rel="alternate"/>
    <summary>The discussion in this context is about reducing the size of a pruned node by 40% and less than 1% reduction in an archive node by storing only hashes of unspent outputs instead of storing all unspent outputs. Gregory Maxwell initially had some doubts regarding the 5% ongoing bandwidth increase, which might not be a win to achieve the above-mentioned reduction. However, he thinks that the overhead is not really 5%, but it's 5% measured in the context of inefficient transaction mechanisms. He believes that it might result in more like a 25% increase if we consider the size of a txn vs size of tx+scriptpubkeys, amounts. Despite this, the implementation could be done without marrying the network to it forever, as it wouldn't change the blockchain data structure. Matt suggested comparing utxo size at each block and over-the-wire size for each block, while Greg pointed out that de-duping benefits are independent of the UHS use-case.</summary>
    <published>2018-05-17T17:16:46+00:00</published>
  </entry>
</feed>
