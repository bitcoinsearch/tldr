<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making OP_TRUE standard?</title>
  <updated>2023-05-20T08:17:02.141835+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-09 22:06:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making OP_TRUE standard?</title>
    <updated>2023-05-20T08:17:02.141835+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015939.html" rel="alternate"/>
    <summary>The Lightning Network protocol is facing a problem with predicting future fees. To solve this issue, there is a proposal to include a 546 satoshi OP_TRUE output in commitment transactions so that minimal fees are used and then use CPFP. However, a raw 'OP_TRUE' is non-standard and would have to be P2SHed. Johnson Lau suggested using ANYONECANPAY to sign the tx instead to add more inputs for fees, although the total transaction size would be bigger than the OP_TRUE approach. This approach is not possible when dealing with multi-transaction contracts as changing the txid of the root commitment will invalidate all the nested multi tx contracts. Additionally, they suggest a long-term solution of a more flexible SIGHASH system to allow people to easily add more inputs and outputs. A recent proposal to introduce SIGHASH_NOINPUT as a new sighash type presents an opportunity to introduce more flexible fine-grained sighash inclusion control.</summary>
    <published>2018-05-09T22:06:03+00:00</published>
  </entry>
</feed>
