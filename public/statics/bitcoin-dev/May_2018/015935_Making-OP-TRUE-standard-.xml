<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making OP_TRUE standard?</title>
  <updated>2023-05-20T08:17:41.054443+00:00</updated>
  <author>
    <name>Johnson Lau 2018-05-09 17:56:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making OP_TRUE standard?</title>
    <updated>2023-05-20T08:17:41.054443+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015935.html" rel="alternate"/>
    <summary>In a Bitcoin-dev post, Rusty Russell discusses the problem of predicting future fees in the lightning protocol. To solve this issue, he suggests creating a standard for "0 fee tx with exactly one OP_TRUE output." This would ensure that CPFP is always needed and the OP_TRUE output won't pollute the UTXO set. However, due to CSV delays on outputs, they would have to P2SH it as a raw 'OP_TRUE' is non-standard. Russell asks if there are any reasons not to suggest such a policy change.Another suggestion made in response to the problem is to use ANYONECANPAY to sign the tx, which would allow adding more inputs for fees without asking for any protocol change. While this approach results in a bigger total tx size than the OP_TRUE approach, it offers greater flexibility. In the long-term, the ideal solution may be to have a more flexible SIGHASH system to allow people to add more inputs and outputs easily.</summary>
    <published>2018-05-09T17:56:46+00:00</published>
  </entry>
</feed>
