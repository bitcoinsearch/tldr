<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP 158 Flexibility and Filter Size</title>
  <updated>2023-05-20T08:29:46.033327+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-19 02:57:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP 158 Flexibility and Filter Size</title>
    <updated>2023-05-20T08:29:46.033327+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015992.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list is centered around improvements to the way block filters are implemented. Specifically, the proposal is to filter input prevouts based on the scriptpubkey being 'spent'. One concern raised is that in order for a new node to catch up the filter index, they would need to build up a utxo-set in memory during indexing or require a txindex to look up the prev out's script. The first option increases the memory load during indexing, and the second requires nodes to have a transaction index (and would also add considerable I/O load). However, proceeding from tip doesn't add any additional load assuming that the block is synchronously indexed as it is validated. A script is being run to compare the filter sizes assuming the regular filter switches to include the prev out's script rather than the prev outpoint itself. The discussion continues with various suggestions for improving the filtering process.</summary>
    <published>2018-05-19T02:57:12+00:00</published>
  </entry>
</feed>
