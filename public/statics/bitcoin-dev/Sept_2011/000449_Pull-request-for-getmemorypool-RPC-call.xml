<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pull request for "getmemorypool" RPC call</title>
  <updated>2023-06-04T18:54:43.865714+00:00</updated>
  <author>
    <name>Forrest Voight 2011-09-05 02:21:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pull request for "getmemorypool" RPC call</title>
    <updated>2023-06-04T18:54:43.865714+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-September/000449.html" rel="alternate"/>
    <summary>Forrest Voight has posted a pull request on Github, which was originally a patch that returned Bitcoin's memory pool as a list of transaction hashes and the amount of total fees, but evolved into a full alternative to the "getwork" RPC call for clients that create their generation transactions. The pull request contains a diff, which shows all the changes in the code. The call calls CreateBlock and returns parts of it for mining, but instead of generating its own merkle tree, it returns all the information needed to create a generation transaction in addition to the full contents of other transactions that should be included.The getmemorypool [data] command is used to construct a block to work on. If [data] is not specified, it returns data such as block version, hash of current highest block, contents of non-coinbase transactions, maximum allowable input to coinbase transaction, timestamp appropriate for next block, and compressed target of next block. If [data] is specified, it tries to solve the block and returns true if it was successful.The new pull request has had some testing done with p2pool and resulted in the first p2pool generated block with transactions. The link to the blockexplorer is provided in the post.</summary>
    <published>2011-09-05T02:21:24+00:00</published>
  </entry>
</feed>
