<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Testing commits</title>
  <updated>2023-05-18T22:16:54.510103+00:00</updated>
  <author>
    <name>Matt Corallo 2011-09-07 03:51:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Testing commits</title>
    <updated>2023-05-18T22:16:54.510103+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-September/000477.html" rel="alternate"/>
    <summary>Alex Waters is working on creating a stable build environment for testers. The first item on his to-do list is building bitcoin 4.0 source in Windows 7. He expresses concern about the user-facing quality of the software and notes that it is still very beta in quality. He plans to create a package of the build dependencies and upload it to SF, using an outdated but still functional guide provided on bitcointalk.org. Updated instructions for the build process are also available on the same forum.The second task on his list is building bitcoin 4.0 source in Ubuntu 11. Unlike the Windows build, he believes no package is needed, as relevant packages can be apt-getted. There's already good documentation available on doc/build-unix.txt, albeit somewhat ubuntu-specific.Waters is compiling a list of commits that need testing in both environments, and he encourages users to link pull requests in response to https://github.com/alexwaters/bitcoin/issues/2. He offers to automate the testing process via jenkins.bluematt.me for those feeling lazy. This would produce builds almost identical to those that will come out of gitian.Automated testing scripts could be easily hacked up to automatically sanity-test pull requests as they come in and catch common errors (or just sanity failures). While not a requirement for pull requests, this prioritization system will help process the important/easy ones a lot faster. Waters is open to discussing other ways of prioritizing pull requests, but for the time being, this system seems effective.</summary>
    <published>2011-09-07T03:51:05+00:00</published>
  </entry>
</feed>
