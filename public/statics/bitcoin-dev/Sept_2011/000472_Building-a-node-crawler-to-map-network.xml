<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Building a node crawler to map network</title>
  <updated>2023-06-04T18:56:49.863569+00:00</updated>
  <author>
    <name>Steve 2011-09-06 15:25:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Building a node crawler to map network</title>
    <updated>2023-06-04T18:56:49.863569+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-September/000472.html" rel="alternate"/>
    <summary>The discussion revolves around the scalability of Bitcoin and how to handle an increase in popularity. The issue is that as more users migrate to using lightweight clients, it can lead to running out of sockets. Lightweight clients cannot verify or relay, so they use "heard from lots of nodes" as a proxy for validity. This leads to them being socket-intensive and potentially causing problems with full nodes. One solution proposed is to use frontend proxies, which would handle things like outbound tx broadcasts, deduping inbound broadcasts, connection setup, relaying recently found blocks, etc. This would free up the bitcoinds time for verification and wallet manipulation. A well-written proxy could support tens of thousands of simultaneous clients.</summary>
    <published>2011-09-06T15:25:09+00:00</published>
  </entry>
</feed>
