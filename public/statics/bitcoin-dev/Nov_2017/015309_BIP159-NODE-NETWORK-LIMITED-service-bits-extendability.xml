<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP159 - NODE_NETWORK_LIMITED service bits, extendability</title>
  <updated>2023-06-12T22:19:06.515113+00:00</updated>
  <author>
    <name>Sjors Provoost 2017-11-21 14:03:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP159 - NODE_NETWORK_LIMITED service bits, extendability</title>
    <updated>2023-06-12T22:19:06.515113+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015309.html" rel="alternate"/>
    <summary>The proposed Bitcoin Core implementation of BIP159 aims to allow pruned nodes to serve a limited number of historical blocks, instead of none at all. However, it contains a counter-measure for peer fingerprinting, which could limit pruned nodes to only serve the last 288 blocks. While this is an improvement over the current situation, it seems wasteful for nodes with 10-100 GB of storage. A future extension of this BIP could allow more flexibility by limiting the choices to e.g. 288 + 1000 * 2^n, and node operators could opt-in if they think the increased fingerprint risk outweighs their desire to share archived blocks. Upgraded nodes may need a new message type to communicate the chosen prune depth, and waiting for BIP150 would be appropriate, according to Jonas Schnelli. However, the anti-fingerprinting measure should not be restricted to just whitelisted peers. Minor suggestions for improving the BIP itself include adding links to mailing list discussions in the reference section and explaining that 288 is not just the minimum limit for Bitcoin Core, but also the bulk of traffic.</summary>
    <published>2017-11-21T14:03:46+00:00</published>
  </entry>
</feed>
