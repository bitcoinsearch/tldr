<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why SegWit Anyway?</title>
  <updated>2023-05-20T04:21:59.802265+00:00</updated>
  <author>
    <name>Johnson Lau 2017-11-20 17:45:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why SegWit Anyway?</title>
    <updated>2023-05-20T04:21:59.802265+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015302.html" rel="alternate"/>
    <summary>A user on the bitcoin-dev mailing list asked why the format of transactions needs to be changed for SegWit, and suggested computing the Transaction ID (TxID) in the same way the hash for signing the transaction is computed. However, this would not work due to different SIGHASH flags resulting in multiple ways to hash a transaction. Changing the definition of TxID would require a hardfork change, meaning everyone would need to upgrade or a chain split would occur. Instead, it is possible to use “normalised TxID” (BIP140) as a softfork solution to fix the malleability issue. BIP140 does not change the definition of TxID, but rather uses the normalized txid (i.e. txid with scriptSig removed) when making signatures. This approach does not have the side-effect of block size increase like segwit (BIP141), but makes the UTXO set permanently bigger as the database needs to store both txid and normalized txid.</summary>
    <published>2017-11-20T17:45:18+00:00</published>
  </entry>
</feed>
