<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Generalised Replay Protection for Future Hard Forks</title>
  <updated>2023-06-12T22:02:01.517508+00:00</updated>
  <author>
    <name>Sjors Provoost 2017-11-09 21:01:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Generalised Replay Protection for Future Hard Forks</title>
    <updated>2023-06-12T22:02:01.517508+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015272.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Jacob Eliosoff asked about the validity of an address across various forks. He suggested that while a private key in cold storage would remain valid across hard forks, an address would only be valid for the fork it was generated for. However, he raised the possibility of scenarios where it might be necessary for an address to be valid across all chains, such as to intentionally allow replay protection. The proposal suggests that nForkId could be used to specify the fork in bech32. While nForkId is only in the transaction signature pre-image and not in the serialized transaction, a node would just need to check if the signature is valid. The purpose of nForkId 1 is unclear, but it may provide a way to opt-out of replay protection of any fork, where deemed necessary (can be beneficial for some L2 applications). In Spoonnet, the version number is added to the SIGHASH_TYPE in the pre-image.</summary>
    <published>2017-11-09T21:01:10+00:00</published>
  </entry>
</feed>
