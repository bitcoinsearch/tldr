<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Simplicity: An alternative to Script</title>
  <updated>2023-06-12T21:52:03.766469+00:00</updated>
  <author>
    <name>Mark Friedenbach 2017-11-01 01:46:54</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 15:31:22</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 22:50:04</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 22:32:42</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-10-30 23:29:28</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-31 20:38:16</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-31 21:01:05</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 15:31:22</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 21:56:00</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 22:14:44</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-31 20:38:16</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-31 20:46:49</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-31 21:01:05</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-30 15:22:20</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 15:31:22</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 21:42:44</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 21:56:00</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 22:14:44</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-30 15:22:20</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 21:42:44</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 22:32:42</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-10-30 23:29:28</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-31 20:46:49</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-31 21:01:05</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 21:42:44</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 22:32:42</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 22:50:04</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-11-01 01:46:54</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 22:50:04</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-31 20:46:49</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-10-30 21:56:00</name>
  </author>
  <author>
    <name>Matt Corallo 2017-10-30 22:14:44</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-31 20:38:16</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-11-01 01:46:54</name>
  </author>
  <author>
    <name>Russell O'Connor 2017-10-30 15:22:20</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-10-30 23:29:28</name>
  </author>
  <link href="bitcoin-dev/Nov_2017/015231_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015218_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015226_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015225_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015227_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015228_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015230_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015218_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015223_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015224_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015228_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015229_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015230_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015217_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015218_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015222_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015223_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015224_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015217_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015222_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015225_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015227_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015229_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015230_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015222_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015225_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015226_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015231_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015226_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015229_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015223_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015224_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015228_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015231_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015217_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2017/015227_Simplicity-An-alternative-to-Script.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Simplicity: An alternative to Script</title>
    <updated>2023-06-12T21:52:03.767423+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015231.html" rel="alternate"/>
    <summary>Russell O'Connor has proposed a new alternative to Bitcoin Script called Simplicity that is designed to operate at the consensus layer. Simplicity is a low-level, typed, functional, native MAST language where programs are built from basic combinators. It comes with formal denotational semantics and formal operational semantics that have both been proven equivalent in the Coq proof assistant. The language also includes easy-to-compute static analyses that can calculate bounds on space and time resources needed for evaluation, making it important for node operators and smart-contract participants. Simplicity's jets replace common expressions and directly implement them with C code, covering arithmetic operations, elliptic curve operations, and cryptographic operations including hashing and digital signature validation. Unused branches of Simplicity programs are pruned at redemption time, enhancing privacy, reducing block weight used, and potentially reducing space and time resource costs needed for evaluation. The final design of Simplicity includes full convent support, allowing access to all transaction data, support for signature aggregation, and support for delegation.An SDK will be produced that includes the formal semantics and correctness proofs in Coq, a Haskell implementation for constructing Simplicity programs, and a C interpreter for Simplicity. After an SDK is complete, the next step will be making Simplicity available in the Elements project so that anyone can start experimenting with Simplicity in sidechains. Only after extensive vetting would it be suitable to consider Simplicity for inclusion in Bitcoin.While one can write Simplicity by hand, it is expected to be the target of one or multiple front-end languages. In response to Matt Corallo's concerns about "jets" in Bitcoin, Mark Friedenbach proposed Script versions that would encode which jets are optimized and what their optimized cost is, making it no longer a hard-fork.It is important to note that the work being done on Simplicity is not intended to delay the consideration of the various Merkelized Script proposals currently ongoing. Overall, Simplicity provides a rigorous base from which Bitcoin Script can potentially be built out of, but it does not mandate a particular depth or level of adoption. The language is still in development and more work needs to be done to prove its practicality.Russell O'Connor has developed Simplicity's formal semantics to prove correct an implementation of the SHA-256 compression function written in Simplicity and has also implemented a variant of ECDSA signature verification in Simplicity. The language comes with easy-to-compute static analyses that can compute bounds on the space and time resources needed for evaluation. After completing a bare-bones SDK, Simplicity will be made available in the Elements project for experimentation in sidechains. Simplicity supports full covenant support, allowing access to all transaction data, signature aggregation, and delegation. Only after extensive vetting would it be suitable to consider Simplicity for inclusion in Bitcoin.Bitcoin developer Russell O'Connor has created a new alternative to Bitcoin Script, called Simplicity. Simplicity is a low-level, typed, functional, native MAST language designed to operate at the consensus layer of Bitcoin. It comes with formal denotational semantics and formal operational semantics formalized in Coq proof assistant and proven equivalent. In addition, Russell O'Connor presented Simplicity as an alternative to Bitcoin Script, at the PLAS 2017 Workshop on Programming Languages and Analysis for Security. In terms of implementation, there are many ways to use Simplicity, which involves defining a collection of high-level operations and combinators at the level of things in Bitcoin Script. A script-versioning mechanism can provide a straightforward way to upgrade discounted cost tables in a compatible way. Another potential tool is the idea of sunsetting cost limits that sunset, where after a certain amount of time, the limits go away with an assumption that updated limits have been softforked in that activate at that time and themselves expire in N years. However, these options exist independently of simplicity.</summary>
    <published>2017-11-01T01:46:54+00:00</published>
  </entry>
</feed>
