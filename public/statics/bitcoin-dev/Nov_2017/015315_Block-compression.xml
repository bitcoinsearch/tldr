<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Block compression</title>
  <updated>2023-05-20T04:25:26.924335+00:00</updated>
  <author>
    <name>Jeff Johnson 2017-11-27 02:11:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Block compression</title>
    <updated>2023-05-20T04:25:26.924335+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015315.html" rel="alternate"/>
    <summary>A new member of a mailing list, directed from the Bitcoin core GitHub, has suggested a possible solution to increase block data without increasing size on disk, memory, or transmission. The solution involves applying different compression algorithms to achieve about a 50% compression ratio. Various compressions such as Gzip, LZMA, ZStandard, and LZ4 were tested on a recent Bitcoin block, with results showing LZ4 produces the fastest decompression speed at 3.3GB per second. However, ZStandard offers a greater than 50% compression ratio, with a good decompression ratio of 900MB per second, making it the most practical choice. For implementation in the Bitcoin protocol, miners could choose to keep sending blocks as is, or opt-in to compress blocks and specify compression type in a set of bits somewhere, keeping the compressed size under limit. The Bitcoin client code would also need to handle compression bits and the limits of signature data modified to deal with compression. Although schnorr signatures provide a 25% compression gain, Jeff Johnson suggests they may compress even further when combined with the above compression methods.</summary>
    <published>2017-11-27T02:11:27+00:00</published>
  </entry>
</feed>
