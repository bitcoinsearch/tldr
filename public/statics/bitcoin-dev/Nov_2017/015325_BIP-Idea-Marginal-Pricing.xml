<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP Idea: Marginal Pricing</title>
  <updated>2023-05-20T04:26:15.777594+00:00</updated>
  <author>
    <name>Gregory Maxwell 2017-11-30 09:12:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP Idea: Marginal Pricing</title>
    <updated>2023-05-20T04:26:15.777594+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015325.html" rel="alternate"/>
    <summary>The proposal to maximize total transaction fees and reduce individual transaction fees is to accept zero fees natively in the protocol and instead accept actual fees out-of-band or via OP_TRUE outputs which the miner can collect. Miners today already accept such out-of-band fees. Long term, tx fees must support hash power by themselves. The economic approach to this is to remove the block size limit and allow miners to implicitly choose the market sat/byte rate with the cheapest-fee transaction included in their block. Excess transaction fees are refunded to the inputs. This will result in a dynamic block size limit regulated by profit motive. Transaction fees will be maximized for every block and all fees will be fair. Miners are incentivized to ignore low-fee transactions because they would shave the profits of their other transactions and increase their hash time. Rarely, sections of the backlog would become large enough to be profitable. This means every so many blocks, lower-fee transactions would be included en masse after having been ignored long enough. Low-fee transactions thus gain a liveness property not previously enjoyed: low-fee transactions will eventually confirm. Users targeting the backlog market would match the price of the largest backlog section in order to be included in the next backlog block.</summary>
    <published>2017-11-30T09:12:48+00:00</published>
  </entry>
</feed>
