<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Incorporating block validation rule modifications into the block chain</title>
  <updated>2023-06-06T10:02:42.887408+00:00</updated>
  <author>
    <name>Raph Frank 2013-02-12 13:49:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Incorporating block validation rule modifications into the block chain</title>
    <updated>2023-06-06T10:02:42.887408+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-February/002158.html" rel="alternate"/>
    <summary>The suggestion of making changes to the "hard" parameters within the protocol for Bitcoin has been presented. The proposed method involves adding a new field to the coinbase transaction, and following a specific process for updating the parameters directly. This process would involve a miner proposing a change, with seconding required by at least six of the next ten blocks to prevent proposal death. For the change to be active, 750 of the last 1000 blocks or 950 of any successive 1000 previous blocks must vote yes, while more than 500 of the previous 1000 voting no would result in the proposal's termination.This method could also be used to update NOPs, and signing algorithms could be incorporated. However, this would require a more complex scripting language for defining opcode functions. For each new opcode change, it may be necessary to have a version, with scripts being valid under all versions in the chain so far. Once an op-code is accepted, new client implementations will likely create dedicated functions for performing the calculation. Older clients would have to perform the calculations using the scripting language. These changes could be made based on consensus, following BIP-34 guidelines.</summary>
    <published>2013-02-12T13:49:56+00:00</published>
  </entry>
</feed>
