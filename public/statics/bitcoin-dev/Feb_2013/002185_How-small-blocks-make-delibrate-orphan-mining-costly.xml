<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>How small blocks make delibrate orphan mining costly</title>
  <updated>2023-06-06T10:16:32.914755+00:00</updated>
  <author>
    <name>Peter Todd 2013-02-24 01:06:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>How small blocks make delibrate orphan mining costly</title>
    <updated>2023-06-06T10:16:32.914755+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-February/002185.html" rel="alternate"/>
    <summary>In the low-subsidy future, fees will be the primary source of income for miners. This means that in some cases, large miners may intentionally attempt to mine a block that would orphan the current best block to increase their profits. However, this strategy runs into a problem when there are limited block sizes as there is a limit to the number of transactions that can fit into a block. Thus, the best strategy for miners is to accept and move on. There is a way to defeat this strategy which involves using nLockTime by default. Clients should create their transactions with nLockTime set such that only the next block can include the transaction or even farther into the future if the transaction is not time-sensitive. With nLockTime, to get ahead, one needs to mine two blocks, and the first block could only gain the transactions in the block it orphans. This creates more pressure as the block becomes full. Using nLockTime in this way does not harm clients and provides benefits in the future. Clients can protect themselves from any potential loss due to miners' deliberate actions by using nLockTime.</summary>
    <published>2013-02-24T01:06:51+00:00</published>
  </entry>
</feed>
