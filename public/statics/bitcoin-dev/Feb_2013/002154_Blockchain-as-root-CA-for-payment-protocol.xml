<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blockchain as root CA for payment protocol</title>
  <updated>2023-06-06T09:56:01.923614+00:00</updated>
  <author>
    <name>Peter Todd 2013-02-11 11:21:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blockchain as root CA for payment protocol</title>
    <updated>2023-06-06T09:56:01.923614+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-February/002154.html" rel="alternate"/>
    <summary>In this email conversation, Timo Hanke justifies why he does not use Namecoin or any other alt-chain to establish an identity for a payment protocol. He explains that his incoming payments will land on addresses that are derived from this identity, making it as important (security-wise) as anything else involved in the bitcoin protocol. Therefore, he would not want to have payment-ids rely on anything less than bitcoin's own blockchain. However, the person replying to him argues that creating another system is just adding to the confusion of users, who can be tricked into thinking some name snatched up by scammers in some little-used PKI system is who they are supposed to be communicating with. The person suggests that Timo should work on Namecoin and make it more usable, then add some PKI to it using the same domain names so that when they see a PKI certificate for "foo", they know it must be the same "foo" website they just visited and the same "foo at foo" they just emailed. They also suggest that Timo could register a domain name in an alt-chain, then "mine" the block by creating a suitable transaction, make sure it's the biggest fee, wait a few confirmations, and they're good to go with the same level of security as Bitcoin proper. Multiple parties can also collaborate to create the transaction, each providing and signing for an input for their portion of the total fee. Moreover, they propose a "two-step sacrifice" protocol to solve the problem of miners getting to keep the fee, making it difficult to get a block mined, or to be sure a block won't be undone later. Finally, they discuss the cost of storing the UTXO set in memory, saying that it would be better to store it in the spent outputs. They also question whether Timo's users will all want to validate some PKI certificates with the blockchain growing at a maximum rate of 55GiB/year.</summary>
    <published>2013-02-11T11:21:03+00:00</published>
  </entry>
</feed>
