<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP proposal] Private Payments</title>
  <updated>2023-06-15T22:18:34.990309+00:00</updated>
  <author>
    <name>Ruben Somsen 2022-06-27 20:30:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP proposal] Private Payments</title>
    <updated>2023-06-15T22:18:34.990309+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020607.html" rel="alternate"/>
    <summary>In a proposal to improve on the limitations of the BIP47 standard, Alfred Hodler suggests a new payment code structure that enables the signaling of specific address and script types. The proposed structure features a 2-byte bitflag array that signals the recipient's derived address types. Notification transactions still exist but no longer leave a privacy footprint on the blockchain, instead being represented by a single OP_RETURN containing a value that only Alice and Bob can calculate. The notifications process requires the use of SHA256 to connect a sender with a recipient, with Alice selecting any UTXO in her wallet and N_Alice to perform the calculation. Bob's wallet receives whole blocks but doesn't need to waste resources decoding them, simply searching for the string "BIPXXXX" in the binary blob that represents an undecoded block. Once found, Bob extracts the subsequent 32 bytes (notification) and the subsequent 33 bytes (N_Alice). The proposal also outlines a transacting process where Alice calculates a secret point, S=n_Alice*P_Bob, and a shared secret s=SHA256(S,X). Anti-spam measures can also be built into payment codes by demanding that a notification transaction meets some minimum miner fee or a multiple of some trailing average.</summary>
    <published>2022-06-27T20:30:39+00:00</published>
  </entry>
</feed>
