<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why OpenTimestamps does not "linearize" its transactions</title>
  <updated>2023-06-15T22:12:41.881727+00:00</updated>
  <author>
    <name>Peter Todd 2022-06-14 15:34:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why OpenTimestamps does not "linearize" its transactions</title>
    <updated>2023-06-15T22:12:41.882777+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020567.html" rel="alternate"/>
    <summary>In a recent email exchange on the bitcoin-dev mailing list, a user raised concerns over the use of OpenTimestamps (OTS) and its requirement for users to publicize their .ots files. The original poster argued that this requirement was needless and that enough cryptographic information could be included in the original OP_RETURN to obviate the need for publicizing the .ots file. However, Peter Todd, the creator of OpenTimestamps, responded by stating that client-side validated .ots files are necessary for scalability. Through the use of merkle trees, OpenTimestamps can timestamp tens of thousands of messages with a single transaction, making it a more efficient option. Todd also addressed concerns about the security of .ots files when shared with other parties. He explained that without cryptographic pinning, a fourth party could replace the .ots file with their own, which would change the timestamp to a later date and no longer prove the earliness of the data. Additionally, the shared data could be deleted by the other party, rendering it impossible to prove anything about it. This exchange highlights some of the complexities involved in using timestamp services like OpenTimestamps and the need for proper security measures to ensure the validity of the timestamps.</summary>
    <published>2022-06-14T15:34:36+00:00</published>
  </entry>
</feed>
