<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP47 Prague Discussion</title>
  <updated>2023-06-15T21:51:36.467385+00:00</updated>
  <author>
    <name>Ruben Somsen 2022-06-11 10:01:58</name>
  </author>
  <author>
    <name>Paul Sztorc 2022-06-11 14:30:13</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-06-11 10:01:58</name>
  </author>
  <author>
    <name>Paul Sztorc 2022-06-11 14:30:13</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-06-11 10:01:58</name>
  </author>
  <author>
    <name>Paul Sztorc 2022-06-11 14:30:13</name>
  </author>
  <link href="bitcoin-dev/June_2022/020549_BIP47-Prague-Discussion.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2022/020550_BIP47-Prague-Discussion.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2022/020549_BIP47-Prague-Discussion.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2022/020550_BIP47-Prague-Discussion.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2022/020549_BIP47-Prague-Discussion.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2022/020550_BIP47-Prague-Discussion.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP47 Prague Discussion</title>
    <updated>2023-06-15T21:51:36.467385+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020549.html" rel="alternate"/>
    <summary>The Bitcoin-developer mailing list held a discussion on improving the current implementation of BIP47, which requires a notification transaction prior to making payments. The focus was on minimizing the on-chain space required and outsourcing the notification transaction so that the link between the sender and recipient is no longer apparent on-chain. It was suggested that it may be unnecessary for the recipient to learn the payment code of the sender, and therefore, the minimum notification payload required would be reduced to a fresh sender key and a static recipient key. Another idea proposed was to put multiple notifications in a single transaction, which could be outsourced to a third party over the Lightning Network, who could be paid for their services to break the sender/recipient link. However, this approach requires custom software for the recipient to notice the notification since it's not tied to an easily noticeable output. An alternative solution would be to use the taproot annex to insert the notification payload as discounted witness data, but this makes the transaction non-standard and requires the recipient to have custom software to notice the notification. An interesting point raised during the discussion was that the recipient key could be represented using only 4 bytes (provided it is in the annex), leaving a window of 1 in ~4.3 billion for a collision. This would reduce the payload from 64 bytes to 36 bytes of witness data. However, using the annex makes the transaction non-standard and may require standardization or an alternative method should be considered. Participants in the discussion included Alekos Filini, Martin Habov≈°tiak, Daniela Brozzoni, Eric Sirion, Pavol Rusnak, Salvatore Ingala, and others. Relevant links such as Silent Payments and BIP47 were shared.</summary>
    <published>2022-06-11T10:01:58+00:00</published>
  </entry>
</feed>
