<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Playing with full-rbf peers for fun and L2s security</title>
  <updated>2023-06-15T21:58:07.728914+00:00</updated>
  <author>
    <name>Antoine Riard 2022-06-21 23:45:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Playing with full-rbf peers for fun and L2s security</title>
    <updated>2023-06-15T21:58:07.729948+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020596.html" rel="alternate"/>
    <summary>Antoine Riard has submitted a small patch against Bitcoin Core enabling it to turn on full-rbf as a policy, which is still under review. He believes that it would be beneficial to the flourishing of multi-party funded transactions to fix the Dos vector by seeing a subset of the network running full-rbf and enabling propagation of honest multi-party transactions to the interested miners. However, Peter Todd experimented by changing one of his OTS calendars to issue fee-bumping txs without the opt-in RBF flag set and made sure that the txs would propagate to the above node. As of right now, it's up to 32 replacements (once per block), without any of them mined; the calendars use the strategy of starting at the minimum possible fee, and bumping the fee up every time a new block arrives without the tx getting mined. Therefore, this is evidence that there isn't much full-rbf hash power at this moment. Nonetheless, Antoine is thinking of reaching out to a few mining node operators to advocate them with the new policy setting if/when the `fullrbf` patch lands in Bitcoin Core, including automatic outbound connections to few `NODE_REPLACE_BY_FEE` peers.</summary>
    <published>2022-06-21T23:45:48+00:00</published>
  </entry>
</feed>
