<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Playing with full-rbf peers for fun and L2s security</title>
  <updated>2023-06-15T21:55:35.687061+00:00</updated>
  <author>
    <name>alicexbt 2022-06-16 01:45:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Playing with full-rbf peers for fun and L2s security</title>
    <updated>2023-06-15T21:55:35.687061+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020578.html" rel="alternate"/>
    <summary>The security of LN and other related systems is dependent on the transaction being mined within a certain number of blocks. However, it is not possible to guarantee this regardless of fees paid, making it vulnerable if a project's security relies on it. Full-RBF has been proposed as a simple and incentive-compatible step towards more robust layer two systems. While some disagree with the rationale and lack of basic options in Bitcoin Core to employ/disable different RBF policies, others suggest using alternative implementations like Bitcoin Knots that have these options. Additionally, there are concerns about the impact of full-rbf on vulnerable projects and the lack of consensus among nodes and miners in adopting it. Despite this, proponents argue that it is necessary to address the low-fruit, naive DoS vector playable against the funding flow of multi-party funded transactions. The issue can be fixed one layer above by introducing fidelity bonds or a reliable centralized coordinator, though at the price of an overhead per-participant resources cost and loss in system openness.</summary>
    <published>2022-06-16T01:45:42+00:00</published>
  </entry>
</feed>
