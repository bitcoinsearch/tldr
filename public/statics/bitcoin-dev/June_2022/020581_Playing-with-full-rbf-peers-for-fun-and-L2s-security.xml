<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Playing with full-rbf peers for fun and L2s security</title>
  <updated>2023-06-15T21:55:19.427019+00:00</updated>
  <author>
    <name>Greg Sanders 2022-06-16 13:24:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Playing with full-rbf peers for fun and L2s security</title>
    <updated>2023-06-15T21:55:19.427019+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020581.html" rel="alternate"/>
    <summary>The security of multi-party funded transactions has been a topic of discussion among Lightning Network developers. Transactions such as coinjoins, dual-funded LN channels, and on-chain DLCs are vulnerable to a naive DoS vector that could cause significant time-value loss or fee-bumping waste due to the lack of existent full-rbf transaction-relay topology on today's p2p network. To address this issue, Antoine Riard has submitted a small patch against Bitcoin Core enabling it to turn on full-rbf as a policy. However, relying on a transaction being mined within N blocks irrespective of fees is not a secure assumption for any project.  Some disagreements have arisen with the approach, including the lack of basic options in Bitcoin Core to employ/disable different RBF policies. Developers should provide basic RBF policy options rather than attempting to define what constitutes a good policy and removing the ability to disable something when necessary. Users can try Bitcoin Knots instead which already has an option to disable all RBF policies if required, opt-in and full RBF policy. While full-rbf is a step towards more robust layer two systems, it is not a serious argument to only build robust systems after the broken ones are attacked. Recently, a Lightning dual-funded channel was proposed which has been listed in the Transactions.md file of creetlogcontracts/dlcspecs repository on GitHub. This proposal can be found at https://github.com/lightning/bolts/pull/851. The Lightning dual-funded channel allows two parties to open a channel together by each contributing an equal amount of Bitcoin. The proposed specification outlines the process for creating this type of channel, including how funds are allocated and locked up during the opening process. It also covers how transactions are signed and broadcasted to update the channel balance between the parties. This proposal has been shared on the bitcoin-dev mailing list hosted by the Linux Foundation. The mailing list provides a platform for developers to discuss technical aspects related to Bitcoin and its ecosystem. Overall, the Lightning dual-funded channel proposal aims to increase the efficiency and usability of the Lightning network by enabling users to easily create channels with other parties in a secure and decentralized manner. This could have significant implications for the scalability and adoption of Bitcoin as a payment system. Mining operators might be interested in experimenting with full-rbf as a policy to increase their income, but the low percentage of transactions replaced with opt-in RBF suggests that this may not be a significant factor in practice.</summary>
    <published>2022-06-16T13:24:03+00:00</published>
  </entry>
</feed>
