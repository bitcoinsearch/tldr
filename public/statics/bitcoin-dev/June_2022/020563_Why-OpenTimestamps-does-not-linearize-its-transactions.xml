<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why OpenTimestamps does not "linearize" its transactions</title>
  <updated>2023-06-15T22:14:26.342229+00:00</updated>
  <author>
    <name>Undiscussed Horrific Abuse, One Victim of Many 2022-06-14 12:45:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why OpenTimestamps does not "linearize" its transactions</title>
    <updated>2023-06-15T22:14:26.342229+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020563.html" rel="alternate"/>
    <summary>The conversation between two individuals begins with one discussing a new technique to rewrite history in stories by republishing other people's documents under different contexts. The discussion then turns towards the topic of timestamp services and how they provide information about the existence of content at a given time. However, one individual argues that the OpenTimestamps (OTS) service needlessly adds the requirement for users to publicize their .ots files instead of including enough cryptographic information in the original OP_RETURN. This lack of cryptographic pinning in the .ots file means that a fourth party can replace it with their own, changing the timestamp to one later and no longer proving the earliness of the data. Additionally, there is concern that OTS may fail to add transaction history containing its hashes to associated wallets, potentially resulting in them being lost in chain forks. Finally, the conversation ends with a discussion on wallets that incorporate OTS, specifically referring to cryptographic wallets that hold funds spent in etching the hash to the chain.</summary>
    <published>2022-06-14T12:45:43+00:00</published>
  </entry>
</feed>
