<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ANYPREVOUT in place of CTV</title>
  <updated>2023-06-15T19:25:51.723517+00:00</updated>
  <author>
    <name>Jeremy Rubin 2022-04-26 20:13:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ANYPREVOUT in place of CTV</title>
    <updated>2023-06-15T19:25:51.723517+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020345.html" rel="alternate"/>
    <summary>The author of a post on the bitcoin-dev mailing list has shared their thoughts on mild tweaks to APO (AnyPrevOut) that would make it less hacky. The proposed changes include removing key punning and replacing it with OP_GENERATOR and OP_INTERNALKEY, adding an additional sequence field specific to a signature, and replacing tagged keys for APO with Checksig2 or a separate feature flag for programmatic control. The author believes these changes would improve APO and make it easier to use with absolute timelocks. They also share examples of how these changes could be used in eltoo ratchets and covenants. In a separate post, another member of the mailing list suggests using a slightly tweaked version of BIP118 in place of or before doing BIP119. They argue that SIGHASH_ANYPREVOUT and its iterations have been discussed for over six years and are more widely accepted than CTV's (Consensus-enforced Transaction Verification). The post suggests that APO-AS covenants can cover the same use cases as CTV and that CTV is not necessary nor sufficient for practical vaults. The post proposes that BIP118 could benefit more Bitcoin users and asks if people would oppose the APO-AS part of BIP118 for the same reasons they might oppose BIP119. Links to the BIP118 signature message and AnyPrevOut use cases are provided.</summary>
    <published>2022-04-26T20:13:26+00:00</published>
  </entry>
</feed>
