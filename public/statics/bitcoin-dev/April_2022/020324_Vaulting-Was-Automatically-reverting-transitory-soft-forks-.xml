<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Vaulting (Was: Automatically reverting ("transitory") &gt; soft forks)</title>
  <updated>2023-05-22T19:44:41.130881+00:00</updated>
  <author>
    <name>Buck O Perley 2022-04-25 16:03:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Vaulting (Was: Automatically reverting ("transitory") &gt; soft forks)</title>
    <updated>2023-05-22T19:44:41.130881+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020324.html" rel="alternate"/>
    <summary>The Bitcoin-dev mailing list has been discussing the security of vaults recently, with a particular focus on CTV and MES vaults. CTV vaults are designed for moving funds from a "cold" side to a hot wallet, while MES vaults apply to a scenario where hot funds are inside the vault.One way to reduce the vulnerability of CTV-based vaults is by pre-programming spends so that the hot wallet can only spend a certain amount from it, capping off the total risk. Kanzure's vaults use pre-signed transactions to achieve this. However, Billy Tetrud commented on the limitations of CTV vaulting, stating that if a hot wallet key gets stolen, the user may not know it until the thief steals the funds upon landing. This theft vulnerability is a significant trade-off compared to a multisig wallet.Russell O'Connor suggested committing to the destination address during unvaulting using OP_COV, but Billy thinks it would be cumbersome, expensive to spend with, and requires fully specifying scripts leading to information duplication. Despite these concerns, discussions about designing secure vaults that meet the needs of the Bitcoin ecosystem continue.Using CTV in tapleaves with other proposals like taproot could significantly improve UX and help with problems of not sending the right amount. However, there are still limitations to consider when using such designs.</summary>
    <published>2022-04-25T16:03:12+00:00</published>
  </entry>
</feed>
