<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-15T03:53:44.100567+00:00</updated>
  <author>
    <name>Jeremy Rubin 2022-04-11 13:18:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-15T03:53:44.100567+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020219.html" rel="alternate"/>
    <summary>The conversation revolves around various topics related to blockchain schemes, useless work, Open Time Stamps (OTS), and transaction models. The first part of the discussion is about "nonsense marketing" related to blockchain schemes as "world computers." The speaker apologizes to those who are confused by the description given. The next part discusses progress, which is not considered useless work in this context. Committing some subset of data that was requested is useful work, and progress is progress even if it is not maximally useful. The third part of the conversation talks about OTS, which only proves data in the past and does not have a chain of transactions. The speaker assumes that having a chain of transactions would serve to linearize history of OTS commitments, which would let you prove given reorgs that knowledge of commit A was before B more robustly. In the final part of the conversation, the speakers discuss a personal preference versus technical requirement. One speaker prefers to do one transaction with all pending commitments at a particular time rather than wasting money on mining two transactions for a given set of commitments. However, the other speaker explains that they aren't doing any extra transactions in the model shown, but selecting the window for the next based on the prior conf. They compare two transaction models: one that tracks attempted commitments and confirmed ones and 'rewinds' after a confirm to make the next commit contain the prior attempts that didn't make it, and another where RBF is always perfect and guaranteed inclusion.</summary>
    <published>2022-04-11T13:18:10+00:00</published>
  </entry>
</feed>
