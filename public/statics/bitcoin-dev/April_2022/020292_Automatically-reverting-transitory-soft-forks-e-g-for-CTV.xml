<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Automatically reverting ("transitory") soft forks, e.g. for CTV</title>
  <updated>2023-06-15T19:07:46.381515+00:00</updated>
  <author>
    <name>Antoine Riard 2022-04-22 19:57:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Automatically reverting ("transitory") soft forks, e.g. for CTV</title>
    <updated>2023-06-15T19:07:46.381515+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020292.html" rel="alternate"/>
    <summary>In a response to David A. Harding's proposal for making CTV an automatically reverting consensus change with an option to renew, Antoine Le Calvez weighed in with some concerns of his own. He argued that the downside of creating a big footgun should be weighed far more heavily and highlighted the potential implications of not being able to downgrade to equivalent semantics around the reversion date or at the same witness cost. This could raise implications for cached fee-bumping reserves and require a re-signing of off-chain contract counterparties to migrate a balance distribution locked by CTV. Additionally, this contract "consensus" is not guaranteed and it could even be leveraged by some unfair counterparties who have small balances at stake. Le Calvez also raised the concern of negative incentives for the CTV ecosystem stakeholders, stating that as a CTV-enabled protocol developer, there is an interest to design a protocol and develop/deploy a toolchain on a short-time basis, which may not be the soundest principle in system software engineering. Such a development attitude is more likely to grieve the ecosystem with safety-critical bugs/vulnerabilities, of which the exploitation might eradicate the credibility of the CTV use-case and the wider CTV ecosystem.Furthermore, Le Calvez said he wasn't sure if a reversion date for a contracting primitive softfork was the soundest off-chain contract engineering practice. In conclusion, he suggested that the data-collection method itself to advance the consensus-building process isn't neutral on the outcome yielded and that the consensus-building stakeholders themselves aren't immune to the incentives disruptions brought by an innovation in the process.</summary>
    <published>2022-04-22T19:57:43+00:00</published>
  </entry>
</feed>
