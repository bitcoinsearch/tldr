<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Automatically reverting ("transitory") soft forks, e.g. for CTV</title>
  <updated>2023-06-15T19:07:03.161639+00:00</updated>
  <author>
    <name>James O'Beirne 2022-04-22 16:48:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Automatically reverting ("transitory") soft forks, e.g. for CTV</title>
    <updated>2023-06-15T19:07:03.161639+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020281.html" rel="alternate"/>
    <summary>The discussion revolves around the practicality and utility of various covenant proposals for Bitcoin. The author believes that vaulting is the most useful covenant since it allows significant derisking of custody for any user interested in holding their own coins. They seem to prefer CTV due to its low-risk way of getting us vaults, which justifies its added validation complexity.The criteria for adding a covenant to Bitcoin are discussed, including demonstrated use-cases and intent, alignment with Bitcoin's design and goals, technical feasibility, and well-reviewed implementation. The author questions how to objectively determine the best approach and suggests starting simple and general, gathering real usage data, and then optimizing for demonstrated needs. The topic of reverting to earlier consensus rules is touched upon as an option for simplifying code, but the author acknowledges the need to validate the historical chain. The discussion ends with a call for a test bed with real paying users, similar to Bitcoin mainnet, to determine the usefulness and demand for covenant-related consensus changes.</summary>
    <published>2022-04-22T16:48:39+00:00</published>
  </entry>
</feed>
