<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP174 PSBT test vector</title>
  <updated>2023-06-15T18:47:25.867124+00:00</updated>
  <author>
    <name>Achow101 2022-04-05 23:21:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP174 PSBT test vector</title>
    <updated>2023-06-15T18:47:25.867124+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020200.html" rel="alternate"/>
    <summary>In a recent email to the bitcoin-dev mailing list, Tobin Harding asked if anyone had software that successfully parses the extended private key seed found in the BIP174 test vector. He explained that he was implementing the test vector PSBT workflow in Rust and had everything working except he was unable to use the seed to create the extended private key. Harding provided links to BIP174 and the specific section of the workflow he was working on where the seed was needed. He included the xpriv and seed values from the test vector for reference. Despite trying to decode the seed as both base64 and base58, Harding was still unable to create the extended private key from the seed. It is worth noting that the seed is encoded as a WIF private key and decoding it as WIF will result in the 32 byte seed that can be used as specified in BIP 32. Andrew also replied to the email thread with this information.</summary>
    <published>2022-04-05T23:21:17+00:00</published>
  </entry>
</feed>
