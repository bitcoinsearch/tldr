<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - ***UNCHECKED*** Client side coinjoin amount organization with WabiSabi</title>
  <updated>2023-06-15T19:00:38.528030+00:00</updated>
  <author>
    <name>Max Hillebrand 2022-04-09 06:21:06</name>
  </author>
  <author>
    <name>Max Hillebrand 2022-04-09 06:21:06</name>
  </author>
  <author>
    <name>Max Hillebrand 2022-04-09 06:21:06</name>
  </author>
  <link href="bitcoin-dev/April_2022/020212_-UNCHECKED-Client-side-coinjoin-amount-organization-with-WabiSabi.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020212_-UNCHECKED-Client-side-coinjoin-amount-organization-with-WabiSabi.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020212_-UNCHECKED-Client-side-coinjoin-amount-organization-with-WabiSabi.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - ***UNCHECKED*** Client side coinjoin amount organization with WabiSabi</title>
    <updated>2023-06-15T19:00:38.528030+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020212.html" rel="alternate"/>
    <summary>The article published by the developers of the Wasabi wallet explains their CoinJoin algorithm that aims to improve Bitcoin transaction privacy. The protocol handles input registration and output selection uniquely, limiting input registration by a maximum suggested input value and completing it only when all users have registered their inputs. Users choose their inputs without knowing the inputs of other users, while outputs are selected based on a Schelling point among users. The denominations for output selection are determined by a deterministic frequency table based on inputs, which are decomposed into standard denominations. The client then takes its input sum and decomposes it into all possible groups of likely denominations. A shorter list of output amount groups is shuffled, and one is randomly picked to register non-deterministic denominations.The article goes on to explain the current approach taken in the Wasabi Wallet's third release candidate for organizing client-side coinjoin amounts. The wallet randomly selects between 1-10 coins to register, with a preference towards 1 if the wallet has less than 35 utxos and 10 if it has more than 125 utxos. Coins are selected based on anonscore loss, with groups created based on consolidation penalty. Groups are removed if they contain many coins from the same transaction, and the input group with the lowest weighted anonscore cost is picked. There may be randomness in the final group selection, without suffering too much anonscore consolidation penalty.Additionally, the article provides some results of simulations using the current algorithm. For example, with 50 inputs and 15 users, the median out anonsets were 3.5, and the median leftovers were 481. With 300 inputs and 70 users, the median out anonsets were 9.6, and the median leftovers were 394. The article also includes links to the Wasabi 2.0 release candidate, input selection code, amount decomposer code, and decomposition simulation.Finally, the author questions whether further ambiguity should be added at extra blockspace cost. The article provides an in-depth look at the CoinJoin algorithm and its implementation in the Wasabi wallet, highlighting the importance of privacy in Bitcoin transactions and the challenges involved in achieving it.</summary>
    <published>2022-04-09T06:21:06+00:00</published>
  </entry>
</feed>
