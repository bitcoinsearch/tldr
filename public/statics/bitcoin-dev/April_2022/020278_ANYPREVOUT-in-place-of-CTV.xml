<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ANYPREVOUT in place of CTV</title>
  <updated>2023-06-15T19:23:38.622642+00:00</updated>
  <author>
    <name>darosior 2022-04-22 11:54:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ANYPREVOUT in place of CTV</title>
    <updated>2023-06-15T19:23:38.622642+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020278.html" rel="alternate"/>
    <summary>Richard Myers has implemented Eltoo using Bitcoin Core's functional test framework and has also blogged about it. He has something similar for covenants, but it is still a work in progress. His APO page looks like a good reference on the topic. In response to a request for links to working implementations of APO and its proposed use cases, darosior suggests considering a slightly tweaked version of BIP118 in place of or before doing BIP119. SIGHASH_ANYPREVOUT and its precedent iterations have been discussed for over six years and present proven and implemented use cases. SIGHASH_ANYPREVOUTANYSCRIPT can emulate CTV just fine if its "ANYONECANPAY" behavior is made optional. CTV advocates have been presenting vaults as the flagship use case, but darosior doubts that CTV is necessary nor sufficient for this and suggests using APO-AS instead. If after some time all those who are currently dubious about CTV's stated use cases are proven wrong by on-chain usage of a less efficient construction to achieve the same goal, then CTV could be rolled out as an optimization. Given the interest in and demand for both simple covenants and better off-chain protocols, BIP118 is a soft fork candidate that could benefit more (if not most) Bitcoin users.</summary>
    <published>2022-04-22T11:54:30+00:00</published>
  </entry>
</feed>
