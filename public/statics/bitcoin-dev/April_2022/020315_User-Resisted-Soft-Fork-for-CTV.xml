<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>User Resisted Soft Fork for CTV</title>
  <updated>2023-06-15T19:16:26.026139+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-04-25 10:01:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>User Resisted Soft Fork for CTV</title>
    <updated>2023-06-15T19:16:26.027099+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020315.html" rel="alternate"/>
    <summary>ZmnSCPxj, a Bitcoin developer, expressed his support for the Consensus-enforced Transaction Validity (CTV) proposal. He stated that CTV could benefit layer 2 users and is simple to implement. With a pure `OP_CTV` SCRIPT on a P2WSH / P2SH, only 32 bytes + change on the output and 32 bytes + change on the input/witness are required. In contrast, signature-based schemes require at least 32 bytes + change on the output and 64 bytes + change on the witness if they use the Taproot format. ZmnSCPxj believes that hashes used by `OP_CTV` are CPU-cheaper and memory-cheaper than even highly-optimized `libsecp256k1` signature validation. Moreover, he thinks that recursive covenants deserve more general research and thinking before enabling them. ZmnSCPxj views `OP_CTV` as the "AND" to the "OR" of MAST. Both cases involve a hash-based tree, but in `OP_CTV`, all pre-agreed cases are required, while in MAST, only one is needed. Although other proposals, such as SIGHASH_ANYPREVOUT, could benefit L2 solutions more, they are signature-based and would be larger in this niche.</summary>
    <published>2022-04-25T10:01:28+00:00</published>
  </entry>
</feed>
