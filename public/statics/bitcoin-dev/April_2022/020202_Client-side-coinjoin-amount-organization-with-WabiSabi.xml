<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Client side coinjoin amount organization with WabiSabi</title>
  <updated>2023-05-22T19:19:05.862349+00:00</updated>
  <author>
    <name>Max Hillebrand 2022-04-06 16:05:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Client side coinjoin amount organization with WabiSabi</title>
    <updated>2023-05-22T19:19:05.862349+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020202.html" rel="alternate"/>
    <summary>The Wasabi Wallet team has released the third Wasabi 2.0 release candidate with new code for input selection and amount decomposition aimed at increasing privacy in coinjoin transactions. This new feature allows clients to choose denominations based on a deterministic frequency table of standard denominations for each round. The frequency table represents the likelihood of each denomination being chosen by any user, and serves as a Schelling point for users to make their own decisions.The algorithm decomposes each input into likely denominations using a brute force algorithm. A set of "good" denominations is created, which are those that don't lead to too much change or dust outputs. From this set, a random denomination is selected for each output with the condition that it has a high frequency in the frequency table. The coordinator does not dictate the denominations of the outputs, but rather provides a Schelling point for users to make their own decisions.The result of simulations indicates that the algorithm can decompose up to eight outputs from any input sum using the reduced list of likely denominations. However, there is no rank ordering of possible denominations based on some ambiguity score or entropy score, and the choice is random, leading to not optimal outcomes in some cases. While the new approach to client-side coinjoin coordination protocol like WabiSabi allows for more client-side decision making, it is still a difficult problem. The current implementation uses a combination of random selection and deterministic calculation to select inputs and outputs that result in the best possible anonymity set size and minimum anonscore loss. Nonetheless, further review from experts in the field is welcomed.Links to the input selection code, amount decomposer code, and decomposition simulation are provided for those interested in learning more about these updates.</summary>
    <published>2022-04-06T16:05:08+00:00</published>
  </entry>
</feed>
