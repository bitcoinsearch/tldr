<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ANYPREVOUT in place of CTV</title>
  <updated>2023-06-15T19:20:36.260998+00:00</updated>
  <author>
    <name>Nadav Ivgi 2022-04-25 16:35:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ANYPREVOUT in place of CTV</title>
    <updated>2023-06-15T19:20:36.260998+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-April/020326.html" rel="alternate"/>
    <summary>In a post on bitcoin-dev, darosior discusses the potential use of SIGHASH_ANYPREVOUT in place of or before BIP119. This hash has been discussed for over 6 years and has proven and implemented use cases that are more widely accepted than CTV's. While some advocates have presented vaults as the flagship use case for CTV, darosior doubts its necessity and sufficiency for this purpose, but still finds it useful. Instead, darosior suggests using APO-AS covenants, which can emulate CTV just fine. Some potential vault users may have quantumphobia and prefer to avoid Taproot for long-term cold-storage vaults, thus making a feature targeted for these vaults available only on Taproot might not be ideal. If after some time, all those dubious about CTV's use cases are proven wrong by onchain usage of a less efficient construction to achieve the same goal, then CTV could be rolled out as an optimization. In the meantime, others will have been able to deploy new applications leveraging ANYPREVOUT, such as Eltoo and blind statechains.Overall, darosior believes that BIP118 is a soft fork candidate that could benefit more Bitcoin users, given the interest in and demand for both simple covenants and better offchain protocols. Darosior also asks if people would oppose the APO-AS part of BIP118, since it enables CTV's features, for the same reason they'd oppose BIP119.</summary>
    <published>2022-04-25T16:35:17+00:00</published>
  </entry>
</feed>
