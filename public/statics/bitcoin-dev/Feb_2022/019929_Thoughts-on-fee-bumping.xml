<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Thoughts on fee bumping</title>
  <updated>2023-06-15T16:29:06.683949+00:00</updated>
  <author>
    <name>Antoine Riard 2022-02-18 00:35:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Thoughts on fee bumping</title>
    <updated>2023-06-15T16:29:06.683949+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019929.html" rel="alternate"/>
    <summary>The email discusses various scenarios and algorithms related to transaction fee selection in the Bitcoin network. The author provides examples of transactions with different fee rates and sizes, and how replacing or discarding certain transactions can affect the total fees collected by a miner. Different algorithms for selecting transactions, including ones that prioritize fee rate increases and ones that optimize for absolute fees, are also discussed.The replace-by-feerate policy is one such algorithm that could potentially produce lower fee blocks in the current environment of empty/low-fulfilled blocks. However, it is better to be cautious until we understand better the interactions between the different layers of the Bitcoin ecosystem. The replace-by-feerate policy could lead to bandwidth-bleeding issues with the current replacement policy. It would be good to have a cost estimate of them and ensure a newer replacement policy would stay within the same bounds.If the risk is perceived as too intolerable, it could be argued that deploying a "dual" RBF policy (replace-by-fee for the top of the mempool, replace-by-feerate for the remaining part) as an intermediate solution could be useful. Sophisticated replacement policies might need to be adopted in the long term to level the field among the mining ecosystem if block construction/mempool acceptance strategies become a competitive factor. Defaulting to do so might provoke a latent centralization of mining due to heterogeneity in the block reward offered. This heterogeneity would also likely downgrade the safety of L2 nodes, as those actors wouldn't be able to know how to format their fee-bumpings, in the lack of a mempool replacement standard. It is worth noting that power efficiency of mining chips and access to affordable sources of energy are more significant factors of the rentability of mining operations rather than optimality of block construction/replacement policy. Still, this might change in the future, and if we see the deployment of channel factories/payment pools, we might have users competing to spend a shared-utxo with different liquidity needs and thus ready to overbid. Lack of a "conflict pool" logic might make one lose income.In terms of miners' economic interests and alignment, it is important to note that different class of actors in the Bitcoin ecosystem may not be well-understood or aligned. Mining actors' behaviors have delayed the adoption of protocol upgrades that were expected to encourage higher adoption of Bitcoin. If miners likely have an incentive to see an increase of on-chain activity, there is also the possibility that lightning will be so throughput-efficient to drain mempools backlog, to a point where the block demand is not high enough to pay back the cost of mining hardware and operational infrastructure or at least not matching the return on mining investments expectation.As for the replace-by-fee policy, it removes the possibility of pinning entirely, but spam prevention at the outbound relay level isn't enough to prevent an attacker from contacting every public node and relaying the txs directly, clearing out the mempool of most public nodes directly. Thus, some sort of spam prevention on inbound txs too might be needed. Overall, the email highlights the complexity of transaction fee selection and the need for careful consideration before implementing any changes.</summary>
    <published>2022-02-18T00:35:01+00:00</published>
  </entry>
</feed>
