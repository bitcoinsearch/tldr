<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Thoughts on fee bumping</title>
  <updated>2023-05-22T17:21:13.697137+00:00</updated>
  <author>
    <name>Matt Corallo 2022-02-11 00:12:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Thoughts on fee bumping</title>
    <updated>2023-05-22T17:21:13.697137+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019883.html" rel="alternate"/>
    <summary>The complexity of Bitcoin transaction fee bumps is not due to software engineering or imagination failure, but rather a result of the goals of incentivizing miners while preventing spam. In order to ensure that fee bumps increase a miner's overall revenue without wasting relay for everyone else, there needs to be special consideration for what should be in the next block and/or caching of block templates. However, this approach is network-costly and therefore not ideal. The bandwidth and chain space consumed by a fee-bump should be minimal, instead of prompting a rebroadcast of the original transaction for replacement. Special transaction structure should not be required to bump fees. An approach like the transaction sponsors design proposed by Jeremy in 2020 could be favorable, but it does not solve pinning attacks or address the issue of wasted block space.</summary>
    <published>2022-02-11T00:12:16+00:00</published>
  </entry>
</feed>
