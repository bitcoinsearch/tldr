<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CTV Meeting Notes #3</title>
  <updated>2023-06-15T16:26:31.145463+00:00</updated>
  <author>
    <name>Jeremy Rubin 2022-02-09 08:53:12</name>
  </author>
  <author>
    <name>Jeremy Rubin 2022-02-09 08:53:12</name>
  </author>
  <author>
    <name>Jeremy Rubin 2022-02-09 08:53:12</name>
  </author>
  <link href="bitcoin-dev/Feb_2022/019874_CTV-Meeting-Notes-3.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019874_CTV-Meeting-Notes-3.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019874_CTV-Meeting-Notes-3.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - CTV Meeting Notes #3</title>
    <updated>2023-06-15T16:26:31.145463+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019874.html" rel="alternate"/>
    <summary>Bitcoin Developers held their third Consensus Technology Verification (CTV) meeting on February 8th, 2022. The meeting log is available at gnusha.org/ctv-bip-review/2022-02-08.log. Although there was not much new information presented about the Bounty, Non Interactive Lightning Channel Opens (NI-LCOs) were discussed, and they seem to work. However, there are questions about being able to operate a channel unilaterally for routing with the receiver's key offline because the HTLCs may require sync revocation. DLCs built with CTV are a "key enabler" for DLCs, providing a significant speedup (30x - 300x depending on multi-oracle setup). Changes to the client/server setup enable new use cases to explore and simplify the specification substantially. Backfilling enables clients to commit to DLCs faster and lazily backfill at the cost of state storage. Precompiling N choose M groups + musig'ing the attestation points can save some witness space for M-N oracles since log2(N)*32 + N*32 &gt; log2(N*(N choose M))*32 for many values of N and M. Pathcoin is not yet well understood concretely, but it seems like the API of a "coin that 1-of-N can spend" shared by N is unique and not something LN (Lightning Network) can do. Binary expansion of coins could allow arbitrary value transfer in a CTV tree. TXHash was discussed, and the main concerns were more complexity, potential for recursion, and script size overhead. Soft Forks were also discussed, specifically addressing the question: Are the fork processes themselves riskier than the upgrades (CTV)? Validation rules should be riskier since they must be lived with forever, while soft fork rules and coordination might be bad but go away after activation. We can "prove" a technical upgrade correct, but soft-fork signaling requires unprovable user behavior and coordination. Upgrades should have as much content as possible if the forking mechanism is perceived as high risk; otherwise, they can be smaller and easier to prove safe since there's not a high cost to forking.Finally, Elements CTV Emulation was discussed, which seems to be workable. However, it is questionable if any of the use cases one might want CTV for (Lightning, DLCs, Vaults) would have much demand on Liquid today.</summary>
    <published>2022-02-09T08:53:12+00:00</published>
  </entry>
</feed>
