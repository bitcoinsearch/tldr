<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-15T03:56:14.319062+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-02-20 02:39:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-15T03:56:14.319062+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019955.html" rel="alternate"/>
    <summary>In an email conversation, ZmnSCPxj discussed the concept of "necromancing" which refers to attacks that work by getting an out-of-date version of a transaction mined. While some argue that this is not technically an attack, ZmnSCPxj believes that Bitcoin standards should avoid making unwanted necromancy a cheap and easy attack. They suggest using a Tapscript version for fee-account-authorization which would allow for feebumping without requiring an explicit output on the initial transaction, saving blockspace. Only when the feerate turns out to be too low do we need to expose the authorization. Revelation of the fee-account-authorization is O(log N), and if only one participant decides to feebump, then only a single O(log N) MAST treepath is published.</summary>
    <published>2022-02-20T02:39:50+00:00</published>
  </entry>
</feed>
