<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A suggestion to periodically destroy (or remove to secondary storage for Archiving reasons) dust, Non-standard UTXOs, and also detected burn</title>
  <updated>2023-06-15T16:23:24.923574+00:00</updated>
  <author>
    <name>yanmaani at cock.li 2022-02-13 09:56:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A suggestion to periodically destroy (or remove to secondary storage for Archiving reasons) dust, Non-standard UTXOs, and also detected burn</title>
    <updated>2023-06-15T16:23:24.923574+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019897.html" rel="alternate"/>
    <summary>During a discussion on the bitcoin-dev mailing list, Billy Tetrud brought up the issue of UTXO set size and how it will need to be addressed at some point. He suggested using utreexo or some other accumulator as a solution. Another member of the group proposed using economic incentives to disincentivize the creation of new UTXOs, suggesting that instead of charging a fee based on the byte size of a transaction, a fee could be charged based on (bytes*byte_weight + net_utxos*utxo_weight). For example, if utxo_weight is set to 500, a transaction that creates 2 new UTXOs would cost as if it were 1 KB in size. In contrast, a transaction that consolidates 2 UTXOs into one might even receive a negative transaction fee rebate. This proposal would require lowering the block size cap by max(0, net_utxos_created*utxo_weight), which could be implemented through a soft fork, but may be contentious. It's also important to limit the block size cap at 0, separate from consensus issues, to ensure that users aren't guaranteed to get back whatever they put into it.</summary>
    <published>2022-02-13T09:56:21+00:00</published>
  </entry>
</feed>
