<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Advancing the security of Neutrino using minimally trusted oracles</title>
  <updated>2023-05-22T17:19:08.345465+00:00</updated>
  <author>
    <name>enclade 2022-02-10 10:02:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Advancing the security of Neutrino using minimally trusted oracles</title>
    <updated>2023-05-22T17:19:08.345465+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019878.html" rel="alternate"/>
    <summary>The Neutrino design document suggests the use of oracles to provide a moderate level of confidence to lightweight clients in the filters they have received from an untrusted source. However, current implementations of lightweight wallets using Neutrino either trust in a single source or a sampling of untrusted peers for this information. The determinism of the filter headers allows for them to be attested by a potentially large number of authoritative sources with minimal loss in privacy, and these sources could be exchanges, hardware wallet manufacturers, block explorers, or other well-known parties.DNS is the most obvious transport for these oracles, and several implementations of tools exist which provide either headers or raw filter data to clients by encoding it in record responses. Oracles can operate using DNS with extremely low resource requirements and attack surface while providing a privacy-maximizing service to their clients. Other tools can also aggregate the signatures into other formats as required.Clients can consider their view of the current network state to be strong when several of their oracle sources present agreeing signatures, or display an error to their user if no suitable number of attestations could be found. Fault or fraud proofs can be generated by any party by simply collecting differing signatures, making errors readily apparent and provable.Host names and their associated keys would be baked into the binaries of client software supporting the system, but their location and credentials could be attested in a text file of their primary domain. Oracles would return the current block hash, hash of the tip of the neutrino header chain, and a ECDSA signature over the data including the requesting quantized timestamp, giving the client sufficient and portable evidence that their view of the state of the network has not been tampered with, while maintaining as much privacy as possible.</summary>
    <published>2022-02-10T10:02:08+00:00</published>
  </entry>
</feed>
