<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sponsor transaction engineering, was Re:  Thoughts on fee bumping</title>
  <updated>2023-06-15T17:08:47.173923+00:00</updated>
  <author>
    <name>David A. Harding 2022-02-18 21:09:31</name>
  </author>
  <author>
    <name>David A. Harding 2022-02-18 21:09:31</name>
  </author>
  <author>
    <name>David A. Harding 2022-02-18 21:09:31</name>
  </author>
  <link href="bitcoin-dev/Feb_2022/019940_Sponsor-transaction-engineering-was-Re-Thoughts-on-fee-bumping.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019940_Sponsor-transaction-engineering-was-Re-Thoughts-on-fee-bumping.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019940_Sponsor-transaction-engineering-was-Re-Thoughts-on-fee-bumping.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Sponsor transaction engineering, was Re:  Thoughts on fee bumping</title>
    <updated>2023-06-15T17:08:47.173923+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019940.html" rel="alternate"/>
    <summary>A discussion on Bitcoin development thread highlighted that sponsors cannot be monotone due to technical reasons, specifically the need for an additional permanent TX-Index. However, a possible solution was suggested by Dave, which involves allowing a miner to include a sponsor transaction in a later block than the sponsored transaction by providing an (SPV) merkle inclusion proof that the sponsored transaction was a part of a previous block on the same chain. This method could mitigate the validity concern raised in the previous sponsor transaction thread, but may raise the vbyte cost of including sponsor and sponsored transactions in different blocks. Bitcoin Core stores the complete headers chain, which contains the necessary information to validate such a proof. However, Utreexo-style nodes might not store old headers to save space. Nevertheless, they can store a merkle-like commitment to all headers they previously validated and then have Utreexo proofs include the necessary headers and intermediate hashes required to validate subsequent-block sponsor transactions.</summary>
    <published>2022-02-18T21:09:31+00:00</published>
  </entry>
</feed>
