<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_RETURN inside TapScript</title>
  <updated>2023-06-15T17:14:26.568201+00:00</updated>
  <author>
    <name>Zac Greenwood 2022-02-25 01:12:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_RETURN inside TapScript</title>
    <updated>2023-06-15T17:14:26.568201+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/020001.html" rel="alternate"/>
    <summary>Zac emailed ZmnSCPxj proposing that reducing the footprint of storing data on-chain could be achieved by supporting it. Currently, storing data is wasteful because it is embedded inside an OP_RETURN within a transaction structure. Zac's presumption is that using a standard transaction for storing data must be inefficient. Presumably, a transaction takes up significantly more on-chain space than the data it carries within its OP_RETURN. Therefore, not requiring a standard transaction for data storage should be more efficient. Facilitating data storage within some specialized, more space-efficient data structure at marginally lower fee per payload-byte should enable reducing the footprint of storing data on-chain. If storing data through OP_RETURN embedded within a transaction is optimal in terms of on-chain footprint then Zac's proposal doesnâ€™t seem useful. In response to Zac's proposal, ZmnSCPxj asked how he would pay a miner to include the data on the blockchain if the data is not embedded inside a transaction. ZmnSCPxj believes that he needs a transaction to pay a miner anyway, so embedding it into the same transaction he is using to pay the miner would be more efficient.</summary>
    <published>2022-02-25T01:12:34+00:00</published>
  </entry>
</feed>
