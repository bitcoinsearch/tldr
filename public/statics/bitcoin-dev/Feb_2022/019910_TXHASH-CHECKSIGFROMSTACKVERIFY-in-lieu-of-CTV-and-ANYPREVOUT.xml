<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>TXHASH + CHECKSIGFROMSTACKVERIFY in lieu of CTV and ANYPREVOUT</title>
  <updated>2023-06-15T15:33:06.363442+00:00</updated>
  <author>
    <name>Russell O'Connor 2022-02-15 19:12:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>TXHASH + CHECKSIGFROMSTACKVERIFY in lieu of CTV and ANYPREVOUT</title>
    <updated>2023-06-15T15:33:06.363442+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019910.html" rel="alternate"/>
    <summary>On February 15, 2022, Jeremy Rubin wrote an email to Rusty where he shared his post in response to the claim that "CTV is just as powerful" and explained the differences between CTV and other protocols. Firstly, Rubin pointed out that CTV requires the contract to be fully enumerated and non-recursive, which can be a problem when dealing with contracts that allow n participants to take action in any order, as it requires factorially many pre-computations. In contrast, interpretive covenant programs for such addresses can be computed in constant time. Secondly, Rubin noted that with CTV, one needs to know the set of pairs they would like to expand to a-priori, which can be limiting in certain situations. Finally, Rubin demonstrated that CTV is indeed very powerful, but not in the same way ("Complexity Class") that OP_TX or TXHASH might be. Rusty agreed that there should be some feature to enable the commitment of outputs as it seems quite useful in various protocols. However, he also stated that we need to clearly understand what and why we are advocating for more sophisticated designs and have a thorough understanding of the protocol complexity we are motivated to introduce the expanded functionality. Moreover, if one advocates for TX/TXHASH on a featureful basis, it's at least a technical ACK on the functionality CTV is introducing (as it is a subset) and perhaps a disagreement on project management, which should be noted.</summary>
    <published>2022-02-15T19:12:30+00:00</published>
  </entry>
</feed>
