<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-15T03:57:10.554035+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-02-20 02:24:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-15T03:57:10.554035+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019954.html" rel="alternate"/>
    <summary>In an email thread between several individuals discussing the concept of "necromancing" in Bitcoin, a comparison was made to DoS attacks via packet flooding. The idea behind necromancing is that an out-of-date version of a transaction could be mined, which could be costly and annoying for users who would prefer a different transaction be mined instead. While some argued that such scenarios are not necessarily attacks, others suggested that Bitcoin standards should avoid making unwanted necromancy a cheap and easy attack. The discussion also touched on multiparty feebumping methods and the limitations of multiparty RBF. It was noted that while initial multiparty signing may succeed, participants may later regret cooperating or accidentally go offline. To address these concerns, the suggestion was made to use per-participant anchor outputs, with feebumping only authorized for specific participants. Additionally, fee accounts could include some kind of proof that a particular transaction authorizes a given fee account.</summary>
    <published>2022-02-20T02:24:37+00:00</published>
  </entry>
</feed>
