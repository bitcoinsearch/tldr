<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Thoughts on fee bumping</title>
  <updated>2023-06-15T16:32:34.882413+00:00</updated>
  <author>
    <name>James O'Beirne 2022-02-14 19:51:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Thoughts on fee bumping</title>
    <updated>2023-06-15T16:32:34.882413+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019904.html" rel="alternate"/>
    <summary>The email discussion revolves around the concept of fee-bumping in Bitcoin transactions. One of the participants points out that sending diffs may not be a feasible solution as it can lead to high network costs. They suggest that transmitting a sponsorship transaction may be more efficient in certain cases. The post also highlights the need for an ideal design where structural foresight is not needed for a transaction's feerate improvement after broadcast. The use of anchor outputs solely for CPFP is considered a hack and could waste chainspace. The discussion also includes the use of sponsorship transactions for fee-bumping in situations where RBF isn't possible and CPFP would be wasteful, such as certain covenants or precomputed vault transactions.The discussion also covers the efficiency of using sponsorship transactions compared to including mostly-unused CPFP "anchor" outputs that pay to fee-management wallets, particularly in certain cases such as vault structures. However, one participant raises concerns about pinning attacks in the Lightning Network and the need to know which transaction is in the mempool for fee-bumping. Overall, the conversation focuses on the challenges and potential solutions for optimizing fee-bumping in Bitcoin transactions while minimizing network costs and blockspace waste.</summary>
    <published>2022-02-14T19:51:26+00:00</published>
  </entry>
</feed>
