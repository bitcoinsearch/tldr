<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Sponsor transaction engineering, was Re:  Thoughts on fee bumping</title>
  <updated>2023-05-22T17:34:37.971501+00:00</updated>
  <author>
    <name>David A. Harding 2022-02-18 21:09:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Sponsor transaction engineering, was Re:  Thoughts on fee bumping</title>
    <updated>2023-05-22T17:34:37.971501+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019940.html" rel="alternate"/>
    <summary>In a Bitcoin development thread, Jeremy Rubin pointed out that sponsors cannot be monotone due to technical reasons, mainly the need for an additional permanent TX-Index. However, Dave suggests a possible solution: allowing a miner to include a sponsor transaction in a later block than the sponsored transaction by providing an (SPV) merkle inclusion proof that the sponsored transaction was a part of a previous block on the same chain. This method may raise the vbyte cost of including sponsor and sponsored transactions in different blocks but could mitigate the validity concern raised in the previous sponsor transaction thread. Bitcoin Core stores the complete headers chain, which already has the information necessary to validate such a proof, while Utreexo-style nodes might not store old headers to save space. Nonetheless, they can store a merkle-like commitment to all headers they previously validated and then have Utreexo proofs include the necessary headers and intermediate hashes necessary to validate subsequent-block sponsor transactions.</summary>
    <published>2022-02-18T21:09:31+00:00</published>
  </entry>
</feed>
