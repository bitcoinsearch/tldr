<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[ANNOUNCE] bitcoin erlang daemon</title>
  <updated>2023-06-06T11:14:51.447031+00:00</updated>
  <author>
    <name>Randy Willis 2013-03-18 18:41:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[ANNOUNCE] bitcoin erlang daemon</title>
    <updated>2023-06-06T11:14:51.447031+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-March/002311.html" rel="alternate"/>
    <summary>The author of the post has been working on a bitcoin daemon implementation in erlang for some time. The project is currently in its early stages of development. The author is implementing the protocol using the specification from https://en.bitcoin.it/wiki, the original paper, and by examining the protocol messages received from peers. One bug has already been found. The author's goal is to create a scalable bitcoin daemon that can serve many thousands of peers on relatively low-end servers. Currently, the daemon is capable of connecting and parsing messages from 3000+ peers on a 256M RAM VPS without swap. At this stage, the daemon does not do much besides protocol parsing and peer discovery. However, it is only several days old. Users can check their logs for "/ebtcd:0.0.1/" to see if the daemon has connected to their machine.In the short term, the author plans to accept incoming connections and announce their own address via an "addr" message. In the mid-term, they plan to add validation and routing (test on testnet), and release the source under an open license (AGPL). In the long term, the author aims to create a full-featured daemon. The author also included a donation address (1GVmS56pvVL7YZA7YqMBXmaDedCoputKuJ) in case anyone wants to support the project with BTC.</summary>
    <published>2013-03-18T18:41:11+00:00</published>
  </entry>
</feed>
