<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blocking uneconomical UTXO creation</title>
  <updated>2023-06-06T10:31:27.310070+00:00</updated>
  <author>
    <name>Peter Todd 2013-03-12 07:49:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blocking uneconomical UTXO creation</title>
    <updated>2023-06-06T10:31:27.310070+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-March/002238.html" rel="alternate"/>
    <summary>In March 2013, a Bitcoin developer named Peter Todd suggested that the cost of storing data in the unspent transaction output (UTXO) set is more expensive than storing the data itself. He proposed that the fee system should properly capture the long-term costs of UTXO creation. While there was some discussion about this issue, many people asked that Bitcoin not arbitrarily block potential uses of provably unspendable transaction outputs for data applications and spendable transaction outputs representing assets. Todd changed his position and supported all of these proposals, but he also mentioned that one remaining class of transaction outputs had not yet been discussed - unspendable but not provably so transaction outputs. Todd suggested a standard transaction type that could be used for timestamping and secure data backups, where the data would be stored in the scriptPubKey and distributed to all validating nodes. The script sizes were limited to 10KB, allowing for 9974 bytes of data per transaction output with minimal waste. Todd even suggested that such a service could offer unique guarantees that data would be secure by simply performing a successful Bitcoin transaction.</summary>
    <published>2013-03-12T07:49:45+00:00</published>
  </entry>
</feed>
