<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A bitcoin UDP P2P protocol extension</title>
  <updated>2023-06-06T11:17:26.868370+00:00</updated>
  <author>
    <name>Mark Friedenbach 2013-03-24 02:27:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A bitcoin UDP P2P protocol extension</title>
    <updated>2023-06-06T11:17:26.868370+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-March/002331.html" rel="alternate"/>
    <summary>The discussion revolves around the usage of newer user-mode transports that run over UDP and can be hole-punched and port-forwarded just like TCP/UDP. However, some of these transports cannot be tunneled effectively though most of them can. The conversation also touches on using datagram protocols and introduces more modern alternatives to UDP like UDT and SCTP. It is pointed out that UDT uses UDP to transfer bulk data with its own reliability control and congestion control mechanisms while multiple UDT flows can share a single UDP port, making it firewall-friendly. On the other hand, SCTP is considered for its advanced features such as multi-homing, message-oriented data transfer, and multi-streaming capabilities. Finally, it is clarified that the person expressing these opinions is not directly involved in the project but is trying to save someone from reinventing a perfectly good wheel.</summary>
    <published>2013-03-24T02:27:31+00:00</published>
  </entry>
</feed>
