<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Some PR preparation</title>
  <updated>2023-06-06T10:54:18.130813+00:00</updated>
  <author>
    <name>Alan Reiner 2013-03-12 16:55:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Some PR preparation</title>
    <updated>2023-06-06T10:54:18.130813+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-March/002259.html" rel="alternate"/>
    <summary>In an email exchange, Luke-Jr expressed concern about the risk of double-spending during a brief period when transactions could have received up to N confirmations and then still been reversed. There was a possibility that people trying to buy/sell on OTC could have been scammed even by taking standard precautions. However, another participant in the exchange argued that the risk was not as great as it appeared because any valid transactions hitting the network would get added to everyone's memory pool and mined in both chains. Thus all nodes would still reject double-spend attempts. Majority mining power on one of the chains was required, and both had non-negligible computing power on them, so double-spending still required an exceptional amount of resources, just not the normal 50% that is normally needed. It required at least 10%, which limited the number of potential attackers. In addition, a victim needed to be found that hadn't seen the alert, was willing to execute a large transaction, and was on the wrong side of the chain. This made the attack outside the scope of regular users.</summary>
    <published>2013-03-12T16:55:26+00:00</published>
  </entry>
</feed>
