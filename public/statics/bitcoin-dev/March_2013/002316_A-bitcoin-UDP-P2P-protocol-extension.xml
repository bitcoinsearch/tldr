<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A bitcoin UDP P2P protocol extension</title>
  <updated>2023-06-06T11:16:24.021797+00:00</updated>
  <author>
    <name>Jeff Garzik 2013-03-23 15:24:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A bitcoin UDP P2P protocol extension</title>
    <updated>2023-06-06T11:16:24.021797+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-March/002316.html" rel="alternate"/>
    <summary>In a discussion between Luke-Jr and Randy Willis on March 23rd, 2013, the idea of introducing super-nodes with thousands of connected peers was proposed as a potential solution to help with UDP and bitcoin protocol. However, Luke-Jr pointed out that UDP is connectionless and any UDP bitcoin protocol should not try to emulate a connection.  The conversation then moved towards the usage of UDP and signaling acceptance of messages. While broadcasting a TX or INV to a remote peer does not require a connection, subscribing to a broadcast requires some notion of association. In the rough draft, a parallel TCP connection with version/verack sequence is required and can be used if a connection is needed. Alternatively, a more robust and heavyweight UDP P2P could be a hole-punching TCP alternative, but this approach would require experimentation and community input. Jeff Garzik of exMULTI, Inc. mentioned Bittorrent's evolution of a full transfer protocol over UDP to get around firewalls and the like.</summary>
    <published>2013-03-23T15:24:41+00:00</published>
  </entry>
</feed>
