<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A bitcoin UDP P2P protocol extension</title>
  <updated>2023-06-06T11:18:43.204612+00:00</updated>
  <author>
    <name>Caleb James DeLisle 2013-03-23 22:01:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A bitcoin UDP P2P protocol extension</title>
    <updated>2023-06-06T11:18:43.204612+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-March/002326.html" rel="alternate"/>
    <summary>The email conversation starts with a suggestion of introducing super-nodes with thousands of connected peers to help in broadcasting transactions and INV messages. Luke-Jr points out that since UDP is connectionless, it shouldn't try to emulate a connection. Jeff Garzik mentions that some usage like subscribing to a broadcast requires a notion of association, and a parallel TCP connection with version/verack sequence is required in the rough draft. He also suggests a more robust, heavyweight UDP P2P protocol might be a hole-punching TCP alternative. Bittorrent's use of UDP in tracker protocol and inter-peer protocol is discussed, where UDP helps solve problems with short-lived HTTP connections and bufferbloat in the context of active TCP connections. It is suggested to experiment with UDP and speed test UDP v. TCP because the time to send an INV on an established TCP connection with Nagle disabled may not be significantly longer than that for sending with UDP. Additionally, it is suggested to experiment with sending a small transaction instead of an INV if INVs are not being grouped because we want the fastest possible network propagation, they are mostly overhead anyway.</summary>
    <published>2013-03-23T22:01:45+00:00</published>
  </entry>
</feed>
