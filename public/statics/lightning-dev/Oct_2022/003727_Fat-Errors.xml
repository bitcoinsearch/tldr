<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fat Errors</title>
  <updated>2023-06-03T10:25:59.989279+00:00</updated>
  <author>
    <name>Rusty Russell 2022-10-24 22:32:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fat Errors</title>
    <updated>2023-06-03T10:25:59.990289+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-October/003727.html" rel="alternate"/>
    <summary>Joost Jager has raised an issue with Lightning regarding gaps in error attribution. He has previously posted about this in 2019 and is now revisiting it. The issue is that Core lightning does not penalize properly due to the attribution problem. Implementing a solution to this issue will enable the penalization of a channel. Another idea proposed by Rusty is to use a pre-pay scheme where N sats and a secp point are sent, and every chained secret returned earns the forwarder 1 sat. The answers are placed in each layer of the onion, and the distance traveled by the onion is determined based on how much money is received back on failure. However, the error message may be corrupted. Rusty suggests truncating the point to a new secret key as the simplest solution, with each node applying a tweak for decorrelation. The best scheme would be where payment is only received if the next node decrypts, but this requires more thought. Rusty also proposes using 16 hops which is the closest power of 2 to the legacy hop limit, and makes this 4.5k for payloads and hmacs.</summary>
    <published>2022-10-24T22:32:52+00:00</published>
  </entry>
</feed>
