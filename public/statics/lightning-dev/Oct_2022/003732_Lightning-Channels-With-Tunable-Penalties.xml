<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Lightning Channels With Tunable Penalties</title>
  <updated>2023-06-01T19:11:12.599498+00:00</updated>
  <author>
    <name>jlspc 2022-10-30 17:45:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Lightning Channels With Tunable Penalties</title>
    <updated>2023-06-01T19:11:12.599498+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-October/003732.html" rel="alternate"/>
    <summary>In the Lightning channel protocol, if a user accidentally puts an old transaction on-chain, they risk losing all their funds in the channel. The Tunable-Penalty (TP) protocol has been proposed to impose tunable penalties for using old transactions while avoiding the risk of losing all channel funds. The TP protocol uses separate value transactions and control transactions, allowing watchtowers to use storage that is logarithmic rather than linear in the number of channel states supported. No change to the underlying Bitcoin protocol is required. However, the TP protocol is not suitable for casual users as it can require specific actions at certain times weeks or months after the expiry of an HTLC. A paper with a more detailed description of the protocol is available. The challenge with tuning penalties in a Lightning channel involves charging the errant party the desired penalty and then dividing the remaining funds according to the channel's current state. Alice must sign a separate Penalty_Bij transaction for each pair of states i and j, where i&lt;j.</summary>
    <published>2022-10-30T17:45:45+00:00</published>
  </entry>
</feed>
