<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On the scalability issues of onboarding millions of LN mobile clients</title>
  <updated>2023-06-03T01:15:36.161498+00:00</updated>
  <author>
    <name>Antoine Riard 2020-05-09 07:22:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On the scalability issues of onboarding millions of LN mobile clients</title>
    <updated>2023-06-03T01:15:36.161498+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-May/002699.html" rel="alternate"/>
    <summary>Antoine Riard and Igor Cota discussed the feasibility of running full nodes on everyday phones and the challenges in designing a mobile-first Lightning Network (LN) experience. While it may be possible to run sleeping nodes on lower-grade devices, there are limitations when it comes to processing block data real-time in case of incoming HTLC and p2p bandwidth concerns due to heavy sync periods.Igor suggests that part-time or Sleeper Nodesâ„¢ could be a solution where phone nodes store and serve a randomly selected range of blocks during their nighttime operation while advertising the blocks they can serve. This would only require storage capacity, making it feasible for most people to run such a node. These types of nodes could also be user-friendly with Assume UTXO and could serve the whole world by plugging in phones and going to sleep.Antoine raises concerns about the scalability, security, and privacy of LN for millions of clients and the bottlenecks in incentivizing node operators to dedicate resources to serve those clients. The deployment of more efficient tx-relay protocols like Erlay may free up some resources, but it would be wiser to dedicate them to increase health and security of the backbone network. The Lightning Network (LN) has a liveliness requirement, which means that the entity owning one's view of the chain can lie about whether their channel has been spent by a revoked commitment. This can lead to unexpected behavior in client logic. To overcome this, monetary compensation can be introduced in exchange for servicing filters. This would price chain access resources and prevent free-riding on the network.UTXO set size may be a bottleneck, but committing filters as part of headers may not solve everything as an attacker can delay or slow announcements. It is argued that the distinction between client and peer does not hold because one may start as a client and start synchronizing the chain. There is no hybrid implementation available for mobiles.It is important to consider how the "chain access" market can avoid becoming an oligopoly. While relying on full-node operators being nice and servicing friendly millions of LN mobile clients may be feasible, it is still important to consider alternatives. Peer diversity is also necessary to avoid every BIP157 server being on few ASNs for fault-tolerance.</summary>
    <published>2020-05-09T07:22:52+00:00</published>
  </entry>
</feed>
