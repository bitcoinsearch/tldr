<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blind paths revisited</title>
  <updated>2023-06-03T00:01:06.482776+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-03-13 00:42:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blind paths revisited</title>
    <updated>2023-06-03T00:01:06.482776+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-March/002594.html" rel="alternate"/>
    <summary>In a recent discussion between tbast, rusty and list on the topic of anonymous multi-hop locks, ZmnSCPxj put forward a suggestion that was met with some skepticism. The issue in question is the establishment of secrets between the sender and each of the hops, which could be disrupted if the sender were able to influence those secrets. This is essentially a reverse Sphinx scenario where the secrets are established between the recipient and the hops instead. While there is uncertainty about whether the recipient can safely contribute to these secrets, it may be possible to find a solution in the future. However, it seems that the sender only needs to deliver the payment point to the first recipient-selected-hop, as the recipient already knows the secrets from the first hop to itself, and can subtract those secrets from the receiver scalar if it knows the payment scalar. The remaining recipient-selected-hops will then add their blinding scalars (which come from the recipient), and the final recipient can linearly deduct those. This approach would ensure that the sender cannot interfere with the secrets established between the recipient and the hops.</summary>
    <published>2020-03-13T00:42:16+00:00</published>
  </entry>
</feed>
