<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PROPOSAL] Removal of proposal to make CSV delay symmetric</title>
  <updated>2023-06-02T19:30:38.117177+00:00</updated>
  <author>
    <name>Rusty Russell 2019-07-24 00:37:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PROPOSAL] Removal of proposal to make CSV delay symmetric</title>
    <updated>2023-06-02T19:30:38.118177+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-July/002092.html" rel="alternate"/>
    <summary>In a conversation about bruteforcing on the CSV delay, Pierre asks how it would differ from a BIP32 wallet with look ahead keys, noting that they could try with the most probable values first. The response is that the use of CSV can be specified by the counterparty and therefore offers a big multiplier in terms of the number of variants to look for per key. However, restricting CSV delays to be multiples of 144 between 144 and 2016 would only be 14 variants. It is suggested that one of 6, 36, 144, 432 or 1008 would probably be more than enough choice. The discussion then moves on to the issue of normal bitcoin wallets not being able to deal with this, which is unfortunate. Rusty notes that funds are still recoverable with just the seed, which is a huge improvement compared to what is currently the case. Local commitments are not usually in play, but if your node drops out, remote commitments certainly will be. Finally, it is noted that being able to rescue some funds from a pre-lightning wallet is a nice thing to have at this stage, although in five years' time it might not be as useful.</summary>
    <published>2019-07-24T00:37:51+00:00</published>
  </entry>
</feed>
