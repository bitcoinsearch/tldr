<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Lightning Pre-Image Encryption Standard</title>
  <updated>2023-06-02T19:10:05.586314+00:00</updated>
  <author>
    <name>Alexander Leishman 2019-07-04 22:17:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Lightning Pre-Image Encryption Standard</title>
    <updated>2023-06-02T19:10:05.586314+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-July/002056.html" rel="alternate"/>
    <summary>In an email exchange on the Lightning-dev mailing list, concerns were raised about a proposal that requires customers to trust merchants. The proposed standard would only be useful for pre-downloading data before payment, but still trusting the merchant. There is a need for a higher-level abstraction to handle more mainstream use-cases. Additionally, it was suggested that including a ZKP for ZKCP-compatible data transfers might be helpful, although there are limitations to consider with those. Another concern was raised about why to MAC, then encrypt. Generally, it is recommended to MAC the ciphertext + IV; otherwise, ciphertext integrity guarantees are lost. However, some argued that putting MAC inside the encryption would help ensure that data replacement can be detected over an insecure channel, and use of shared secret ensures only the intended recipient can decrypt. This added protection could allow for the option of sending data over a non-secure channel, which would avoid imposing additional encryption/decryption overhead on top of a secure channel like HTTPS.</summary>
    <published>2019-07-04T22:17:41+00:00</published>
  </entry>
</feed>
