<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Using Per-Update Credential to enable Eltoo-Penalty</title>
  <updated>2023-06-02T19:13:21.351190+00:00</updated>
  <author>
    <name>Christian Decker 2019-07-14 13:42:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Using Per-Update Credential to enable Eltoo-Penalty</title>
    <updated>2023-06-02T19:13:21.351190+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-July/002067.html" rel="alternate"/>
    <summary>In a Lightning-dev post, ZmnSCPxj discusses the advantages of Decker-Russell-Osuntokun as it eliminates "toxic waste" from older version of channel databases which can be used by attackers to access funds. The post argues that punishments reintroduce asymmetry and undo many benefits gained with eltoo. It is noted that access to channel databases is often easier than accessing node private keys. While an attacker may be able to access channel data, replicate a database, and use an older version to frame a user for theft and make them lose all channel funds, access to the DB does not give an attacker the ability to frame the user with an old version since this would still require access to keys to add their own signature. However, an attacker can still do quite a few damaging things if they gain hold of a user's DB. The post concludes by stating that Decker-Russell-Osuntokun removes punitive considerations so that being framed for theft only closes channels but at a cost of on-chain fees for the failed attempt to enforce an older state without returning fees.</summary>
    <published>2019-07-14T13:42:30+00:00</published>
  </entry>
</feed>
