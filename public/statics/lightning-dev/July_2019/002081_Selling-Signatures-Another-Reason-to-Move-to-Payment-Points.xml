<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Selling Signatures: Another Reason to Move to Payment Points</title>
  <updated>2023-06-02T19:32:00.662970+00:00</updated>
  <author>
    <name>Lloyd Fournier 2019-07-17 18:16:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Selling Signatures: Another Reason to Move to Payment Points</title>
    <updated>2023-06-02T19:32:00.662970+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-July/002081.html" rel="alternate"/>
    <summary>Nadav Kohen proposed a scheme for selling data using the Lightning Network. However, he also thought about situations where an untrusted party attempts to sell a signature to a known message. This could be useful in offering a DLC-like Option contract where they are essentially collateralizing themselves in a funding transaction and then selling their signatures to Contract Execution Transactions (CETs). In this example, it is crucial to ensure that the buyer of the signatures pays if and only if they receive valid signatures for the CETs which are known. To achieve this, ZmnSCPxj's proposed payment points with scalars could be used. The (Schnorr) signature seller could give the buyer their one-time public key, `R = k*G`, through which the buyer could compute the payment point whose scalar is the seller's signature: `sig*G = R + h(m, R)*A` where `A` is the seller's public key. Using this value as the payment point, the buyer could be assured that they pay if and only if they receive `sig` from the seller, where `sig` is the desired valid signature of `m`! Lloyd Fournier expressed interest in this idea and asked for more background information on CETs. Nadav responded by explaining that although it's possible for oracles to sell options contracts, a more decentralized setup can be achieved with normal DLC oracles.</summary>
    <published>2019-07-17T18:16:18+00:00</published>
  </entry>
</feed>
