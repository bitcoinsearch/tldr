<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving Lightning Network Pathfinding Latency by Path Splicing and Other Real-Time Strategy Game Techniques</title>
  <updated>2023-06-02T19:42:24.408356+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-08-03 07:27:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving Lightning Network Pathfinding Latency by Path Splicing and Other Real-Time Strategy Game Techniques</title>
    <updated>2023-06-02T19:42:24.408356+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-August/002105.html" rel="alternate"/>
    <summary>In the context of map preprocessing, one approach that can be taken is to use differential heuristics for A\*. Differential heuristics is a concept that involves using approximate heuristics to speed up the search process in pathfinding. The idea behind this approach is to use multiple heuristics and their differences to guide the search algorithm towards the goal state.According to a source from Stanford University, differential heuristics can be used to generate a set of heuristics that are tailored to the specific environment of the search problem. This is particularly useful in cases where the terrain or obstacles in the map are irregular or non-uniform. The use of differential heuristics can help reduce the number of nodes visited during the search process, leading to faster runtimes.Further research into differential heuristics led to the discovery of a slide presentation on interactive object pathfinding, which included slide 44 that discussed the topic. Additionally, a research paper from Microsoft was found that described how differential heuristics could be used to improve the efficiency of A\* search. Overall, the use of differential heuristics is an effective way to preprocess maps and speed up the search process in pathfinding algorithms such as A*. By using multiple heuristics and their differences, the search algorithm can be guided more efficiently towards the goal state, resulting in faster runtimes and better overall performance.</summary>
    <published>2019-08-03T07:27:42+00:00</published>
  </entry>
</feed>
