<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving Lightning Network Pathfinding Latency by Path Splicing and Other Real-Time Strategy Game Techniques</title>
  <updated>2023-06-02T19:42:40.155607+00:00</updated>
  <author>
    <name>Rusty Russell 2019-08-08 05:56:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving Lightning Network Pathfinding Latency by Path Splicing and Other Real-Time Strategy Game Techniques</title>
    <updated>2023-06-02T19:42:40.155607+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-August/002111.html" rel="alternate"/>
    <summary>A user on Lightning-dev asked for a reproducible benchmark or further qualification of a statement claiming that commodity hardware would take two seconds to find a route. However, there was no such benchmark available. The user ZmnSCPxj then provided information on an unoptimized c-lightning implementation which returned random routes on the mainnet. On a digital ocean 2-cpu 4GB ram Intel(R) Xeon(R) CPU E5-2630L 0 @ 2.00GHz, it took anywhere between 3 to 347 milliseconds with a mean of 220 milliseconds. On a Raspberry Pi 2B compiled with -O3, it took anywhere between 21 to 3330 milliseconds with a mean of 388 milliseconds.</summary>
    <published>2019-08-08T05:56:13+00:00</published>
  </entry>
</feed>
