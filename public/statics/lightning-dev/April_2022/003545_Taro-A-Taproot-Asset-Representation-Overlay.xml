<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Taro: A Taproot Asset Representation Overlay</title>
  <updated>2023-06-03T08:12:51.919619+00:00</updated>
  <author>
    <name>Ruben Somsen 2022-04-10 16:51:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Taro: A Taproot Asset Representation Overlay</title>
    <updated>2023-06-03T08:12:51.919619+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-April/003545.html" rel="alternate"/>
    <summary>Laolu Osuntokun, a Lightning Network developer, has proposed Taro, a layer 2 protocol built on top of Bitcoin. The protocol is designed to enable the creation of tokens that inherit the transaction graph model of Bitcoin by utilizing a checkpointing system similar to what some Bitcoin full node clients do today. While it does not claim to offer better privacy guarantees than the base chain, Taro can be combined with privacy-enhancing protocols such as coinswap and coinjoin, along with LN, to shed prior coin lineages.Ruben and Olaoluwa are discussing the Taro documentation and some potential issues with the design. Ruben mentions his experience trying to analyze the RGB project, which has significant overlap with Taro, and notes that it is not in great shape. However, Ruben believes that Taro should still acknowledge the design precedes Taro. They also discuss the limitations of scripting support in Taro due to the requirement that assets can be burnt if a user doesn't supply a valid witness. Ruben also mentions the conceptually interesting idea of using TAPLEAF_UPDATE_VERIFY to bind Taro transitions at the Bitcoin level. They discuss the possibility of an asset issuer doing a "re-genesis", but note that this won't help for tokens that aim to have a publicly audited supply. Finally, they discuss the "teleport" technique in Taro and the potential issue of the location of the Taro tree inside the taproot tree needing to be deterministic for the verifier. Laolu will be updating the draft over the next few days to better spell things out and particularly that commitment/sighash uniqueness trait. In terms of achieving this level of binding within the Taro tree itself, Laolu suggests three options. The sparse merkle tree in the Taro design serves several purposes including non-inclusion proofs, the ability to track issuance events for a given asset, and ensuring uniqueness of certain items/commitments. When transferring Taro token ownership from one Bitcoin UTXO to another, interactive transfers generate only the UTXOs part of the MIMO transaction. On the other hand, when sending via the address format, a new non-dust output is created which holds the new commitment.</summary>
    <published>2022-04-10T16:51:52+00:00</published>
  </entry>
</feed>
