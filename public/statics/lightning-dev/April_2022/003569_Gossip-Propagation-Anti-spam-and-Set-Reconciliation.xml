<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
  <updated>2023-06-03T08:29:27.735772+00:00</updated>
  <author>
    <name>Matt Corallo 2022-04-28 03:21:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
    <updated>2023-06-03T08:29:27.735772+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-April/003569.html" rel="alternate"/>
    <summary>The email conversation between Rusty Russell and Matt Corallo revolves around the issue of ratelimiting updates with minisketch. Rusty believes that it is not feasible to sync updates since the last sync in the minisketch because it would require keeping all the ratelimited differences per peer and canceling them out of the minisketch on every receive or send. He suggests that the solution lies in picking three peers to gossip with and telling everyone else to shut up. However, Matt argues that the point of minisketch is robustness and proposes defining a preferred ratelimit so that nodes know that spamming past a certain point is not going to propagate. Matt agrees that there should be some rough consensus but states that rate-limits are a locally enforced thing, not a global one. He says that ultimately, an updates-based sync is more robust in such a case as if there's some race and your peer accepts something you don't, it may mean one more entry in the sketch one time, but it won't hang around forever. Rusty believes that rate-limited junk overwhelms the sketch really fast and that it is not feasible to do this. The two agree to schedule a call to get on the same page.</summary>
    <published>2022-04-28T03:21:48+00:00</published>
  </entry>
</feed>
