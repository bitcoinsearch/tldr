<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
  <updated>2023-06-03T08:24:21.584138+00:00</updated>
  <author>
    <name>Matt Corallo 2022-04-22 18:50:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
    <updated>2023-06-03T08:24:21.584138+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-April/003563.html" rel="alternate"/>
    <summary>In an email exchange, Alex Myers and Matt discuss the implementation of a gossip protocol in the context of Lightning Network. Alex suggests doing a sync on startup and syncs of new things instead of trying to match everyone's gossip acceptance exactly. Matt suggests implementing per-node state with a simple "list of updates that happened since time X" data instead of maintaining per-peer state. They also discuss the design of Erlay, which is concerned for privacy of originating nodes, and its approach of syncing updates instead of full mempools. Additionally, they touch on rate-limiting and the need for a common rate-limit heuristic for better efficiency. Lastly, they agree on the importance of guidelines to solve the issue of differing criteria resulting in nodes not realizing their gossip is not propagating, but recognize that guidelines don't solve the issue for sync.</summary>
    <published>2022-04-22T18:50:45+00:00</published>
  </entry>
</feed>
