<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
  <updated>2023-06-03T08:29:01.940048+00:00</updated>
  <author>
    <name>Matt Corallo 2022-04-22 18:55:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
    <updated>2023-06-03T08:29:01.940048+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-April/003564.html" rel="alternate"/>
    <summary>In a conversation between Rusty Russell and Matt Corallo, they discussed the issue of rejecting a large percentage of channel updates. While Matt suggested that the sync frequency could be tuned to solve the problem, Rusty pointed out that allowing only one update per day resulted in 18% of channels hitting the spam limit, making it impossible to fit all the differences inside a set. However, regular-update-sync can bypass some of these issues by syncing once per block. Matt also mentioned that gossip queries are broken in at least five ways, but Rusty disagreed, saying that the "gossip_timestamp_filter" message is perfect for asking for updates since a certain time. They agreed that a gossip2 might be necessary to enable taproot and use block height as timestamps. Regarding rate limiting, Rusty and his team initially did not see any issues with it like Eclair, but they have found it to be limiting in some cases. For example, when people restart their LND nodes once a day, two updates per day occur, which is now allowed in 0.11.0. Despite having an aggressive bandwidth limit, Rusty has experienced rare instances where it hits unless the peer is very overloaded and not responding to pings.</summary>
    <published>2022-04-22T18:55:34+00:00</published>
  </entry>
</feed>
