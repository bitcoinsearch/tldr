<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Blinded payments and unblinding attacks</title>
  <updated>2023-06-01T19:00:30.932937+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2022-04-01 07:35:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Blinded payments and unblinding attacks</title>
    <updated>2023-06-01T19:00:30.932937+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-April/003535.html" rel="alternate"/>
    <summary>The Lightning Network developers @thomash-acinq and Bastien have been working on route blinding for payments, which is a prerequisite for onion messages and Bolt 12 offers. While using route blinding for onion messages is relatively simple, it's harder to use safely for payments because the parameters used to relay payments vary widely from one channel to another and can dynamically vary over time. If not accounted for, this can provide an easy fingerprint for malicious actors to guess what channels are used within a blinded route, as explained in the route blinding proposals. To protect against these probing attacks, the latest version of the route blinding specification allows the recipient to impose what parameters will be used by intermediate blinded nodes to relay payments. The Lightning Network developers are seeking help from the community to figure out if there are other parameters that need to be taken into account to guarantee user privacy. These attacks only work against public channels, so users relying on unannounced channels are not at risk and will more easily benefit from route blinding. The high-level design doc provides natural language and detailed examples to help understand the main ideas and subtleties of the proposal.</summary>
    <published>2022-04-01T07:35:50+00:00</published>
  </entry>
</feed>
