<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
  <updated>2023-06-03T08:24:05.791253+00:00</updated>
  <author>
    <name>Alex Myers 2022-04-22 16:15:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
    <updated>2023-06-03T08:24:05.791253+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-April/003562.html" rel="alternate"/>
    <summary>In a conversation between Alex Myers and Matt Corallo, the topic of rate-limiting and set reconciliation in Lightning Network's gossip protocol was discussed. While Eclair currently does not implement any rate-limiting, Alex suggests that set reconciliation should only be used after a node has fully synced gossip through traditional means such as initial routing sync and gossip queries. However, Matt disagrees with this approach and suggests that a minisketch-based sync should be used for initial sync after restart as it would be more efficient than the current methods. Additionally, Matt argues that a common rate-limit heuristic is needed to ensure efficiency in set reconciliation, especially since the network is constantly growing. While Alex acknowledges the need for tighter rules on rate-limiting, he also notes that the Erlay approach, which maintains a per-peer sketch and associated state for every gossip peer, could be too much overhead to maintain. Nevertheless, Alex will consider Matt's suggestions and experiment with different levers to maintain sync.</summary>
    <published>2022-04-22T16:15:13+00:00</published>
  </entry>
</feed>
