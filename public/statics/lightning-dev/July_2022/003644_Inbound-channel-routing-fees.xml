<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Inbound channel routing fees</title>
  <updated>2023-06-03T09:34:19.345903+00:00</updated>
  <author>
    <name>Joost Jager 2022-07-01 11:10:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Inbound channel routing fees</title>
    <updated>2023-06-03T09:34:19.345903+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-July/003644.html" rel="alternate"/>
    <summary>Path-finding algorithms currently in use do not support negative fees, but the sum of inbound and outbound fees is still positive and therefore not a problem. However, if routing nodes set their policies accidentally or intentionally so that the sum of fees turns out negative, senders can just round up to zero and find a path as normal. It's important to note that the sum of inbound and outbound fees are not set by a single routing node. When path-finding considers a candidate hop, this adds the outbound fee of the "from" node and the inbound fee of the "to" node. Because those nodes don't necessarily coordinate fees, it may happen more often that the fee goes negative. Rounding up to zero is still a quick fix and better than ignoring inbound fees completely.</summary>
    <published>2022-07-01T11:10:09+00:00</published>
  </entry>
</feed>
