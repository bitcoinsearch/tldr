<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Inbound channel routing fees</title>
  <updated>2023-06-03T09:35:04.056094+00:00</updated>
  <author>
    <name>Joost Jager 2022-07-01 12:02:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Inbound channel routing fees</title>
    <updated>2023-06-03T09:35:04.056094+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-July/003646.html" rel="alternate"/>
    <summary>In this email exchange, Joost Jager and Bastien Teinturier discuss the idea of inbound fees in Lightning Network. Joost believes that if he accepts an incoming htlc, his local balance increases on that incoming channel and his money gets locked up in a channel that may or may not be interesting to him, so it would be fair to be compensated for that. However, Bastien argues that this doesn't make sense as the funds on the other side of the channel belong to the peer, not Joost. Moreover, if all the funds are on the peer's side, this isn't Joost's problem and he even benefits from the free inbound liquidity. Bastien also points out that if Alice could set fees for Bob's side of the channel, she could arbitrarily DoS Bob's payments by setting a high fee, which completely breaks the routing incentives. Joost asks for thoughts from routing node operators or links to previous threads on this topic. In response to a correction made by Joost regarding path-finding algorithms and negative fees, Joost clarifies that the sum of inbound and outbound fees is not set by a single routing node, but rather determined by the "from" node's outbound fee and the "to" node's inbound fee. While rounding up to zero is a quick fix for negative fees, it's better than ignoring inbound fees completely.</summary>
    <published>2022-07-01T12:02:06+00:00</published>
  </entry>
</feed>
