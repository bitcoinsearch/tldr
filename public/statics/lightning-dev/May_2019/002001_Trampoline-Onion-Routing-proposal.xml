<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Trampoline Onion Routing proposal</title>
  <updated>2023-06-01T18:10:54.607498+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2019-05-23 14:35:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Trampoline Onion Routing proposal</title>
    <updated>2023-06-01T18:10:54.607498+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-May/002001.html" rel="alternate"/>
    <summary>Bastien has published a pull request regarding formalizing how trampoline onion routing could work. The changes introduced in the PR involve several layers, including a new version of the onion packet with a smaller size than v0, a new node_update message for advertising trampoline fees and cltv, new logic to estimate such fees and cltv on trampoline nodes, and a filter system for channel_updates and node_updates. The trampoline onion routing maintains the same security assumptions as source-routing but requires higher fees and timeout values for the payer, resulting in more gains for trampoline nodes. Mobile phones are already struggling to keep up with the bandwidth and CPU requirements for source-routing. This development also enables rendezvous routing and other "onion in an onion" constructions. Readers are encouraged to read the full document and comment directly on the PR.</summary>
    <published>2019-05-23T14:35:19+00:00</published>
  </entry>
</feed>
