<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An Argument For Single-Asset Lightning Network</title>
  <updated>2023-06-02T16:27:13.118730+00:00</updated>
  <author>
    <name>Lloyd Fournier 2019-05-04 04:28:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An Argument For Single-Asset Lightning Network</title>
    <updated>2023-06-02T16:27:13.118730+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-May/001990.html" rel="alternate"/>
    <summary>The thread discusses a protocol for an on-chain trade and cross-chain L2 payment. The idea of sending a payment in asset A and receiving it as asset B with an exchange node in the middle is possible with collateral on the last hop, making it a better protocol than vanilla atomic swap because the delaying party has less time to realize gains from the option. However, extending this idea across multiple hops after the exchange securely looks impossible due to communication problems that may cause the current hop to become liable for the premium without forwarding the liability to the final payee, which is an avenue for attack. It's also possible to modify the protocol slightly so that the party receiving the option pays the premium regardless of whether they release x or not. Collateralized HTLCs are suggested instead of calling it an option premium. The poster describing this idea can be found here: https://coblox.tech/docs/financial_crypto19.pdf.</summary>
    <published>2019-05-04T04:28:39+00:00</published>
  </entry>
</feed>
