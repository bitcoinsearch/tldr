<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Christian Deckers Duplex Micropayment Channels vs Lightning networks revocation key solution</title>
  <updated>2023-05-24T21:29:56.130551+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-03-05 13:28:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Christian Deckers Duplex Micropayment Channels vs Lightning networks revocation key solution</title>
    <updated>2023-05-24T21:29:56.130551+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001069.html" rel="alternate"/>
    <summary>The email discusses the differences between Poon-Dryja (revocation) channels and Decker-Wattenhofer duplex micropayment channels. The maximum lockup period for funds in a channel is proportional to the number of updates the channel can have, with shorter worst-case lockup periods resulting from fewer updates before the channel can only be closed. Poon-Dryja channels have no limit on the number of updates possible and use O(1) lockup time and transactions for an n update limit. In contrast, Decker-Wattenhofer uses O(log n) lockup time and transactions for n update limits. Every payment requires two updates, one to get payer funds to an HTLC and the other to get the HTLC funds to the payee. Although Decker-Wattenhofer has the advantage of being extendable to any number of participants per channel, the construction of Poon-Dryja channels cannot be easily extended beyond two per channel. To address this limitation, Burchert-Decker-Wattenhofer channel factories combine multiple two-participant Poon-Dryja channels that can have any number of updates, with the Decker-Wattenhofer part only updated if all participants agree to redistribute their funds. This results in a potentially infinite number of possible channel updates for individual Poon-Dryja channels while minimizing the O(log n) cost for maximum number of updates for fund redistribution. The email also notes that Rusty Russell’s “shachain” concept reduces storage for a sequence of revocation keys to just 64 bytes.</summary>
    <published>2018-03-05T13:28:49+00:00</published>
  </entry>
</feed>
