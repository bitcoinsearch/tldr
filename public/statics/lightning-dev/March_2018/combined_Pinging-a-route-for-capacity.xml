<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Pinging a route for capacity</title>
  <updated>2023-05-24T21:27:36.206972+00:00</updated>
  <author>
    <name>Jim Posen 2018-03-01 14:45:16</name>
  </author>
  <author>
    <name>gb 2018-03-01 21:16:02</name>
  </author>
  <author>
    <name>Christian Decker 2018-03-04 22:18:56</name>
  </author>
  <author>
    <name>René Pickhardt 2018-03-01 15:26:22</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-02 07:53:46</name>
  </author>
  <author>
    <name>Jim Posen 2018-03-02 14:42:09</name>
  </author>
  <author>
    <name>Rusty Russell 2018-03-04 02:46:46</name>
  </author>
  <author>
    <name>René Pickhardt 2018-03-01 15:13:43</name>
  </author>
  <link href="lightning-dev/March_2018/001058_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001060_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001068_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001059_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001062_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001063_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001067_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001066_Pinging-a-route-for-capacity.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Pinging a route for capacity</title>
    <updated>2023-05-24T21:27:36.208002+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001058.html" rel="alternate"/>
    <summary>The Lightning Network is a second-layer solution for Bitcoin that aims to improve scalability and transaction speed. One area of focus for the Lightning development team is payment routing optimization. Jim Posen proposed the idea of sending a ping over an onion route to check if every hop has the capacity to send a certain amount, which could prevent payment failures and reduce inefficiency.However, there are concerns about DoS attacks and information leakage regarding channel capacities. Rusty Russell suggested using fees and fast failure mechanisms instead of the full HTLC commitment handshake on each hop. More analysis is needed on reliable ways to mask active channel capacity. Another suggestion was to use IP fragmentation techniques to allow for dynamic fragmentation of payments and still work if a channel runs out of funds while routing payment. Rene Pickhardt suggested dynamically splitting payments into smaller parts and rerouting them through different channels as necessary.A proposal has been made on the Lightning-dev mailing list to create a new feature that would allow users to test payment routes without actually sending payments. The proposal suggests that this would be quicker and more efficient than sending actual payments since latency would be lower and the sender could ping all possible routes in parallel. However, the downside is that it could also make it faster and cheaper for someone to extract information about channel capacities on the network with a binary search. The proposal includes the idea that hops could respond with the latest fee rate in case channel updates are slow to propagate.Overall, the Lightning network is still testing and refining its routing strategies to optimize payment routing. While there are various ideas and proposals being discussed, more analysis and testing are needed to determine the most effective and secure solutions for payment routing optimization.</summary>
    <published>2018-03-01T14:45:16+00:00</published>
  </entry>
</feed>
