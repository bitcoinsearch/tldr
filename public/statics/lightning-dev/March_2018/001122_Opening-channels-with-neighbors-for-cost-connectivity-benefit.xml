<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Opening channels with neighbors for cost/connectivity benefit</title>
  <updated>2023-05-24T22:42:06.467320+00:00</updated>
  <author>
    <name>Karan Verma 2018-03-27 03:57:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Opening channels with neighbors for cost/connectivity benefit</title>
    <updated>2023-05-24T22:42:06.467320+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001122.html" rel="alternate"/>
    <summary>The sender node may not always have a route to the receiving node accepting lightning payments, and opening new channels can be expensive. Therefore, there is a need for a smarter way to open channels that increases the connectedness of the sender node with other nodes in the network while saving money in the intended transaction. For example, if Bob wants to send money to Alice but doesn't have a route to her, he would need to open a new channel with her, which could be costly if it was the only transaction he ever wanted to do with Alice. However, if Alice was connected to Charlie and Dave, Bob could instead connect with Charlie/Dave or nodes connected with them which have a route to Alice through Charlie/Dave, minimizing the transaction cost to reaching Alice and maximizing the number of nodes Bob can reach through this channel.This approach involves sorting the choice of nodes to open a channel with by transaction fee and connectedness it brings to the origin node. By choosing the neighbor of Charlie, for instance, Bob can now reach at least three nodes - Charlie's neighbor, Charlie, and Alice - and pay less. This idea could benefit both Bob in the long term and the lightning network as a whole. Feedback on this concept would be appreciated.</summary>
    <published>2018-03-27T03:57:57+00:00</published>
  </entry>
</feed>
