<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A protocol for requesting invoices</title>
  <updated>2023-05-24T21:39:26.462059+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-03-21 04:02:39</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A protocol for requesting invoices</title>
    <updated>2023-05-24T21:39:26.462059+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001113.html" rel="alternate"/>
    <summary>The use-case discussed here is for payees to use multiple TOR addresses with only one Lightning Network (LN) node. The TOR address advertised for channel connections is widely shared through gossiping, and it can be considered the same identity as the peer ID. However, to keep payer/payee communication unlinked from a node's ID, different TOR addresses or any other pseudonymous communication method should be used. One possible privacy break is when channels are brought on-chain, and any HTLCs pending through that channel will also be brought on-chain and visible, exposing the payment_hash. A payer observing the chain knows the payment_hash it was paying to, and from the channel signatures, knows which nodes were using that channel. Using non-public channels helps reduce the risk, but there is no such thing as a truly private channel. Once Scriptless Script is implemented, this privacy leak disappears, as even on-chain, the equivalent to a hashlock becomes indistinguishable from an ordinary Bellare-Neven m-of-n signature.</summary>
    <published>2018-03-21T04:02:39+00:00</published>
  </entry>
</feed>
