<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pinging a route for capacity</title>
  <updated>2023-05-24T21:24:55.521713+00:00</updated>
  <author>
    <name>Rusty Russell 2018-03-04 02:46:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pinging a route for capacity</title>
    <updated>2023-05-24T21:24:55.521713+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001067.html" rel="alternate"/>
    <summary>In a recent post, Jim Posen discusses the best strategy for choosing a route to send funds over. Rather than going through the full HTLC commitment handshake on each hop, he suggests determining all possible routes, ranking them by estimated fees based on channel announcements and number of hops, then trying them successively until one works. Posen argues that this would be more efficient and could prevent payment failures caused by bandwidth being locked up in HTLCs that are about to fail anyway. However, others argue that failure is not common enough to warrant designing for it yet.In response to this, some suggest using fees as a means of signaling low capacity and adjusting them accordingly. Additionally, the `temporary_channel_failure` returns a `channel_update` that implies the disabled flag, which should be made true if the request asks for it. These solutions may prove sufficient for preventing payment failures caused by lack of capacity.</summary>
    <published>2018-03-04T02:46:46+00:00</published>
  </entry>
</feed>
