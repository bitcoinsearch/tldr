<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pinging a route for capacity</title>
  <updated>2023-05-24T21:23:35.813263+00:00</updated>
  <author>
    <name>Ren√© Pickhardt 2018-03-01 15:26:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pinging a route for capacity</title>
    <updated>2023-05-24T21:23:35.813263+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001059.html" rel="alternate"/>
    <summary>A new participant in the Lightning development community shared their ideas on a problem posed by another member regarding channel capacity. The new member suggested IP-Fragmentation, splitting IP-packages to utilize a link layer protocol with insufficient bandwidth, to solve the problem of insufficient channel balance during routing. They proposed sending the second part of the fragmented payment through a different route encapsulated within a new onion routed package and discussed the impact on HTLC. They added that this method would be more dynamic than the proposed ping method, which could result in payment failures due to channels running dry after a successful ping. The original problem was about choosing the best route for sending funds over, but the proposed solution involved determining all possible routes, ranking them by estimated fees based on channel announcements, and trying them successively until one works. An idea to send a ping over an onion route asking if every hop has sufficient capacity before sending the payment was also discussed. The ping would reveal no additional information about channel capacities and could make payments quicker and cheaper. However, it may also allow someone to extract information about channel capacities on the network with a binary search.</summary>
    <published>2018-03-01T15:26:22+00:00</published>
  </entry>
</feed>
