<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A protocol for requesting invoices</title>
  <updated>2023-05-24T21:41:26.914495+00:00</updated>
  <author>
    <name>Andy Schroder 2018-03-10 05:16:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A protocol for requesting invoices</title>
    <updated>2023-05-24T21:41:26.914495+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001079.html" rel="alternate"/>
    <summary>In a discussion on the Lightning-dev mailing list, Corn√© Plooy introduced an idea for using Lightning for various types of payments. The proposal suggests having a direct line of communication between payer and payee instead of BOLT11-style interaction, which he believes would make Lightning more convenient for use cases such as salary payments or direct pay-out of cryptocurrency bought on an exchange. While the idea is still in its early stages, Plooy has registered it under BOLT #12 and provided a detailed outline of his proposal in a GitHub repository. Several questions were raised by Andy Schroder in response to Plooy's proposal. Firstly, regarding the payee's URL for requesting invoices, Schroder asked whether a two-step process like that required for tor hidden services was necessary, given that communication over the anonymous channel had already been initiated. Secondly, he questioned what happens if the capacity of the partial onion route is no longer sufficient when the payer is ready to pay and suggested providing multiple routes just in case. Thirdly, he queried how partial refunds would be handled in the proposed protocol. Finally, Schroder asked how the payer would identify themselves to the payee and specify their desired goods or services for invoicing.</summary>
    <published>2018-03-10T05:16:14+00:00</published>
  </entry>
</feed>
