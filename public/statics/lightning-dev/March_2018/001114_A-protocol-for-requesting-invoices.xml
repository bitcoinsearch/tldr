<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A protocol for requesting invoices</title>
  <updated>2023-05-24T21:41:04.028308+00:00</updated>
  <author>
    <name>Andy Schroder 2018-03-21 05:45:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A protocol for requesting invoices</title>
    <updated>2023-05-24T21:41:04.028308+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001114.html" rel="alternate"/>
    <summary>The conversation is about enforcing a maximum payment amount that can be refunded. Refunds are usually used when transactions get messy, and not all cases require them. Refunds have similarities to microtransaction channels, and the state of the transaction needs to be signed by whoever may possibly have a legitimate interest against the update. A transaction starts in a null state and ends specifying certain obligations that have been fulfilled. On re-connecting, you need to be able to specify which transaction to update and the format of the description field is unspecified for now; it is best to keep it that way. If capacity is your greatest concern as payee, you just supply a zero-hop partial onion. The URL contains an optional invoice ID and a payee can request a payment for a specific, single transaction by handing over an URL, including an invoice ID, to a single payer. The payer has to contact the payee again to get a fresh payment hash specifically for the payer.</summary>
    <published>2018-03-21T05:45:44+00:00</published>
  </entry>
</feed>
