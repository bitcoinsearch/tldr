<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Arbitrary Bitcoin Contracts over LN</title>
  <updated>2023-05-25T02:02:16.163952+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-08-02 03:43:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Arbitrary Bitcoin Contracts over LN</title>
    <updated>2023-05-25T02:02:16.163952+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-August/001387.html" rel="alternate"/>
    <summary>In a recent email exchange, Christian Decker and Rusty Russell discussed the need for `OP_CSV` guard to protect from CLTV-branches and nLocktimed spending transactions which may leak on-chain. The two-stage HTLC resolution introduced a first stage acting as the `OP_CSV` guard that keeps the second stage clean. The CSV belongs in the output script, not the input script. A CLTV-branch whose timeout expires before attempting on-chain mediation can lead to a race. There is no CSV in an HTLC, however. The HTLC-timeout/HTLC-success transactions (which spend from the above script), have a CSV. The CSV occurs on a transaction that is dependent on a CLTV under Poon-Dryja. The CSV does not interfere with CLTV, and its condition in the second transaction becomes complicated, requiring cleverness like eliding A from A &amp;&amp; B &amp;&amp; C to keep witnesses and script size down.</summary>
    <published>2018-08-02T03:43:23+00:00</published>
  </entry>
</feed>
