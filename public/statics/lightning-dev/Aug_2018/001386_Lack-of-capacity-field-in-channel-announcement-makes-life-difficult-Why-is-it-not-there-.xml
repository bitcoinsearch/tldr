<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lack of capacity field in channel_announcement makes life difficult. Why is it not there?</title>
  <updated>2023-05-25T01:53:09.612224+00:00</updated>
  <author>
    <name>Sjors Provoost 2018-08-01 18:28:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lack of capacity field in channel_announcement makes life difficult. Why is it not there?</title>
    <updated>2023-05-25T01:53:09.612224+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-August/001386.html" rel="alternate"/>
    <summary>The discussion revolves around the potential issues of abuse and bandwidth in relation to blockchain nodes. One solution proposed is for nodes to discard erroneous messages and broadcast updates wisely instead of after every packet. Christian Decker also suggests tracking an internal UTXO set to avoid asking for full blocks from bitcoind to check a channel's capacity. This could be useful for fresh pruned nodes, who would only fetch relevant blocks when making a payment rather than verifying historical blocks right away. However, this proposal could leave DOS risks if lies are gossiped about useful channels in every historical block, which could force the pruned node to fetch these blocks one by one. One possible way to mitigate this risk is to prioritize channels created after wallet birth and put a cap on how many historical blocks are fetched before giving up.</summary>
    <published>2018-08-01T18:28:41+00:00</published>
  </entry>
</feed>
