<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Free Rebalancing Proposals</title>
  <updated>2023-05-25T02:09:59.990276+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-08-13 10:16:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Free Rebalancing Proposals</title>
    <updated>2023-05-25T02:09:59.990276+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-August/001390.html" rel="alternate"/>
    <summary>The email conversation discusses a new function in the network called "Free Rebalancing Proposals", which is a fee-less, omni-beneficial rebalancing scheme. The proposed function can be used by both payers and payees to coordinate and locate a route that could be made free using the "free rebalancing" feature. This feature is transported via onion-routing-packet style and thus, intermediate hop routes cannot detect this at all. The swapping of off-chain funds for on-chain funds solves the same problems as rebalancing and splicing do without requiring changes at the LN layer, merely adding an application on top of LN.The proposed solution works by sending a proposal-for-balancing-message over channel A, and the max amount you would propose to balance in that direction. Each node analyzes the in and out channels and adjusts the max to its own desire to balance. The origin node sends a payment along this node, without dropping off any fees along the way, since all nodes agreed and benefit from the rebalancing act if everyone is happy (i.e. max&gt;0). The intermediate nodes might not need to keep track of any agreements to balancing proposals, it can simply call the freeBalancerMax function, and if the payment is lower, it passes on the payment even if it didn't get any fees, otherwise, it fails as usual.</summary>
    <published>2018-08-13T10:16:10+00:00</published>
  </entry>
</feed>
