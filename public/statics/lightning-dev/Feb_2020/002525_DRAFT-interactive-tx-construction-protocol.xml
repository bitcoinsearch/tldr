<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>DRAFT: interactive tx construction protocol</title>
  <updated>2023-06-02T22:59:57.948561+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-02-12 04:04:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>DRAFT: interactive tx construction protocol</title>
    <updated>2023-06-02T22:59:57.948561+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002525.html" rel="alternate"/>
    <summary>In a discussion among niftynei, waxwing, and list, a new transfer opening method was proposed using the equation s = k + H(kG || kJ || P || P2 || utxo || receiving-node) x. The verification of the Schnorr signature is done by reconstructing the receiving node implicitly. This method prevents any node that is not the intended recipient from verifying the signature as they will use the wrong node_id. One member of the group questioned the need to commit to the utxo since the pubkey pair effectively does that. The motivation for including it is to prevent address reuse being dinged when two UTXOs with the same address are used to make two different channels with different peers. However, it is noted that while address reuse is bad, some users may not have control over a payee who decides to give them their money in two separate UTXOs to the same address.</summary>
    <published>2020-02-12T04:04:42+00:00</published>
  </entry>
</feed>
