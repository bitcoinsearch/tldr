<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Using libp2p as a communication protocol for Lightning</title>
  <updated>2023-06-02T23:44:47.663340+00:00</updated>
  <author>
    <name>Rusty Russell 2020-02-20 09:29:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Using libp2p as a communication protocol for Lightning</title>
    <updated>2023-06-02T23:44:47.663340+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002551.html" rel="alternate"/>
    <summary>Bastien Teinturier and Matt have commented on the limitations of libp2p in terms of security. While libp2p is a versatile tool for peer-to-peer networking, it can be insecure due to offering too many options, similar to how TLS is vulnerable to downgrade attacks. To address this, protocols such as Wireguard have simplified their codebase to make auditing easier. For Lightning, they prefer a simple transport with no configuration options, which makes implementation and testing more straightforward. During the Milan meeting, they chose a raw protocol instead of using protobufs, which allowed them to specify each message down to the bit level, eliminating issues at that level. However, this choice led to debates over endianness, causing some wasted time.</summary>
    <published>2020-02-20T09:29:33+00:00</published>
  </entry>
</feed>
