<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Direct Message draft</title>
  <updated>2023-06-02T23:48:05.340469+00:00</updated>
  <author>
    <name>Rusty Russell 2020-02-24 03:15:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Direct Message draft</title>
    <updated>2023-06-02T23:48:05.340469+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002564.html" rel="alternate"/>
    <summary>In this conversation between Rusty Russell and Christian Decker, they discuss the idea of circular payment in onion routing. The lack of a 'reply' function eliminates storage requirements for intermediaries. However, the issue with the circular path is that the recipient cannot add any reply without invalidating the HMACs on the return leg of the onion, which poses a threat to the integrity of the onion routing. Christian suggests a construction of the onion routing packet that allows compression in such a way that it fits inside the payload itself. Another advantage of this method is that the end-to-end payload is not covered by the HMACs in the header, meaning that the recipient can construct a reply without having to modify (and invalidate) the routing onion. This goes back to the roots of the Sphinx paper. The paper suggests the payload be "final key" followed by the desired data, providing a simple validation scheme. While they could potentially generalize the HTLC messages like this, it is unnecessary at this point.</summary>
    <published>2020-02-24T03:15:58+00:00</published>
  </entry>
</feed>
