<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Direct Message draft</title>
  <updated>2023-06-02T23:47:49.689553+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-02-23 23:21:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Direct Message draft</title>
    <updated>2023-06-02T23:47:49.689553+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002562.html" rel="alternate"/>
    <summary>The conversation is about creating a circular path for onion routing, but it has some potential risks associated with it. The lack of reply function eliminates all storage requirements for the intermediaries. At the risk of constructing a novel cryptosystem, separating the request/response from the onion is suggested. The idea is to treat the onion as establishing a non-encrypted temporary tunnel and add an asymmetric encryption between the sender and receiver for the request and response. Each hop effectively peels a layer of encryption until it reaches the receiver, who learns that it is the true destination by some TLV in the onion part. Bob then generates its reply and encrypts the reply with the shared secret between its static key and the level 2 ephemeral key. It creates a MAC using the level 2 ephemeral key and its static key, sends it together with the rest of the onion onward. This method uses a "full" onion to establish a circuit and then uses simpler symmetric ciphers during circuit operation. The advantage of this method is that the recipient can construct a reply without modifying (and invalidating) the routing onion.</summary>
    <published>2020-02-23T23:21:23+00:00</published>
  </entry>
</feed>
