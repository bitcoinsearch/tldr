<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for up-front payments.</title>
  <updated>2023-05-23T02:21:25.897422+00:00</updated>
  <author>
    <name>Anthony Towns 2020-02-23 09:08:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for up-front payments.</title>
    <updated>2023-05-23T02:21:25.898420+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002561.html" rel="alternate"/>
    <summary>The email exchange between Rusty Russell and AJ proposes a new payment scheme for the Lightning Network. The proposed scheme involves increasing payments as the route extends to ensure scaling with distance, and adding a grace period to the payments to avoid gumming up the network. However, there are privacy issues associated with this approach. The proposed solution is for D to inform E that they need to pay 4msat per minute after a grace period of 65 seconds if they want to receive an HTLC. The sender, A, can choose whatever fees they like, but if they set the fee too high, it may be more likely that intermediate nodes will abort the HTLC before it reaches its destination. AJ suggests using a dynamic grace period, which requires a shorter grace period the more active HTLCs are in the system. This would prioritize more efficient routes and increase the resources needed to maintain an attack if the network is under attack. Additionally, AJ proposes that the sender-initiated upfront fee could interact nicely with the grace period. Finally, the email exchange discusses the need for a different protocol for HTLC forwarding, involving a ping-before-commit, which avoids the case where B has disconnected. In conclusion, while the proposed payment scheme has some challenges, it still appears to be worth brainstorming out.</summary>
    <published>2020-02-23T09:08:01+00:00</published>
  </entry>
</feed>
