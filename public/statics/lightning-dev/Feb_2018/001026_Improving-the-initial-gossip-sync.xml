<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving the initial gossip sync</title>
  <updated>2023-05-24T20:40:46.869883+00:00</updated>
  <author>
    <name>Fabrice Drouin 2018-02-13 09:01:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving the initial gossip sync</title>
    <updated>2023-05-24T20:40:46.869883+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/001026.html" rel="alternate"/>
    <summary>In this email thread, Rusty Russell and Christian Decker discuss different approaches to synchronizing gossip messages between Lightning Network nodes. Specifically, they debate the merits of using a timestamp mechanism versus an Invertible Bloom Lookup Table (IBLT) approach. They also consider how to handle re-transmission of old channel_announcement and node_announcement messages, with Russell suggesting that it is simpler to only send messages &gt;= routing_sync_timestamp, while Decker argues that channel_announcement cannot be omitted since a channel_update without a preceding announcement is invalid. They also discuss implementation details such as filters for received messages and timestamps to control which time windows to sync. Finally, Russell suggests exchanging all shortIds as a simple solution for syncing gossip messages.</summary>
    <published>2018-02-13T09:01:38+00:00</published>
  </entry>
</feed>
