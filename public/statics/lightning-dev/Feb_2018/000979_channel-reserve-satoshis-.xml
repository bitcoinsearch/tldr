<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>channel_reserve_satoshis?</title>
  <updated>2023-05-24T18:54:38.737301+00:00</updated>
  <author>
    <name>Cezary Dziemian 2018-02-02 16:48:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>channel_reserve_satoshis?</title>
    <updated>2023-05-24T18:54:38.737301+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/000979.html" rel="alternate"/>
    <summary>The context of the email is about opening a Lightning Network (LN) channel and receiving payments without locking funds on the other side of the channel. The sender, Cezary, was initially confused between 'channel_reserve_satoshis' and 'dust_limit'. In response to this, ZmnSCPxj clarified that there is no way to communicate with the other party to ask them to commit money into channels when opening a channel as of BOLT v1.0. This is due to trust issues such as an attacker locking up funds from a victim or knowing how much money the other party has lying around. ZmnSCPxj suggests mitigating such trust issues by disallowing dual-funding by default on the node and requiring explicit permission for multi-funding from a particular peer. Regarding the 'channel_reserve_satoshis' field, ZmnSCPxj explains that it is not used for communicating with the other party but rather for setting the amount that each party should keep on the channel once the channel state has moved from "all of the funds is assigned to the opener of the channel." This is to ensure that theft attempts have a cost and are not costless, thereby preventing attackers from stealing funds with no repercussions.</summary>
    <published>2018-02-02T16:48:47+00:00</published>
  </entry>
</feed>
