<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving the initial gossip sync</title>
  <updated>2023-05-24T20:41:32.299851+00:00</updated>
  <author>
    <name>Rusty Russell 2018-02-20 01:08:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving the initial gossip sync</title>
    <updated>2023-05-24T20:41:32.299851+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/001032.html" rel="alternate"/>
    <summary>The lightning dev interop call discussed three new mechanisms for querying specific short channel IDs, ranges of blocks and gossip timestamps. The first mechanism allows a user to query for a channel announcement and channel updates for a specific 8-byte short ID. The second mechanism is a new message pair where the sender requests information about short channel IDs within a given range of blocks and the receiver responds with an ordered series of short channel IDs. The implementation requires a channel index by block number. The third mechanism adds a gossip timestamp field to 'init' which overrides 'initial_routing_sync'. It appends the negotiation of this feature bit, allowing nodes to reconnect to a single peer more easily. The implementation is easy. Appendix A provides the encoding sizes tested for the ordered list of short channel IDs in various compression schemes (Raw, gzip -9, splitgz, delta, deltagz) using two different corpus samples: LN mainnet dump (1830 channels) and all P2SH outputs between blocks 508000-508999 incl (790844 channels). Appendix B shows the encoding source code in C language.</summary>
    <published>2018-02-20T01:08:54+00:00</published>
  </entry>
</feed>
