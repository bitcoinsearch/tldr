<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proof of payment (Re: AMP: Atomic Multi-Path Payments over Lightning)</title>
  <updated>2023-05-24T21:07:15.133667+00:00</updated>
  <author>
    <name>Corn√© Plooy 2018-02-13 10:33:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-02-13 14:23:37</name>
  </author>
  <author>
    <name>Anthony Towns 2018-02-21 09:19:47</name>
  </author>
  <link href="lightning-dev/Feb_2018/001027_Proof-of-payment-Re-AMP-Atomic-Multi-Path-Payments-over-Lightning-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001028_Proof-of-payment-Re-AMP-Atomic-Multi-Path-Payments-over-Lightning-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001034_Proof-of-payment-Re-AMP-Atomic-Multi-Path-Payments-over-Lightning-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proof of payment (Re: AMP: Atomic Multi-Path Payments over Lightning)</title>
    <updated>2023-05-24T21:07:15.133667+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/001027.html" rel="alternate"/>
    <summary>The context discusses the need for a stronger payment receipt system to prove that a payer has made a payment to a payee. The current invoicing system is not entirely reliable and can be easily hacked or breached. Several techniques have been introduced to address this issue, including using ephemeral keys in onion packets, atomic access techniques like ZKCP and ZKCSP, and a different signed invoice format. These techniques provide stronger proof-of-payment, making the payment process more secure and reliable.The Lightning-dev mailing list has discussed the use case of atomic payments and the possibility of introducing a new invoice format for partially successful payments. Christian Decker suggested atomic multipath payments with a single secret, and future decorrelation mechanisms to vary the secret, while Corne Plooy proposed a different signed invoice format that includes several payment hashes with their corresponding amounts. This iterative process would allow the not-yet-settled amount to converge to zero.A Lightning developer, Conner Fromknecht, recently questioned the strength of using a signed invoice and preimage as proof of payment since intermediaries could also make a claim. Instead, Fromknecht suggested exploring proofs of stronger statements. Furthermore, AMP currently cannot provide a proof-of-payment, unlike current payment routing that has proof-of-payment, but it is an eventual design goal that would enable use of ZKC(S)P on-Lightning.The payment receipt system is particularly useful when there is a lack of complete trust between the payer and payee, but there is a possibility to go to court. It allows the payer to prove that they paid the intended payee rather than someone else at a later date, including to a third party such as a small-claims court, tax authorities, or a KYC/AML audit. The negotiation process between the two parties is not something that the lightning protocol needs to handle beyond switching to ECC points for payment hashes. It eliminates the need for extensive legal procedures and makes the payment process more secure and reliable.</summary>
    <published>2018-02-13T10:33:50+00:00</published>
  </entry>
</feed>
