<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>AMP: Atomic Multi-Path Payments over Lightning</title>
  <updated>2023-05-24T20:53:41.574823+00:00</updated>
  <author>
    <name>Rusty Russell 2018-02-08 00:22:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>AMP: Atomic Multi-Path Payments over Lightning</title>
    <updated>2023-05-24T20:53:41.574823+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/001009.html" rel="alternate"/>
    <summary>The proposal by Olaoluwa Osuntokun is a generalized version of the single non-interactive payment scheme that utilizes decoding of extra onion blobs (EOBs) to encode additional data for receivers. The protocol only requires EOBs and a method of parsing them for functionality, meaning only the sender and receiver need to implement this feature. The proposal combines two elements: split payments and expansion of onion space. For the final hop, the expansion of onion space may not be necessary as there are eight unused bytes in `next addr`, providing 20 free bytes. The proposal could be simplified by making the payment preimage the XOR of those 20 bytes with 12 zero bytes prepended, and allowing the receiver up to 30 seconds to receive all parts after the first one. This simplification would provide dynamic resizing for senders and require the receiver to only remember the combination-so-far.</summary>
    <published>2018-02-08T00:22:47+00:00</published>
  </entry>
</feed>
