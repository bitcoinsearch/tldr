<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>AMP: Atomic Multi-Path Payments over Lightning</title>
  <updated>2023-05-24T20:52:50.697180+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-02-06 07:12:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>AMP: Atomic Multi-Path Payments over Lightning</title>
    <updated>2023-05-24T20:52:50.698144+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/000994.html" rel="alternate"/>
    <summary>In this email exchange, ZmnSCPxj compliments Laolu's work on Atomic Multi-path Payments (AMP), a scheme that allows for multi-path payments without requiring fundamental changes to the Lightning protocol. He suggests using a globalfeatures odd bit rather than localfeatures for AMP as it is end-to-end negotiation between sender and receiver. There may be fee savings for larger payments if modifications are made to the fee schedule, but currently, fees do not have a super-linear component. Using smaller payments increases the set of possible paths, reducing the effectiveness of static analysis techniques involving channel capacities and plaintext values being forwarded. To include the three-tuple within the per-hop payload for the final destination, they repurpose the first byte of the un-used padding bytes in the payload to signal version 0x01 of the AMP protocol. The realm byte is intended for this purpose, allowing intermediate nodes to route over nodes that are unaware of AMP and only providing an AMP realm byte to the destination node. Supporting AMP at final payees is enough, and ZmnSCPxj believes that AMP at intermediate nodes might not be used often enough by senders for it to matter as taking advantage of that seems more complex than just asking the routing algorithm to provide multiple routes to a destination.</summary>
    <published>2018-02-06T07:12:09+00:00</published>
  </entry>
</feed>
