<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pizza for (lightning) bitcoins?</title>
  <updated>2023-05-24T21:14:46.053149+00:00</updated>
  <author>
    <name>Robert Olsson 2018-02-25 16:35:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pizza for (lightning) bitcoins?</title>
    <updated>2023-05-24T21:14:46.053149+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/001049.html" rel="alternate"/>
    <summary>A Lightning Network user, Laszlo Hanyecz, has successfully purchased two pizzas using Bitcoin's second layer scaling solution. He paid using the Lightning network and had the pizza delivered to him by a local shop after sub-contracting it out from a friend in London who acted as an intermediary. In order to claim his pizza, he provided the payment hash preimage to the delivery driver. If he could not produce the preimage, proving that he had paid, then the pizza would not be handed over and would be destroyed. The preimage was agreed upon beforehand to be the first and last four characters of the hex string. The payment was made with a direct channel with the pizza provider, with the hop from the provider to the buyer being the 546 satoshi (so that the provider received the total price of the pizza as the “routing fee”). The buyer informed the pizza provider of the hash of the preimage which the provider could check with their node exists as an incoming HTLC and an outgoing HTLC, with the difference being the pizza price. Furthermore, the buyer set things up so that the HTLC to them expired within 3 blocks, meaning that the pizza provider had to provide the pizza within three blocks or it was free.</summary>
    <published>2018-02-25T16:35:30+00:00</published>
  </entry>
</feed>
