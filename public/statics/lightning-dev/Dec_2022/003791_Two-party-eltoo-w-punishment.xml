<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Two-party eltoo w/ punishment</title>
  <updated>2023-06-03T11:04:12.034093+00:00</updated>
  <author>
    <name>Antoine Riard 2022-12-08 19:14:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Two-party eltoo w/ punishment</title>
    <updated>2023-06-03T11:04:12.035096+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-December/003791.html" rel="alternate"/>
    <summary>Eltoo is a layer 2 scaling solution for Bitcoin's Lightning Network that aims to make forwarding payments faster by limiting the publication of eltoo states through a cryptographic puzzle. The eltoo/chia variant introduces a witness that can only be produced once, but there is some risk of locking funds up if a fast forward is made to someone who has gone offline. Proposed upgrades include penalties on top of symmetric states to reduce incentives for cheating and trustless watchtowers to prevent collusion.The Lightning Network (LN) is exploring ways to optimize its eltoo mechanism for two-party channels. Each channel participant maintains five transactions that require different actions based on the state of the channel. For example, if a party attempts to cheat by proposing a revoked state, the penalty would be deducted from their balance and given to the other party. However, extending eltoo to multiparty channels presents challenges such as penalizing being harder and coordinating multi-party state updates potentially more difficult.The scenario where Alice unilaterally closes a channel has been discussed on the Lightning-dev mailing list. To do this, Alice needs Bob to be offline for at least to_self_delay and for all of Bob's watchtowers to either also be offline or colluding. Transactions are named so that Alice can broadcast all the *A.n transactions, and Bob can likewise broadcast all the *B.n transactions. When Alice proposes a new state, she needs to send her partial signatures to allow Bob to unilaterally accept the new state but also needs to be able to claim the funds if Bob proposes the new state and broadcasts UB.n. This can be achieved with an adaptor signature approach or a CTV-like approach.However, challenges remain when it comes to extending eltoo to multiparty channels, where penalizing is harder and coordinating multi-party state updates may be more challenging. Penalizing is hard with more than two parties, fast forwards are probably impossible, and coordinating multiparty state updates seems potentially difficult. Other issues include how to add fees and pay watchtowers, lack of layered transactions, and extending to multiparty channels.</summary>
    <published>2022-12-08T19:14:06+00:00</published>
  </entry>
</feed>
