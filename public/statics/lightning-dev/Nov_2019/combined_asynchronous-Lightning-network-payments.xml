<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - asynchronous Lightning network payments</title>
  <updated>2023-06-03T22:50:34.693811+00:00</updated>
  <author>
    <name>Konstantin Ketterer 2019-10-29 20:46:38</name>
  </author>
  <author>
    <name>Konstantin Ketterer 2019-10-30 12:39:31</name>
  </author>
  <author>
    <name>Yaacov Akiba Slama 2019-10-30 15:20:57</name>
  </author>
  <author>
    <name>Yaacov Akiba Slama 2019-11-04 10:04:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-10-30 04:28:28</name>
  </author>
  <author>
    <name>Nadav Kohen 2019-10-29 21:20:28</name>
  </author>
  <author>
    <name>Yaacov Akiba Slama 2019-10-30 17:16:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-11-04 07:31:56</name>
  </author>
  <link href="lightning-dev/Oct_2019/002258_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002263_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002265_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002273_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002260_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002259_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002268_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002272_asynchronous-Lightning-network-payments.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - asynchronous Lightning network payments</title>
    <updated>2023-06-03T22:50:34.693811+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002258.html" rel="alternate"/>
    <summary>The Lightning network is a payment protocol that allows for instant transactions and has the potential to revolutionize the way we make payments. However, there are still some concerns surrounding the protocol, such as issues with privacy, locked up capital, communication channels, and proof of payment.To address these concerns, Konstantin Ketterer proposes a solution where the payer pre-signs a transaction and sends it to the payee in an end-to-end encrypted communication channel. The payee can then sell the signature to someone else using pay-for-signature made possible by payment points and scalars. They will be using eltoo because they don't have to worry about toxic channel states. This protocol enables truly asynchronous Lightning network payments and is another reason to move to payment points and scalars. Privacy is a potential issue, but they can split the payment multiple times between public routing nodes. Locked up capital is also a potential issue, but A and S can overwrite the payment or re-balance their channel A-S.In addition to this solution, there are other proposed solutions to enable asynchronous payments, such as having the sender enforce the channel state if the channel partner cheats. However, this method has more issues than the proposed solution using eltoo. There is also the option for the payer to instantly send money while being offline, but they would be in charge of enforcing the channel state if someone cheats. Moreover, if the channel is forced on-chain, such as in the case of someone losing their keys, the UTXO should be claimable in both a secret-revelation path and a timeout path. This requires a PTLC. The email exchange highlights that implementing messaging within the Lightning network would help address concerns around privacy, locked up capital, and communication channels. The proposed solutions for asynchronous payments using eltoo and payment points/scalars provide a reason to move to payment points and scalars.Another proposed solution for asynchronous payments and outsourcing routing to someone else is through the use of Trampoline. Trampoline allows Lightning nodes to communicate with each other, using standard https communication and possibly automatic polling behavior. However, privacy concerns regarding communication channel security and proof of payment, as well as the risk of locked up capital, must be taken into account. Proper safeguards and protocols must be implemented to ensure the effectiveness and security of this solution.Overall, the Lightning network has the potential to revolutionize the way we make payments, but there are still some concerns that need to be addressed. The proposed solutions for asynchronous payments using eltoo and payment points/scalars, as well as the use of Trampoline, offer promising solutions, but careful consideration of their potential risks and implementation of proper measures is necessary.</summary>
    <published>2019-10-29T20:46:38+00:00</published>
  </entry>
</feed>
