<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for up-front payments.</title>
  <updated>2023-05-23T02:19:09.362730+00:00</updated>
  <author>
    <name>Anthony Towns 2019-11-08 12:32:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for up-front payments.</title>
    <updated>2023-05-23T02:19:09.362730+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002307.html" rel="alternate"/>
    <summary>In an email thread, Rusty Russell and Anthony Towns discuss potential solutions to the issue of payment correlation in Lightning Network. They suggest that the refund amount propagating back after the payment reveals the payment's path and could potentially be obfuscated by paying each intermediate node both as the funds go out and come back. The idea is to make the amounts work like the onion where it stays constant. They provide two examples: one success case and one clean routing failure at Carol/Dave. In the latter case, they believe that the correlation is broken pretty well, and they only need a decent way of obscuring path length. In the uncooperative routing failure case, they wonder if using an ECC trapdoor and scriptless scripts could prevent Carol from getting an updated state without revealing the preimage.</summary>
    <published>2019-11-08T12:32:36+00:00</published>
  </entry>
</feed>
