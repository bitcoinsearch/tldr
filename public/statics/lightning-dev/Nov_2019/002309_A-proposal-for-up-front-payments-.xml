<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for up-front payments.</title>
  <updated>2023-06-02T21:13:17.336026+00:00</updated>
  <author>
    <name>Joost Jager 2019-11-08 14:45:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for up-front payments.</title>
    <updated>2023-06-02T21:13:17.336026+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002309.html" rel="alternate"/>
    <summary>The discussion revolves around the possibility of addressing spam by using rate limits for failures. However, it is pointed out that even if all relevant nodes on the network employ rate limits, they may not be able to isolate the spammer and diminish their disruptive abilities. It is suggested that a network of nodes that trust each other applies a 100 htlc/sec rate limit to the channels between themselves while channels to untrusted nodes get a rate of only 1 htlc/sec. This would limit the spammer to 1 htlc/s and prevent them from jamming up the network. However, it is argued that this proposal may not work effectively as attackers could still open a channel to each node and immediately jam it up. It is also noted that prepay deters spam in a more fundamental way, but there are concerns about potentially killing micro-payment-based use cases with prepay. Moreover, it is currently possible to jam a channel with very limited resources, and locking up a wumbo channel for 1000 blocks could cost the routing node 75,000 sats. The question is raised about how much prepay would be needed to prevent this type of spam, and whether the proposed 50 msat prepay would be sufficient. It is suggested that it is better to first address this class of spam before considering other types.</summary>
    <published>2019-11-08T14:45:08+00:00</published>
  </entry>
</feed>
