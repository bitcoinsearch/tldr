<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[VERY ROUGH DRAFT] BOLT 12: Offers</title>
  <updated>2023-06-02T21:38:50.847642+00:00</updated>
  <author>
    <name>Rusty Russell 2019-11-08 02:55:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[VERY ROUGH DRAFT] BOLT 12: Offers</title>
    <updated>2023-06-02T21:38:50.847642+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002303.html" rel="alternate"/>
    <summary>The context discusses the message flow for a donation offer on a website. The process involves sending an invoice request via non-Lightning communication channels like https and receiving payment through the Lightning network. The use of `lno` and `lni` as HRPs is deemed incorrect, and alternatives are suggested. The discussion also covers the format and encoding of the data fields in the payment message, including the specification of currency codes and the use of UTF-8. The default offer of a node is described as an implicit offer that never expires and can be used by any node at any time to construct an invoice request. The concept of `refund_proof` is explained, which refers to a previous invoice paid by the sender. The article also highlights the need for paths in human-readable alternate encoding. Furthermore, the article explains the new `directed` message as the mechanism for sending invoice requests and receiving invoice request responses. Finally, the incentive for forwarding nodes to forward a `directed` message is discussed.</summary>
    <published>2019-11-08T02:55:17+00:00</published>
  </entry>
</feed>
