<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for up-front payments.</title>
  <updated>2023-06-02T21:17:10.756216+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2019-11-22 10:11:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for up-front payments.</title>
    <updated>2023-06-02T21:17:10.756216+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002342.html" rel="alternate"/>
    <summary>The writer agrees with most of the points made but believes there are subtleties to explore before completely rejecting the idea. They state that every use of proof-of-work (PoW) today can instead be done by using Bitcoins to impose this economic cost, except for Bitcoin itself. The writer argues that integrating a small PoW into Lightning is less complex than integrating upfront payments and not all PoW is equal; there are different trade-offs to consider such as ASIC-resistance. Creating ASICs for PoW is fundamentally different from creating them for mining a cryptocurrency, as solving PoW doesn't earn any money. As ASICs for Lightning-Network-PoW-proof-of-work arise, intermediate nodes will have to increase the threshold for accepting PoW to limit spam. However, the writer rules out the use of ASICs and believes that attackers are not playing at a completely different scale than normal users. The cost for attackers to generate an amount of spam mimicking N normal users will then be somewhat linear in N. Finally, the writer plays devil's advocate for the PoW proposal and believes it is worth exploring more, even if they eventually abandon it.</summary>
    <published>2019-11-22T10:11:37+00:00</published>
  </entry>
</feed>
