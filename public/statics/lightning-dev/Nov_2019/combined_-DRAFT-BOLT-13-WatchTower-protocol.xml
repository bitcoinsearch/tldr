<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [DRAFT] BOLT 13(?): WatchTower protocol</title>
  <updated>2023-06-03T23:11:50.698540+00:00</updated>
  <author>
    <name>Rusty Russell 2019-12-03 00:26:11</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2019-12-05 16:46:23</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2019-11-27 20:20:21</name>
  </author>
  <author>
    <name>Antoine Riard 2019-11-29 05:43:32</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2019-12-05 16:21:10</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2020-03-09 17:49:47</name>
  </author>
  <link href="lightning-dev/Dec_2019/002357_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002368_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002350_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002353_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002367_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/March_2020/002586_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [DRAFT] BOLT 13(?): WatchTower protocol</title>
    <updated>2023-06-03T23:11:50.698540+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002357.html" rel="alternate"/>
    <summary>The Lightning Network has proposed a WatchTower protocol that ensures channel privacy by encrypting the justice transaction alongside a transaction locator sent by the client to the WatchTower. The protocol sets requirements for both clients and servers in building appointments for the WatchTower, including appointment messages, appointment_accepted messages, and appointment_rejected messages. It also covers accountability quality of service (QoS), which includes customer_evidence and tower_evidence messages associated with two blobs.The WatchTower protocol offers optional QoS to provide stronger guarantees to the client. The API for WatchTower is defined in the document, including appointment messages with several fields such as transaction size and fee, and offers accountability if required. Quality of Service (QoS) builds on top of the basic service provided by a tower and optionally provides different kinds of QoS, with accountability being one of them.The revised WatchTower protocol specification includes user accounts, payment methods, and message signing, with improvements over the original proposal. The document focuses on hiring a third party watching service to watch the blockchain and respond to channel breaches. The client sends an encrypted penalty transaction and locator to the Watchtower every time there is a new transfer in the lightning channel. Extensions can be offered by the Watchtower to provide stronger guarantees to the clients.The article discusses the three payment modes for Watchtowers: on-chain bounty, micropayments, and subscription, with the ideal approach being a combination of both. It also explains the data serialization and signing process for requests and receipts made to Watchtowers, as well as precautions that can be taken to prevent attacks. Users and servers should use ChaCha20-Poly1305 to encrypt/decrypt blobs, and the sample code for the client to prepare the encrypted blob has also been provided in the document.The WatchTower protocol draft includes a table of contents with different sections focusing on topics such as WatchTower discovery and services, basic service, QoS, sending and receiving appointments, accountability, transaction locator and encryption key, encryption algorithms and parameters, payment modes, and no compression of justice transaction. Antoine Riard provided feedback on the proposed interoperable watchtower protocol, suggesting adding information about how having an interoperable watchtower protocol increases liveness reliability, defining another TCP port than the LN one of 9735, using TLV format for messages, extending the 3 block window for start_block, and specifying limits on minimum_viable_transaction_size and maximum_viable_transaction_size.Lastly, the document mentions several FIXMES that need attention in defining a proper tower discovery, authentication mechanism, message types, receipt serialization format, and optional ways of doing batch appointments/appointments in bulk, among others. The article acknowledges areas for further development, such as defining proper tower discovery and error handling.</summary>
    <published>2019-12-03T00:26:11+00:00</published>
  </entry>
</feed>
