<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A proposal for up-front payments.</title>
  <updated>2023-06-02T21:16:51.644183+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-11-22 09:49:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A proposal for up-front payments.</title>
    <updated>2023-06-02T21:16:51.644183+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002341.html" rel="alternate"/>
    <summary>In a recent email conversation, ZmnSCPxj suggested adapting the use of PoW/Merkle puzzles to prevent spam in the Lightning Network. The sender would have to solve a small PoW puzzle for each intermediate node and communicate the solution in the onion to impose a cost that varies depending on how specialized their hardware is at generating proof-of-work. While this method would be simple and private, it could lead to indirect and specialized hardware usage, which may end up becoming kingmakers capable of allowing or suppressing certain economic activities. Instead, ZmnSCPxj argued that every use of proof-of-work today can be done by using Bitcoins to impose an economic cost, which would directly impose some cost on the sender that it pays directly.Meanwhile, Rusty Russell discussed the issue of correlation that arises when correlating all the hops in a payment when the route reaches its end, revealing the path. He suggested an accumulator with some strange properties, where Alice provides tokens and a base accumulator, Bob et. al can add these tokens to the accumulator, they can tell if invalid tokens have been added to the accumulator, and they can tell how many tokens have been added, but can't tell what tokens have been added unless they know all the tokens. Additionally, he proposed obscuring the path length and using an ECC trapdoor and scriptless scripts to make it so Carol doesn't even get an updated state without revealing the preimage. Overall, the discussions revolve around finding ways to prevent spam and maintain privacy in the Lightning Network.</summary>
    <published>2019-11-22T09:49:16+00:00</published>
  </entry>
</feed>
