<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[DRAFT] BOLT 13(?): WatchTower protocol</title>
  <updated>2023-06-02T22:01:06.228291+00:00</updated>
  <author>
    <name>Sergi Delgado Segura 2019-11-27 20:20:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[DRAFT] BOLT 13(?): WatchTower protocol</title>
    <updated>2023-06-02T22:01:06.228291+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002350.html" rel="alternate"/>
    <summary>Patrick McCorry and another person have been working on a BOLT draft for WatchTowers. They aim to standardize the implementation of WatchTowers as different implementations may not be interoperable. Essentially, WatchTowers are third-party services that watch the blockchain for channel breaches on behalf of Lightning Network users who remain offline. The client sends an encrypted justice transaction alongside a transaction locator to the WatchTower, and both the encryption key and the transaction locator are derived from the breach transaction id. While the WatchTower cannot learn any information about the client's channel unless there is a channel breach, due to replace-by-revocation Lightning channels, the client should send data to the WatchTower every time there is a new update in the channel. Furthermore, optional quality of service (QoS) can be offered by the WatchTower to provide stronger guarantees to the client, such as a signed receipt for every new job. The scope of the document includes building appointments for the WatchTower, including key/locator derivation and data encryption, a protocol for client/server communication, and a format for the signed receipt. However, it does not include a payment protocol between the customer and WatchTower or WatchTower server discovery. The document provides a table of contents with different sections focusing on topics such as WatchTower discovery and services, basic service, QoS, sending and receiving appointments, accountability, transaction locator and encryption key, encryption algorithms and parameters, payment modes, and no compression of justice transaction. The authors have not yet defined how a client can find a list of servers to hire but assume that the client has found a server offering a watching service. Lastly, they describe two types of services: basic service and quality of service (QoS), which builds on top of the basic service provided by the tower.</summary>
    <published>2019-11-27T20:20:21+00:00</published>
  </entry>
</feed>
