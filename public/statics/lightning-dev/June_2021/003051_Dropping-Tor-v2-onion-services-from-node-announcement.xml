<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Dropping Tor v2 onion services from node_announcement</title>
  <updated>2023-05-23T14:46:36.712840+00:00</updated>
  <author>
    <name>Matt Corallo 2021-06-10 20:40:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Dropping Tor v2 onion services from node_announcement</title>
    <updated>2023-05-23T14:46:36.712840+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-June/003051.html" rel="alternate"/>
    <summary>On June 1, 2021, darosior via Lightning-dev informed that it has been almost nine months since Tor v2 hidden services have been deprecated. The Tor project plans to drop v2 support in about a month in the latest release and will entirely drop from all supported releases by October. Bitcoin Core defaults to v3 since 0.21.0 and is planning to drop v2 support for 0.22, which means that v2 onions will gradually stop being gossiped on the Bitcoin network. C-lightning is deprecating the configuration of Tor v2 services starting next release, and according to their deprecation policy, they should be able to drop its support three releases after this one. The author suggests doing the same for the Lightning network, stating that the timeline is tight, and the configuration is user-facing, which may make the transition trickier. The author asks for opinions and the state of other implementations regarding Tor v2 support. There isn't much to do at the spec level to deprecate them, but nodes need to start ignoring the addresses bug nodes always need to know the length/parse v2 Onion addresses forever as well as store and forward them. It could amend the spec to say that nodes shouldn’t produce them but it won’t change the receive/process end much.</summary>
    <published>2021-06-10T20:40:21+00:00</published>
  </entry>
</feed>
