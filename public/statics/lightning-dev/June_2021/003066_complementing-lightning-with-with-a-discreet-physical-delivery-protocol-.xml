<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>complementing lightning with with a discreet physical delivery protocol?</title>
  <updated>2023-06-03T04:11:50.358446+00:00</updated>
  <author>
    <name>vzxplnhqr at tutanota.com 2021-06-25 18:34:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>complementing lightning with with a discreet physical delivery protocol?</title>
    <updated>2023-06-03T04:11:50.358446+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-June/003066.html" rel="alternate"/>
    <summary>The author of the email has shared a repository, discreet-physical-delivery-protocol, to gather some thoughts around utilizing current and forthcoming features of Lightning to create a robust, reasonably private, and incentive-compatible network for physical delivery of items. The author discusses the potential use of hodl invoices for atomic item delivery, but notes that hodl invoices are also the primary culprit for some attacks on the network. They ask if Lightning in a post-taproot world solves any of these issues. The author provides a quick refresher on how lightning and hodl invoices can be used for atomic package delivery. They describe the scenario of Merchant Mary operating an e-commerce website and Purchaser Paul buying something and having it delivered with the help of independent Courier Charlie. The process involves generating a preimage, sending the hash of the preimage to Mary, creating a hodl invoice with the hash by Mary, Charlie creating another hodl invoice for delivery costs, delivering the package to Paul, and settling the outstanding invoices using the preimage. The author suggests that allowing the above process to be multi-hop and blinding the physical location from one hop to the next is non-trivial but seems doable. They ask for feedback and input on the protocol.</summary>
    <published>2021-06-25T18:34:56+00:00</published>
  </entry>
</feed>
