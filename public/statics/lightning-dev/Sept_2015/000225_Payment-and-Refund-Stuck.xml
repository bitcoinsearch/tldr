<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment and Refund Stuck</title>
  <updated>2023-05-23T20:31:46.959211+00:00</updated>
  <author>
    <name>Rusty Russell 2015-09-24 05:56:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment and Refund Stuck</title>
    <updated>2023-05-23T20:31:46.959211+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000225.html" rel="alternate"/>
    <summary>In a discussion thread, Mats Jerratsch shared his thoughts on the potential impact of an attacker stopping one payment in a payment channel network. Jerratsch believes that such an attack would be a mere nuisance because the payer and payee can set a timeout and the payee can issue a refund back to the payer if the payment does not arrive after the timeout. This refund will pay to the same secret hash as the initial payment, and it will pay an amount sufficient for the payer to receive their initial payment completely back. Jerratsch further explains that when the payer receives the refund in their channel, they can be sure that the payment has been invalidated. Furthermore, even if the payee reveals the secret, the funds will just circle back again, and the payee will pay fees for both transactions as a disincentive. This concept has been suggested by Joseph Poon before.Rusty acknowledges Jerratsch's criticisms and keeps the suggestion in reserve in case there is a need to code up a solution in the future.</summary>
    <published>2015-09-24T05:56:30+00:00</published>
  </entry>
</feed>
