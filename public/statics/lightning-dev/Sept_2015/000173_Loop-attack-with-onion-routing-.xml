<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Loop attack with onion routing..</title>
  <updated>2023-05-23T19:30:34.625832+00:00</updated>
  <author>
    <name>CJP 2015-09-01 07:07:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Loop attack with onion routing..</title>
    <updated>2023-05-23T19:30:34.625832+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000173.html" rel="alternate"/>
    <summary>In a discussion regarding onion routing, a scenario is presented where "H" wants to be secretive. H establishes a channel with G and tells F he can route to H via G. H then tells D he can route to H via F. A sends a transaction for H to D as instructed, and D forwards it on via F. It is noted that locking of transaction funds is always done in payer -&gt; payee direction, which requires a separate routing phase before the locking. The protocol could include fines as an extension to bribe the payer not to close the channel. However, an attacker can create an arbitrarily long path with source routing, thereby creating arbitrarily large total damage to the network, corresponding to arbitrarily large total fines.</summary>
    <published>2015-09-01T07:07:30+00:00</published>
  </entry>
</feed>
