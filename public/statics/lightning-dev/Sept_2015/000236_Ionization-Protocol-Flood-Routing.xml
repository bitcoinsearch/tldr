<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ionization Protocol: Flood Routing</title>
  <updated>2023-05-18T15:13:35.191508+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-09-25 03:38:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ionization Protocol: Flood Routing</title>
    <updated>2023-05-18T15:13:35.191508+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000236.html" rel="alternate"/>
    <summary>In an email conversation between Rusty Russell and Pieter, they discuss the possibility of squeezing more bytes out. They suggest that the signature should be 64 bytes and should never be DER encoded. Additionally, the public key can be hashed bitcoin-address style and recovered from the signature. However, this leads to the question of why the pubkey is in the scriptSig. The reason for this is that crypto is hard, and many people may not know about this method. Public key recovery is possible on ECDSA, and the recovery id can be brute forced. In most cases, the recovery id will be 0 or 1. However, if EC-Schnorr scheme is used in libsecp256k1 instead of ECDSA, it produces 64-byte non-malleable signatures that support pubkey recovery without an additional recovery id. This scheme is experimental but is an implementation of a well researched mechanism.</summary>
    <published>2015-09-25T03:38:59+00:00</published>
  </entry>
</feed>
