<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ionization Protocol: Flood Routing</title>
  <updated>2023-05-18T15:19:23.979620+00:00</updated>
  <author>
    <name>Anthony Towns 2015-09-25 05:54:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ionization Protocol: Flood Routing</title>
    <updated>2023-05-18T15:19:23.979620+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000234.html" rel="alternate"/>
    <summary>In a discussion about the potential overload of beacons in Lightning Network, it was debated whether or not getting slammed from all directions would use up channels. It was argued that this does indeed use up channels since if someone owns 20 BTC out of the total 100 BTC across five channels and collects a 0.1% fee on each transaction, they will gain 80 BTC after 80,000 BTC are forwarded through them and no one will be able to send them funds anymore. Beacons may also raise their fees, which could reduce the number of transactions by a factor of 10 or 20, but other nodes can fix this by opening new channels to them.Regarding bandwidth, the number of beacons and their bandwidth puts a limit on the transactions per second of the lightning network. A calculation shows that with 12 beacons having 100Mb/s bandwidth, the maximum number of lightning transactions per second would be around ~73k, which is about the same as the VisaNet stress tests. It was suggested that neighbors would want to buff up to take some load off the beacon if both parties route through them. A semi-realistic simulation would be interesting to explore if payments cluster by geography and random channels are established by proximity. However, routing by proximity cuts out some of the benefits of onion routing.</summary>
    <published>2015-09-25T05:54:06+00:00</published>
  </entry>
</feed>
