<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving Payment Latency by Fast Forwards</title>
  <updated>2023-06-02T18:28:53.519516+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-05-24 07:04:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving Payment Latency by Fast Forwards</title>
    <updated>2023-06-02T18:28:53.519516+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-May/003041.html" rel="alternate"/>
    <summary>In a conversation between LL and ZmnSCPxj, they discuss an alternative option to the "ask first" 3 round protocol in regards to the ownership of `remote_penaltyclaimpubkey`. This option allows funds to accrue in the fast forward state which can be swept into the commit transaction at the merchant's discretion. However, this approach would require privkeys to be periodically online more often than the `to_self_delay`, in case of theft attempts. ZmnSCPxj suggests that this technique would be useful for a big merchant who primarily accepts payments as it would mitigate their key exposure. The merchant would program a small low-power device to enable its network interface periodically at random times and connect out to the node to present proof of holding the privkey. The node could then "roll up" any fast-forwarded HTLCs and send out funds if necessary.</summary>
    <published>2021-05-24T07:04:27+00:00</published>
  </entry>
</feed>
