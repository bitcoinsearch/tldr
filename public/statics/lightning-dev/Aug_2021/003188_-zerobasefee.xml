<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>#zerobasefee</title>
  <updated>2023-06-03T05:31:15.193597+00:00</updated>
  <author>
    <name>Stefan Richter 2021-08-17 10:07:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>#zerobasefee</title>
    <updated>2023-06-03T05:31:15.193597+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003188.html" rel="alternate"/>
    <summary>In a recent email exchange, ZmnSCPxj suggests that the cost function in actual implementation is already overloaded and that actual implementations will have some kind of conversion between cltv-delta and fees-at-node. He suggests that it may be easier for users to think in terms of "fee budget" instead of risk factor and that algorithms should try to keep costs as low as possible. However, ignoring fees in routing would allow people to take advantage of this. The paper claims to have sent 40,000,000,000msat for a cost of 814,000msat, or 0.002035% fee percentage, far below the 0.5% default maxfeepercent. Ren√© is going to publish those results soon. The situation is complex, and if fees are disregarded in routing, an adversary could design a DOS vector by forcing people to go through exponentially many min-cost flow rounds. Optimizing for some cost while staying under a budget for a second cost is weakly np-hard even for the single path case. Including the fees in the cost function appears to be the more holistic approach since min-cost flow algorithms always give a globally optimized answer. While economic requirements are important, engineering requirements are equally important. Matt argues that we may encounter an engineering reason to charge some base fee, so encouraging #zerobasefee now might not be the wisest course of action, as a future engineering problem may need to be solved with non-zero basefee.</summary>
    <published>2021-08-17T10:07:05+00:00</published>
  </entry>
</feed>
