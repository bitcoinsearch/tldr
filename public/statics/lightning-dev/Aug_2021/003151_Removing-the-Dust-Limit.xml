<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing the Dust Limit</title>
  <updated>2023-06-03T05:17:53.601484+00:00</updated>
  <author>
    <name>Antoine Riard 2021-08-09 13:22:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing the Dust Limit</title>
    <updated>2023-06-03T05:17:53.601484+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003151.html" rel="alternate"/>
    <summary>In a discussion on the Lightning-dev mailing list, Antoine argues against increasing the standard dust limit in any way, as it could lower funds safety and introduce a trust vector in the reliability of peers. He suggests that LN node operators might compensate for this trust vector by relying on side-trust models such as PKI or API tokens, which could constrain the design space of newer fee schemes. Additionally, an increase to the base-layer dust limit could damage the propagation of any LN transaction, where a commitment transaction is built with less than 20 sat/vb outputs. Antoine believes that smarter engineering solutions like utreexo on the base-layer side or multi-party shared-utxo on the upper layers are better suited to solve the long-term tension between L2 nodes and full-nodes operators about the UTXO set growth. Jeremy Rubin, another participant in the discussion, argues for the removal of the dust limit from Bitcoin, citing reasons such as the use of dust outputs in smart contracts and the potential use of sats as value markers for transactions. However, Antoine believes that the current equilibrium is good enough and suggests learning from another development cycle before making changes to the dust limit.</summary>
    <published>2021-08-09T13:22:28+00:00</published>
  </entry>
</feed>
