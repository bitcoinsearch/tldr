<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>#zerobasefee</title>
  <updated>2023-06-03T05:31:56.984661+00:00</updated>
  <author>
    <name>lisa neigut 2021-08-15 12:19:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>#zerobasefee</title>
    <updated>2023-06-03T05:31:56.984661+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003176.html" rel="alternate"/>
    <summary>The field of economics has shown that people often act irrationally to get a free deal, externalizing costs elsewhere. To address this, a min_htlc_value requirement has been suggested, but it makes tiny payments impossible over lightning. As a compromise, a network-wide minimum fee at the protocol level of 1msat is proposed. Micropayments would have a different payment regime than non-micropayments, but there's no loss felt by node operators for low value payments. This proposal is simple to implement and seems obvious in retrospect. In the future, negative fees may be introduced for passive channel rebalancing. There have been discussions on Twitter advocating for setting the BOLT#7 fee_base_msat value to zero. Setting the base fee to zero means you only have one value to optimize when trying to collect the most fees, making routing easier. However, there's no longer a fixed minimum fee, so a minimum payment size is necessary. It is suggested that nodes treat the setting as minimum_fee=1sat instead of minimum_amount=5000sat and accept smaller payments provided they pay the same fee as a larger payment. This approach also makes sense when channels become overloaded. At present, all fixed costs are incurred even when an HTLC fails, so having zero base fee seems fair until there's a way to charge failing transactions for those costs.</summary>
    <published>2021-08-15T12:19:01+00:00</published>
  </entry>
</feed>
