<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Do we really want users to solve an NP-hard problem when they wish to find a cheap way of paying each other on the Lightning Network?</title>
  <updated>2023-06-03T05:39:05.466529+00:00</updated>
  <author>
    <name>Stefan Richter 2021-08-31 19:10:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Do we really want users to solve an NP-hard problem when they wish to find a cheap way of paying each other on the Lightning Network?</title>
    <updated>2023-06-03T05:39:05.466529+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003214.html" rel="alternate"/>
    <summary>In an email conversation between ZmnSCPxj and Stefan, they discussed the possibility of creating a variant of Pickhardt-Richter payments that can adapt to the reality of the current network where `base_fee &gt; 0` is common but is biased against `base_fee &gt; 0`. They suggest using amount*prop_fee + amount*base_fee/min_flow_size as a component of the cost function, with min_flow_size being a suitable quantization constant (such as 10k or 100k sats) that could be chosen dynamically. This solution solves the problem of splitting flows into HTLCs and is nicely convex, making it easy to find min-cost flows for it. The smaller the min_flow_size and the larger the base_fee, the less accurate it becomes, but economics will likely convince most people to choose a zero or low base_fee. Overall, this provides a practical solution for the ongoing debate about base fees in Lightning Network.</summary>
    <published>2021-08-31T19:10:40+00:00</published>
  </entry>
</feed>
