<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing the Dust Limit</title>
  <updated>2023-05-23T15:28:01.172651+00:00</updated>
  <author>
    <name>Matt Corallo 2021-08-08 21:14:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing the Dust Limit</title>
    <updated>2023-05-23T15:28:01.172651+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003147.html" rel="alternate"/>
    <summary>A proposal to remove the dust limit from Bitcoin has been made, but Matt Corallo argues that it's important to consider increasing the dust limit instead. The UTXO set size is a fundamental scalability constraint of the system, and the current dust limit is based on a feerate of only 3 sat/vByte, which is incredibly low. As feerates have gone up over time, and are expected to continue to rise, drastically increasing the 3 sat/vByte basis to something more like 20 sat/vB should be considered. The removal of the dust limit was suggested because it's not Bitcoin's business to dictate what outputs people want to create, but Corallo argues that the costs are born by miners and full node operators, so it is precisely Bitcoin's business. Dust outputs can be used in various authentication/delegation smart contracts, but Corallo suggests that low-value-but-enough-to-be-worth-spending-when-you're-done-with-them outputs could be used instead. Thinly divisible colored coin protocols might make use of sats as value markers for transactions, but Corallo believes that these schemes can and should use values which make them economical to spend. Lastly, the significant costs to every miner and full node operator are a reason to keep the dust limit in place.</summary>
    <published>2021-08-08T21:14:23+00:00</published>
  </entry>
</feed>
