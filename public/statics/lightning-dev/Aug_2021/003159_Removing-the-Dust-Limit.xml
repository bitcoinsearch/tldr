<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing the Dust Limit</title>
  <updated>2023-06-03T05:18:27.339772+00:00</updated>
  <author>
    <name>Oleg Andreev 2021-08-08 21:41:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing the Dust Limit</title>
    <updated>2023-06-03T05:18:27.339772+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003159.html" rel="alternate"/>
    <summary>A discussion on the Bitcoin-dev mailing list has arisen regarding the dust limit in Bitcoin. While some argue that it should be removed, others suggest increasing it to address scalability constraints. Jeremy argues that removing the limit would be beneficial, as the cost of storing private data is currently borne by every user. However, this logic is refuted on the grounds that the limit acts as an economic incentive for users to "clean up" outputs after they are done with them. Furthermore, issues such as spam and fingerprinting attacks have been cited as reasons for keeping the dust limit. Matt Corallo, a Bitcoin developer, acknowledges that the size of the UTXO set is a fundamental scalability constraint of the system. He suggests increasing the 3 sat/vByte basis of the dust limit to something closer to 20 sat/vB to address this issue. While Jeremy argues that dust-sized HTLCs in Lightning force channels to operate in a semi-trusted mode, Matt contends that this is unrelated to the consensus dust limit and can be solved through other means. Lastly, the potential implementation of confidential transactions raises concerns about compromising privacy and allowed transfers, but the dust limit is not a consensus limit, so it can be relaxed if necessary.</summary>
    <published>2021-08-08T21:41:32+00:00</published>
  </entry>
</feed>
