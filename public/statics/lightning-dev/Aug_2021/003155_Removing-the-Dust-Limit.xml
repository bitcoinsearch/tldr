<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing the Dust Limit</title>
  <updated>2023-06-03T05:22:38.628161+00:00</updated>
  <author>
    <name>David A. Harding 2021-08-10 06:14:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing the Dust Limit</title>
    <updated>2023-06-03T05:22:38.628161+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003155.html" rel="alternate"/>
    <summary>In an email thread, Antoine Riard expressed his reluctance to increase the standard dust limit as it would convert a higher percentage of Lightning Network (LN) channel capacity into dust, lowering funds safety. However, Dave pointed out that this reasoning is incomplete and mentioned two related things - uneconomical outputs and the dust limit. Increasing the minimum necessary feerate to get a transaction confirmed in an appropriate amount of time also "converts a higher percentage of LN channel capacity into dust". Dave suggested that developers have no control over prevailing feerates and this is a problem that LN needs to deal with regardless of Bitcoin Core's dust limit. Furthermore, Dave argued that any trust vector is introduced not by the dust limit but by the economics of outputs being worth less than they cost to spend. He also suggested that LN node operators could use trustless probabilistic payments or rely on smarter engineering such as utreexo on the base-layer side to handle the issue of small payments. However, he pointed out that Utreexo doesn't solve this problem entirely as many nodes will still want to store the full UTXO set and access it quickly. Overall, Dave believes that the status quo is good enough for now and there are alternative ways to handle the issue of small payments in LN.</summary>
    <published>2021-08-10T06:14:41+00:00</published>
  </entry>
</feed>
