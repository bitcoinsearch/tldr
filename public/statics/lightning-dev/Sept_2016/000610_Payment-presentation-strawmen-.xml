<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment presentation strawmen.</title>
  <updated>2023-05-24T00:23:16.464365+00:00</updated>
  <author>
    <name>Ryan Grant 2016-09-10 11:16:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment presentation strawmen.</title>
    <updated>2023-05-24T00:23:16.464365+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-September/000610.html" rel="alternate"/>
    <summary>When making payments using multiple Lightning Network (LN) channels, the accounting procedures for the recipient of the payment, such as Bob, may require time-based heuristics to join separate LN transactions. Therefore, it is important that there is reassembly protocol support available, like BIP 70's merchant_data field, wherever payments might fragment. This is because payments unexpectedly fragmented into multiple LN channels are more difficult to manage than transactions spending multiple UTXOs. It is suggested that every wallet should assist with this accounting, and a varint should suffice as it is a low-level protocol. A payment_id could be used to identify fragmented payments, which would help recipients like Bob join separate LN transactions. If a payment_id is not provided, it could be considered a "don't fragment" request, if tolerated at all.</summary>
    <published>2016-09-10T11:16:07+00:00</published>
  </entry>
</feed>
