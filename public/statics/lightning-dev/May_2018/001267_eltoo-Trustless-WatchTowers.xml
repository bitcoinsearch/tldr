<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo Trustless WatchTowers</title>
  <updated>2023-05-25T00:54:07.715086+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-05-10 04:10:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo Trustless WatchTowers</title>
    <updated>2023-05-25T00:54:07.715086+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001267.html" rel="alternate"/>
    <summary>The Lightning Network WatchTower service allows for the monitoring of channels to detect and respond to breaches. However, using a "swap this blob" approach for updating channels could lead to privacy leaks as attackers can identify which WatchTowers are being used and disable them. To prevent this, the WatchTower could demand a public key and signature or know a stable identity of the victim and attacker. A ticket scheme that charges for each `(txid[:16], blob)` pair it stores and monitors could also be implemented. In addition, clients can add randomization to de-correlate their updates and batch several updates into a single message. Under the Poon-Dryja scheme, revocation data can be distributed to a subset of all serving WatchTowers, while the Decker-Russell-Osuntokun scheme allows for several watchtowers to advance the update transaction towards the final most up-to-date state.</summary>
    <published>2018-05-10T04:10:49+00:00</published>
  </entry>
</feed>
