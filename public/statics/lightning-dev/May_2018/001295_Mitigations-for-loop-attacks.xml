<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Mitigations for loop attacks</title>
  <updated>2023-05-25T00:43:56.509306+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-05-22 22:50:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Mitigations for loop attacks</title>
    <updated>2023-05-25T00:43:56.509306+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001295.html" rel="alternate"/>
    <summary>In a Lightning-dev mailing list, Corn√© Plooy had asked whether proving channel closure if onion unpeeling was not possible is specified in a BOLT (Basis of Lightning Technology). ZmnSCPxj replied that onion unpeeling might not have made it into the BOLT spec due to the problems with it. The unpeeling mentioned here refers to a hop node rather than the payer or source unpeeling it. The purpose of unpeeling the onion was to find out who was being slow. ZmnSCPxj suggested that the discussion on this topic might be archived somewhere else.</summary>
    <published>2018-05-22T22:50:02+00:00</published>
  </entry>
</feed>
