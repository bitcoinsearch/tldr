<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Mitigations for loop attacks</title>
  <updated>2023-05-25T00:47:12.431808+00:00</updated>
  <author>
    <name>Jim Posen 2018-05-16 01:48:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Mitigations for loop attacks</title>
    <updated>2023-05-25T00:47:12.431808+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001286.html" rel="alternate"/>
    <summary>The context discusses how an attacker can manipulate the reputation view of two nodes by routing payments through them. By opening a direct channel to one node, the attacker can route payments that succeed quickly and then route payments that stall through another node in order to make the first node's reputation go down. However, if the attacker compensates the victim node for experiencing payment delays, it becomes less of an attack and more of a pricing of resource utilization. The system is designed with the assumption that the best way to defend an anonymous/decentralized network that allows sybils is by pricing resource utilization appropriately. The CLTV total can leak information on how far the payee is, and it is suggested that keeping track of a reputation score for the entire network could be a useful protection against loop attacks/payment delays. Reputation is increased in the case of successful payments by the fee collected, but decreased on the downstream peer proportional to time T regardless of whether the payment succeeds or fails. If the payment fails, the upstream peer's reputation does not change and the downstream peer's reputation always decreases proportional to time T.</summary>
    <published>2018-05-16T01:48:33+00:00</published>
  </entry>
</feed>
