<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why do we need fee estimation in the protocol?</title>
  <updated>2023-05-25T00:59:51.843786+00:00</updated>
  <author>
    <name>Rusty Russell 2018-05-14 03:51:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why do we need fee estimation in the protocol?</title>
    <updated>2023-05-25T00:59:51.843786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001276.html" rel="alternate"/>
    <summary>The Lightning Network's fee estimation algorithm, as described in BOLT#3, may not be optimal due to the subjective considerations involved in fee estimation. Rusty Russell, a contributor to the Lightning Network, suggests allowing peer A to pay for the commit transaction A and determine the amount of the fee, as they always pay the fee anyway. Peer B would need to approve it, but only needs to ensure that their own funds are safe. However, given the asynchronous nature of updates, this solution is not sufficient as neither side may end up being happy with the fees. Laolu Osuntokun's proposal of having an "OP_TRUE" output and minimal fees, that require a CPFP to push the transaction, greatly simplifies the fee problems but costs some onchain bloat for unilateral closes. Eltoo works around this by having only a single input/output pair with SIGHASH_SINGLE|SIGHASH_ANYONECANPAY and relying on SIGHASH_NOINPUT, enabling fees to be attached later without the bloat issue.</summary>
    <published>2018-05-14T03:51:13+00:00</published>
  </entry>
</feed>
