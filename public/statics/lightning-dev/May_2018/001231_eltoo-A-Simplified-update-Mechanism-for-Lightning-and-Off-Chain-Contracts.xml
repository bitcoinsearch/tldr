<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-24T23:50:08.777992+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-05-02 04:12:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-24T23:50:08.777992+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001231.html" rel="alternate"/>
    <summary>ZmnSCPxj has proposed to remove the trigger transaction as `nSequence`-encumbered transactions are only settlement transactions and not any update transactions. ZmnSCPxj suggests that the funding transaction outpoint could have a SCRIPT that allows the funding outpoint to be spent directly by any update transaction, which has `OP_FALSE` at its `witness` script. In creating a mutual close transaction, the update branch of the funding transaction above would be used, again signing with `OP_FALSE`. The drawback is that the mutual close transaction increases by 1 weight unit plus the size of the more complicated funding transaction SCRIPT, which is no longer a regular 2-of-2 P2WSH and indelibly marking it as a Decker-Russell-Osuntokun mutual close. Taproot would help there by implicitly including a plain 2-of-2 fallback.</summary>
    <published>2018-05-02T04:12:28+00:00</published>
  </entry>
</feed>
