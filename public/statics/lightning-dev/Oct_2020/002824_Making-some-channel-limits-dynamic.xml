<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making (some) channel limits dynamic</title>
  <updated>2023-06-03T02:15:24.980089+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-10-11 08:50:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making (some) channel limits dynamic</title>
    <updated>2023-06-03T02:15:24.980089+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-October/002824.html" rel="alternate"/>
    <summary>The conversation discusses the impact of raising the minimum payment size on MPP-split and suggests that it may not have much impact. The speaker suggests that MPP may not be necessary on the network's backbone but only at its edges, and that if Trampoline is implemented, MPP would be needed to reach a first routing node. The onions-per-channel model currently in use is questioned, and the speaker suggests using HTLC packets that openly show the next destination node, but once all parts reach the destination node, it decodes and turns out to be an onion to be sent to the next destination node. However, this proposal would be more expensive than purely source-based routing and probably have worse payment latency. Finally, the receiver's confidence in the input end of the trampoline node being "nearer" to the payer than itself is questioned.</summary>
    <published>2020-10-11T08:50:12+00:00</published>
  </entry>
</feed>
