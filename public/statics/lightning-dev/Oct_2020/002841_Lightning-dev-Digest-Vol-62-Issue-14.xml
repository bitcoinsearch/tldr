<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Lightning-dev Digest, Vol 62, Issue 14</title>
  <updated>2023-06-01T18:31:39.662997+00:00</updated>
  <author>
    <name>Bitcoin Error Log 2020-10-14 06:17:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Lightning-dev Digest, Vol 62, Issue 14</title>
    <updated>2023-06-01T18:31:39.662997+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-October/002841.html" rel="alternate"/>
    <summary>The discussion is about designing a trust solution to prevent possible attacks that are not happening in the Lightning Network (LN). One suggestion is to use existing trust solutions used by common networks like KYC, black/whitelisting, reputation scoring, permissioned/private subnets, and scoring/tiers, and adapt them to this situation. However, formal KYC is not desirable for LN, but the same principle of identifying counterparty and assessing risk can be applied. Other approaches include permissioned access, reduced public listening, out-of-band credentialing, and using a multipurpose context layer that includes ID systems, namespaces, and WoTs. It is suggested that networking issues like these might not be appropriate to be handled at the LN level. The discussion also criticizes the focus on minor imperfections instead of addressing the main issue of designing a trust solution. Finally, it is emphasized that cryptographic punishment schemes are not universal solutions.</summary>
    <published>2020-10-14T06:17:59+00:00</published>
  </entry>
</feed>
