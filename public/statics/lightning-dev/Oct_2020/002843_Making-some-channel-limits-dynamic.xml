<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making (some) channel limits dynamic</title>
  <updated>2023-06-03T02:17:36.161829+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2020-10-14 08:52:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making (some) channel limits dynamic</title>
    <updated>2023-06-03T02:17:36.161829+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-October/002843.html" rel="alternate"/>
    <summary>In an email conversation between Bastien and Olaoluwa Osuntokun, they discuss the idea of adding TLV records to commitment_signed to inform channel peers of changing values for certain fields. They suggest that this proposal fits into the "parameter re-negotiation" portion of the loose Dynamic commitments proposal. They propose that both sides should be able to propose/accept/deny updates to flow control parameters to increase channel security or implement a "slow start" protocol for new peers. They suggest gradually increasing a peer's access to resources based on successful payments and decreasing it if there are long-lived HTLCs or excessive failures. This mechanism would mitigate several classes of attacks and give forwarding nodes more control over how their allocated bandwidth is used by all connected peers. They note that while this is possible to some extent today, using an implicit value lower than negotiated values doesn't communicate the reason for rejecting an HTLC, which may lead to weird re-send loops. They also suggest that the dust limit should also be dynamic to protect against future changes.</summary>
    <published>2020-10-14T08:52:24+00:00</published>
  </entry>
</feed>
