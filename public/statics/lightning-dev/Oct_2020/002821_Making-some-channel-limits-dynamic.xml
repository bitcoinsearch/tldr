<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Making (some) channel limits dynamic</title>
  <updated>2023-06-03T02:15:59.409158+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2020-10-09 07:24:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Making (some) channel limits dynamic</title>
    <updated>2023-06-03T02:15:59.409158+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-October/002821.html" rel="alternate"/>
    <summary>The discussion between t-bast and ZmnSCPxj centers around the dynamic nature of channel parameters and the potential impact on MPP-split success rates when raising the minimum payment size. While t-bast asserts that raising the minimum payment size is a complexity that must be dealt with, ZmnSCPxj argues that it may negatively affect MPP success rates and suggests considering asymmetric splits and using big payments as an aggregation method instead. T-bast also shares their opinion that MPP is not necessary on the network's backbone and should only be used at the edges. They suggest that once the network matures, channels between "serious" routing nodes will be much larger than individual payment sizes. The MPP routes would only need to be computed on a small subset of the network in this case, making brute-force algorithms reasonable and increasing success rates. Despite this fork in the discussion, t-bast believes that live channel parameter updates should not be prevented.</summary>
    <published>2020-10-09T07:24:41+00:00</published>
  </entry>
</feed>
