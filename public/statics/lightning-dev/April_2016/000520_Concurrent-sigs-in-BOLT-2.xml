<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Concurrent sigs in BOLT #2</title>
  <updated>2023-05-23T23:27:18.852485+00:00</updated>
  <author>
    <name>Pierre 2016-04-24 19:29:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Concurrent sigs in BOLT #2</title>
    <updated>2023-05-23T23:27:18.852485+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-April/000520.html" rel="alternate"/>
    <summary>The author is trying to understand how to handle concurrent signatures and proposes using an ordering system to resolve conflicts when they occur. The proposed solution involves having two nodes agree on which signature is "greatest" and then having the node that sent the lesser signature immediately resend a new signature including all pending changes. An example scenario is provided where Node A and Node B have conflicting staged changes, but agree to use SIG B0 as the "greatest" signature and proceed with a new signature encompassing all changes. The example concludes with SIG A1 being sent from Node A after the conflict has been resolved.</summary>
    <published>2016-04-24T19:29:22+00:00</published>
  </entry>
</feed>
