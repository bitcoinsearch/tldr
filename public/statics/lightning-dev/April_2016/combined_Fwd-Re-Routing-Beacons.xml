<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fwd: Re:  Routing &amp; Beacons</title>
  <updated>2023-05-23T23:27:02.813221+00:00</updated>
  <author>
    <name>laurentmt 2016-04-15 12:20:31</name>
  </author>
  <author>
    <name>Rusty Russell 2016-04-26 00:43:41</name>
  </author>
  <link href="lightning-dev/April_2016/000519_Fwd-Re-Routing-Beacons.xml" rel="alternate"/>
  <link href="lightning-dev/April_2016/000521_Fwd-Re-Routing-Beacons.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fwd: Re:  Routing &amp; Beacons</title>
    <updated>2023-05-23T23:27:02.813221+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-April/000519.html" rel="alternate"/>
    <summary>The conversation between Rusty and LaurentMT was about Lightning Network's routing system. Laurent asked if on a given period, all payments go through the selected beacon nodes. Rusty replied that it is to a first approximation, yes, but if the route would go in and out the same channel, it can be eliminated. They discussed the drawbacks and advantages of this approach compared to protocols like the pulse protocol. Laurent also asked whether Rusty had already decided on an update strategy for the routing tables. Rusty stated that he had not yet decided on one and welcomed thoughts on the matter. They also discussed two variables that determine the best route, which are the capacity of channels at time t and fees charged by nodes. Capacity is likely the most dynamic of the two variables, and it may be very challenging to keep tables up to date. Rusty mentioned his current idea for updating the prices where nodes are rate-limited on their pricing updates, and price changes phase in over time, indicating how they change over time from some base. There is also the question of how to handle false advertising. If a node refuses to route a payment, it should be able to broadcast the response from that node. The sender can reveal the onion at that point and the decode key, and show that the node refused to route. It can then be temporarily blacklisted.</summary>
    <published>2016-04-15T12:20:31+00:00</published>
  </entry>
</feed>
