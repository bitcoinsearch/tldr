<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BOLT3: Commitment Transaction Outputs is weak to	malleability</title>
  <updated>2023-05-24T03:20:30.937035+00:00</updated>
  <author>
    <name>Rusty Russell 2017-11-30 01:10:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BOLT3: Commitment Transaction Outputs is weak to	malleability</title>
    <updated>2023-05-24T03:20:30.937035+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000813.html" rel="alternate"/>
    <summary>Nicolas Dorier has noticed that the Commitment Transaction Output script is weak to malleability and it can be used to delay confirmation of the revocation. The penalty transaction in the Commitment Transaction Output script would have a problem as an attacker can delay the Penalty Transaction by malleating it which can lead to very bad outcome as Lightning dependant on time locks. An attacker could replace 1 byte with 80 bytes, which worst-case is almost 15% feerate drop. There is a policy rule called SCRIPT_VERIFY_MINIMALIF by jl2012 which was merged into v0.15.1. The fix only requires two bytes overhead and Rusty believes that this is well worth the fix. He also suggests RBF in the spec so that the issue of underguessing fees by 15% can be dealt with appropriately.</summary>
    <published>2017-11-30T01:10:31+00:00</published>
  </entry>
</feed>
