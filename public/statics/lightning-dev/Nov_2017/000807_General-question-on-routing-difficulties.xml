<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>General question on routing difficulties</title>
  <updated>2023-05-19T16:10:22.216038+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2017-11-25 19:13:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>General question on routing difficulties</title>
    <updated>2023-05-19T16:10:22.216038+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000807.html" rel="alternate"/>
    <summary>The email discusses a paper on coordinate embedding and its use in providing sender+receiver privacy in payment networks. The protocol presents some novel traits in the design of a routing system for payment channel based networks, but it lends itself better to a closed-membership credit network such as Ripple. The primary difference between this protocol and others is that currently they utilize a source-routed system which requires the sender to know most of the path to the destination. They plan to achieve proper sender/receiver privacy by extending their Sphinx usage to leverage HORNET. To solve an issue presently, they extend the header in Sphinx to include a per-hop payload. When extended to LN, the core component of the protocol (landmarks), becomes the weakest component. All payments must flow through landmarks because nodes break up their payment into L sub-flows, and the landmarks must be very carefully chosen.A new routing algorithm called SpeedyMurmurs has been developed for decentralized payment networks such as the Lightning Network, which uses an embedding-based approach to assign meaningful coordinates to nodes that enable efficient and effective discovery of payment paths. The authors have simulated several configurations of SpeedyMurmurs using real data from the Ripple network and compared it with other routing algorithms available in the literature.The simulation results show that SpeedyMurmurs is able to find paths at about twice faster, reduces the communication overhead by at least a factor of 2 and maintains a similar or higher payment success ratio. The final version of this work will appear at NDSS 2018 conference. SpeedyMurmurs achieves the privacy notions of interest in the LN, including value privacy and sender and receiver privacy. However, there are challenges associated with routing within the Lightning Network.As landmarks must be globally known, this would introduce fragility in the network if most of the landmarks go down due to hardware issues, DoS, exploited bugs, etc., then the network's throughput instantly becomes crippled. Additionally, if all payment flow must go through landmarks, and the transfers within the network are relatively uni-directional, then their channels would become unbalanced very quickly.The notion of value privacy within the scheme seems a bit weak, as any protocol that didn't broadcast intents to send payments to the world would achieve this trait. A possible mitigation would be for nodes to probabilistically drop incoming payments, with all nodes sampling from the same distribution. However, this would dramatically increase routing failures by senders, removing the "low-latency" trait of payment networks that many find desirable.In conclusion, a one-size-fits-all solution may not be achievable for routing within the network, as each routing protocol delivers with it a set of tradeoffs that should be weighed depending on target characteristics and use-cases. Instead, several distinct protocols can be deployed based on use-case requirements, as we only need to share a single end-to-end construct: the HTLC.The Lightning Network team is working on finding better solutions to the problem of finding routes across a vast network of millions, if not billions, of nodes. The current protocol is a minimally viable routing protocol where the entire network's topology is pushed to the edges and can then locally compute routes. However, this protocol is not set in stone and can easily upgrade to another protocol at a later point in time since none of the routing information is consensus critical.Routing is still in flux, and the team is actively working on solving the problem of finding routes across the network. One option may be distance vector routing such as BGP. For now, the network can scale up to about 1 million channels even on limited devices. The team has built-in extension points for future extensibility. The Lightning Network, a proposed off-chain scaling solution for Bitcoin, has been a hot topic in the cryptocurrency community. Christian Decker, a developer working on the project, participated in a discussion on the Lightning-dev mailing list addressing concerns about centralization and rebalancing mechanisms. He argues that while hubs are unlikely to form due to the high cost and fees associated with them, there is still flexibility within Bitcoin to allow for off-chain channel rebalancing and fund reallocation.Additionally, he notes that the Lightning Network would be valuable and scalable regardless of the potential centralization issues, as it does not pose an existential risk to the money supply itself. Decker also addresses concerns about transaction fees, stating that they will only be required for channel setup and tear down, greatly reducing fees. Ultimately, Decker believes that the Lightning Network is a key first step towards improving the scalability of Bitcoin and that automations can be put in place to improve network topology without requiring user involvement.Meanwhile, Benjamin Mord suggested an idea for a (wiki-style?) inventory of unproven mathematical assumptions and/or cryptographic primitives cataloged in terms of the cryptocurrency technologies which require them. This resource could help the community respond more quickly, comprehensively, and transparently to cryptanalytic surprises that will pop up over time.</summary>
    <published>2017-11-25T19:13:15+00:00</published>
  </entry>
</feed>
