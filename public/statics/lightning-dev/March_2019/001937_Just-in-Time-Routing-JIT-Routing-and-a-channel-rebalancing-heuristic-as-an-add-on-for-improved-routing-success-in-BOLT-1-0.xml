<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Just in Time Routing (JIT-Routing) and a channel rebalancing heuristic as an add on for improved	routing success in BOLT 1.0</title>
  <updated>2023-06-02T17:49:44.916434+00:00</updated>
  <author>
    <name>Ariel Lorenzo-Luaces 2019-03-25 11:52:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Just in Time Routing (JIT-Routing) and a channel rebalancing heuristic as an add on for improved	routing success in BOLT 1.0</title>
    <updated>2023-06-02T17:49:44.916434+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-March/001937.html" rel="alternate"/>
    <summary>The concept of Just-In-Time (JIT) Routing is discussed in this email thread among Lightning Network developers. The Luaces-Pickhardt formulation of JIT-Routing is proposed as a possible solution for unidirectional channels, which cannot forward payments and cannot be intermediate nodes. The proposed system allows an arbitrary sub-route to be selected by an intermediate route node without the source node being aware. It could also employ base AMP since the same pre-image is used. Although intermediate nodes along the sub-route would be aware that a sub-route is being attempted, the original twenty encryption layers are arguably private enough. Public nodes could advertise channels that don't actually exist directly but are instead hidden paths that the source node doesn't need to know or care about. The fees advertised for these aggregate-channels would be the aggregate fees expected from the sub-route. This new property of the network could allow a source node to select a random privacy-clique and rely on payments to be routed along aggregate-channels without the source node needing to compute or even know the exact sub-routes. In addition, the Luaces-Pickhardt formulation of JIT-Routing could be used with Eclair Mobile's unidirectional-only nodes, which cannot forward payments and cannot be intermediate nodes. The system requires a new "reverse HTLC polarity" mechanism to reuse the same hash as the actual payment, making it safe for unidirectional Eclair Mobile nodes. The new routing system could replace all forms of multipart payments and allow each hop, including the source, to decide whether to split the payment according to how much fee it has to devote to rebalance attempts.</summary>
    <published>2019-03-25T11:52:25+00:00</published>
  </entry>
</feed>
