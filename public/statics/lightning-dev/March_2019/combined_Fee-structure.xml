<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fee structure</title>
  <updated>2023-06-03T21:43:23.471646+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-03-14 08:03:43</name>
  </author>
  <author>
    <name>John-John Markstedt 2019-03-13 14:55:10</name>
  </author>
  <author>
    <name>John-John Markstedt 2019-03-14 07:58:18</name>
  </author>
  <author>
    <name>John-John Markstedt 2019-03-14 15:09:51</name>
  </author>
  <author>
    <name>Andrea RASPITZU 2019-03-13 17:06:17</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-03-14 05:40:16</name>
  </author>
  <author>
    <name>John-John Markstedt 2019-03-14 08:28:12</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-03-14 11:16:12</name>
  </author>
  <link href="lightning-dev/March_2019/001903_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001896_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001902_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001909_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001897_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001899_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001904_Fee-structure.xml" rel="alternate"/>
  <link href="lightning-dev/March_2019/001905_Fee-structure.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fee structure</title>
    <updated>2023-06-03T21:43:23.471646+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-March/001903.html" rel="alternate"/>
    <summary>The context of the message is a discussion about the fee structure of Bitcoin's Lightning Network. John-John, ZmnSCPxj, and Andrea discuss the proportional fee for forwarding payments, which increases based on the amount being forwarded and its relationship to the state of the channel. However, it is concluded that the final state of the channel has a subtractive relationship from the payment size, and the exact mathematical models may not be relevant to pragmatic use of LN. John-John suggests a proposal to balance channels using a scheme of brackets where each satoshi in a channel has a different price for each satoshi moved. Channels would then broadcast a cost function instead of a fixed fee, incentivizing payments to route in such a way as to keep channels balanced, leading to higher throughput. However, this method may be unnecessarily complex and would require deterministic ways to calculate integrals over multiple systems.One solution to maintaining balance on a node's channels is to scale the feerate depending on the channel state. This is already possible within the protocol, but care must be taken to avoid spamming `channel_update` messages, which could potentially leak information about payments passing through the node. The author suggests using a heuristic approach involving random scheduling and sleeping to help reduce leakage. JIT Routing from rpickhardt is proposed as a more sensible approach, as it attempts to rebalance only if it benefits the node to perform the rebalancing. By attempting the rebalance if the time and fee available are sufficient, the node increases the possibility of earning money and improves the probability of routing success. The discussion overall highlights the complexities and potential solutions to balancing channels and improving the efficiency of Bitcoin's Lightning Network.</summary>
    <published>2019-03-14T08:03:43+00:00</published>
  </entry>
</feed>
