<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Spending `to_local` output of commitment</title>
  <updated>2023-06-03T12:45:15.727996+00:00</updated>
  <author>
    <name>Benjamin Weintraub 2023-05-02 22:00:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Spending `to_local` output of commitment</title>
    <updated>2023-06-03T12:45:15.727996+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003925.html" rel="alternate"/>
    <summary>The email thread started with Benjamin Weintraub, who was testing failure scenarios in LND, and encountered an issue after force closing the channel using `lncli closechannel --force ....` He was able to see the commitment transaction in the mempool but not the subsequent HTLC/to_local spend. He asked for suggestions on how to generate the transaction that spends the to_local and HTLC output, ideally with lnd. Ken Sedgwick replied to his query by directing him to the necessary witness described in this link: https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local-output. Benjamin further asked about the kind of witness script needed to redeem the to_local funds if a peer force closes a channel by sending a commitment to the blockchain. He mentioned that he had committed a specific transaction on a local simnet bitcoin blockchain and wanted to spend vout[2]. The transaction details were shared in the email thread.</summary>
    <published>2023-05-02T22:00:44+00:00</published>
  </entry>
</feed>
