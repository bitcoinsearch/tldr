<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Liquidity griefing for 0-conf dual-funded txs</title>
  <updated>2023-06-04T05:02:30.772837+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-05-10 00:07:06</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-05-10 09:15:25</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-05-05 16:21:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-07 22:54:50</name>
  </author>
  <author>
    <name>Matt Morehouse 2023-05-09 17:38:55</name>
  </author>
  <link href="lightning-dev/May_2023/003942_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003943_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003920_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003931_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003938_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Liquidity griefing for 0-conf dual-funded txs</title>
    <updated>2023-06-04T05:02:30.772837+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003942.html" rel="alternate"/>
    <summary>The Lightning Network's dual-funded transactions have created challenges when protecting against liquidity griefing attacks from malicious peers. One solution is to never lock utxos used in dual funded transactions, but this falls short when using 0-conf as accidental double-spending can result in the loss of funds for one of the peers. Nodes offering 0-conf services must ensure that the utxos they use for 0-conf are isolated from those used for non 0-conf. To address these issues, various solutions have been proposed, including locking UTXOs after tx_completes have been exchanged only if the node is the only contributor. Furthermore, the post highlights the safety of dual-funded 0-conf transactions when using swap-in-potentiam addresses with the acceptor, preventing liquidity griefing from being cost-free. However, trust is still required between parties, and the author suggests implementing LSPS3 Promise To Unconditionally Fund 0-conf to address concerns. Bastien Teinturier, a member of the Lightning Network development team, seeks input on improving the situation regarding 0-conf services and liquidity griefing attacks. The proposal is to lock UTXOs after tx_complete exchange if the channel has option_zeroconf and if the peer contributes any inputs to the funding transaction, the process should be aborted as 0-conf is unsafe. Eclair currently uses "opportunistic" 0-conf, but soft locks prevent upgrading to 0-conf when mixing 0-conf and non-0-conf funding attempts. The post aims to raise awareness and gather ideas to offer good-enough protections against liquidity griefing for nodes offering 0-conf services.</summary>
    <published>2023-05-10T00:07:06+00:00</published>
  </entry>
</feed>
