<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ThunderNetwork - A Java LightningNetwork Implementation Working Today</title>
  <updated>2023-05-23T19:12:32.251843+00:00</updated>
  <author>
    <name>Mats Jerratsch 2015-08-11 19:26:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ThunderNetwork - A Java LightningNetwork Implementation Working Today</title>
    <updated>2023-05-23T19:12:32.251843+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000115.html" rel="alternate"/>
    <summary>In a thread discussing the Lightning Network protocol, Mats Jerratsch and Joseph Poon discuss whether or not the client is able to close a channel. Jerratsch explains that there is nothing preventing the client from broadcasting and enforcing the channel, despite the slight favor for the server in the channel design. Poon had previously assumed only the server had a copy of the channel. They go on to discuss hypothetical scenarios where Alice decides to be a "jerk" and broadcasts a mutated (re-signed) version of the commitment, leading to a hostage negotiation. However, they determine that if she resigns commitment 20, she would lose BTC while Bob would still receive the funds. Finally, they discuss the problem with channel histories and open payments being less secure than settled balances, and Jerratsch mentions mitigating this by setting a hard requirement on the spendable amount.</summary>
    <published>2015-08-11T19:26:43+00:00</published>
  </entry>
</feed>
