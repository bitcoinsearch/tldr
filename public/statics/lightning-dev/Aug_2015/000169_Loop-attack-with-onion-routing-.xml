<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Loop attack with onion routing..</title>
  <updated>2023-05-18T00:26:32.418505+00:00</updated>
  <author>
    <name>Anthony Towns 2015-08-31 21:08:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Loop attack with onion routing..</title>
    <updated>2023-05-18T00:26:32.419506+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000169.html" rel="alternate"/>
    <summary>In this conversation, the participants discuss onion routing and source routing in Lightning Network. They highlight the need for privacy in payments and how this can be achieved through independent onion routing from both sides of a payment transaction. A setup is proposed where a user (H) establishes a channel with another user (g), then tells F that he can route to H via g and tells D that he can route to H via F. To announce his presence, H tells other people, such as A, they can route to H via D. The locking of transaction funds is always done in payer-paye direction, so a separate routing phase is needed before locking. This requires end-to-end communication in real-time, which may not work for paying to a cold-wallet Lightning channel that’s only occasionally online. It’s suggested that the official timeout should be 4 days, and an unofficial timeout of 4 minutes should be used to avoid fines entirely. The default protocol could involve fines as an extension to bribe the payer not to close the channel. However, fines can be distributed as if it’s only a non-source routing path. An attacker can create an arbitrarily long path with source routing, thereby creating arbitrary large total damage to the network and corresponding to arbitrary large total fines. The conversation also discusses the pre-calculated fine amounts, options available to Mallory if there are N open HTLCs on their channel, and how this affects H.</summary>
    <published>2015-08-31T21:08:58+00:00</published>
  </entry>
</feed>
