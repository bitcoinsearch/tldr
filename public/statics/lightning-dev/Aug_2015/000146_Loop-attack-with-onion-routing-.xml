<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Loop attack with onion routing..</title>
  <updated>2023-05-18T00:25:27.598786+00:00</updated>
  <author>
    <name>Anthony Towns 2015-08-21 11:32:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Loop attack with onion routing..</title>
    <updated>2023-05-18T00:25:27.598786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000146.html" rel="alternate"/>
    <summary>In an email exchange on August 21, 2015, Joseph Poon and Anthony Towns discussed a hypothetical scenario in which a group of participants collude to delay transaction notifications to one participant (B) in order to encourage future transactions to deposit funds on C's side of the A/C channel rather than the B/C channel. Poon argued that pending sends between participants in this cartel have a shorter time than those outside the cartel, meaning that CDE links will always have shorter HTLCs in transit than B's. However, Towns was unconvinced, pointing out that if C/D and D/E are fast and reliable, it is desirable to send more transactions their way anyway. Moreover, he questioned why C would bother taking such a significant cost to encourage transactions over A/C rather than simply offering reduced/negative fees. Finally, Towns noted that if onion routing were being used, C/D might not even know who A is and could risk being bypassed entirely if they delay transactions.</summary>
    <published>2015-08-21T11:32:50+00:00</published>
  </entry>
</feed>
