<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stealing money from a hub?</title>
  <updated>2023-05-23T18:52:55.321459+00:00</updated>
  <author>
    <name>Rusty Russell 2015-08-01 11:49:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stealing money from a hub?</title>
    <updated>2023-05-23T18:52:55.321459+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000100.html" rel="alternate"/>
    <summary>In a lightning-dev email thread, Christopher Jamthagen asked if it would be possible to implement the timestop feature for CLTV as well. Rusty Russell replied that logically it should apply to both and would be a softfork add, but if the timestop feature activates only when the CLTV transaction is included in a block, it could allow a pretty serious DoS attack vector. However, Russell clarified that during a block filling attack, there's no reason to panic and dump transactions because you've got all the time in the world. Delaying timeouts is soft-forkable, but preventing HTLCs from expiring is a lesser DoS. In terms of outsourcing monitoring of the blockchain for cheaters in LN, it scales really well once full-time monitoring is in place. The outsourcee's fee can also be automated by including it in the "steal" tx. However, remembering R values and timeouts is an issue.</summary>
    <published>2015-08-01T11:49:14+00:00</published>
  </entry>
</feed>
