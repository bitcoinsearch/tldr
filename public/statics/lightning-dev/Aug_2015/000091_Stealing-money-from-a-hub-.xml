<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stealing money from a hub?</title>
  <updated>2023-05-23T18:54:55.188819+00:00</updated>
  <author>
    <name>Christopher Jamthagen 2015-08-01 09:37:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stealing money from a hub?</title>
    <updated>2023-05-23T18:54:55.189853+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000091.html" rel="alternate"/>
    <summary>The Lightning Network has a potential vulnerability where hubs can be forced to close channels with other hubs by having the attacker, as the receiver, never reveal R and create a block-filling attack. This would force the hub connected to the receiver to broadcast the commitment transaction, but since there is a block-filling attack going on, the hub can't settle with the next hub because the first hubs CSV and CLTV are being pushed beyond the second hubs CLTV. If the timestop feature would activate only when the CLTV transaction is included in a block, it would allow for a pretty serious DoS attack vector. CLTV transactions would need to include the current block-height immediately when a commitment transaction is signed, so that miners can know where to start counting full blocks from as soon as it is broadcasted.Regarding outsourcing, Rusty Russell suggests that outsourcing needs a new sighash op mode or normalized txids, so it's not really something to design a deployable system around today. However, he also believes that outsourcability scales really well and once you're full-time monitoring the blockchain, might as well get as many clients as possible. You can also automate the outsourcee's fee, by including it in the "steal" tx.</summary>
    <published>2015-08-01T09:37:50+00:00</published>
  </entry>
</feed>
