<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Loop attack with onion routing..</title>
  <updated>2023-05-23T19:37:12.869800+00:00</updated>
  <author>
    <name>Rusty Russell 2015-08-31 02:16:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Loop attack with onion routing..</title>
    <updated>2023-05-23T19:37:12.869800+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000168.html" rel="alternate"/>
    <summary>The Lightning Network, a Bitcoin payment channel network, is susceptible to a DoS attack which involves routing a payment back to another channel you own and refusing to disclose R. This forces nodes in the path to lock up N bitcoins, resulting in nobody getting paid and total damage to the network being much larger than the damage to the attacker. Rusty Russell suggests using a scheme where a valid unilateral close transaction is required, with the threat of closing channels as a disincentive. Unilateral closes are painful in locked funds, fees and opportunity cost. Although the idea of peeling the onion was initially proposed, it was abandoned due to privacy concerns. The new scheme has the right incentive and may be enough for now, but more sophistication may be needed eventually.</summary>
    <published>2015-08-31T02:16:38+00:00</published>
  </entry>
</feed>
