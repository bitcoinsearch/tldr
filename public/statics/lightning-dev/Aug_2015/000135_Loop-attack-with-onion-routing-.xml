<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Loop attack with onion routing..</title>
  <updated>2023-05-23T19:37:45.402554+00:00</updated>
  <author>
    <name>Rusty Russell 2015-08-20 05:49:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Loop attack with onion routing..</title>
    <updated>2023-05-23T19:37:45.402554+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000135.html" rel="alternate"/>
    <summary>Rusty Russell, a Bitcoin Lightning Network developer, has warned about a potentially harmful attack on the network. The attack involves routing payments back to another channel owned by the attacker and then refusing to disclose R, which could result in no one getting paid. Every node in the path would be required to lock up N bitcoins. Furthermore, the onion routing mechanism means that nobody can be blamed, as the attacker can simply claim that there is another hop after them. Rusty suggests peeling the onion, which entails exposing a set of hashes corresponding to hashes of the route steps and including a nonce inside each route step so that you can prove you decrypted it. If a payment takes too long, the previous node where the payment was sent should be informed, and if you are the last in the queue, you will also need to prove that you closed the channel to the offender. This will cost you a txfee, providing disincentive. Rusty asks for feedback from other developers regarding any other potential problems with this approach.</summary>
    <published>2015-08-20T05:49:29+00:00</published>
  </entry>
</feed>
