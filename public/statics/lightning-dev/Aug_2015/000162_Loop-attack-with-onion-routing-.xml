<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Loop attack with onion routing..</title>
  <updated>2023-05-23T19:35:37.761165+00:00</updated>
  <author>
    <name>CJP 2015-08-30 17:30:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Loop attack with onion routing..</title>
    <updated>2023-05-23T19:35:37.761165+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000162.html" rel="alternate"/>
    <summary>The network of well-behaving nodes remains healthy as they pay their fines to keep their links intact. However, when a misbehaving node does not pay its fine, this creates an issue for the last well-behaving node in the chain who ends up paying the penalty. This innocent party can avoid further damage by closing the channel to the real culprit. To prevent such issues, non-trusted neighbors could pre-pay a fine fund before routing payments towards them. While there are options for designing a cryptographic payment channel method to enforce fine payment, it may not be worth the added complexity considering the second and third-order effects. Therefore, simplicity is key to ensure reliable implementation in time.</summary>
    <published>2015-08-30T17:30:09+00:00</published>
  </entry>
</feed>
