<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Routemap scaling (was: Just in Time Routing (JIT-Routing) and a channel rebalancing heuristic as an add	on for improved routing success in BOLT 1.0)</title>
  <updated>2023-06-02T18:09:29.675565+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-04-09 10:32:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Routemap scaling (was: Just in Time Routing (JIT-Routing) and a channel rebalancing heuristic as an add	on for improved routing success in BOLT 1.0)</title>
    <updated>2023-06-02T18:09:29.675565+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-April/001973.html" rel="alternate"/>
    <summary>The discussion revolves around the Lightning Network Node and how it can prune its routemap. The proposal suggests using a global quadtree to organize the nodes in a tree-like structure, where each bucket represents a view over the union of its four children. Nodes closer to the root are not more important than the leaf nodes, but they may potentially be more optimal. The proposal also emphasizes anonymity by never revealing how much each node actually knows about the network. The nodes that know more about the network are "more important" and should be protected. One way to protect them is to anonymize them. The proposal suggests delegating lookups to some other arbitrary node that it knows is more likely to know the destination. If somebody advertises being in a particular bucket, then they are better informed and have more information on the network. The proposal suggests that nodes do not need to present the real depth at which they keep gossip. Nodes could counterbalance potential DDoS risk with higher routing fees. The buckets closer to the root do not hold any exclusive information. Even if every node in the root bucket is brought down, nodes at depth&gt;=2 will still collectively know the entire network map.</summary>
    <published>2019-04-09T10:32:00+00:00</published>
  </entry>
</feed>
