<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Broken Factory Attack</title>
  <updated>2023-06-03T21:52:32.499017+00:00</updated>
  <author>
    <name>Alejandro Ranchal Pedrosa 2019-04-21 02:33:07</name>
  </author>
  <author>
    <name>Alejandro Ranchal Pedrosa 2019-04-16 04:03:50</name>
  </author>
  <author>
    <name>Alejandro Ranchal Pedrosa 2019-04-16 00:14:59</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-04-17 03:45:53</name>
  </author>
  <link href="lightning-dev/April_2019/001983_Broken-Factory-Attack.xml" rel="alternate"/>
  <link href="lightning-dev/April_2019/001977_Broken-Factory-Attack.xml" rel="alternate"/>
  <link href="lightning-dev/April_2019/001975_Broken-Factory-Attack.xml" rel="alternate"/>
  <link href="lightning-dev/April_2019/001982_Broken-Factory-Attack.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Broken Factory Attack</title>
    <updated>2023-06-03T21:52:32.499017+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-April/001983.html" rel="alternate"/>
    <summary>The email conversation between ZmnSCPxj and Alejandro discusses a potential solution to mitigate an attack on the sub-factory. However, there are concerns that this solution may trigger a race condition between the valid state of the sub-factory and the new state of the channel. ZmnSCPxj suggests using the mechanism of Discrete Log Contracts where an Oracle is enforced to reveal its private key if it publishes multiple signatures signing different messages for a particular sampling. This can ensure that a public key is used only once. In case Alice and Bob sign an alternate transaction spending the A,B output, they also reveal to Carol the private key, allowing her to punish this behavior by burning the A,B output and sending it all as fees to miners.Alejandro Ranchal Pedrosa apologized for an important typo in his earlier message. The corrected statement was related to a scenario where Dave is offline or unresponsive, which implies that he cannot update the channel factory. The email discusses the construction of channel factories and the splice-out mechanism that claims to solve a stale factory situation. However, the writer explains why this mechanism can be easily attacked in what is called the Broken Factory attack.The scenario presented is a factory created between Alice, Bob, Carol, and Dave with channels F_AC, F_AB, F_BC, and F_CD. Suppose Dave cannot update the channel factory; the splice-out mechanism should allow them to do so by redirecting outputs of the channels of the factory to a new factory. However, after creating the new hook, Alice and Bob can update their former channel state and invalidate the state R1_AB, making it older than a new state R2_AB, which invalidates one of the inputs of the new Hook H_ABC, thus proving that the splice-out mechanism is not possible without a race condition.The Discrete Log Contracts mechanism has a feature that enforces the Oracle to reveal its private key if it publishes multiple signatures signing different messages for a specific sampling. This method guarantees that a public key is used only once. ZmnSCPxj suggests using this mechanism so that if Alice and Bob sign an alternate transaction spending the A,B output, they also reveal to Carol the private key. Carol can punish this behavior by burning the A,B output and sending it all as fees to miners. However, this solution may not be enough in cases where the A,B channel has low capacity. In such circumstances, Alice and Bob could be willing to sacrifice it to steal larger amounts from Carol.</summary>
    <published>2019-04-21T02:33:07+00:00</published>
  </entry>
</feed>
