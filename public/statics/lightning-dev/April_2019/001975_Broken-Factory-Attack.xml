<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Broken Factory Attack</title>
  <updated>2023-06-02T18:22:13.181791+00:00</updated>
  <author>
    <name>Alejandro Ranchal Pedrosa 2019-04-16 00:14:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Broken Factory Attack</title>
    <updated>2023-06-02T18:22:13.181791+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-April/001975.html" rel="alternate"/>
    <summary>The email discusses the construction of channel factories and the splice-out mechanism that claims to solve a stale factory situation. The writer explains why this mechanism can be easily attacked in what is called the Broken Factory attack. The scenario presented is a factory created between Alice, Bob, Carol, and Dave with channels F_AC, F_AB, F_BC, and F_CD. Suppose Dave cannot update the channel factory; the splice-out mechanism should allow them to do so by redirecting outputs of the channels of the factory to a new factory. However, after creating the new hook, Alice and Bob can update their former channel state and invalidate the state R1_AB, making it older than a new state R2_AB, which invalidates one of the inputs of the new Hook H_ABC, thus proving that the splice-out mechanism is not possible without a race condition.</summary>
    <published>2019-04-16T00:14:59+00:00</published>
  </entry>
</feed>
