<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Outsourcing route computation with trampoline payments</title>
  <updated>2023-06-02T18:06:26.600546+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-04-01 21:30:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Outsourcing route computation with trampoline payments</title>
    <updated>2023-06-02T18:06:26.600546+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-April/001957.html" rel="alternate"/>
    <summary>The Lightning Network is proposing a multi-trampoline routing system which allows payments to be bounced through multiple trampolines without the trampolines learning their position in the nested path. The sender generates a small onion of, for example, 10 hops with a length of only 650 bytes and picks a random trampoline node 't_0' in its known neighbourhood before creating a routing onion containing the smaller onion as payload to 't_0' and signalling data. Upon receiving an incoming payment with trampoline instructions, a trampoline 't_i' unwraps the inner onion and finds a route to 't_{i+1}', serialising the inner onion and creating the outer routing onion with that as the payload. This construction reuses all the onion primitives already available and allows payments to be delegated by looking for some node in its smaller routemap that it believes to be more likely to route to the next trampoline.</summary>
    <published>2019-04-01T21:30:35+00:00</published>
  </entry>
</feed>
