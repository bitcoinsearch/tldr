<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Outsourcing route computation with trampoline payments</title>
  <updated>2023-06-02T18:03:24.337475+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-04-03 03:41:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Outsourcing route computation with trampoline payments</title>
    <updated>2023-06-02T18:03:24.337475+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-April/001958.html" rel="alternate"/>
    <summary>The email discusses an issue with trampoline nodes creating overlapping routes due to their lack of knowledge about what happened before they received the onion. This can cause issues when using payment_hash as it is currently done and requires a more elaborate solution. The email provides an example network to explain the issue. When the B-&gt;C HTLC is resolved, B can instead claim the A-&gt;B HTLC and just fail the D-&gt;B HTLC, thereby removing D and E from the route and claiming their fees, even though they participated in the route. The email also suggests using payment points/scalars instead of payment hash/preimage to improve trampoline payments, offline vending machines, and payment decorrelation.</summary>
    <published>2019-04-03T03:41:53+00:00</published>
  </entry>
</feed>
