<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment channel without timeout protected from malleability</title>
  <updated>2023-05-23T21:45:19.485590+00:00</updated>
  <author>
    <name>Nicolas Dorier 2015-11-27 16:18:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment channel without timeout protected from malleability</title>
    <updated>2023-05-23T21:45:19.485590+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-November/000359.html" rel="alternate"/>
    <summary>A method to open a payment channel without being vulnerable to malleability attacks has been proposed by Nicolas Dorier, adapting an idea from gmaxwell. The process involves A asking B for their public key, creating the first commitment transaction, extracting the hash that B needs to sign to be able to broadcast the commitment, asking B to sign the hash and broadcasting the anchor only after confirmation. Neither A nor B can reuse public keys between channels, but this is good practice anyway. Although child-pays-for-parent seems plausible, it does not work yet, and segregated witness is expected to happen sooner.</summary>
    <published>2015-11-27T16:18:21+00:00</published>
  </entry>
</feed>
