<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment channel without timeout protected from malleability</title>
  <updated>2023-05-23T21:44:23.634727+00:00</updated>
  <author>
    <name>Nicolas Dorier 2015-11-27 07:37:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment channel without timeout protected from malleability</title>
    <updated>2023-05-23T21:44:23.634727+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-November/000353.html" rel="alternate"/>
    <summary>A new method of opening a channel without suffering from a malleability attack has been adapted from an idea by gmaxwell. To initiate the process, A asks B for their pubkey and creates the first commitment transaction. A then extracts the hash that B needs to sign to be able to broadcast the commitment and asks B to sign the hash without disclosing the commitment. Once A broadcasts the anchor and it is confirmed, A announces the anchor to B. B cannot identify A's anchor before announcement because they do not know the P2SH of the multisig. No important information seems to be missing from this context.</summary>
    <published>2015-11-27T07:37:04+00:00</published>
  </entry>
</feed>
