<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Return to the Layered Commit Transactions?</title>
  <updated>2023-05-18T19:10:07.451275+00:00</updated>
  <author>
    <name>Anthony Towns 2015-11-30 01:25:54</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-27 21:27:42</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-27 05:14:46</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-25 09:07:54</name>
  </author>
  <link href="lightning-dev/Nov_2015/000364_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000361_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000350_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000343_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Return to the Layered Commit Transactions?</title>
    <updated>2023-05-18T19:10:07.451275+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-November/000364.html" rel="alternate"/>
    <summary>Anthony Towns wrote about adding further constraints on timeout based on fees to avoid being left holding the bag. He suggested batching the timeouts for better efficiency, which can save both bytes and fees. In addition, he provided calculations for determining the timeout of outgoing HTLC when forwarding it from Alice to Carol through Bob's channel. The post also includes a discussion between Rusty Russell and Anthony Towns regarding definitions of CSV delay (d), top OP_CLTV timeout (T), commitment tx (C), published time (P), spent time (S), and refundable timeout (X) in relation to expiration. They also discussed how to close the channel if the HTLC is not resolved off-chain, and the possibility of fine people for keeping the channel open.Rusty Russell is discussing how to enforce constraints on Bitcoin transactions when a user wants to claim a refund by unilaterally closing a channel. He explains that different timeouts are enforced depending on the situation and outlines several scenarios in which the HTLC (Hashed Time-Locked Contract) times out. To ensure that HTLC expires before absolute CLTV timeout, Rusty suggests reducing the OP_CHECKLOCKTIMEVERIFY argument. Rusty also notes that revocation time should be long enough to spot someone cheating. Therefore, he suggests a minimum of 3 hours, while 12 hours will give users plenty of time to take their claim transactions and inject them into the Bitcoin network. In one scenario, node 19 would demand an answer from node 20 at time T-t+k, but since T=2 days and t=2 days, that's just time 0+k. The worst-case is three days unless there are multiple hop failures. A single hop failure at node 3 immediately after the transaction gets passed on would be worse. Within the next 33 days, node 3 wakes up, sees R and finishes the transaction.</summary>
    <published>2015-11-30T01:25:54+00:00</published>
  </entry>
</feed>
