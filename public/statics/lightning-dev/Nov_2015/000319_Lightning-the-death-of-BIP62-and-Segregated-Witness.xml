<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning, the death of BIP62, and Segregated Witness</title>
  <updated>2023-05-23T21:37:15.962678+00:00</updated>
  <author>
    <name>Tadge Dryja 2015-11-19 19:12:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning, the death of BIP62, and Segregated Witness</title>
    <updated>2023-05-23T21:37:15.962678+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-November/000319.html" rel="alternate"/>
    <summary>The Lightning Network, a proposed implementation of micropayment channels to scale Bitcoin transactions, requires an upgrade to the current protocol for reliable spending from unconfirmed transactions. While BIP62 addresses many vectors for txid malleability, it is not helpful in the context of lightning channel creation since ECDSA sigs are inherently malleable. For this purpose, sighash_noinput can provide a solution as input txids are not signed, and if they change, the spending transaction can be modified while leaving counterparty signatures intact. A new "testnet-L" is being planned to test malleability mitigation out. The soft-fork plan involves having the scriptPubKey as just the 20-byte hash of the redeem script and the scriptSig of the spending input empty, with the actual scriptSig, containing the redeem script and signatures, contained in a separate Merkle tree committed elsewhere in the block. Meanwhile, the hardfork variant involves sticking the signatures in another parallel merkle tree, allowing for the validation of everything else without downloading the signatures.</summary>
    <published>2015-11-19T19:12:24+00:00</published>
  </entry>
</feed>
