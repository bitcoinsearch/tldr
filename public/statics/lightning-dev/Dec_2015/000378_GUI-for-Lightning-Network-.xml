<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>GUI for Lightning Network?</title>
  <updated>2023-05-23T21:53:06.068845+00:00</updated>
  <author>
    <name>Mark Friedenbach 2015-12-13 03:13:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>GUI for Lightning Network?</title>
    <updated>2023-05-23T21:53:06.068845+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-December/000378.html" rel="alternate"/>
    <summary>The discussion revolves around the idea of creating a GUI for Lightning Network (LN) node management. It is suggested that since LN nodes need to be on 24/7 in order to be routed through, it would be better to approach this the same way one would a server daemon with a back-end API stack, request authentication, logs, and an authenticated web interface to view graphs. A mobile command and control application is also suggested as a potential feature. However, it is also suggested that there could be room for a "lite mode" client which is not online 24/7 but can still send or receive payments when turned on. The correct approach here would probably be to integrate it with existing wallets as another payment type.Denis Gorbachev asks about a real use-case scenario where someone running an intermediary LN node would want to compare fees for the current month versus the previous month and suggests implementing it as a web application that connects to the LN node backend. Luke Dashjr responds by saying he would like to see LN node management transparently supported in Bitcoin Core GUI using an external library.</summary>
    <published>2015-12-13T03:13:01+00:00</published>
  </entry>
</feed>
