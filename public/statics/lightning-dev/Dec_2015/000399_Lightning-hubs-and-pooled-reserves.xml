<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning hubs and pooled reserves</title>
  <updated>2023-05-23T21:59:24.263714+00:00</updated>
  <author>
    <name>John Newbery 2015-12-23 11:41:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning hubs and pooled reserves</title>
    <updated>2023-05-23T21:59:24.263714+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-December/000399.html" rel="alternate"/>
    <summary>The author of a recent GitHub gist has proposed a new method for hubs and centralization in the lightning network that would eliminate the need to tie up funds in many channels. The current system requires reserves for each payment channel, as demonstrated by an example involving Hector who needs 40 bitcoin in reserve for his channels with four nodes. If all the bitcoin in the channel had been fronted by the nodes, he wouldn't be able to route payments. The author proposes creating a metatoken/coloured coin on top of bitcoin to solve this problem. The hub would provide Hectorcoins in the other direction, which the node can sell back to the hub for bitcoin if they're net positive. This way, the hub doesn't need to hold reserves for each node it connects to. However, this basic example requires counterparty trust in Hector.</summary>
    <published>2015-12-23T11:41:02+00:00</published>
  </entry>
</feed>
