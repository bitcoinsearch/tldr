<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Onion-Routing for Messages</title>
  <updated>2023-05-23T21:46:02.298465+00:00</updated>
  <author>
    <name>Mats Jerratsch 2015-12-09 09:45:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Onion-Routing for Messages</title>
    <updated>2023-05-23T21:46:02.298465+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-December/000371.html" rel="alternate"/>
    <summary>In this message, Mats Jerratsch discusses the issue of what should be sent through onion routing versus what should not be. The last time this issue was discussed, only the pubkey of the next hop was included in the onion object, with no additional message to the final receiver. To have the added privacy of changing R value, a random number would likely be added as well. Jerratsch suggests implementing an interactive wallet-to-wallet protocol while both sides are busy communicating with the onion routing network for actual payment route negotiation. Once a path is found, the recipient would then communicate over the wallet-to-wallet channel to pass over the fully-constructed onion routing information. However, defining the wallet-to-wallet channel and which techniques could/should be used without leaking information may be an issue. Jerratsch notes that increasing the total load for nodes to handle these additional messages could be problematic but suggests a simplified message-delivery-system where each hop costs like 1 satoshi. If it remains a problem, they might either find a way to proof this behavior or even use HTLCs for these, although this would probably be impractical and bloat commit transactions.</summary>
    <published>2015-12-09T09:45:20+00:00</published>
  </entry>
</feed>
