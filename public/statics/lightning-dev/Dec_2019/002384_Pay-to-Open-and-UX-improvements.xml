<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pay-to-Open and UX improvements</title>
  <updated>2023-06-02T22:28:32.923782+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-17 12:51:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pay-to-Open and UX improvements</title>
    <updated>2023-06-02T22:28:32.923782+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002384.html" rel="alternate"/>
    <summary>The author is seeking a way to avoid the need for waiting on confirmations for pre-funding transactions, which can lead to holding incoming HTLCs for a few blocks. They ask if there is a smart construction that would allow them to build safely on unconfirmed transactions or if there is a way for the pay-to-open server to lock some UTXOs in advance to prevent double-spending. The response suggests that unconfirmed transactions are only safe/trustless if they cannot be replaced and that pre-agreed offchain transactions cannot be replaced by requiring agreement from all participants (n-of-n). To achieve this, already-confirmed UTXOs that are 2-of-2 between the author and the client could be pre-prepared. However, it is noted that current cryptographic mechanisms make it unlikely that a technology could be derived which avoids the need for confirmation before opening channels.</summary>
    <published>2019-12-17T12:51:18+00:00</published>
  </entry>
</feed>
