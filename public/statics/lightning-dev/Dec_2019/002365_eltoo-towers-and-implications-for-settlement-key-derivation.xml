<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo towers and implications for settlement key derivation</title>
  <updated>2023-06-02T21:55:40.305088+00:00</updated>
  <author>
    <name>Christian Decker 2019-12-04 13:48:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo towers and implications for settlement key derivation</title>
    <updated>2023-06-02T21:55:40.305088+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002365.html" rel="alternate"/>
    <summary>In a message to the Lightning-dev mailing list, Conner Fromknecht has suggested that the chain of noinput/anyprevout transactions is broken as soon as the signers are online and can interactively bind and sign without noinput/anyprevout. Responding to a post by Rusty on the same mailing list, ZmnSCPxj expresses confusion and questions whether it is possible to spend from a particular update transaction without using NOINPUT, since the update transaction has no fixed txid until it commits to a particular output-to-be-spent. Since settlement transactions are constrained to spend a particular update transaction, they must use NOINPUT as well. Conner agrees with this understanding and adds that any presigned descendants of a NOINPUT txn must also use NOINPUT as well. This chain must continue until a signer is online to bind a txn to a confirmed input. The unique settlement keys thus prevent rebinding of settlement txns since NOINPUT with a shared script would be too liberal.</summary>
    <published>2019-12-04T13:48:20+00:00</published>
  </entry>
</feed>
