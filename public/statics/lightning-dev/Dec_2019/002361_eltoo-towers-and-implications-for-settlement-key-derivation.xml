<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo towers and implications for settlement key derivation</title>
  <updated>2023-06-02T21:55:05.593790+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-03 04:43:27</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo towers and implications for settlement key derivation</title>
    <updated>2023-06-02T21:55:05.593790+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002361.html" rel="alternate"/>
    <summary>In an email conversation, ZmnSCPxj reached out to Rusty with potential concerns regarding watchtowers in relation to the eltoo paper. Due to NOINPUT, update transactions can spend from any prior transaction, making it so that a single witness script must be produced by a tower in order to spend. However, each update transaction uses unique keys for settlement clauses to ensure settlement transactions can only spend from one update transaction. Rusty clarifies that this is not logically possible and suggests changing keys every time or using taproot to add randomness. ZmnSCPxj proposes adding a `OP_RETURN` tapscript or using BIP32 derivation as a secure solution.</summary>
    <published>2019-12-03T04:43:27+00:00</published>
  </entry>
</feed>
