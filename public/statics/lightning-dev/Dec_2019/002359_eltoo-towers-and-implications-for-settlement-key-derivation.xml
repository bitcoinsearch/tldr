<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo towers and implications for settlement key derivation</title>
  <updated>2023-06-02T21:54:00.997232+00:00</updated>
  <author>
    <name>Conner Fromknecht 2019-12-03 03:03:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo towers and implications for settlement key derivation</title>
    <updated>2023-06-02T21:54:00.998236+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002359.html" rel="alternate"/>
    <summary>In a discussion about eltoo paper and watchtowers, Rusty commented that due to NOINPUT, any update transaction can spend from any other, so the tower only needs the most recent update txn to resolve any dispute. However, in order to spend, the tower must also produce a witness script which when hashed matches the witness program of the input. To ensure settlement txns can only spend from exactly one update txn, each update txn uses unique keys for the settlement clause, meaning that each state has a unique witness program. ZmnSCPxj chimed in to say that according to his understanding, this is not logically possible because the update transaction has no fixed txid until it commits to a particular output-to-be-spent, which is either the funding/kickoff txout, or a lower-`nLockTime` update transaction output. Thus, a settlement transaction must use `NOINPUT` as well, as it has no txid it can spend, if it is constrained to spend a particular update transaction. Any presigned descendants of a NOINPUT txn must also use NOINPUT as well. This chain must continue until a signer is online to bind a txn to a confirmed input. The unique settlement keys prevent rebinding of settlement txns since NOINPUT with a shared script would be too liberal.</summary>
    <published>2019-12-03T03:03:16+00:00</published>
  </entry>
</feed>
