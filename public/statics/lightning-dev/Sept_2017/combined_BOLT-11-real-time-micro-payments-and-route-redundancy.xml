<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BOLT 11, real time micro payments, and route redundancy</title>
  <updated>2023-05-24T02:29:31.953270+00:00</updated>
  <author>
    <name>Andy Schroder 2017-09-03 05:58:39</name>
  </author>
  <author>
    <name>Rusty Russell 2017-09-04 00:34:01</name>
  </author>
  <author>
    <name>Christian Decker 2017-09-04 18:42:06</name>
  </author>
  <author>
    <name>Andy Schroder 2017-09-11 06:00:41</name>
  </author>
  <author>
    <name>Andy Schroder 2017-08-30 03:30:50</name>
  </author>
  <author>
    <name>Rusty Russell 2017-09-02 03:39:09</name>
  </author>
  <author>
    <name>Rusty Russell 2017-09-15 03:49:18</name>
  </author>
  <link href="lightning-dev/Sept_2017/000753_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000754_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000757_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000761_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000751_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000752_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000762_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BOLT 11, real time micro payments, and route redundancy</title>
    <updated>2023-05-24T02:29:31.953270+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-September/000753.html" rel="alternate"/>
    <summary>The conversation between Rusty Russell and developer Andy Schroder revolves around the feasibility of high-frequency and micro payments in the context of adapting a fuel pump system to use Lightning. The main concern is payment latency and matching pre-payment with product delivery. Rusty suggests using a flag in BOLT 11 to include refund information in the payment onion itself, but there are limitations due to onion routing. Incremental payments through a route with pitfalls are considered, as well as the limitations of privacy with Lightning Network. Regarding the issue of reusing payment requests, Rusty warns that paying the same payment request twice invites anyone in the middle to take the funds. While static donation addresses aren't possible due to Lightning being an interactive protocol, lower value products that are delivered slowly over long periods of time can still be possible. Andy expresses his concern about a limitation in privacy with Lightning compared to blockchain payments on his fuel pump system. Rusty acknowledges the sub-optimality for privacy and suggests a more complex scheme using round-trip payments, where the payer pays a node an abnormally high "fee." However, each encrypted hop contains the amount it expects to be sent, which doesn't work if the payer doesn't know how much the recipient is going to refund. Therefore, a smaller return onion needs to be included to fix this properly, and Rusty adds this item to their brainstorming page.Rusty explains that payment latency is likely to be in the hundreds of milliseconds, making it difficult to match with a pump. A flag in BOLT 11 is suggested to allow for refund information to be included in the payment onion itself. However, this won't fit in the onion for 1.0, but there's a brainstorming item to allow for more information to be crammed in there.The purpose of distinguishing payments from different payers in BOLT 11 is clarified through the 'd' and 'h' tagged fields. The purpose of the 'n' field is also discussed, along with the option of using it instead of key recovery. Multinode real-time failover is currently not implemented yet if a node goes down during an actual payment, then it's stuck and a new payment needs to be rerouted.</summary>
    <published>2017-09-03T05:58:39+00:00</published>
  </entry>
</feed>
