<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LN question - real life transaction bundling</title>
  <updated>2023-05-23T23:50:52.900381+00:00</updated>
  <author>
    <name>Rusty Russell 2016-07-18 01:25:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LN question - real life transaction bundling</title>
    <updated>2023-05-23T23:50:52.900381+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-July/000552.html" rel="alternate"/>
    <summary>The author is asking about optimizing transactions on the Lightning Network (LN) for frequent interactions between Alice and Bob. The response explains that simple payment channels already exist for this purpose, but LN adds the ability to trustlessly chain channels so that Alice can pay Carol via Bob. However, if the interval is a month and Alice purchases from the same shops during that period, merchants may not be happy with having up to a month's worth of revenue still pending inside the LN since cashflow is vital to them. Channels are just bitcoins held by 2 of 2 signature, but a recipient doesn't have to actually hold that many bitcoins since they mainly receive payments. There is another question about whether stores will do this themselves or outsource to Coinbase etc. The author then brings up the problem that with Bitcoin, it is not 'Alice transacting with Bob', but rather Address(1) transacting with Address(2). Therefore, long running channels are identical to address re-use for the period they're open, making them vulnerable to traffic analysis and lower security than native Bitcoin transactions. However, it's better and worse because if Alice only has one channel to Bob, Bob can see all the amounts Alice spends. Having three channels makes the system more robust and spreads information around.</summary>
    <published>2016-07-18T01:25:42+00:00</published>
  </entry>
</feed>
