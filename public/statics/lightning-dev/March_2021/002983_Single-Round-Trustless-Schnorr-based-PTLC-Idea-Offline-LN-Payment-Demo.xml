<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Single Round Trustless Schnorr-based PTLC Idea + Offline LN Payment Demo</title>
  <updated>2023-06-01T18:40:17.730999+00:00</updated>
  <author>
    <name>Matheus Degiovani 2021-03-16 14:19:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Single Round Trustless Schnorr-based PTLC Idea + Offline LN Payment Demo</title>
    <updated>2023-06-01T18:40:17.730999+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-March/002983.html" rel="alternate"/>
    <summary>The author of a recent project has developed a Proof-of-Work, Schnorr-based PTLC demo for Decred's Lightning Network. In the process of doing so, they discovered an interesting hack that involves committing to a specific R point in the script of SenderPTLCScript and encoding it directly into it. This hack makes PTLCs interoperable with standard HTLCs and doesn't require additional communication rounds. Bob can present only the s scalar of the `(R, s)` fully valid Schnorr sig in the Signature Script of the redeeming tx.In addition to this hack, the author also built a PTLC-backed MRTTREE server with an offline lightning donation/payment system. This system allows LN users to "buy into shares" of a utxo, preserving their individual exit rights and non-custodialness property. They can then go offline and send the tuple (provider, tree_id, leaf_private_key) to the third party via any async method who can subsequently redeem the funds on behalf of the user.A recent proposal by Decred's Matheus Degiovanni has introduced the concept of a "tree timelock" to improve security for Lightning Network transactions. The proposal involves splitting funds into multiple outputs, each with its own time lock, and creating a hash tree structure to ensure that funds are only released when all parties involved agree to it. The proposal includes a proof-of-concept implementation, as well as a sample client and server for the MRTREE protocol. Degiovanni suggests that this construct could have a variety of use cases beyond LN payments.Finally, a GUI demo of offline LN payments is available on YouTube.</summary>
    <published>2021-03-16T14:19:47+00:00</published>
  </entry>
</feed>
