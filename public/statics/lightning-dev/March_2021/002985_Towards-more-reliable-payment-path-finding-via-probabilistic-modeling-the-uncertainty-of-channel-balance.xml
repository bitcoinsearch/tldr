<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Towards more reliable payment path finding via probabilistic modeling the uncertainty of channel balance</title>
  <updated>2023-06-03T03:53:08.705555+00:00</updated>
  <author>
    <name>Elias Rohrer 2021-03-18 08:27:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Towards more reliable payment path finding via probabilistic modeling the uncertainty of channel balance</title>
    <updated>2023-06-03T03:53:08.705555+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-March/002985.html" rel="alternate"/>
    <summary>A Lightning Network developer, Ren√© Pickhardt, recently shared research progress related to payment path finding and improving the reliability of the payment process. The main breakthrough is a simple model that puts the uncertainty of channel balances at its heart, with probability theory used to define channel success and failure probabilities and (multi)path success and failure probabilities. Smaller amounts have higher success probabilities and the success probability declines exponentially with the number of uncertain channels in a (multi)path. Sorting paths by descending success probability during the trial and error payment process and updating the probabilities from current failures decreases the number of average attempts and produces a much faster delivery of payments. Implementations following the recommendation to use a probabilistic approach will tend to route payments along high capacity channels, making it harder to game the system by dumping fees and allowing for the emergence of a real routing fee market. The author also believes they have a definite solution, using the methodology from the paper, to the question of how to split a payment into k parts and how many funds to allocate to each path to increase the (multi)path success probability. An equal-sized split is not preferable and the author provides an example of a more reasonable allocation. There is more math theory on how to actually solve the optimization problem in the general case and how to find a split and paths that maximize the probability of the attempts.</summary>
    <published>2021-03-18T08:27:35+00:00</published>
  </entry>
</feed>
