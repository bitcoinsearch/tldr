<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Towards more reliable payment path finding via probabilistic modeling the uncertainty of channel balance</title>
  <updated>2023-06-04T01:16:45.600450+00:00</updated>
  <author>
    <name>René Pickhardt 2021-03-17 12:50:26</name>
  </author>
  <author>
    <name>Elias Rohrer 2021-03-18 08:27:35</name>
  </author>
  <author>
    <name>René Pickhardt 2021-03-18 09:12:07</name>
  </author>
  <author>
    <name>Elias Rohrer 2021-03-18 09:36:23</name>
  </author>
  <link href="lightning-dev/March_2021/002984_Towards-more-reliable-payment-path-finding-via-probabilistic-modeling-the-uncertainty-of-channel-balance.xml" rel="alternate"/>
  <link href="lightning-dev/March_2021/002985_Towards-more-reliable-payment-path-finding-via-probabilistic-modeling-the-uncertainty-of-channel-balance.xml" rel="alternate"/>
  <link href="lightning-dev/March_2021/002986_Towards-more-reliable-payment-path-finding-via-probabilistic-modeling-the-uncertainty-of-channel-balance.xml" rel="alternate"/>
  <link href="lightning-dev/March_2021/002987_Towards-more-reliable-payment-path-finding-via-probabilistic-modeling-the-uncertainty-of-channel-balance.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Towards more reliable payment path finding via probabilistic modeling the uncertainty of channel balance</title>
    <updated>2023-06-04T01:16:45.600450+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-March/002984.html" rel="alternate"/>
    <summary>A Lightning Network developer, René Pickhardt, has made significant progress in payment path finding and improving the reliability of the payment process. The breakthrough is a model that uses probability theory to define channel success and failure probabilities and (multi)path success and failure probabilities. Sorting paths by descending success probability during the trial and error payment process and updating the probabilities from current failures decreases the number of average attempts and produces faster delivery of payments. The uncertainty of channel balances is quantified, and negative Bernoulli trials are used to compute the expected number of attempts necessary to deliver a payment of a particular amount from one node to another participant in the network. The success probability declines exponentially with the number of uncertain channels in a (multi)path.The research also addresses the question of how to split a payment into k parts and how many funds to allocate to each path to increase the (multi)path success probability. An equal-sized split is not preferable. The paper provides an optimization problem in the general case and how to find a split and paths that maximize the probability of attempts. Implementations following the recommendation to use a probabilistic approach will tend to route payments along high-capacity channels, making it harder to game the system by dumping fees and allowing for the emergence of a real routing fee market.Furthermore, Pickhardt expressed confidence in upcoming updates to address security and privacy concerns surrounding Lightning Network payments with uncertain channel balances. They suggest that routing payments along high capacity channels is beneficial and that probabilistic path finding can be used to achieve this. The uncertainty of channel balance values was found to be the main reason why some payments take several attempts and thus more time. Finally, Pickhardt discussed the concept of optimizing the split of uncertain channel balances in the Lightning Network. He stated that an equally sized split is not preferable and provided an example of a more reasonable allocation. To learn more about the security and privacy of Lightning Network payments with uncertain channel balances, he provided links to Peter Rizun's Lightning critique podcast, a Lightning RFC pull request, and a lightning-dev mailing list thread for further reading.</summary>
    <published>2021-03-17T12:50:26+00:00</published>
  </entry>
</feed>
