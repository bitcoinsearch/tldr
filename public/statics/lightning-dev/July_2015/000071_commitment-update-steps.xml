<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>commitment update steps</title>
  <updated>2023-05-23T18:36:40.557925+00:00</updated>
  <author>
    <name>Joseph Poon 2015-07-27 21:29:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>commitment update steps</title>
    <updated>2023-05-23T18:36:40.557925+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000071.html" rel="alternate"/>
    <summary>In this conversation between Anthony Towns and Joseph Poon, they discuss the issue of storage limitations when it comes to Bitcoin's HTLC outputs. They note that while it is possible to only check recent blocks before the Commitment Transaction for the search space (e.g. 3 days worth), since you know when the Commitment Transaction was broadcast, the search space limitation sort of breaks down if you permit long-dated HTLCs. They suggest a stop-gap solution where for every commitment, and each HTLC output, store the timeout and the original Commitment Transaction height when the HTLC was first made. However, there are concerns about multiplying each HTLC output by every commitment it's stored in because it can lead to a massive blowout in storage. They suggest using the nLockTime trick to store the height of your HTLC storage and then searching back down from R4 to find the other HTLCs in the txn.</summary>
    <published>2015-07-27T21:29:56+00:00</published>
  </entry>
</feed>
