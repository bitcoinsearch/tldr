<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Routing on the lightning network?</title>
  <updated>2023-05-23T18:08:50.389433+00:00</updated>
  <author>
    <name>CJP 2015-07-07 19:06:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Routing on the lightning network?</title>
    <updated>2023-05-23T18:08:50.389433+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000023.html" rel="alternate"/>
    <summary>The Lightning Network is a decentralized network that enables fast and cheap transactions by creating payment channels between participants. The routing design of the network has significant implications for privacy and enforcement of regulations. If large nodes start requiring their neighbors to provide identity information, the Lightning network could split into a regulated and non-regulated part, making it impossible for anyone to interface between the two. The function of "destination address of a route" should be de-coupled from the function of "payer endpoint" or "payee endpoint" of a route to counter censorship based on destination address.Routing tables are a sort of heuristic that tells how likely a payment (of a certain amount!) to/from a particular destination address is to succeed on one of your interfaces. It is an optimization over the dumb algorithm of simply trying out all your interfaces one by one. In Rusty Russell's view, source routing seems the easiest route; best for privacy, best for any tradeoffs between reliability/price etc. His idea was a subset of hubs (a few thousand?) to which you would connect; this makes full discovery routing fairly easy within that network, and you report your address as "client XXXXX via hub ". A more ambitious idea would be to select N "beacons" based on the block hash which every node figures out their best routes to/from. But this idea could result in the beacons (and their neighbors) getting slammed. The anchor transactions in the blockchain imply the network topology, which is kind of cool. However, it is not sure how it will scale and how it can be defended against DoS attacks, but it sort of follows automatically from the desire to keep the network free.</summary>
    <published>2015-07-07T19:06:08+00:00</published>
  </entry>
</feed>
