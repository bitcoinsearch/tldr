<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Routing on the lightning network?</title>
  <updated>2023-05-23T18:18:18.028174+00:00</updated>
  <author>
    <name>Rusty Russell 2015-07-08 00:21:14</name>
  </author>
  <author>
    <name>CJP 2015-07-14 18:03:56</name>
  </author>
  <author>
    <name>Nick ODell 2015-07-15 00:29:10</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-15 01:19:25</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-15 18:54:47</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-03 02:10:15</name>
  </author>
  <author>
    <name>CJP 2015-07-07 19:06:08</name>
  </author>
  <author>
    <name>CJP 2015-07-14 18:54:44</name>
  </author>
  <author>
    <name>CJP 2015-07-15 20:05:44</name>
  </author>
  <author>
    <name>CJP 2015-07-15 20:19:56</name>
  </author>
  <author>
    <name>Anthony Towns 2015-07-18 09:46:35</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-18 11:10:01</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-15 02:21:06</name>
  </author>
  <link href="lightning-dev/July_2015/000026_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000030_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000032_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000033_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000035_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000019_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000023_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000031_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000036_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000037_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000044_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000045_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000034_Routing-on-the-lightning-network-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Routing on the lightning network?</title>
    <updated>2023-05-23T18:18:18.028174+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000026.html" rel="alternate"/>
    <summary>The Lightning Network is a payment protocol for Bitcoin that offers fast and low-cost transactions. However, its routing design has implications for privacy and regulation enforcement. Nodes should not know the shape of the entire network to prevent it from splitting into regulated and non-regulated parts. Separating destination addresses from payment endpoints allows nodes to interface secretly between regulated and non-regulated parts.Routing tables are a heuristic used to determine how likely a payment to/from a certain destination address is to succeed on one's interfaces. Fees are an issue, and source routing with onion routing is proposed as a solution. An attack mode is possible where a powerful attacker monitors transactions and identifies the node that allows "illegal" transactions to enter the regulated network. The discussion explores several attack modes and how regulation and censorship could impact the network.The lightning network protocol offers two routing options: each-hop and source routing. Each-hop routing is adaptable to changing network conditions, and end clients need not know anything. Source routing does not reveal the final source or destination to intermediary nodes, and fees are known in advance. However, it requires retransmission from the source if routes change, and end clients need routing/fee information. Rusty Russell proposed an onion routing system that requires source routing but anonymizes the route. Combining both concepts in a single design is possible.Determining the right fee structure can be challenging, especially if it involves trust issues between the parties involved. One solution proposed is to use source routing, where the client specifies the fees for each hop. Another idea is to offer negative fees for transactions that bring channels back to equilibrium, which could create a market for people making money from bringing other peoples' channels back to equilibrium. To make fees trust-free, the technology platform needs to be designed accordingly. A global routing announcement service is needed to address issues with figuring out fees and how to route to other hubs.Channels on the lightning network may be used for concurrent independent transactions. Signing transactions becomes difficult as any combination of transactions could fail and break the chain. Short timeouts are necessary to ensure things keep flowing, as blocking transactions not only blocks the satoshis being spent but all unspent satoshis in the channel. Insufficient fees render transactions unroutable, and intermediate nodes may charge high fees if they are located on a satellite or floating platform for anonymity purposes. To prevent Bob from taking more fees than needed, transactions should be structured such that the actual payment Carol is expecting is encrypted and not encoded anywhere else.Overall, the discussion revolves around the issue of fees in Bitcoin's Lightning Network. Without source routing, fees become a guessing game, and with source routing and onion it becomes a little better as one can explicitly state what each hop gets. Rusty's "neutral meeting point" routing design is effectively a two-hop source routing that creates two routable addresses. Negative fees fall out naturally from a route description, which includes fees. However, there is a real problem with minimizing route flap. A time-based model may work, but serious modeling is required. The ideal payment calculation would be in satoshi-seconds (how much capital you used for how long).</summary>
    <published>2015-07-08T00:21:14+00:00</published>
  </entry>
</feed>
