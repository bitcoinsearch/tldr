<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Breach of contract?</title>
  <updated>2023-05-23T18:44:11.176419+00:00</updated>
  <author>
    <name>Christopher Jamthagen 2015-07-25 20:59:16</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-27 01:50:54</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-28 01:38:05</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-29 19:50:06</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-30 02:33:21</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-26 14:57:53</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-27 19:37:57</name>
  </author>
  <link href="lightning-dev/July_2015/000064_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000067_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000073_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000077_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000083_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000065_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000070_Breach-of-contract-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Breach of contract?</title>
    <updated>2023-05-23T18:44:11.176419+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000064.html" rel="alternate"/>
    <summary>In July 2015, Rusty Russell, Christopher Jamthagen, and Joseph Poon had a conversation about Hashed Time-Locked Contracts (HTLCs) used for Lightning Network payments. The discussion revolved around the Lightning Network's script and its implications. Christopher Jamthagen raised concerns about the receiver of the HTLC not being able to use the pre-image to spend the output. Joseph Poon explained that outputs redeemable by A must be delayed and there needs to be some contestation period for one's own HTLC when one is redeeming funds.Rusty Russell agreed but suggested that an additional delay may be over-engineering. The scripts in version 0.1 were discussed, and Poon pointed out that they were missing a delay and that requirements for HTLCs need to be OP_CSV delayed. However, there was concern that constantly watching the blockchain would be necessary, which could lead to Bob losing money if he isn't paying attention, and doubling the HTLC timeouts has some implications.It was also noted that doubling the HTLC timeouts could result in higher fees but might bias towards less graph centralization. The design of HTLCs has a contestation period built-in where the party that broadcasts the commitment transaction must wait before the payment goes back to them. Theft of the HTLC via broadcast of expired commitments can be mitigated by having some funds in reserve available on one's channel balance to ensure honesty.Finally, Russell clarified that HTLC-TIMEOUT is an absolute time/block, not relative. Therefore, OP_CHECKLOCKTIMEVERIFY is a no-op for old HTLCs, and if A broadcasts, they need to wait to spend. This model is a good stop-gap before a real malleability fix.</summary>
    <published>2015-07-25T20:59:16+00:00</published>
  </entry>
</feed>
