<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Thoughts on HTLC Scripts</title>
  <updated>2023-05-23T18:35:17.525452+00:00</updated>
  <author>
    <name>Mats Jerratsch 2015-07-20 18:42:11</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-25 05:04:46</name>
  </author>
  <link href="lightning-dev/July_2015/000055_Thoughts-on-HTLC-Scripts.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000063_Thoughts-on-HTLC-Scripts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Thoughts on HTLC Scripts</title>
    <updated>2023-05-23T18:35:17.525452+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000055.html" rel="alternate"/>
    <summary>Mats Jerratsch is working on a Lightning Implementation Client/Server in Java, building on bitcoinj. The implementation was ready but he threw it all off the ship after reading through Rusty's paper. Mats had based his implementation on some trust dependencies and channel transactions were highly asynchronous, meaning that a LN-Network would not be possible. He noticed that there is no delay for the 'HTLC Receiver Redeemscript', when redeeming the contract using R. There are four states in a channel and if the client has spent all funds in state 3, he can broadcast the channel transaction from t1 and instantly claim all outputs using R, this is especially important as clients won't be online all the time and the delay here really determines how often the client has to check back. According to Rusty, any output condition which pays to "self" must be delayed.</summary>
    <published>2015-07-20T18:42:11+00:00</published>
  </entry>
</feed>
