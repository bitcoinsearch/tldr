<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Routing on the lightning network?</title>
  <updated>2023-05-23T18:07:24.332518+00:00</updated>
  <author>
    <name>Joseph Poon 2015-07-15 18:54:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Routing on the lightning network?</title>
    <updated>2023-05-23T18:07:24.332518+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000035.html" rel="alternate"/>
    <summary>In this email exchange, Rusty Russell asks Joseph Poon if it's possible to rig a system that requires recipients to pay more depending on time. Joseph responds that it is possible and mentions an idea previously brought up by Tadge where the timelock could be used for decay of payments with one's counterparty for on-chain enforceability. He explains that with this system, commitments would have sub-commitments that pay out different lightning fee values with later locktimes. For example, Commitment #123 would have Commitment123_1, Commitment123_2, and Commitment123_3, each with very similar payouts but different HTLC fees paid and locktimes. Using full on-chain Replace-By-Fee, Commitment123_3 can be prioritized over Commitment123_2, but Commitment123_3 will also have a higher fee on lightning as well. However, Commitment123_3 can only be broadcast at a later date, so "earlier" Commitment123 values can still be valid. This system would require arranging fees in a way that ensures intermediary nodes don't lose out due to time asynchronousness along the chain.</summary>
    <published>2015-07-15T18:54:47+00:00</published>
  </entry>
</feed>
