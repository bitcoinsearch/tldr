<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>commitment update steps</title>
  <updated>2023-05-18T00:20:41.284717+00:00</updated>
  <author>
    <name>Anthony Towns 2015-07-23 04:40:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>commitment update steps</title>
    <updated>2023-05-18T00:20:41.284717+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000053.html" rel="alternate"/>
    <summary>The lightning protocol for a network-protocol level is explained through a series of proposed steps. The proposal involves Alice and Bob, where they both have a channel setup with fully signed commitment transactions. Alice proposes an unsigned transaction to update the channel to reflect a conditional payment from Bob once R is revealed. Bob checks this transaction and either declines or approves it. If approved, Alice signs and stores a new transaction and discards the old one. Bob also discards the old transaction and reveals Bob_101. This process ensures that both parties have matching, updated, signed commitment transactions along with secrets necessary to void attempts to use older commitments. In case of cheating, either party can safely close the channel after any step. The process becomes more complicated if pay2scripthash is used for HTLCs.</summary>
    <published>2015-07-23T04:40:45+00:00</published>
  </entry>
</feed>
