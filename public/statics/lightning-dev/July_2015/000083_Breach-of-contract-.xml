<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Breach of contract?</title>
  <updated>2023-05-23T18:40:45.976920+00:00</updated>
  <author>
    <name>Rusty Russell 2015-07-30 02:33:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Breach of contract?</title>
    <updated>2023-05-23T18:40:45.976920+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000083.html" rel="alternate"/>
    <summary>The discussion is about the implications of using Hashed Timelock Contracts (HTLCs) in the Lightning Network. The first implication discussed is that HTLC-TIMEOUT requires constant monitoring of the blockchain for a low interval to avoid losing money. If Alice and Bob establish a channel, make payments, and now the balance of the channel is 0 to Alice and 1 BTC to Bob, Bob can lose money if he does not constantly watch the chain. This means that the maximum time between watching the chain will be the minimum HTLC-TIMEOUT throughout the life of the channel when the channel balance is heavily tilted in one direction. The second implication is that using HTLCs doubles the timelock on LN payments. The HTLC timeout must give enough time to redeem funds or receive a refund. Doubling the HTLC timeouts has some implications since it'll result in higher fees as a downside, but might bias towards less graph centralization as well. It's not clear that this "htlc timeout doubling" applies to every step on the route, it seems to just add one.</summary>
    <published>2015-07-30T02:33:21+00:00</published>
  </entry>
</feed>
