<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payment correlation attacks</title>
  <updated>2023-06-03T12:28:49.837458+00:00</updated>
  <author>
    <name>g0b1el 2023-03-25 13:09:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payment correlation attacks</title>
    <updated>2023-06-03T12:28:49.837458+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-March/003890.html" rel="alternate"/>
    <summary>Payment correlation attacks can be used by adversaries to link the sender and receiver of a payment by observing traffic on the payment path. These attacks are more easily carried out in centralized networks, as opposed to well-distributed networks. The adversary's job can be simplified if the potential sender, potential receiver, or adversary surveillance node is the same node, or if S-&gt;A1 or A2-&gt;R is an unpublished channel. The most notable LN payment correlations are hash correlation, amount correlation, CLTV correlation, and timing correlation. While hash correlation is straightforward for surveillance nodes to detect, it is expected to be fixed with point time lock contracts. Amount correlation is only slightly better than hash correlation, but multi-path payments have better privacy than single-path payments. To de-correlate sub-path payment amounts, payments can be split into predefined values. CLTV correlation is not as serious as hash or amount correlation, but with payment route reservation, it becomes much harder for attackers. Timing correlation attacks can be mitigated by introducing a small random delay for privacy-oriented payments. It is crucial to minimize the probability of success for each attack to ensure the highest possible payment privacy.</summary>
    <published>2023-03-25T13:09:07+00:00</published>
  </entry>
</feed>
