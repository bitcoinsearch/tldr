<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed changes to the splicing specification</title>
  <updated>2023-06-03T12:30:13.231245+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-03-31 09:04:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed changes to the splicing specification</title>
    <updated>2023-06-03T12:30:13.231245+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-March/003895.html" rel="alternate"/>
    <summary>The Lightning Network developers have announced changes to the splicing protocol which will make it simpler and more robust. Splicing is a complex feature in which active commitments are made to valid commitment transactions, and updates can be applied to these as necessary. The new protocol will send one `commitment_signed` message per active commitment, in the order that funding transactions were created. Once a new splice is negotiated and interactive-tx protocol signing steps have been taken, a single `commitment_signed` is sent for the new commitment, without revoking previous commitments. This is conceptually the addition of a new commitment to the active commitments set. To ensure safe handling of disconnection scenarios, nodes must store data about the funding transaction as soon as they send their `commitment_signed` message. Funding amounts exchanged in `splice_init` and `splice_ack` should be relative amounts based on each peer's current channel balance. Implementing 0-conf splicing is tricky and can lead to vulnerabilities, so the developers are interested in discussing this further. More details and sample flows can be found at [2].</summary>
    <published>2023-03-31T09:04:24+00:00</published>
  </entry>
</feed>
