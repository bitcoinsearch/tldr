<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Local Reputation to Mitigate Slow Jamming</title>
  <updated>2023-06-04T04:46:10.935245+00:00</updated>
  <author>
    <name>Clara Shikhelman 2023-03-02 18:56:32</name>
  </author>
  <author>
    <name>Clara Shikhelman 2023-02-16 21:28:44</name>
  </author>
  <author>
    <name>Antoine Riard 2023-03-06 17:29:12</name>
  </author>
  <author>
    <name>Clara Shikhelman 2023-03-03 16:14:12</name>
  </author>
  <author>
    <name>Thomas HUET 2023-03-03 16:50:46</name>
  </author>
  <author>
    <name>Thomas HUET 2023-03-02 13:14:24</name>
  </author>
  <author>
    <name>Thomas HUET 2023-03-02 19:28:52</name>
  </author>
  <author>
    <name>Clara Shikhelman 2023-03-03 18:45:17</name>
  </author>
  <author>
    <name>Thomas HUET 2023-03-03 19:21:57</name>
  </author>
  <author>
    <name>Clara Shikhelman 2023-03-03 19:48:52</name>
  </author>
  <author>
    <name>Vincenzo Palazzo 2023-03-04 12:40:23</name>
  </author>
  <author>
    <name>Clara Shikhelman 2023-03-06 18:53:59</name>
  </author>
  <link href="lightning-dev/March_2023/003873_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2023/003857_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003883_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003875_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003876_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003871_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003874_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003877_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003878_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003879_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003880_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <link href="lightning-dev/March_2023/003884_Local-Reputation-to-Mitigate-Slow-Jamming.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Local Reputation to Mitigate Slow Jamming</title>
    <updated>2023-06-04T04:46:10.935245+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-March/003873.html" rel="alternate"/>
    <summary>The Lightning-dev mailing list is a forum for discussing the development of the Lightning Network, a layer-two scaling solution for Bitcoin. The article discusses the challenges of implementing a binary solution to block low-reputation nodes in blockchain technology. It highlights that an attacker can easily fill the quota for low-confidence HTLCs, resulting in the blocking of genuine low-traffic nodes. The author suggests a continuous solution that differentiates between active attackers and low-traffic neighbors. In a group discussion, Vincent suggests that they should understand the benefits of continuous solutions over binary before making any decisions. The proposed formula treats all scores as continuous values between 0 and 1 instead of binary classes, whereby a node that sends the same confidence c for all HTLCs is expected to have c equal to the probability p that its HTLCs succeed. If c &gt; p, then this node is overconfident or lying to relay its HTLCs, and its reputation should be lowered.Reputation management happens locally, and the proposed formula treats all scores as continuous values instead of binary classes. The team is seeking feedback on the draft proposal and notes that reputation mostly comes into play during an attack. There are links provided to specific code on GitHub and email conversations discussing the concept of confidence in node reputation.Regarding the local reputation scheme, it is unclear how reputation is slashed in case of HTLC failure, and if any "grace" amount/rate is granted to the inbound channel counterparty. The local reputation scheme might suffer from exploitable reputation asymmetries by a jamming adversary, where Alice can inflict damage to Caroll while only encumbering the lower-priced reputational cost towards Bob. This concern could hold in case of asymmetries arising from the dynamic adjustment of routing fees during an evaluated period of time.The endorsement decision for a node endorsing an HTLC is made if it came from a neighbor with reputation 1 that endorsed it. The available liquidity/slots on a given outbound channel are initially distributed between all the inbound channels and are balanced once the inbound channels start to accumulate reputation. The quotas for any incoming HTLC that is either from a neighbor with reputation 0, or is not endorsed, are independent of other channels and independent of the neighbor that forwarded the HTLC.Another proposal for jamming mitigation is presented by Clara Shikhelman, which includes upfront fees and binary reputation for each neighbor. Both proposals aim to prevent full access to liquidity and slots in a channel that can result in jamming. Additionally, the proposal suggests normalizing fees by resolution time to reward payments that resolve quickly and discount slow resolving payments.The Lightning Network is designed to enable faster and cheaper Bitcoin transactions by using off-chain payment channels that are secured by the underlying Bitcoin blockchain. Developers use the mailing list to share ideas, discuss technical issues, and coordinate efforts related to the ongoing development of the Lightning Network. Anyone interested in contributing to the development of the Lightning Network is welcome to join the mailing list.</summary>
    <published>2023-03-02T18:56:32+00:00</published>
  </entry>
</feed>
