<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>`htlc_maximum_msat` as a valve for flow control on the Lightning Network</title>
  <updated>2023-06-03T09:53:53.624956+00:00</updated>
  <author>
    <name>René Pickhardt 2022-09-23 10:27:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>`htlc_maximum_msat` as a valve for flow control on the Lightning Network</title>
    <updated>2023-06-03T09:53:53.624956+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-September/003691.html" rel="alternate"/>
    <summary>René Pickhardt, a Lightning Network developer, has proposed the use of `htlc_maximum_msat` as a control valve to regulate the "pressure" coming from the drain and mitigate the depletion of channels. By setting up proper asymmetric `htlc_maximum_msat` pairs, expected payment failure rates per channel may drop significantly by up to an order of magnitude. René shares two experimental algorithmic ideas that node operators can use to find decent `htlc_maximum_msat` values in a greedy fashion. One of the algorithms does not require knowing the drain or payment size distribution or building the Markov model but just looks at the liquidity distribution in the channel at the last x routing attempts and adjusts the `htlc_maximum_msat` value if the distribution is too far away from a uniform distribution.René addresses two questions posed by Matt Corallo, another Lightning developer. The first question concerns gossip overhead generated by this type of protocol. René expects the setting of the valves to be stable and not impacted too heavily by installing valves. He does not expect such adoptions to happen in real-time or even several times per day, putting unnecessary load/spam to gossip. However, he points out that if peers of a channel work together and both exchange information/collaborate in finding a good `htlc_maximum_msat` pair, they will need fewer gossip messages than in the case where both nodes independently try to find decent settings.The second question relates to the privacy implications of the naive "update on drained channel." René uses information theory to show that learning the shape of the distribution from the last payments leaks less than 1 bit of information. He considers this information leakage to be acceptable, given that payment failure rates are expected to drop by an order of magnitude, and he could probably learn the drain from the on-chain signal or gossip anyway. However, he acknowledges that people may disagree and not set their `htlc_maximum_msat` flag in the proposed manner. He also notes that higher drain values produce a more heavily depleted channel, and we might learn more bits (in case of a 0.95 drain, we learn about 3 bits).The given context is a link to rene-pickhardt.de, which is a personal website of Rene Pickhardt. The website does not provide any specific information about the content it contains. However, it seems that the mailing list for Lightning-dev is associated with this website. Lightning-dev is a mailing list for developers working on the Lightning Network, which is a second-layer protocol built on top of the Bitcoin blockchain. The Lightning Network enables faster and cheaper transactions by allowing users to create payment channels between each other. The provided link also includes information about the Lightning-dev mailing list, including instructions on how to subscribe and unsubscribe from the list. This suggests that Rene Pickhardt may be involved in the development of the Lightning Network and is using his personal website to share information about the project and connect with other developers.</summary>
    <published>2022-09-23T10:27:03+00:00</published>
  </entry>
</feed>
