<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Inbound channel routing fees</title>
  <updated>2023-06-03T09:34:03.912805+00:00</updated>
  <author>
    <name>Owen Gunden 2022-09-01 21:57:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Inbound channel routing fees</title>
    <updated>2023-06-03T09:34:03.912805+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-September/003680.html" rel="alternate"/>
    <summary>A routing node operator named Joost Jager is seeking input from other operators regarding a feature he has been wanting for some time. This feature would allow for inbound fees on Lightning Network channels, which are currently not an option. Jager explains that there are several reasons why he believes this feature would be beneficial. Firstly, for peers that tend to be liquidity sources and have most of the liquidity on his side, there is no current way to keep the channel balanced with fees, aside from setting a zero outbound fee. However, this often is not enough, and a high inbound fee would discourage payments through that route.Secondly, not all inbound traffic is created equal. If two different peers wish to route through him to the same outbound peer, he may value the two forwards differently depending on who the sender is. Currently, there is no way of expressing this to the market through fees, and he can only intercept and reject certain HTLCs, which damages his reputation.Lastly, Jager believes that greater expressivity in fee-setting generally allows markets to push more flows off-chain without having to loop or open new channels. While he thinks negative fees would be more impactful for this purpose, he believes that combining negative and inbound fees is where the real magic would happen.Overall, Jager believes that inbound fees would be helpful for the Lightning Network and is seeking input from other routing node operators.</summary>
    <published>2022-09-01T21:57:03+00:00</published>
  </entry>
</feed>
