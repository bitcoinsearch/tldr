<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Supporting a custodial user who wishes to withdraw all sats from the account...</title>
  <updated>2023-06-04T04:02:50.617491+00:00</updated>
  <author>
    <name>René Pickhardt 2022-08-25 15:49:20</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-08-27 02:06:27</name>
  </author>
  <author>
    <name>Martin Habovštiak 2022-08-31 17:22:52</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-09-01 02:55:21</name>
  </author>
  <link href="lightning-dev/Aug_2022/003674_Supporting-a-custodial-user-who-wishes-to-withdraw-all-sats-from-the-account-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2022/003675_Supporting-a-custodial-user-who-wishes-to-withdraw-all-sats-from-the-account-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2022/003677_Supporting-a-custodial-user-who-wishes-to-withdraw-all-sats-from-the-account-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2022/003678_Supporting-a-custodial-user-who-wishes-to-withdraw-all-sats-from-the-account-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Supporting a custodial user who wishes to withdraw all sats from the account...</title>
    <updated>2023-06-04T04:02:50.617491+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-August/003674.html" rel="alternate"/>
    <summary>A Lightning developer has proposed a solution, 'option_recipient_pays_routing_fees', to the problem of users having leftover funds when withdrawing from custodial wallets. The proposal involves creating an invoice with a flag indicating that the recipient is willing to pay for routing fees by releasing the preimage, even if the full amount has not been received. The onion is then constructed in a way that the first HTLC will be for the full amount, while subsequent HTLCs will be of decreasing value so that routing nodes are compensated properly. However, this proposal may confuse users who want to drain their accounts. Another possible solution is trampoline routes, where a trampoline node decrypts the first layer of the onion and the receiver provides an encrypted route from some node to itself.The discussion on the Lightning-dev mailing list focused on the proposal for a solution to a specific problem faced by users of a custodial wallet. It was suggested that the new flag in invoices, `option_recipient_pays_routing_fees`, would signal that the recipient is willing to pay for routing fees by releasing the preimage even if the full amount has not arrived in HTLCs at the recipient. Alice would create an invoice with the flag and pass it to the payer who searches for a payment path to the recipient. The main challenge of this proposal is educating users about two different invoice types.In the conversation between Martin and ZmnSCPxj, the topic of wallets supporting ‘send max’ when a zero-amount invoice is used was discussed. However, ZmnSCPxj pointed out that there is no guarantee that the custodial service will implement any solution found, and they could also pretend that the routing fees paid were higher than they actually were. Therefore, there may be no real solution to ensure the safety of funds in a custodial service.</summary>
    <published>2022-08-25T15:49:20+00:00</published>
  </entry>
</feed>
