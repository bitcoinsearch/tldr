<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>`htlc_maximum_msat` as a valve for flow control on the Lightning Network</title>
  <updated>2023-06-03T09:54:53.967664+00:00</updated>
  <author>
    <name>Anthony Towns 2022-09-26 23:26:24</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>`htlc_maximum_msat` as a valve for flow control on the Lightning Network</title>
    <updated>2023-06-03T09:54:53.967664+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-September/003701.html" rel="alternate"/>
    <summary>The lightning network is a decentralized, stable network that requires routing decisions to be made based on something other than fees. While quantizing payments may be an option for some, it would not work for everyone as payment sizes need to have a smooth/continuous distribution. Instead, throttling payment traffic through htlc_max_msat can act as a valve. The reliability of this method is dependent on market forces and may be non-linear like feerates, which are the sum total of market forces. Feerates will always be something that senders optimize for, but there are other possible throttling mechanisms such as randomly selecting routes within a budget or maintaining external "reliability" scores for nodes. What's novel about the htlc_max_msat approach is that channel operators can use it directly based on their private channel state, and they don't have a particular incentive to lie about it.</summary>
    <published>2022-09-26T23:26:24+00:00</published>
  </entry>
</feed>
