<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>`htlc_maximum_msat` as a valve for flow control on the Lightning Network</title>
  <updated>2023-06-03T09:59:14.695238+00:00</updated>
  <author>
    <name>Matt Corallo 2022-09-23 08:43:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>`htlc_maximum_msat` as a valve for flow control on the Lightning Network</title>
    <updated>2023-06-03T09:59:14.696233+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-September/003690.html" rel="alternate"/>
    <summary>René Pickhardt, a Lightning developer, has shared his recent research on the Lightning Network with the community. He proposes using the `htlc_maximum_msat` setting to regulate the "pressure" coming from drained channels and mitigate their depletion. In doing so, expected payment failure rates per channel may drop significantly by up to an order of magnitude if channels set up proper asymmetric `htlc_maximum_msat` pairs. René provides two experimental algorithmic ideas with which node operators can find decent `htlc_maximum_msat` values in a greedy fashion. One of the algorithms does not even require knowing the drain or payment size distribution or build the Markov model but just looks at the liquidity distribution in the channel at the last x routing attempts and adjusts the `htlc_maximum_msat` value if the distribution is too far away from a uniform distribution.René's research results have limited impact on protocol development/specification but are mainly relevant to node operators and LSPs. The idea of regulating the flow of networks through control valves is not new and heavily used in fluid networks, making it natural to do the same on the Lightning Network. He shares a theoretical model and an iPython notebook that provide insights into how to regulate the pressure coming from drained channels while mitigating their depletion. Matt raises two questions in response to René's research. Firstly, he asks how much gossip overhead this type of protocol would generate and if there is any useful outcome for this type of update even if gossip updates are limited once/twice/thrice per day. Secondly, Matt asks about the privacy implications of the naive "update on drained channel," and whether any analysis has been done on the value of this type of gossip update at different levels of privacy. René invites fellow Lightning developers to share their thoughts and feedback on his research.</summary>
    <published>2022-09-23T08:43:41+00:00</published>
  </entry>
</feed>
