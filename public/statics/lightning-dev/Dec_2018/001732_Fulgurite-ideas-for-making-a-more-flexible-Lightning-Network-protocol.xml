<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fulgurite: ideas for making a more flexible Lightning Network protocol</title>
  <updated>2023-06-02T15:45:00.585478+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-12-08 19:37:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fulgurite: ideas for making a more flexible Lightning Network protocol</title>
    <updated>2023-06-02T15:45:00.585478+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-December/001732.html" rel="alternate"/>
    <summary>The validation of channel data is the only consensus validation required, which is simply checking that both sides of the channel have agreed, i.e. signatures from one or both endpoints. Burchert-Decker-Wattenhofer channel factories require a single channel announcement for all channels within the factory, signed off by all participants in the channel factory. Each channel within the factory would then need channel updates only signed off by the two direct participants in the channel. When channels within the factory are reorganized, a new announcement will need to be done and signed off on by participants in the factory who performed the reorg.Fulgurite is preferred to higher layers for time-sensitivity as it can return the latest blockheight at which it can still safely collapse the Fulgurite system to the higher layer. The update mechanism can always cancel any contract if all participants in the updateable cryptocurrency system have agreed. When the timelock is about to expire, and the other side refuses to sign off on the cancellation, the only remaining remedy is to fail the system and drop to onchain for enforcement.Under Poon-Dryja there is no CSV requirement, but under Decker-Wattenhofer and Decker-Russell-Osuntokun, there exists a CSV requirement, which makes the contract change between offchain (expires at time N - M) and onchain (expires at time N).</summary>
    <published>2018-12-08T19:37:07+00:00</published>
  </entry>
</feed>
