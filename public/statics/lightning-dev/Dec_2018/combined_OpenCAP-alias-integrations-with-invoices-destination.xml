<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - OpenCAP alias integrations with invoices/destination</title>
  <updated>2023-06-03T21:04:12.369417+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-12-08 19:13:59</name>
  </author>
  <author>
    <name>Lane Wagner 2018-12-07 13:14:20</name>
  </author>
  <link href="lightning-dev/Dec_2018/001731_OpenCAP-alias-integrations-with-invoices-destination.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2018/001729_OpenCAP-alias-integrations-with-invoices-destination.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - OpenCAP alias integrations with invoices/destination</title>
    <updated>2023-06-03T21:04:12.369971+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-December/001731.html" rel="alternate"/>
    <summary>Lane Wagner is working on a protocol that allows users to host crypto public addresses with the help of a standard DNS lookup schema. The protocol is expected to offer some advantages over OpenAlias and could be used for posting lightning invoices as well. On the Lightning-dev mailing list, discussions are focused on path decorrelation and rendezvous routing. Participants are discussing making a more flexible Lightning Network protocol and avoiding re-signing DLC subcontracts by using `SIGHASH_NOINPUT`. The Lightning Network protocol, Fulgurite, aims to make the information exchange in channels more flexible. However, there are concerns around multiparty channels requiring more coordination than two-party channels and having more points of failure. It is better to admit the effect of CSV requirements earlier than later. Timelocked contracts need to be published on-chain before the timeout expires, and a N-block CSV requirement means that you must publish N+1 blocks before the absolute timelock expires. Fulgurite subchannels are expected to have only a subset of the participants of their parents. Therefore, it is better to move time-sensitivity to Fulgurite than to higher layers. Fulgurite generalizes Lightning shared-ownership update systems ('channels') and can contain 'shared-ownership update systems' of interest to its participants. There is a discussion on the Lightning-dev mailing list focused on the use of "shared-ownership update system" and subsystems within it. The idea of 2-party shared-ownership update systems ("channels") was proposed as it requires everyone's signature, reducing the points of failure. Burchert-Decker-Wattenhofer channel factories were suggested as they provide the advantage that once channels are set up, participants can be absent, and only their channels are affected. Existing update protocols can carry almost any Bitcoin-enforceable contract, including the same contracts used to enforce them. This allows update protocols to nest, as in Burchert-Decker-Wattenhofer or parent and child channels. However, some important details were highlighted, such as the fact that Decker-Wattenhofer and Decker-Russell-Osuntokun impose an extra CSV on their transported contracts, and most contracts cannot be transported across systems. It was emphasized that it is essential to pay attention to the CSV requirement as it affects the behavior of absolute timelocks used by HTLCs. Any absolute timelocked contract implies a timeout for the lifetime of the Fulgurite system/channel it is in. The discussion on the Lightning-dev mailing list revolved around the safety and practicality of different approaches to shared-ownership update systems. ZmnSCPxj also discussed the routing gossip which is not trust-based, instead nodes check if the specified txo is unspent, and matches the purported capacity of the channel and how it could be relaxed so that the channels purported to be in the factory would sum up to less than or equal to the value of the channel factory txo instead. Additionally, he suggested that the issue of re-signing the DLC subcontracts could be avoided if you use `SIGHASH_NOINPUT`.</summary>
    <published>2018-12-08T19:13:59+00:00</published>
  </entry>
</feed>
