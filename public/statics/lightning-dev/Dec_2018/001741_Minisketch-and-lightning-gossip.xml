<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Minisketch and lightning gossip</title>
  <updated>2023-06-02T15:55:17.413636+00:00</updated>
  <author>
    <name>Rusty Russell 2018-12-12 02:06:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Minisketch and lightning gossip</title>
    <updated>2023-06-02T15:55:17.413636+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-December/001741.html" rel="alternate"/>
    <summary>The email discusses an efficient data summary library called Minisketch, which has a 64-bit implementation "sweet-spot" that works well for Bitcoin transaction gossip. The library is designed to minimize overheads in maintaining the Minisketch, and the author proposes using a direct encoding method for node announcements. This approach allows for immediate use of an INV-style query or the automatic sending of missing information to peers. The required size of the Minisketch depends on the number of differences with a peer, and there does not need to be any consensus on its size as truncated Minisketches regrow into whole ones. The proposed protocol includes a type (#260), chain hash, latest block hash, and Minisketch length. The author suggests combining block height and txindex into a "txnumber since block 500,000" to reduce redundancy. The remaining bits are used for output number and timestamp, which can be controlled by the originator to mitigate collisions.</summary>
    <published>2018-12-12T02:06:09+00:00</published>
  </entry>
</feed>
