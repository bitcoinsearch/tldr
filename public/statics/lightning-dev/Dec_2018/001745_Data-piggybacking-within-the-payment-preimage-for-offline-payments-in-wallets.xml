<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Data piggybacking within the payment_preimage for offline payments in wallets</title>
  <updated>2023-06-02T15:57:26.778077+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-12-17 03:56:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Data piggybacking within the payment_preimage for offline payments in wallets</title>
    <updated>2023-06-02T15:57:26.778077+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-December/001745.html" rel="alternate"/>
    <summary>The email discusses a solution to the problem of an offline device, such as a vending machine, sharing a secret with an online LN Node. The proposed solution is deemed superior as it requires no changes to BOLT spec or current wallets. It involves the online LN node preparing a set of invoices, where the first six digits of the preimages are restricted to the set of decimal digits and the succeeding 58 digits are a salt. The offline vending machine stores the payment hash, salt, and invoice signature from the online LN node. When a customer wants to purchase an item, the machine presents an unclaimed invoice and instructs the customer to enter the first six digits of the payment preimage. The machine looks through its list of unclaimed invoices to find one where the six digits, concatenated with the salt, hash to the given payment hash. If successful, the invoice is marked as used and the product is dispensed. If unsuccessful, the machine will delay and try again later.</summary>
    <published>2018-12-17T03:56:52+00:00</published>
  </entry>
</feed>
