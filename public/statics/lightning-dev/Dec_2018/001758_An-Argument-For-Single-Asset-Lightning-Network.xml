<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An Argument For Single-Asset Lightning Network</title>
  <updated>2023-06-02T16:24:51.023012+00:00</updated>
  <author>
    <name>Alexander Leishman 2018-12-28 01:01:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An Argument For Single-Asset Lightning Network</title>
    <updated>2023-06-02T16:24:51.023012+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-December/001758.html" rel="alternate"/>
    <summary>In an email exchange, Alex proposed a solution to the problem of free optionality in Lightning transactions. Alex suggested that atomic information swaps could be used to swap the final HTLC signature for the hash preimage, thereby preventing the optionality issue. This idea was inspired by a paper called "Timed Commitments" by Dan Boneh. Alex explained that if this magical atomic information swap could happen, the payment would settle immediately. However, Alex acknowledged that this approach may fail to work when there are intermediary nodes not controlled by the two trading parties. In response, ZmnSCPxj argued that the entire point of using HTLCs in Lightning routing is to enforce that the final payee actually gets paid, or nobody along the route gets paid. ZmnSCPxj also discussed the problems with cross-asset brokers charging a standard option premium and requiring counterparties to issue them a symmetric but slightly more out-of-the-money call.</summary>
    <published>2018-12-28T01:01:57+00:00</published>
  </entry>
</feed>
