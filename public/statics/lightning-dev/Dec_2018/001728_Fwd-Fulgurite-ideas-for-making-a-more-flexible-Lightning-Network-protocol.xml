<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Fwd: Fulgurite: ideas for making a more flexible Lightning Network protocol</title>
  <updated>2023-06-01T18:05:22.976502+00:00</updated>
  <author>
    <name>Trey Del Bonis 2018-12-07 01:41:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Fwd: Fulgurite: ideas for making a more flexible Lightning Network protocol</title>
    <updated>2023-06-01T18:05:22.976502+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-December/001728.html" rel="alternate"/>
    <summary>The discussion revolves around the Fulgurite project, which aims to generalize Lightning shared-ownership update systems or "channels". These channels allow for different sub-channels to have the same or a subset of participants. However, non-participants cannot use any such system and its subsystems since they lack the power to refuse an invalid state transition. The complexity of the system is discussed, and the Burchert-Decker-Wattenhofer channel factories are introduced as a solution that allows channels within the factory to be set up and work even in the absence of some participants.However, this new system imposes an extra CSV on their transported contracts, which is a time-based requirement that affects the behavior of absolute timelocks used by HTLCs. It is emphasized that it is crucial to pay attention to CSV requirements early on as it becomes possible as an attack point if not taken care of. The discussion concludes by highlighting the importance of considering the implications of CSV requirements and ensuring that the system is adequately secured against attacks.</summary>
    <published>2018-12-07T01:41:30+00:00</published>
  </entry>
</feed>
