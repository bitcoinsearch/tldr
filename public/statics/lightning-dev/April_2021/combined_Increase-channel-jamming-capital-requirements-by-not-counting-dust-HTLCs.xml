<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Increase channel-jamming capital requirements by not counting dust HTLCs</title>
  <updated>2023-05-23T14:40:19.523592+00:00</updated>
  <author>
    <name>Matt Corallo 2021-04-26 15:08:18</name>
  </author>
  <author>
    <name>Matt Corallo 2021-04-24 04:02:38</name>
  </author>
  <link href="lightning-dev/April_2021/003019_Increase-channel-jamming-capital-requirements-by-not-counting-dust-HTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/April_2021/003009_Increase-channel-jamming-capital-requirements-by-not-counting-dust-HTLCs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Increase channel-jamming capital requirements by not counting dust HTLCs</title>
    <updated>2023-05-23T14:40:19.523592+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-April/003019.html" rel="alternate"/>
    <summary>A proposal was made by Eugene Siegel to mitigate channel-jamming attacks by increasing the capital requirement for unsophisticated attackers. The proposal suggests trimming dust HTLC outputs in a commitment transaction, as the reason for the 483 HTLC limit is to prevent commitment transactions from growing too large and ensure they can be included in a block. By not including dust HTLCs in this calculation, it would still allow for 483 non-dust HTLCs to be included. This would raise the capital requirement for channel-jamming so that each HTLC must be non-dust, rather than spamming with 1 sat payments. Bastien Teinturier raised concerns about the issue where it's not possible to lower the feerate if dust HTLCs are not counted, as some HTLCs that were previously dust won't be dust anymore and may exceed the 483 HTLC output limit. However, Eugene Siegel stated that there is no current in-protocol way to change the dust limit, so the issue doesn't apply here. Additionally, he suggested making changes to the update_fee message to include the dust limit for outputs in a channel.</summary>
    <published>2021-04-26T15:08:18+00:00</published>
  </entry>
</feed>
