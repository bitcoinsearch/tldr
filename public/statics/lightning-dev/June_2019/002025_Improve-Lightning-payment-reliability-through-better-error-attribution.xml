<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improve Lightning payment reliability through better error attribution</title>
  <updated>2023-06-02T18:44:15.902990+00:00</updated>
  <author>
    <name>Joost Jager 2019-06-14 13:50:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improve Lightning payment reliability through better error attribution</title>
    <updated>2023-06-02T18:44:15.902990+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-June/002025.html" rel="alternate"/>
    <summary>In this email conversation, Joost proposes a solution to address the issue of intermediate nodes potentially learning their position in a payment path. He suggests adding padding along the way and having the erring node's padding be bigger than intermediate nodes' padding. This would mitigate the possibility of intermediate nodes figuring out their approximate position. However, it is uncertain whether it is possible to add padding in a way that hops don't learn anything about their position. Instead, they could add padding with a random length between 0 and 20 block sizes, which would reveal an upper bound for the distance to the error node. For example, if a node receives a failure with a padding of 3 blocks, that means the distance to the error node is between 0 and 3 hops. Overall, this solution could help prevent network observers from correlating error messages between hops.</summary>
    <published>2019-06-14T13:50:16+00:00</published>
  </entry>
</feed>
