<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Lightning Pre-Image Encryption Standard</title>
  <updated>2023-06-02T19:10:23.287913+00:00</updated>
  <author>
    <name>Stepan Snigirev 2019-06-26 04:07:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Lightning Pre-Image Encryption Standard</title>
    <updated>2023-06-02T19:10:23.287913+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-June/002040.html" rel="alternate"/>
    <summary>In this email conversation, Stepan suggests two improvements to Nadav's proposal concerning encrypted data and payment protocols. First, he recommends using authenticated encryption with HMAC-SHA256 to ensure that even if an insecure connection is used, the encrypted data cannot be changed by an attacker. Second, he proposes a modified payment protocol where only the buyer can decrypt the data. This involves Bob generating a random private key and corresponding public key, sharing the public key with Sally, who in turn generates her own keys and calculates a secret key to encrypt the data. The invoice includes the preimage, which is the x-coordinate of a point to make it 32-bytes long. When Bob pays the invoice, he learns the value of the public key and can use his private key to derive the encryption key and decrypt the data. No one else will learn the key.</summary>
    <published>2019-06-26T04:07:50+00:00</published>
  </entry>
</feed>
