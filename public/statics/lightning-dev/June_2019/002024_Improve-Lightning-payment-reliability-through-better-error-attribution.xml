<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improve Lightning payment reliability through better error attribution</title>
  <updated>2023-06-02T18:44:52.696764+00:00</updated>
  <author>
    <name>Joost Jager 2019-06-14 10:59:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improve Lightning payment reliability through better error attribution</title>
    <updated>2023-06-02T18:44:52.696764+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-June/002024.html" rel="alternate"/>
    <summary>The discussion revolves around the issue of how to penalize the channel when a payment is delayed. The senders can decide to tolerate slight variations or abandon the synchronization requirement altogether. The held duration can identify a pair of nodes which are responsible for the delay. In case of undecodable error response, the entire route would be penalized. An alternative approach is to use active probing and record two pieces of information for each node- total imposed delay and number of attempts. When finding a route for a "real" payment, the cost of traversing a node will be adjusted by the ratio Total imposed delay / Number of attempts. However, this approach may lead to less accurate results and more non-ideal payment attempts.</summary>
    <published>2019-06-14T10:59:26+00:00</published>
  </entry>
</feed>
