<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PROPOSAL]: FAST - Forked Away Simultaneous Transactions</title>
  <updated>2023-06-02T19:03:21.646214+00:00</updated>
  <author>
    <name>Ugam Kamat 2019-06-26 07:47:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PROPOSAL]: FAST - Forked Away Simultaneous Transactions</title>
    <updated>2023-06-02T19:03:21.646214+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-June/002045.html" rel="alternate"/>
    <summary>Ugam appreciates ZmnSCPxj's in-depth analysis of the proposal for FAST (Forked Away Simultaneous Transactions) and acknowledges the two choices mentioned for the proposal, which are considered a fair analysis of how an attack can be launched on such forked away payments. However, Ugam thinks that the current scheme may create more problems than it solves and will try to come up with a more solid way to achieve the goal. In response, ZmnSCPxj presents two choices for the proposal. The first option is that both forked branches must succeed for the fork node to claim its incoming payment. The second option is that either forked branch can succeed and the fork node can claim its incoming payment. However, ZmnSCPxj notes that if they go with the second option, fork nodes can attack opportunistically by only paying out to the smaller-valued branch and forgetting about the other branch of the payment.ZmnSCPxj suggests that a plausible fix for the scheme would be to take choice 2 but with Eric and Grace needing to cooperate and only take incoming payment if both of them receive incoming payments. This implies that Eric and Grace must trust each other to coordinate.</summary>
    <published>2019-06-26T07:47:12+00:00</published>
  </entry>
</feed>
