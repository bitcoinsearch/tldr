<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>lnurl to enable payer/payee interactions</title>
  <updated>2023-06-02T17:05:41.530012+00:00</updated>
  <author>
    <name>Anton Kumaigorodskiy 2019-01-17 19:42:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>lnurl to enable payer/payee interactions</title>
    <updated>2023-06-02T17:05:41.530012+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001823.html" rel="alternate"/>
    <summary>The Lightning Network (LN) is not user-friendly, and there is a need for a standard in payer/payee interactions that builds on Lightning invoices. To address this issue, an attempt has been made to create a spec that defines four use cases: incoming payment channel request, withdrawing funds from a service, linkable payments, and log in with Bitcoin Wallet. Two of these use cases, linkable payments and log in with Bitcoin Wallet, require a stable user identifier. The proposed solution is to derive a special `LinkingKey` that would be unique for each `(user, service)` pair. This approach would prevent user actions from being linked across different services. The spec defines a cryptographic protocol, and the author requests that someone more skilled than him reviews it for any obvious flaws. The spec can be found at https://github.com/btcontract/lnurl-rfc/blob/master/spec.md.</summary>
    <published>2019-01-17T19:42:34+00:00</published>
  </entry>
</feed>
