<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An Argument For Single-Asset Lightning Network</title>
  <updated>2023-06-02T16:32:17.065703+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-01-05 07:01:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An Argument For Single-Asset Lightning Network</title>
    <updated>2023-06-02T16:32:17.065703+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001792.html" rel="alternate"/>
    <summary>ZmnSCPxj, a contributor to Lightning-dev mailing list, raised the question of what happens if the exchange node sends its preimage only towards the payer and not the payee. He explains that if the payer and payee do not coordinate, the exchange node can take funds without the payee being able to claim payment which could be used by a node to take proofs of payment without paying, by simulating the payer and exchange nodes leaving the ransomware authors scammed off their potential earnings. David A. Harding, another contributor, suggests an alternative solution to mitigate this issue by giving the person making the exchange the ability to cancel the payment if they think the exchange rate has changed unfavorably for them. This can be done by adding an extra hashlock to the HTLC that's controlled by the exchanger. The new path will require both hashlocks to be unlocked before anyone can claim payment. If the exchange rate changes too much for the exchangerâ€™s comfort before both preimages have been released, he can unilaterally decide to cancel the payment by simply not releasing his preimage. Though this idea complicates the current protocol, it may have simplifications available.</summary>
    <published>2019-01-05T07:01:18+00:00</published>
  </entry>
</feed>
