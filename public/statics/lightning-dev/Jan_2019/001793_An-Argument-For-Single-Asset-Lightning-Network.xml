<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An Argument For Single-Asset Lightning Network</title>
  <updated>2023-06-02T16:11:31.604886+00:00</updated>
  <author>
    <name>Lloyd Fournier 2019-01-05 09:23:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An Argument For Single-Asset Lightning Network</title>
    <updated>2023-06-02T16:11:31.604886+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001793.html" rel="alternate"/>
    <summary>In a Lightning-dev thread, Lloyd Fournier and ZmnSCPxj discuss the implementation of options on the Lightning Network. Fournier suggests modifying the collateral-based construction he previously proposed to create a fair option, where asset C is paid on both branches of the HTLC, changing it from collateral to premium. They also discuss the scalability issue with this scheme in payment channels due to the lack of objective ordering of events in layer 2. David Harding proposes an alternative solution where the person making the exchange can cancel the payment if they think the exchange rate has changed unfavorably for them, by adding an extra hashlock to the HTLC that's controlled by the exchanger. Charlie, the exchanger, can decide whether to keep the option open by refusing to immediately claim the routing fees. If he delays a payment of 1.2 mBTC, he'd need to expect the exchange rate to change by an order of magnitude within a day to earn the same amount.</summary>
    <published>2019-01-05T09:23:51+00:00</published>
  </entry>
</feed>
