<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lite client considerations for Lightning Implementations</title>
  <updated>2023-06-02T16:59:46.949027+00:00</updated>
  <author>
    <name>Chris Stewart 2019-01-06 14:57:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lite client considerations for Lightning Implementations</title>
    <updated>2023-06-02T16:59:46.949027+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001796.html" rel="alternate"/>
    <summary>The author of the message is excited about Lightning in 2019 and has begun reviving a lite client project in bitcoin-s that can be used for L2 applications like lightning. The goal is to create a modern replacement for bitcoinj that supports multiple coins, hsms, etc. The current plan is to implement traditional SPV and then implement neutrino when development is picking back up on that in bitcoin core. If that takes too long, they will consider implementing neutrino against btcd. The author wants to know what the mailing list thinks should be considered from a usability perspective for lightning devs. One suggestion is to adhere to the bitcoin core api when possible so that bitcoin-s can be used as a drop-in lite client replacement for bitcoin core.</summary>
    <published>2019-01-06T14:57:32+00:00</published>
  </entry>
</feed>
