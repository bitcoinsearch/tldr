<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Quick analysis of channel_update data</title>
  <updated>2023-06-02T16:50:22.232219+00:00</updated>
  <author>
    <name>Christian Decker 2019-01-08 21:28:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Quick analysis of channel_update data</title>
    <updated>2023-06-02T16:50:22.232219+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001812.html" rel="alternate"/>
    <summary>In a discussion about the Lightning Network's gossip protocol, Fabrice Drouin raises concerns that not replacing updates could result in nodes not knowing when a channel has been re-enabled. Christian Decker responds suggesting that building in-network deduplications is unnecessary and that local policies at the senders of the update should be implemented to reduce flapping updates. The two suggest different approaches to the "eager-disable" and "lazy-enable" concept, with Decker believing that it depends on the network structure. He states that probing the network will give more insight into the best approach and hopes that over time, the network's redundancy will improve.</summary>
    <published>2019-01-08T21:28:43+00:00</published>
  </entry>
</feed>
