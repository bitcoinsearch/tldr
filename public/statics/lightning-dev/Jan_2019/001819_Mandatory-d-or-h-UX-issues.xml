<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Mandatory "d" or "h" UX issues</title>
  <updated>2023-05-23T01:52:41.415689+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2019-01-14 23:38:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Mandatory "d" or "h" UX issues</title>
    <updated>2023-05-23T01:52:41.415689+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001819.html" rel="alternate"/>
    <summary>Francis Pouliot, a developer working on the Lightning Network payout feature, is facing issues with ensuring recipients generate the right Bolt11 invoice for Bitcoin services performing payouts/withdrawals. He suggests that the design of Bolt11 may have been biased towards merchants since normally merchants decide what the invoice will be and the sender doesn't have a choice but to conform. However, for LN payouts, the sender is the service provider, which creates an added requirement for communication, lower payment success rates, and likely higher abandonment rate. Pouliot believes that making "d" and "h" fields mandatory creates a UX issue for Bitcoin services that are performing payouts/withdrawals in absence of a widely adopted payment protocol. Users will have to manually enter some fields in their wallet, and if the content doesn't match, there will be a payment failure. This creates a situation where the service provider depends on his user to create a correct invoice before sending him the funds. He questions the logic behind making "d" and "h" mandatory and suggests that business logic should be left to Bitcoin businesses. He proposes not making "d" or "h" mandatory without breaking anything. Pouliot is using c-lightning at present and would like to avoid switching. This issue can be fixed with a standardized payment protocol, but addressing this issue seems to be a lower hanging fruit. The issue has been raised at https://github.com/lightningnetwork/lightning-rfc/issues/541.</summary>
    <published>2019-01-14T23:38:05+00:00</published>
  </entry>
</feed>
