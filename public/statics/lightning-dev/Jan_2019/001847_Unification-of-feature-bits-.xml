<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Unification of feature bits?</title>
  <updated>2023-06-02T17:09:27.705892+00:00</updated>
  <author>
    <name>Rusty Russell 2019-01-26 23:11:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Unification of feature bits?</title>
    <updated>2023-06-02T17:09:27.705892+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001847.html" rel="alternate"/>
    <summary>Rusty Russell, a Bitcoin Lightning Network developer, has proposed to unify the feature bits by renaming 'local features' and 'global features' to 'peer features' and 'routing features', respectively. Both features will share a number space but will not overlap. They will be put in the "features" in node announcements, but never use even bits for peer features. By doing this, it will allow node_announcement to connect to a peer which supports feature X and ask if it can route through the node. Fabrice Drouin asks about the concept of `routing features` as opposed to `node features`. Rusty explains that the most obvious one is a change to scriptless scripts, but any other change from preimage to secret exchange would have the same properties. Similarly, any kind of mid-path splitting or combining feature. The rationale behind not allowing even bits in peer features is that you can put the even feature into peer_features on connect (as now), but you only put the odd feature into node_announce.</summary>
    <published>2019-01-26T23:11:17+00:00</published>
  </entry>
</feed>
