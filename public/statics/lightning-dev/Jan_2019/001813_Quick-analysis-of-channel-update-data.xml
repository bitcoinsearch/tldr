<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Quick analysis of channel_update data</title>
  <updated>2023-05-23T01:52:15.153793+00:00</updated>
  <author>
    <name>Matt Corallo 2019-01-08 22:07:02</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Quick analysis of channel_update data</title>
    <updated>2023-05-23T01:52:15.153793+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001813.html" rel="alternate"/>
    <summary>In a mailing list discussion, Christian Decker and Fabrice Drouin talk about the importance of routing data. Christian mentions that flapping is not just useless information to be discarded without consideration as it can provide a "good" subset of routing data to nodes like mobile clients that don't want all the bandwidth to stay fully in sync. Flapping is also an indicator of a useless channel which is probably not very reliable for routing. However, he is unconvinced that we should optimize for as little bandwidth use as possible. Fabrice gives an example where not replacing updates will result in nodes not knowing that a channel has been re-enabled. He asks how one would tell their peer that the channel has been enabled again if they discard the update and keep only the first one. Christian agrees with this point. Then they discuss the best way to optimize the network structure. They suggest heuristics that would help reduce gossip traffic and make efforts towards local policies at senders of the update to reduce the number of flapping updates. They also suggest "eager-disable" and "lazy-enable" or vice versa, depending on the network structure. They hope that the network's resiliency and redundancy will improve over time.</summary>
    <published>2019-01-08T22:07:02+00:00</published>
  </entry>
</feed>
