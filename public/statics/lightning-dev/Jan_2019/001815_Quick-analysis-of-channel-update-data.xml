<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Quick analysis of channel_update data</title>
  <updated>2023-06-02T16:52:32.958133+00:00</updated>
  <author>
    <name>Rusty Russell 2019-01-08 23:44:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Quick analysis of channel_update data</title>
    <updated>2023-06-02T16:52:32.958133+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001815.html" rel="alternate"/>
    <summary>In a discussion about the Lightning Network, Fabrice Drouin raises concern about a scenario where not replacing updates would result in nodes not knowing that a channel has been re-enabled. He gives an example of three updates U1, U2, and U3 for the same channel where U2 disables it, U3 enables it again, and is the same as U1. If U3 is discarded and only U1 is kept, how will peers with U2 be notified that the channel has been enabled again? This situation can only occur if there is a loss of connection before U3 is sent after U2. This penalizes flapping channels, but ratelimiting own enables to one per 120 seconds could solve the issue. However, there is a risk that nodes would discard channels as stale because they don't get new updates when they reconnect. To prevent this, accepting redundant updates after a week is suggested.</summary>
    <published>2019-01-08T23:44:06+00:00</published>
  </entry>
</feed>
