<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Network probes</title>
  <updated>2023-05-23T01:53:41.308679+00:00</updated>
  <author>
    <name>Matt Corallo 2019-01-21 23:15:59</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2019-01-18 21:06:51</name>
  </author>
  <link href="lightning-dev/Jan_2019/001837_Network-probes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001825_Network-probes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Network probes</title>
    <updated>2023-05-23T01:53:41.308679+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001837.html" rel="alternate"/>
    <summary>A proposal was made to use bloom filters, which can be set to a very low false positive rate, so that nodes can avoid most database lookups for incoming payment hashes. As an optimization, nodes may even maintain a series of hierarchical bloom filters. Another suggestion was to use the padding of the per_hop field of the onion in order to probe the network and check for the liveliness of a path before sending out a payment. By using a single bit of the padding, the final node can be notified that it is a probe rather than an actual payment. This saves the receiving node from doing a database lookup, but does not reveal anything to intermediate nodes. However, there are concerns about the privacy implications of allowing intermediate nodes to identify probe HTLCs.</summary>
    <published>2019-01-21T23:15:59+00:00</published>
  </entry>
</feed>
