<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Onion routing strawman proposal</title>
  <updated>2023-05-18T15:26:54.735129+00:00</updated>
  <author>
    <name>Anthony Towns 2015-10-03 16:38:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Onion routing strawman proposal</title>
    <updated>2023-05-18T15:26:54.735129+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-October/000248.html" rel="alternate"/>
    <summary>The Lightning Network project has implemented test onion routing code in a fixed 3840 bytes format. The idea is to switch that to non-fixed size using protobufs. The system generates random EC key pairs for each hop, known to the initiator. The public key for each hop is included in plaintext as hop.pubkey. ECDH is used to establish a shared secret with each hop. Symmetric AES &amp; HMAC keys are derived based on the secret. When a message is received, each hop structure is encrypted/decrypted in various stages. Lightning nodes are identified by the full 512 bit (or 257 bit?) public key used for routing unlike normal bitcoin pay2pubkey transactions. Different keys can still be used for routing and anchors/commitments so far.</summary>
    <published>2015-10-03T16:38:56+00:00</published>
  </entry>
</feed>
