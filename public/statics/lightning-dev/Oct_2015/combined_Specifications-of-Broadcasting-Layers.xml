<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Specifications of Broadcasting Layers</title>
  <updated>2023-05-23T21:04:13.190871+00:00</updated>
  <author>
    <name>Mats Jerratsch 2015-10-16 13:23:34</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-19 23:55:01</name>
  </author>
  <author>
    <name>Rusty Russell 2015-10-19 00:48:30</name>
  </author>
  <author>
    <name>Rusty Russell 2015-10-20 06:31:16</name>
  </author>
  <link href="lightning-dev/Oct_2015/000263_Specifications-of-Broadcasting-Layers.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000278_Specifications-of-Broadcasting-Layers.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000274_Specifications-of-Broadcasting-Layers.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000281_Specifications-of-Broadcasting-Layers.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Specifications of Broadcasting Layers</title>
    <updated>2023-05-23T21:04:13.190871+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-October/000263.html" rel="alternate"/>
    <summary>The Lightning Network is considering using an IRC protocol to broadcast messages, as it is easy to debug and trivial to implement. There are three different broadcast messages that are differently dynamic: Pubkey-Channel-Relationships are very static and relayed every 10 days; Node addresses/IP depends on the nodes, whether they have a dynamic or static IP, and would be sent approximately every 12 hours; Channel-Status is highly dependent on actual traffic and node usage, and would be sent once an hour. The estimates for the byte size of each message seem about the right ballpark. Combining (1) and (3) to save space is not worth an hourly broadcast. Mats Jerratsch suggests using a gossip protocol or a DHT approach, with Bram Cohen supporting the use of BitTorrent's DHT. Rusty Russell has been aiming for a design point of 1 million nodes, ideally on a cell phone. The network will need to design a way of retrieving the full dataset for fresh nodes in some load-distributed way; however, rusty usually starts even higher than the 100k nodes that currently make up the network.</summary>
    <published>2015-10-16T13:23:34+00:00</published>
  </entry>
</feed>
