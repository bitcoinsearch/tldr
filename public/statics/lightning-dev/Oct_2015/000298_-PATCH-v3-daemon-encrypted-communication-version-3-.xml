<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[PATCH v3] daemon: encrypted communication (version 3)</title>
  <updated>2023-05-23T21:16:28.623308+00:00</updated>
  <author>
    <name>Rusty Russell 2015-10-27 19:41:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[PATCH v3] daemon: encrypted communication (version 3)</title>
    <updated>2023-05-23T21:16:28.623308+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-October/000298.html" rel="alternate"/>
    <summary>In a conversation between Pierre and Rusty, Rusty explains how unknown protobuf fields are handled in the protocol. According to Rusty, odd numbered fields are optional and backwards compatible, while even numbered fields are required and cause an abort if received. This numbering system can be used to deliberately break backwards compatibility in the future after some transition. For example, if a "currency identifier" field was added to HTLC for non-bitcoin transactions, it would be an even numbered field since it is necessary to understand it. However, if an optional new field were added, it would be odd and existing implementations could ignore it. Rusty suggests documenting this information in Matsjj's lightning-core docs repository.</summary>
    <published>2015-10-27T19:41:20+00:00</published>
  </entry>
</feed>
