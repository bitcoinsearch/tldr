<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Onion routing strawman proposal</title>
  <updated>2023-05-18T20:19:14.292113+00:00</updated>
  <author>
    <name>Anthony Towns 2015-10-06 14:01:34</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-06 05:22:36</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-05 15:02:10</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-05 14:49:00</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-04 05:57:17</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-03 16:38:56</name>
  </author>
  <link href="lightning-dev/Oct_2015/000256_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000255_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000252_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000251_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000250_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000248_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Onion routing strawman proposal</title>
    <updated>2023-05-18T20:19:14.292113+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-October/000256.html" rel="alternate"/>
    <summary>The email conversation revolves around the changes made to test_onion and Makefile test with regards to onion routing implementation in Lightning Network using elliptic curve cryptography. The python version of the code is also discussed along with the use of flip_key() in onion_key.c, which was disabled and 02/03 prefix was made explicit. However, it remains unclear whether the saving of a bit/byte is worth it or not.Further discussion focuses on making changes to "Message for blah..." to serialize the pubkey before turning it into hex and tweaking onion_key to avoid the for loop and cut calls, as running decoding through python is slow and needs improvement.The participants also talk about documenting lightning protocol/technology decisions and consider reducing the message size of 128 bytes to 96 or 64 bytes. They highlight that adding and dropping hops to redirect an onion routed payment messes up constant-size packets.In addition to discussing the successful decoding/forwarding of the code using pyelliptic, they mention that the python version does creation too, but it is not known if the C version can decode it.Overall, the participants discuss generating random EC key pairs for each hop, establishing shared secrets with each hop using ECDH, and deriving symmetric AES and HMAC keys based on the secret. They note that lightning nodes are identified by the full 512-bit public key used for routing, unlike in normal bitcoin pay2pubkey transactions where knowing the HASH160 of the pubkey is enough.Finally, they add comments to an existing secp256k1 pull request to use only the x value when creating secrets, which would be friendlier to alternative implementations for ECDH.</summary>
    <published>2015-10-06T14:01:34+00:00</published>
  </entry>
</feed>
