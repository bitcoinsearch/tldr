<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning fees vs miner fees</title>
  <updated>2023-05-23T21:26:54.038054+00:00</updated>
  <author>
    <name>Benjamin 2015-10-27 10:05:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning fees vs miner fees</title>
    <updated>2023-05-23T21:26:54.038054+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-October/000293.html" rel="alternate"/>
    <summary>The key to scaling Bitcoin is to move low value transactions to a second layer, while leaving high value transactions for the most secure mechanism. If Bitcoin only processed transactions with a dollar nominal value of $100 and everything else was handled by a second layer, it could cut 95% of transaction volume and increase the total dollar volume capacity by a factor of 100, reaching $3600B with the same 1 MB blocksize. This would be similar to how banks make huge transaction volumes on closed systems. The financial system is organized based on the nominal value of transactions. To scale Bitcoin, it is necessary to figure out some way to make this split work based on the nominal value of the transaction. There is no sensible algorithm for determining prices of anything without using the input of people in the market. It is advantageous if fees are variable by transaction size. Bitcoin should handle large nominal volumes and low transaction volumes, and a possible second layer should handle low nominal values and high transaction volumes. It is good to consider BTC amount transferred per bytes. The higher that number, the better it is for Bitcoin's capacity.This approach to scaling Bitcoin was discussed among members of the Lightning-dev mailing list. They noted that Bitcoin and Lightning transactions are not completely independent due to anchor transactions. However, it was considered a valid assumption.</summary>
    <published>2015-10-27T10:05:09+00:00</published>
  </entry>
</feed>
