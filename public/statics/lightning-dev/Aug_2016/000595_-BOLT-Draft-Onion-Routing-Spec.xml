<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BOLT Draft] Onion Routing Spec</title>
  <updated>2023-05-23T23:57:20.707705+00:00</updated>
  <author>
    <name>Rusty Russell 2016-08-19 00:56:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BOLT Draft] Onion Routing Spec</title>
    <updated>2023-05-23T23:57:20.707705+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-August/000595.html" rel="alternate"/>
    <summary>Christian Decker and Rusty Russell discussed concerns regarding the ambiguity in transferring funds between different chains using the same identifiers. The scenario was explained with the route A -&gt; B =&gt; C, where two channels used the same identity for C, one in litecoin and the other in bitcoin. In such a case, the instruction to forward 0.01 units to C is ambiguous, as it could be denominated in either litecoin or bitcoin. While not dangerous, this confusion results in guesswork. If the recipient does not know the intended amount and accepts anything, fee-shaving becomes profitable. Therefore, even the terminal onion should include an amount.Rusty raised concerns about rhash re-use as people might be tempted to publish a bitcoin address in Lightning. Christian also expressed his concern about the reuse of onion. Rusty suggested implementing code to fail or steal such re-sends to prevent them from becoming a habit. Besides, he couldn't figure out why there was so much concern about onion reuse since a node retransmitting the same onion runs the same risk.</summary>
    <published>2016-08-19T00:56:31+00:00</published>
  </entry>
</feed>
