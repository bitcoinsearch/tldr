<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BOLT Draft] Onion Routing Spec</title>
  <updated>2023-05-18T16:53:57.425361+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-22 19:47:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BOLT Draft] Onion Routing Spec</title>
    <updated>2023-05-18T16:53:57.425361+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-August/000600.html" rel="alternate"/>
    <summary>In an email conversation between Rusty Russell and Laolu, a potential flaw in the onion routing protocol used by the Lightning Network was identified. It was suggested that if the second-to-last hop is malicious, they could create a new onion blob and potentially compromise the payment. In response to this concern, it was proposed that the sender and receiver could agree on a shared secret value, such as the hash of the contract, that would be included in the per-hop payload for the final hop. If the payload does not match this value, then the payment should be rejected as a prior node has unsuccessfully attempted to recreate the onion packet. This solution would add an extra layer of security to the payment negotiation process.</summary>
    <published>2016-08-22T19:47:56+00:00</published>
  </entry>
</feed>
