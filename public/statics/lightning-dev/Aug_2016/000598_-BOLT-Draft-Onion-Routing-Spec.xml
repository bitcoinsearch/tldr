<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BOLT Draft] Onion Routing Spec</title>
  <updated>2023-05-18T16:50:55.825244+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-20 20:32:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BOLT Draft] Onion Routing Spec</title>
    <updated>2023-05-18T16:50:55.825244+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-August/000598.html" rel="alternate"/>
    <summary>The discussion revolves around the onion-packet format used in the Lightning Network. The issue of payload distribution among all hops is addressed, and it is suggested that the sender and receiver should negotiate all details of payment beforehand to prevent fee-shaving. The concern of onion reuse and replay attacks is also discussed, with the suggestion that if nodes remember all r-preimages, then the first hop would immediately pull funds. It is noted that all hops receive a per-hop payload which includes details such as payment and time-lock value, making it difficult for the second-to-last hop to re-create a new onion blob. Ultimately, assuming the final receiver knows the expected value for each r-hash, the payment as a whole should not be affected.</summary>
    <published>2016-08-20T20:32:19+00:00</published>
  </entry>
</feed>
