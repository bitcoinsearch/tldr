<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blinded channel observation</title>
  <updated>2023-05-24T00:13:25.744976+00:00</updated>
  <author>
    <name>Tadge Dryja 2016-08-08 16:17:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blinded channel observation</title>
    <updated>2023-05-24T00:13:25.744976+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-August/000565.html" rel="alternate"/>
    <summary>The Lightning Network has a big risk of an attacker closing a channel at an old, invalidated state and the Bitcoin network accepting these transactions. One way to defend against this is by outsourcing vigilance to multiple parties, which can also increase privacy by anonymizing/blinding it. States with in-flight HTLCs are another issue, but minimizing data storage on the observer is difficult with the current way Bitcoin works. An elkrem tree can obscure the keys in each state without revealing the revocation pubkey until the hashes are revealed, allowing for efficient storage of recognizable states. The design of the observer is still in progress, but it will be scalable and able to recognize stored txids. The nice part about this method is that you can share the channel state data with people you don't know or trust.</summary>
    <published>2016-08-08T16:17:04+00:00</published>
  </entry>
</feed>
