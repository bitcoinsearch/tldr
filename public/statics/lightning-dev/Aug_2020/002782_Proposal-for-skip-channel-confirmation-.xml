<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for skip channel confirmation.</title>
  <updated>2023-06-03T01:56:52.866153+00:00</updated>
  <author>
    <name>Antoine Riard 2020-08-24 19:56:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for skip channel confirmation.</title>
    <updated>2023-06-03T01:56:52.866153+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-August/002782.html" rel="alternate"/>
    <summary>The email thread discusses the ability to skip a channel funding transaction confirmation, making the channel operational before its on-chain confirmation, known as a zero-conf channel. Different implementations support zero-conf channels in different ways, and these implementations have defined their own way of agreeing on a short_channel_id (fake one) before the transaction is confirmed. The proposed changes to the funding flow to support this include accepting a channel message in case the fundee wants to skip confirmation, sending funding_locked while the channel_id is derived using a convention agreed upon by both parties. One proposal for such convention is to take it from the temporary_channel_id provided in the previous open_channel message. A higher layer spec could gather specifications on other point-to-point Lightning programmable interfaces. With regards to unidirectional 0-conf, some wallets use a push_msat value payable once but it is a perfectly reasonable trust model.</summary>
    <published>2020-08-24T19:56:50+00:00</published>
  </entry>
</feed>
