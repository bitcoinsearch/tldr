<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for skip channel confirmation.</title>
  <updated>2023-06-03T01:58:43.859128+00:00</updated>
  <author>
    <name>Antoine Riard 2020-08-25 18:16:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for skip channel confirmation.</title>
    <updated>2023-06-03T01:58:43.859128+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-August/002787.html" rel="alternate"/>
    <summary>The conversation between Antoine and Zeeman revolves around a potential mechanism to lower trust in zero-conf channel opener. Antoine suggests that the local party can broadcast the funding transaction, ensuring it's well-propagated across network mempools and then start accepting incoming payment on the zero-conf channel. This would increase the level of protection against double-spending HTLCs. However, Zeeman points out that since RBF is opt-in for Bitcoin Core nodes, it is trivial to double-broadcast. A malicious opener could send a high-fee RBF-enabled channel funding transaction to the receiver and at the same time send a conflicting low-fee RBF-disabled transaction that pays the entire channel amount to themselves to all the miners they can find. This could be a security issue unless double-spending of zero-conf chans becomes a real problem. Mapping miners' mempools will be a cost in spying infrastructure and thus make the malicious routing node's job harder, providing a security improvement for zero-conf channels. Overall, this scheme is not worthy of working on unless double-spend of zero-conf chans become a real issue.</summary>
    <published>2020-08-25T18:16:56+00:00</published>
  </entry>
</feed>
