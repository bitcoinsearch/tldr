<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Payee pay fee</title>
  <updated>2023-06-02T17:25:10.440381+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-02-22 05:52:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Payee pay fee</title>
    <updated>2023-06-02T17:25:10.440381+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-February/001881.html" rel="alternate"/>
    <summary>In this communication between Rusty and ZmnSCPxj, they discuss the need for a web way of asking a client to send an invoice or offer over HTTPS. Rusty enquires whether this is a new URI scheme and how it would work. ZmnSCPxj suggests that offers would work over LN alone and explains the process through which it would work. The process involves the payee giving a BOLT12 offer to the payer and the payer generating a completely new random preimage and computing its hash. The payer then issues a payment along an LN route from payer to payee using its random hash. At the payee hop, the onion packet contains some identifying information from the BOLT12 offer. Payee generates a BOLT11 invoice and sends back an error packet that includes the BOLT11 invoice. Payer receives the error packet that includes the BOLT11 invoice and pays using the BOLT11 invoice. Intermediate nodes do not require upgrades and remain unaware of this new feature. A node issuing a BOLT12 offer would implicitly signal its support for this feature by being able to issue the BOLT12 offer.</summary>
    <published>2019-02-22T05:52:58+00:00</published>
  </entry>
</feed>
