<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
  <updated>2023-06-03T08:26:12.282592+00:00</updated>
  <author>
    <name>Matt Corallo 2022-05-27 05:12:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Gossip Propagation, Anti-spam, and Set Reconciliation</title>
    <updated>2023-06-03T08:26:12.282592+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-May/003593.html" rel="alternate"/>
    <summary>In this discussion, two individuals are proposing different methods for gossip sync in Bitcoin's Lightning Network. The first individual proposes a new protocol that would only work for taproot channels and requires a hard fork, while the second individual suggests a soft fork with a constricted ruleset that would limit gossip to predefined intervals. The first proposal implies keeping old-gossip for a long time, causing parallel systems to exist, and the possibility of network splitting if some nodes have different block heights. Additionally, it may add complexity to the protocol with unused code and may create edge cases prone to bugs. The second proposal includes a spam-proof for messages violating the set reconciliation rate limit and a rolling global sketch to send to all peers at once. However, it also has inflexibility towards future changes in relay policy and requires exact consensus on valid channel updates across nodes. Despite these concerns, both proposals aim to reduce overhead in adding additional gossip peers and maximizing the utility of sketches by adding the full gossip store if possible.</summary>
    <published>2022-05-27T05:12:43+00:00</published>
  </entry>
</feed>
