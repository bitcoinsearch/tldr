<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Escrow Over Lightning?</title>
  <updated>2023-06-02T18:50:27.690643+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-02-13 06:30:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Escrow Over Lightning?</title>
    <updated>2023-06-02T18:50:27.690643+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-February/002971.html" rel="alternate"/>
    <summary>The conversation between ZmnSCPxj and Nadav discusses the use of Boolean logic in Point-locked Timelocked Contracts (PTLCs) for complex use cases. They discuss the De Morgan Theorem transformation which can convert all Boolean logic to either sum-of-products or product-of-sums form. Escrow services are an example of a product-of-sums form. The use of reversal payments and "option not to release scalar" can implement the NOT gate needed for the transformation. ZmnSCPxj provides an example of a simple DLC binary oracle that can only reveal one scalar of two points based on the outcome of a coin flip. Either point can be used as part of any `!Oracle` or `Oracle` Boolean logic that is required. There is also a discussion about the atomic setup of multiple payments, which requires tr\*st between the buyer, seller, and escrow to resolve disputes. In some cases, a barrier escrow may be necessary to ensure atomicity of the setup. Overall, the conversation highlights the potential of using Boolean logic in PTLCs for complex use-cases.</summary>
    <published>2021-02-13T06:30:42+00:00</published>
  </entry>
</feed>
