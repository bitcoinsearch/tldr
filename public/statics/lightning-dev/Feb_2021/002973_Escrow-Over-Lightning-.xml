<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Escrow Over Lightning?</title>
  <updated>2023-06-02T18:50:44.678373+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-02-13 07:54:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Escrow Over Lightning?</title>
    <updated>2023-06-02T18:50:44.678373+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-February/002973.html" rel="alternate"/>
    <summary>The article discusses how Boolean logic can be converted into two standard forms, sum-of-products and product-of-sums. It highlights that any complicated Boolean logic can be converted to a product-of-sums form. The article also proposes that it might be possible to express any Boolean logic by the use of reversal payments and "option not to release scalar." The article then provides an example of creating a binary oracle that can provide two points, based on the outcome of a coin flip. A worked example is also provided that demonstrates how to set up a bet using two oracles, where the Bettor wins if either both coins are heads or both coins are tails. Finally, the article discusses how the proposed system handles a situation where one of the oracles disappears without publishing the result of the coin toss.</summary>
    <published>2021-02-13T07:54:30+00:00</published>
  </entry>
</feed>
