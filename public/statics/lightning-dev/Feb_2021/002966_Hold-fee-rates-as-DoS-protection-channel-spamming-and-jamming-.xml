<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hold fee rates as DoS protection (channel spamming and jamming)</title>
  <updated>2023-06-03T03:42:51.424135+00:00</updated>
  <author>
    <name>Joost Jager 2021-02-12 20:15:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hold fee rates as DoS protection (channel spamming and jamming)</title>
    <updated>2023-06-03T03:42:51.424135+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-February/002966.html" rel="alternate"/>
    <summary>The email conversation is about defining `hodl_fee_rate` as a base fee rate plus a component proportional to the amount. The routing nodes might still include the risk of hitting the chain in the computation of this fee, which can be factored into the base part. The hold fee rate would then be defined in the form (2 sat + 1%) per minute. Routing nodes advertise their `hold_grace_period`, and when accepting an htlc to forward, they're willing to pay hold fees for it only if they added a delay greater than `hold_grace_period` for relaying the payment and its response. Routing nodes should choose their peers carefully while not charging hodl fees for outgoing payments in case of offline nodes. The mailbox scenario implies that someone will pay for all those locked htlcs along the route. The proposed solution adds flexibility and simplifies the parameter set. In the short-term, a bidirectional upfront payment-style proposal can be deployed, considering a better solution when technically mature. There are already nodes on the network that benefit from short interruptions of large channel sets between bigger nodes.</summary>
    <published>2021-02-12T20:15:50+00:00</published>
  </entry>
</feed>
