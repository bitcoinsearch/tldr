<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covert channel recovery with Oblivious Signatures</title>
  <updated>2023-06-03T03:24:57.652210+00:00</updated>
  <author>
    <name>David A. Harding 2020-12-13 17:41:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covert channel recovery with Oblivious Signatures</title>
    <updated>2023-06-03T03:24:57.652210+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-December/002913.html" rel="alternate"/>
    <summary>The email excerpt is a discussion regarding the use of commitment transactions and signatures in the Lightning Network. The sender suggests that if c=1, the node will send back the blinding factor to prove it does not have the signature, and if verification fails, it fails the channel. However, the recipient questions the necessity of this process, suggesting that sending the data upfront in plain text achieves the same goal. Two proposed protocols are provided with the main difference being whether or not the commitment transaction is sent with all signatures in plain text or just the unsigned commitment transaction is sent. The challenge with either protocol is deciding which peer goes first, as whoever sends the commitment transaction reveals what they think the current state is. A non-text attachment was included, but no information was given about its content.</summary>
    <published>2020-12-13T17:41:57+00:00</published>
  </entry>
</feed>
