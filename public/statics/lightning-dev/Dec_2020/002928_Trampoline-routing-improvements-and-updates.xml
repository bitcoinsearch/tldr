<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Trampoline routing improvements and updates</title>
  <updated>2023-06-01T18:37:21.189932+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2020-12-28 16:16:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Trampoline routing improvements and updates</title>
    <updated>2023-06-01T18:37:21.189932+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-December/002928.html" rel="alternate"/>
    <summary>Acinq, a company running a trampoline node for Phoenix users, has created a new trampoline routing spec that is simpler and more flexible than the previous proposal. The new spec makes MPP more cost-efficient and reliable, works well with rendezvous or route blinding, and is as private as normal payments if used properly. Acinq needs more reviews for the spec to converge before it can be broadly deployed without fear of moving parts or breaking changes. An independent implementation has been completed by the Electrum team and has been recently tested E2E on mainnet. Having a spec agreement on feature bits, invoice hints format, and onion error codes would allow their wallet to fully interoperate with Phoenix and future trampoline wallets, as well as unblock development of even more improvements. The code changes are reasonable as they re-use components that are already part of every lightning implementation and don't introduce new assumptions.</summary>
    <published>2020-12-28T16:16:43+00:00</published>
  </entry>
</feed>
