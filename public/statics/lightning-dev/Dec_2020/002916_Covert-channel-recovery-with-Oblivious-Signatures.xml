<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covert channel recovery with Oblivious Signatures</title>
  <updated>2023-06-03T03:22:08.796127+00:00</updated>
  <author>
    <name>David A. Harding 2020-12-14 13:12:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covert channel recovery with Oblivious Signatures</title>
    <updated>2023-06-03T03:22:08.796127+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-December/002916.html" rel="alternate"/>
    <summary>The email thread discusses various aspects of Lightning Network protocol. The first part clarifies the goal of offering a cooperative settlement transaction upfront to the recovering party, rather than a commitment transaction. The second part talks about the consequences of using revocable signature-based channels, where if a node posts a revoked commitment tx, it loses its static secret key and all funds from all its channels with all its peers. The third part corrects a mistake regarding LND's "static channel backups" (option_data_loss_protect). The fourth part discusses the issue of data loss during network connectivity, where Ariel Lorenzo-Luaces suggests that any party refusing to go first cannot be assumed to have lost data. The fifth part counters this point, saying that there is plausible deniability because knowingly not answering a request can't be distinguished from just having connection issues or distinguished from a machine that is just turned off. It goes on to explain how dishonest counterparties can gather evidence about a recently reconnected node to evaluate the probability of data loss. The sixth part explores the idea of data loss honeypots but highlights some limitations to their implementation. Finally, the author concludes by expressing hope that most nodes are honest and that high-value channels are being handled with live replication, so there have been no issues so far.</summary>
    <published>2020-12-14T13:12:48+00:00</published>
  </entry>
</feed>
