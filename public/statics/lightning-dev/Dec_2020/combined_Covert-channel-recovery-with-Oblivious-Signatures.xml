<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Covert channel recovery with Oblivious Signatures</title>
  <updated>2023-06-04T01:06:52.431010+00:00</updated>
  <author>
    <name>Ariel Lorenzo-Luaces 2020-12-14 08:08:27</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-15 03:43:46</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-12-22 02:09:37</name>
  </author>
  <author>
    <name>David A. Harding 2020-12-14 13:12:48</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-15 06:07:04</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-12-15 10:21:09</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-16 04:51:01</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-11 02:02:04</name>
  </author>
  <author>
    <name>David A. Harding 2020-12-13 17:41:57</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-14 05:31:23</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-12-16 14:56:30</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-18 00:24:31</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-18 00:43:08</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-12-19 07:48:21</name>
  </author>
  <author>
    <name>Lloyd Fournier 2020-12-20 04:53:41</name>
  </author>
  <link href="lightning-dev/Dec_2020/002915_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002917_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002927_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002916_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002918_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002919_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002920_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002912_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002913_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002914_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002922_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002923_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002924_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002925_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2020/002926_Covert-channel-recovery-with-Oblivious-Signatures.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Covert channel recovery with Oblivious Signatures</title>
    <updated>2023-06-04T01:06:52.432008+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-December/002915.html" rel="alternate"/>
    <summary>The email thread begins with a discussion on two protocols proposed for sending and verifying commitment transactions in the Lightning Network. The challenge with both protocols is deciding which peer goes first since whoever sends the commitment transaction reveals what they think the current state is. The conversation then moves on to various methods of recovering funds in a channel, including YOLO commitment transactions and oblivious settlements. The author notes that recommending YOLO commitments becoming the standard way to recover funds is difficult as it may not be preferable to the current system.The discussion also covers revocable signature-based channels, the security of the protocol for buying an opening of a Pedersen commitment with Bitcoin, and the possible options when a channel state has HTLCs in flight. The email thread provides an in-depth discussion on various aspects of the Lightning Network protocol, highlighting the advantages and disadvantages of different approaches and offering insights into potential security concerns.Another discussion between mnSCPxj and LL covers a range of topics related to the Lightning Network, including channel state with HTLCs in flight, recovery systems, redundant data storage, and commitment transactions and signatures. The use of Oblivious Transfer (OT) and oblivious signatures is also discussed as a potential solution for lightning node data loss. The article emphasizes the importance of detecting hardware failure early on to avoid detectable failure of hardware when using HTLCs. Static-key channels are suggested as a way to recover forgotten outgoing channels, but this method may not work with PTLCs due to the loss of the adaptor signature. Peer selling private information in unpublished channels is examined, and a mitigation strategy is suggested. Finally, the discussion touches on proof-of-discrete-log equivalency and its security, with ZKCP suggested as a possible solution. However, the effectiveness of this approach depends on the proof in question.During one of the discussions between mnSCPxj and LL, the possibility of using Zero-Knowledge Contingent Payments (ZKCP) to prove the discrete log equivalence in a payment scheme was discussed. ZmnSCPxj suggested that utilizing a ZKCP on the payment point and scalar could be used to gate part of the proof without disclosing the scalar 'z'. However, LL argued that if a secure conditional payment for the proof can be created, it would always prove the existence of the proof, regardless of whether or not payment is made.The example provided by ZmnSCPxj showed that a mere ZKCP may not always be sufficient to prove what is required. LL initially disagreed but later conceded that ZmnSCPxj's argument was correct. The discussion serves as a reminder of the ongoing need for innovation and improvement in the realm of digital payments and encryption.</summary>
    <published>2020-12-14T08:08:27+00:00</published>
  </entry>
</feed>
