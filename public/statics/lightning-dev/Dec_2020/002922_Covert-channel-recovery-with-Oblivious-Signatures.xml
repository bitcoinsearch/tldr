<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covert channel recovery with Oblivious Signatures</title>
  <updated>2023-06-03T03:25:29.185334+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-12-16 14:56:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covert channel recovery with Oblivious Signatures</title>
    <updated>2023-06-03T03:25:29.185334+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-December/002922.html" rel="alternate"/>
    <summary>The conversation discusses the issue of hardware failure and its detection while using Lightning Network (LN), especially when used by casual users. The failure may result in detectable failure of the hardware, which was already failing before, just not noticed by the user. Using static-key channels (i.e. channel keys are our node keys) allows us to recover even the outgoing channel with outgoing HTLC that has been forgotten by the outgoing peer. However, loss of the adaptor signature means we cannot recover in case of PTLCs. Using static-key channels does have slightly weaker privacy. Peer selling private information is always going to be an issue with unpublished channels, and this seems to be an inherent issue with that model. If forwarding nodes are expected to have storage redundancy, deletion of data could be difficult as well. "Honestly delete" seems like a best-effort to me.</summary>
    <published>2020-12-16T14:56:30+00:00</published>
  </entry>
</feed>
