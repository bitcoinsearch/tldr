<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [PATCH] Add spellcheck tool (requires `aspell`), also spellcheck.</title>
  <updated>2023-05-24T01:28:15.017532+00:00</updated>
  <author>
    <name>Rusty Russell 2017-05-03 03:39:26</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-04-29 03:19:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-04 14:26:07</name>
  </author>
  <link href="lightning-dev/May_2017/000693_-PATCH-Add-spellcheck-tool-requires-aspell-also-spellcheck-.xml" rel="alternate"/>
  <link href="lightning-dev/April_2017/000684_-PATCH-Add-spellcheck-tool-requires-aspell-also-spellcheck-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000697_-PATCH-Add-spellcheck-tool-requires-aspell-also-spellcheck-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [PATCH] Add spellcheck tool (requires `aspell`), also spellcheck.</title>
    <updated>2023-05-24T01:28:15.017532+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000693.html" rel="alternate"/>
    <summary>The Lightning Network is a protocol for off-chain bitcoin transactions, and this context covers various aspects of generating and processing packets in the network. One of the patches submitted by ZmnSCPxj had errors, but Rusty fixed them and added a check to prevent new errors from being introduced. The Lightning Network Specification requires that messages between nodes use printable ASCII characters, and commitment transactions use unique keys. The packet structure includes an onion routing layer, Sphinx header, encrypted payload, and HMAC for packet integrity verification.The `cltv-expiry-delta` value plays a crucial role in determining if an HTLC can be forwarded or not. The context also explains the different error packets used in the network. The Noise Protocol Framework is used in the Lightning Protocol, and `ChaChaPoly-1305` is the AEAD construction. ECDH and SHA-256 are also used in the protocol, and the responder's public key is mixed into the handshake state.The three ways a channel can end are discussed, and each output has its own action required for resolution. Handling on-chain HTLC outputs involves using the payment preimage to prove payment, and either party can use it depending on whose commitment transaction is being spent. During packet generation, a 32-byte EC private key serves as the session key, and the node's public key blinded with previous blinding factors acts as the public key. In the processing phase, the node's private key is used as the secret, and the ephemeral public key from the packet is incrementally blinded by predecessors.Nonidealities such as spelling errors in test vectors and pluralizations for HTLC are mentioned. To avoid storing every commitment transaction, per-commitment-secret values and revocation-basepoint and delayed-payment-basepoint can be used to regenerate required scripts for penalty transactions. A spellcheck script was added to the tools directory of the repository, and a Travis check was introduced to prevent the introduction of new spelling errors in the RFC.</summary>
    <published>2017-05-03T03:39:26+00:00</published>
  </entry>
</feed>
