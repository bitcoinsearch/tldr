<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] Lightning payment format</title>
  <updated>2023-05-24T01:12:27.393520+00:00</updated>
  <author>
    <name>Fabrice Drouin 2017-05-03 15:37:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] Lightning payment format</title>
    <updated>2023-05-24T01:12:27.393520+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000691.html" rel="alternate"/>
    <summary>In an email exchange between Rusty Russell and Pierre on May 2, 2017, they discussed the use of signatures in payment requests. One concern raised was that users cannot verify the validity of the signature without a (direction || chanID) -&gt; pubKey mapping. However, Rusty pointed out that key recovery from the signature can be used to obtain the necessary information. Additionally, they debated the use of the short chanID in the onion as it assumes that the network is well-known and does not take into account the time it takes for announcements to propagate. They also questioned if optimizing the size of payment requests was important since they are sent out-of-band. Later in the conversation, Rusty and Olaoluwa Osuntokun discussed the use of tags in payment requests, which offers flexibility for application developers. However, assigning onion bytes as tags could be a limited resource. They also discussed the use of bech32, but agreed that its character optimization for manual-entry may not be significant since payment requests are too long to be entered by hand. Finally, Fabrice suggested that payment requests should include a timestamp and an expiry date, which could be mandatory items rather than optional tagged ones.</summary>
    <published>2017-05-03T15:37:14+00:00</published>
  </entry>
</feed>
