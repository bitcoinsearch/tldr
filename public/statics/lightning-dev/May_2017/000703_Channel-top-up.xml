<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Channel top-up</title>
  <updated>2023-05-24T01:37:03.368048+00:00</updated>
  <author>
    <name>ZmnSCPxj 2017-05-05 04:58:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Channel top-up</title>
    <updated>2023-05-24T01:37:03.368048+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000703.html" rel="alternate"/>
    <summary>A proposal to add a new operation to the Lightning Network protocol called re-anchoring has been discussed on the Lightning-dev forum. This method can be used for adding or removing funds from the channel by mutual cooperation and allows forgetting revocation information for any older commitment transactions once deeply confirmed. The proposal was omitted from the 1.0 specification, but it has been suggested that it remains a viable option for modifying onion-route payments.According to ZmnSCPxj, an onion-route payment could be started on-chain with normal onion-route messages (update_fulfill_htlc etc) used thereafter. The proposal suggests that a new message is needed to allow onion route to be initiated on-chain/off-LN, but the rest of the onion-route uses the same, already-tested code. Initially, ZmnSCPxj had considered a splice-in/splice-out/reanchoring scheme; however, it would have been more complex to add new message types to consider reanchoring.In response to the proposal, it was agreed that if the funding tx will only output, then it's okay. But if the funding tx will input, then a pre-splice-in transaction needs to be confirmed before the re-anchoring tx can be made safely "floating". Finally, it was observed that Christian Decker was the one who pointed out how elegant this proposal is.</summary>
    <published>2017-05-05T04:58:11+00:00</published>
  </entry>
</feed>
