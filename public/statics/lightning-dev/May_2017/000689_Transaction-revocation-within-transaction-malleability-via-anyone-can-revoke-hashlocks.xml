<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Transaction revocation within transaction	malleability via anyone-can-revoke hashlocks</title>
  <updated>2023-05-24T01:05:44.521037+00:00</updated>
  <author>
    <name>ZmnSCPxj 2017-05-02 14:25:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Transaction revocation within transaction	malleability via anyone-can-revoke hashlocks</title>
    <updated>2023-05-24T01:05:44.521037+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000689.html" rel="alternate"/>
    <summary>The issue of transaction revocation, even with transaction malleability, appears to have been solved in the Lightning Network. A user named ZmnSCPxj asks if his idea, which supports selfish untrustworthy watchers, is better than what Lightning currently has, or if it has different tradeoffs. He suggests publishing the revocation key and having a condition that allows anyone to enforce and get free money, even with malleability. Rusty agrees that this is a good idea and mentions that trusted watchers can know the revocation keys, as they have a compact form. The discussion then shifts to clarifying the understanding of revocation keys and whether to give them to another trusted person.</summary>
    <published>2017-05-02T14:25:41+00:00</published>
  </entry>
</feed>
