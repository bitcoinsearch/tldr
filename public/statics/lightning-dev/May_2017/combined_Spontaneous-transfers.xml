<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Spontaneous transfers</title>
  <updated>2023-05-24T01:52:50.055748+00:00</updated>
  <author>
    <name>Christian Decker 2017-05-09 10:19:24</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-09 01:22:42</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-09 09:01:02</name>
  </author>
  <author>
    <name>Christian Decker 2017-05-08 11:47:24</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-10 03:57:41</name>
  </author>
  <link href="lightning-dev/May_2017/000718_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000713_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000715_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000711_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000720_Spontaneous-transfers.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Spontaneous transfers</title>
    <updated>2023-05-24T01:52:50.055748+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000718.html" rel="alternate"/>
    <summary>The Lightning Network developers are discussing invoice-based transfers, and the article discusses different use cases of these transfers. Two recurring requirements for these transfers are that the recipient gets the payment preimage so that she can trigger the clearing of the HTLC and that there is a mechanism that signals to the recipient who the sender is without out-of-band communication.Christian Decker suggests two possible solutions to this problem. The first option is stuffing the information into the routing info, while the second one is creating a circular route from the sender to the recipient.Rusty Russell suggests using 16 bytes in the onion to communicate a 128-bit R value for anti-probing. If larger amounts are desired, a new onion version would be needed. He thinks that we could use the 16 bytes for a prefix lookup in our routing table and then derive the payment preimage from that. Russell also talks about implementing a LightningDice service where a full payment hash is packed into a pair of per_hop, so the LightningDice(TM) service can run a pair of neighboring nodes.Lastly, the author suggests using XOR rules for probabilistic payments via an LD server. The LD server takes the funds if it wins, and the rest of the onion commits to the new rhash and amount. If it loses, LD launches a new HTLC using the rest of the onion.</summary>
    <published>2017-05-09T10:19:24+00:00</published>
  </entry>
</feed>
