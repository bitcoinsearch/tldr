<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[RFC] Lightning payment format</title>
  <updated>2023-05-19T15:59:26.381461+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2017-05-28 18:42:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[RFC] Lightning payment format</title>
    <updated>2023-05-19T15:59:26.381461+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000730.html" rel="alternate"/>
    <summary>The potential re-introduction of the end-to-end (e2e) payload for Sphinx derived onion format is being discussed. The initial version had included the e2e payload but it was removed due to its large size and lack of clear use case for it. The suggestion is to bring it back so that there can be a strict separation of layers with h2h payload reserved for forwarding critical information and e2e payload for applications to place relevant data which is also onion encrypted and authenticated. The proposed size for the e2e payload is around 200 bytes. Payment requests could include a timestamp and an expiry date as mandatory tagged items. This would be useful in cases where users only have a limited time window to make a payment and would save them from extending an HTLC altogether. In pre-paying for HTLC's, it will be necessary to extend an HTLC only if there is a high degree of certainty that it will be claimed, otherwise precious mSAT will be wasted.There is a discussion about using BTC with m (milli), u (micro), n (nano) and p (pico) instead of decimals. However, while this is more concise, it is not ideal for coding purposes. BOLT 11 is suggested as the shared payment request format, which would be useful for cross-implementation interoperability tests.Rusty Russell suggests moving forward with turning the changes into BOLT 11 if everyone likes them.</summary>
    <published>2017-05-28T18:42:32+00:00</published>
  </entry>
</feed>
