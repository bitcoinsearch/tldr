<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A new Bitcoin implementation integrated with Core Lightning</title>
  <updated>2023-06-04T04:37:00.745008+00:00</updated>
  <author>
    <name>Michael Folkson 2023-01-14 20:26:07</name>
  </author>
  <author>
    <name>Michael Folkson 2023-04-18 17:06:14</name>
  </author>
  <author>
    <name>Kostas Karasavvas 2023-04-19 09:05:10</name>
  </author>
  <author>
    <name>Michael Folkson 2023-04-19 10:54:10</name>
  </author>
  <author>
    <name>Jorge Tim√≥n 2023-05-02 13:34:58</name>
  </author>
  <author>
    <name>Matt Corallo 2023-05-06 05:58:55</name>
  </author>
  <author>
    <name>Fabian 2023-01-14 20:34:38</name>
  </author>
  <author>
    <name>niftynei 2023-04-24 16:06:59</name>
  </author>
  <author>
    <name>Vincenzo Palazzo 2023-04-30 15:22:01</name>
  </author>
  <author>
    <name>Michael Folkson 2023-01-14 20:45:38</name>
  </author>
  <link href="lightning-dev/Jan_2023/003824_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003909_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003911_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003912_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003924_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003929_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2023/003825_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003914_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003921_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2023/003826_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A new Bitcoin implementation integrated with Core Lightning</title>
    <updated>2023-06-04T04:37:00.745008+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003824.html" rel="alternate"/>
    <summary>Michael Folkson, a developer, is interested in creating a Knots-style fork of Bitcoin Core in C++ that is integrated with Core Lightning in C. He believes this would be the better option for serious production use cases as it avoids reimplementing consensus code in a different language. However, he raises questions about mixing C and C++ code and how much cruft can be removed while maintaining a less crufty fork of Bitcoin Core. In addition, Michael mentioned the dysfunction on the Bitcoin Core project recently where decisions seem to be increasingly made behind closed doors or in private IRC channels. He suggests that consensus-compatible forks of Core, such as Bitcoin Knots, may be the future and that the Bitcoin Core codebase has collected a lot of cruft over time. He floated the idea to hear from people who are more familiar with both codebases.Fabian suggested Mako as a good starting point for what Michael wants to achieve. Vincent also discussed his work on a plugin that allows experimentation with different types of Bitcoin Core node alternatives and supports BIP 157 with Nakamoto. He suggests breaking out the peering functions of Bitcoin-core into a more composable/reusable piece may be a good first step towards "comingle" the peering of LN gossip and block data networks. The email exchange between Michael and Kostas Karasavvas also discusses the proposed default policy changes for Lightning and the potential benefits of tighter coupling between the full node and Lightning node. Other topics in the context include differences between libbitcoinkernel and libconsensus, separation of concerns in CLN, and policies related to RBF or the default of the time. Lastly, Vincent mentions a missing piece, i.e., a unified approach to fee calculation, which is critical for Lightning nodes.</summary>
    <published>2023-01-14T20:26:07+00:00</published>
  </entry>
</feed>
