<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Async payments proof-of-payment: a wishlist for researchers</title>
  <updated>2023-06-03T11:30:31.578890+00:00</updated>
  <author>
    <name>vwallace 2023-01-25 23:50:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Async payments proof-of-payment: a wishlist for researchers</title>
    <updated>2023-06-03T11:30:31.578890+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003830.html" rel="alternate"/>
    <summary>The email discusses an open research question regarding how a sender can get an invoice from an offline receiver when supporting "async payments" in the lightning network. The solution presented is PTLCs, however, it turns out that the current PTLCs design wouldn't solve this problem as the LSP would be able to steal funds same as before. The suggested direction is to stick with keysend but have the sender encode a nonce and time they sent the payment as a tweak to the keysend PTLC point, which may force the receiver to commit to the sender-encoded data. This solution isn't ideal as it doesn't exactly provide proof-of-payment, but it allows the sender to prove "I sent X amount at Y time." Another solution could be for the receiver's LSP to provide a reusable keysend invoice to senders, but this loses the proof-of-payment property.</summary>
    <published>2023-01-25T23:50:52+00:00</published>
  </entry>
</feed>
