<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Swap-in-Potentiam: Moving Onchain Funds "Instantly" To Lightning</title>
  <updated>2023-06-03T11:22:51.744594+00:00</updated>
  <author>
    <name>Jesse Posner 2023-01-04 01:24:09</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Swap-in-Potentiam: Moving Onchain Funds "Instantly" To Lightning</title>
    <updated>2023-06-03T11:22:51.744594+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003812.html" rel="alternate"/>
    <summary>The email thread discusses a scenario where a mobile wallet app can't perform a splice-in until it is opened, which could cause inconvenience for users who want to make an LN payment but don't have sufficient outbound liquidity in the channel. To solve this problem, users can receive on-chain funds with a swap-in-potentiam address, which allows the app to draw upon the liquidity when the LN payment needs to be made without having to wait for an on-chain transaction. This process can also work in reverse, such that users can increase their inbound liquidity in the channel, and pay for it, on-demand when the liquidity is needed and not before. The email also discusses a proposal's benefits and costs, where at some point x blocks before Alice expects she might want to spend her funds on LN, she enters into a contract protocol with Bob. At any time, with Bob's cooperation, she can send an onchain transaction or fund a fully initialized LN channel from which she can immediately send LN payments. The proposal's advantages include allowing Alice's LN wallet to remain offline indefinitely and being easier to implement than splice-outs, but it only provides the benefits of sending on-chain payments before the first LN transaction is made. Actual splice-out can be used any time in a channel's lifetime to immediately send on-chain payments.</summary>
    <published>2023-01-04T01:24:09+00:00</published>
  </entry>
</feed>
