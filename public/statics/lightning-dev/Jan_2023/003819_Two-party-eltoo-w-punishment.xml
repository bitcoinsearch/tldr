<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Two-party eltoo w/ punishment</title>
  <updated>2023-06-03T11:01:10.452834+00:00</updated>
  <author>
    <name>Anthony Towns 2023-01-06 04:19:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Two-party eltoo w/ punishment</title>
    <updated>2023-06-03T11:01:10.452834+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003819.html" rel="alternate"/>
    <summary>In a recent email exchange, Bitcoin developer Antoine Riard discussed the Lightning Network's eltoo implementation and its potential vulnerabilities. The conversation focused on the need to break symmetry in order to distinguish between unilateral closures by one party versus attempts at cheating. Another point of discussion was the delay in the UA.n/CB.n case when redeeming an HTLC that times out in the future. The CLTV used for eltoo state ratcheting was also mentioned, along with the difference between CA.n and UB.n/WA.n and the role of watchtowers in preventing dishonest behavior. A scenario was presented where Alice could steal funds by posting an old RB.y transaction and UA.x, provided her balance then is sufficiently less than her balance now. Finally, the risks of delegating punishment to untrusted watchtowers were discussed, and an alternative setup was suggested.</summary>
    <published>2023-01-06T04:19:53+00:00</published>
  </entry>
</feed>
