<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - rfc using payment_hash fields txn vs the others</title>
  <updated>2023-05-24T18:17:18.632490+00:00</updated>
  <author>
    <name>dreamwvr 2018-01-05 09:55:41</name>
  </author>
  <author>
    <name>dreamwvr 2018-01-06 09:10:36</name>
  </author>
  <link href="lightning-dev/Jan_2018/000913_rfc-using-payment-hash-fields-txn-vs-the-others.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000920_rfc-using-payment-hash-fields-txn-vs-the-others.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - rfc using payment_hash fields txn vs the others</title>
    <updated>2023-05-24T18:17:18.632490+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000913.html" rel="alternate"/>
    <summary>The conversation is about the payment_hash txn field layout in the context of a donation example in the Lightning Network. The second line stanza differs from the others by going directly to the bes32 static int instead of using a 0x20 to indicate not a bc value or a reserved value to indicate no bc value in txn. The writer questions why this is so and suggests that it could simplify optimizing for any sort of deep inspection. The other lines use "bcvalue" to indicate a bitcoin value, but the second line, which is the donation example, uses a different format. The writer proposes a simplified format of "none_bc_value". The discussion is part of the rfc for using payment_hash fields in Lightning Network transactions.</summary>
    <published>2018-01-05T09:55:41+00:00</published>
  </entry>
</feed>
