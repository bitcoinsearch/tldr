<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>lightning operation during / following a chain fork (e.g. BIP 50)</title>
  <updated>2023-05-24T18:44:23.985948+00:00</updated>
  <author>
    <name>Benjamin Mord 2018-01-30 17:23:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>lightning operation during / following a chain fork (e.g. BIP 50)</title>
    <updated>2023-05-24T18:44:23.985948+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000973.html" rel="alternate"/>
    <summary>The Lightning protocol is designed to be robust against nodes failing to broadcast expected blockchain transactions, which provides fork protection as a byproduct. The only caveat is that excessive penalties against nodes who fail to broadcast blockchain transactions must be avoided, as those penalties could turn needless forking into a profit opportunity at the expense of sincere nodes. Incentives strongly motivate maintenance of consensus, which automatically covers adversarial forks that rip out segwit or maliciously do not change their signature algorithm. The Lightning developers have not yet analyzed and designed scenarios for how existing channels handle intentional and unintentional forks that arise after funding of a payment channel. However, greater support for altcoins can be done later, as the priority is to get implementations to a state where they can safely deploy on Bitcoin Mainnet. For forked altcoins, short channel IDs contain the block height at which the funding transaction confirmed, which might be used to judge if a channel contains forked coins or not.</summary>
    <published>2018-01-30T17:23:11+00:00</published>
  </entry>
</feed>
