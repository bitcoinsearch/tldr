<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - How to use LN</title>
  <updated>2023-05-24T18:42:06.445345+00:00</updated>
  <author>
    <name>Christian Decker 2018-01-20 13:41:53</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-25 21:16:50</name>
  </author>
  <author>
    <name>Christian Decker 2018-01-19 11:31:49</name>
  </author>
  <author>
    <name>v e 2018-01-19 17:21:27</name>
  </author>
  <author>
    <name>v e 2018-01-18 21:27:24</name>
  </author>
  <author>
    <name>v e 2018-01-25 20:48:12</name>
  </author>
  <link href="lightning-dev/Jan_2018/000955_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000960_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000952_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000953_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000951_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000959_How-to-use-LN.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - How to use LN</title>
    <updated>2023-05-24T18:42:06.445345+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000955.html" rel="alternate"/>
    <summary>A developer is seeking guidance on building a merchant app and consumer wallet app using the bitcoinj API for wallet creation. They are interested in using Lightning Charge and have questions about running a bitcoin core node, generating invoices, and sending coins to those invoices. Christian Decker responds that they will need a full bitcoind node sync'd with the network, a c-lightning node, and npm + lightning-charge running to gain access to the REST API. The invoices are tracked by c-lightning and can be stored with a reference to them in a store using the payment_hash, but customers will need their own Lightning client and open channels to the network in order to make payments. In response to the developer's question about hosting multiple merchants who can accept payments from end customers, Decker explains that neither c-lightning nor Lightning Charge is multi-tenant, and any user with access to the RPC has full control over all channels and funds in the daemon. Instead, he suggests building a layer in between to differentiate tenants and control access to individual resources. Decker also notes that users should run their own nodes rather than relying on large managed infrastructure. Finally, the developer asks how the merchant wallet is tied to the invoice and how a consumer wallet can send satoshi to the invoice ID. Decker suggests storing a reference to the invoice with payment_hash in the store and having customers use their own Lightning client to make payments.</summary>
    <published>2018-01-20T13:41:53+00:00</published>
  </entry>
</feed>
