<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[1.1] Proposed `funding_cancelled` message</title>
  <updated>2023-05-24T18:20:53.043171+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-01-15 02:14:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[1.1] Proposed `funding_cancelled` message</title>
    <updated>2023-05-24T18:20:53.043171+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000931.html" rel="alternate"/>
    <summary>In an email conversation between two members of the Lightning Development mailing list, the issue of channels timing out was discussed. The lack of a protocol-required minimum timeout was identified as the problem, and one member suggested that it would be useful to have something like "a receiving node MUST keep a channel ready to be used for at least a week prior to funding transaction confirmation." Additionally, a potential problem could arise from a malicious node continuously sending `open_channel` -&gt; `funding_created` with random numbers for transaction ID, which could make the cost of tracking an unopened channel arbitrarily high. To avoid this issue, a node implementation could limit the number of pending channel opens for each peer. The proposed `funding_cancelled` message would allow an honest party to free up the limited resource "number of pending channel opens" without having to wait for the timeout.</summary>
    <published>2018-01-15T02:14:57+00:00</published>
  </entry>
</feed>
