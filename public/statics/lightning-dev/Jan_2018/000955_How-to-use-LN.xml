<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>How to use LN</title>
  <updated>2023-05-24T18:39:35.652487+00:00</updated>
  <author>
    <name>Christian Decker 2018-01-20 13:41:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>How to use LN</title>
    <updated>2023-05-24T18:39:35.652487+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000955.html" rel="alternate"/>
    <summary>In a conversation between two individuals, the topic of Lightning protocol and its use by clients was discussed. The first person asked whether 'customers' referred to end clients who buy goods and services. The second person confirmed that the Lightning protocol should be understood by all parties involved in the network, including end clients. The conversation then shifted to building a server-client model where multiple merchants could accept payments from end customers. The question arose whether they needed a Bitcoin node, c-lightning + charge node per merchant. However, it was stated that neither c-lightning nor Lightning Charge (or any other implementation) is multi-tenant, which means someone with access to the RPC has full control over all channels and funds in the daemon. Therefore, it is not recommended to expose lightningd directly to multiple tenants. It was suggested that a layer in-between can be built to differentiate tenants and control access to individual resources. It was also emphasized that every user, whether customer or shop, should run their own nodes and not rely on large managed infrastructure.</summary>
    <published>2018-01-20T13:41:53+00:00</published>
  </entry>
</feed>
