<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - lightning operation during / following a chain fork (e.g. BIP 50)</title>
  <updated>2023-05-24T18:49:41.246370+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-01-30 06:16:02</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-30 16:26:36</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-30 16:42:59</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-30 17:23:11</name>
  </author>
  <author>
    <name>Greg Sanders 2018-01-30 16:31:43</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-29 16:15:25</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-30 16:41:09</name>
  </author>
  <author>
    <name>Greg Sanders 2018-01-30 16:55:58</name>
  </author>
  <link href="lightning-dev/Jan_2018/000967_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000968_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000971_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000973_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000969_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000962_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000970_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000972_lightning-operation-during-following-a-chain-fork-e-g-BIP-50-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - lightning operation during / following a chain fork (e.g. BIP 50)</title>
    <updated>2023-05-24T18:49:41.246370+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000967.html" rel="alternate"/>
    <summary>The Lightning Network developers are discussing the issue of maintaining consensus during or after a fork of the underlying cryptocurrency blockchain. In a discussion on the Lightning-dev mailing list, concerns were expressed about safety and system stability in the face of increasingly unsophisticated and gullible user base. It was noted that it is circular to assume consensus in cryptocurrency design, especially if there are entities financially motivated to fracture that consensus.The rough consensus among most Lightning developers is that BTC is "the real BTC" and gets the Satoshi genesis hash, while BCH is an altcoin that was forked off BTC and gets as hash the branching-off point. While short channel IDs contain the block height at which the funding transaction confirmed and might be used to judge if a channel contains forked coins or not, the Lightning Network protocol has no provisions in place to handle forks of the underlying blockchain.Resilience against forks would seem core to safety. Adversarial forks that rip out segwit or maliciously do not change their signature algorithm are impossible to defend against. They suggest focusing energies on forks that use strong replay protection in the form of FORKID. While work remains on analyzing and designing scenarios related to forks and unintentional forks, the priority is currently to get implementations to a state where they can safely deploy on Bitcoin Mainnet before optimizing further and integrating greater support for altcoins.The Lightning Network requires segwit to fix transaction malleability, and any nodes that attempt to follow a fork without segwit would suffer. While consensus failures are a concern, there is not yet a concrete solution to address them.</summary>
    <published>2018-01-30T06:16:02+00:00</published>
  </entry>
</feed>
