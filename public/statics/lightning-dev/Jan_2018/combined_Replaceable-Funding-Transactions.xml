<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Replaceable Funding Transactions</title>
  <updated>2023-05-24T18:11:21.148319+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-01-02 00:12:31</name>
  </author>
  <author>
    <name>Pierre 2018-01-02 14:32:04</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-01-03 13:09:34</name>
  </author>
  <link href="lightning-dev/Jan_2018/000889_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000894_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000901_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Replaceable Funding Transactions</title>
    <updated>2023-05-24T18:11:21.148319+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000889.html" rel="alternate"/>
    <summary>In a mailing list discussion, ZmnSCPxj proposed the use of replaceable (replace-by-fee) funding transactions to address the issue of slow transaction confirmation on the blockchain level as suggested in BOLT v1.0. The proposal involves using RBF-able funding transactions for low feerate, waiting for it to confirm, and then creating a replacement funding transaction for high feerate through another channel. This process may be possible as long as the counterparty allows multiple channels per peer. However, Pierre expressed concern as an accepting node that too many channel requests that never confirm could be frustrating. ZmnSCPxj acknowledged this concern and hoped that a later Lightning BOLT spec can provide some kind of cancel_channel message to indicate that the funder node is very sure that a particular funding transaction will never confirm. Nevertheless, he believes that all blockchain operations should be considered potentially time-sensitive, including channel opening. He also thinks that frustration around transaction fees at the blockchain level is at least partly due to the lack of ways to control transaction fees after a transaction has been broadcast.</summary>
    <published>2018-01-02T00:12:31+00:00</published>
  </entry>
</feed>
