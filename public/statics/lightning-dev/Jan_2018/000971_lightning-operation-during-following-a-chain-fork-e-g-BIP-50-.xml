<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>lightning operation during / following a chain fork (e.g. BIP 50)</title>
  <updated>2023-05-24T18:43:56.782535+00:00</updated>
  <author>
    <name>Benjamin Mord 2018-01-30 16:42:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>lightning operation during / following a chain fork (e.g. BIP 50)</title>
    <updated>2023-05-24T18:43:56.782535+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000971.html" rel="alternate"/>
    <summary>The email thread discusses the topic of maintaining consensus during or after a fork of the underlying blockchain(s) in the context of lightning nodes. It is mentioned that adversarial forks that rip out segwit, or maliciously do not change their signature algorithm, are basically impossible to defend against. However, if you remove segwit, then lightning becomes unsafe, and any nodes which attempt to follow such a fork would suffer. The incentives strongly motivate maintenance of consensus, so that scenario is automatically covered and of no concern. The BOLTs as presently written explicitly require segwit2x, and for this reason, BCH is presently of no concern. The work remains on analyzing and designing solutions for handling intentional and unintentional forks. The priority is to get implementations to a state where they can safely deploy on Bitcoin Mainnet. Then optimize further by adding RBF and multi-channel funding, then integrate Burchert-Decker-Wattenhofer channel factories, splicing, and so on. Greater support for altcoins can be done later. For forked altcoins, short channel IDs contain the block height at which the funding transaction confirmed. This might be used to judge if a channel contains forked coins or not.</summary>
    <published>2018-01-30T16:42:59+00:00</published>
  </entry>
</feed>
