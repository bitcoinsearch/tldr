<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Replaceable Funding Transactions</title>
  <updated>2023-05-24T18:09:00.856561+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-01-02 00:12:31</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Replaceable Funding Transactions</title>
    <updated>2023-05-24T18:09:00.856561+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000889.html" rel="alternate"/>
    <summary>The author of this email is inquiring about the possibility of using replaceable funding transactions (replace-by-fee) in BOLT v1.0 to address the issue of slow transaction confirmation on the blockchain level. The BOLT spec suggests that a non-funding node should forget the channel if it does not see the funding transaction after a reasonable timeout. The author believes it is possible to do RBF funding transactions as long as the counterparty allows multiple channels per peer. The suggested consideration includes sending an open_channel for channel #1, receiving accept_channel for channel #1, creating an RBF-able funding transaction for low feerate, sending funding_created for channel #1, receiving funding_signed for channel #1, waiting on the blockchain, increasing the fee rate, sending open_channel for channel #2 to the same party, receiving accept_channel for channel #2, creating a replacement funding transaction for high feerate, sending funding_created for channel #2, receiving funding_signed for channel #2, waiting on the blockchain, sending funding_locked for channel #2, receiving funding_locked for channel #2, and letting the counterparty forget channel #1. The author asks if this is possible in the current BOLT spec, except for the fact that c-lightning restricts channels.</summary>
    <published>2018-01-02T00:12:31+00:00</published>
  </entry>
</feed>
