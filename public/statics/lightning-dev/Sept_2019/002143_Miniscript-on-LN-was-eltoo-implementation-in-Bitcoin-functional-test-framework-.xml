<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Miniscript on LN (was: eltoo implementation in Bitcoin functional test framework)</title>
  <updated>2023-06-02T20:11:55.756300+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-09-09 07:51:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Miniscript on LN (was: eltoo implementation in Bitcoin functional test framework)</title>
    <updated>2023-06-02T20:11:55.756300+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-September/002143.html" rel="alternate"/>
    <summary>In a recent email exchange, David A. Harding and ZmnSCPxj discussed the potential benefits of using Miniscript for Lightning Network scripts. While some have questioned the value of using Miniscript for Lightning, Harding suggests that its primary use may be to make it easier for wallets to create valid witnesses for Miniscript-aware scripts. By incorporating Miniscript into Bitcoin Core, for example, users could sign for their lightning update and settlement transactions using a Miniscript-compatible wallet. However, there are some complications to this approach, as the signing keys in various Lightning scripts are derived from base keys, requiring embedding information on how the derivation is done. Still, Harding sees the value of using Miniscript for Lightning scripts, particularly as other wallets such as hardware wallets and exchange HSMs may add support for libminiscript in the future. Ultimately, the true potential of Miniscript may come from allowing any wallet to sign for any Miniscript-compatible script, freeing developers from having to write lots of sensitive signing code or heavily coordinating changes across different software. As consensus changes like taproot and SIGHASH_NOINPUT/ANYPREVOUT are activated, updating wallets to support those changes may be as easy as updating their bundled libminiscript version.</summary>
    <published>2019-09-09T07:51:08+00:00</published>
  </entry>
</feed>
