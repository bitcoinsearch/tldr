<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-02T20:31:45.107227+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-09-30 23:28:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-02T20:31:45.107227+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-September/002178.html" rel="alternate"/>
    <summary>In a message to a mailing list, a user named ZmnSCPxj suggests the creation of a new opcode called `OP_CHECKSIG_WITHOUT_INPUT` as an alternative to `SIGHASH_NOINPUT`. This new opcode would ignore any `SIGHASH` flags present on a signature and instead hash the current transaction without input references to check against the signature. The suggested opcode could be embedded in a Taproot script, which already supports special SCRIPTs that may potentially lose funds for users.ZmnSCPxj also notes that this proposed new opcode would allow for a Decker-Russell-Osuntokun with an internal Taproot point to be a 2-of-2, then have a script `OP_1 OP_CHECKSIG_WITHOUT_INPUT`. Unilateral closes would expose the hidden script, but cooperative closes would use the 2-of-2 directly. The author raises the question of why there isn't more concern about potential abuse of Taproot, considering its support for SCRIPTs that may lead to fund losses.</summary>
    <published>2019-09-30T23:28:43+00:00</published>
  </entry>
</feed>
