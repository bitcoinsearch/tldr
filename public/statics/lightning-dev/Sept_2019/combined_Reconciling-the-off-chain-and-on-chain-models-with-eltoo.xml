<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Reconciling the off-chain and on-chain models with eltoo</title>
  <updated>2023-06-03T22:31:22.350623+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-09-06 14:32:38</name>
  </author>
  <author>
    <name>Richard Myers 2019-09-09 16:38:41</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-09-10 01:28:04</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-09-18 05:28:38</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-09-19 02:01:54</name>
  </author>
  <author>
    <name>Christian Decker 2019-09-19 10:26:13</name>
  </author>
  <author>
    <name>Christian Decker 2019-09-06 13:18:03</name>
  </author>
  <author>
    <name>Richard Myers 2019-09-16 14:08:56</name>
  </author>
  <author>
    <name>Christian Decker 2019-09-18 13:44:47</name>
  </author>
  <link href="lightning-dev/Sept_2019/002137_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002144_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002146_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002151_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002155_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002159_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002136_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002150_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2019/002154_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Reconciling the off-chain and on-chain models with eltoo</title>
    <updated>2023-06-03T22:31:22.350623+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-September/002137.html" rel="alternate"/>
    <summary>The article proposes a future where most people are share-owners of coins rather than sole owners, and suggests a change-in-membership ritual to elaborate on this idea. The post discusses various concepts related to signets and their multi-party channel analogs, such as cooperative and uncooperative closing of channels, membership changes, balance changes, mining, mining reward, difficulty adjustment, transaction fees, privacy, and liveness.Regarding mining, there is no equivalent concept for multi-party channels, and instead, fees are charged for each update. Privacy can be maintained by disassociating a particular update from signers and their IP addresses, and using SIGHASH_ALL for cooperative closes. Liveness can be maintained if signers know they will be offline by pre-signing updates that commit only their own outputs instead of splicing out. Furthermore, contingent tap-leaf can also be used to ensure liveness.The Lightning Network is a payment protocol that allows for the faster and cheaper transfer of Bitcoin. It provides cooperative and uncooperative closing of channels, with the former optimized for privacy and low on-chain fees. Closing an update mechanism does not require the close of any hosted update mechanisms if the parties are not contractually bound to do so. Membership changes can be made by splicing a new channel to the layer one blockchain using a channel splicing transaction optimized for privacy and low on-chain fees paid by the parties entering or leaving the channel.Participants could theoretically create two updates with the same state-number at each update, a normal one that just keeps them in the contract and a fallback splice that drops inactive participants and continues without them. A new mechanism-within-mechanism layer could be created if a signer knows they will be offline. Mixing mechanisms may be needed to allow individual signers to disassociate their ownership of funds from their identity. The eltoo update scheme is an interesting idea worth exploring for consolidating blocks of off-chain transactions. Although using CSV is more complicated and outputs must also use SIGHASH_NOINPUT, the ability to have multiple party channels makes eltoo compelling compared to LN-Penalty for this kind of application. The multiple party aspect introduces an interesting way to unify concepts from different second layer protocols like federated sidechains and statechains.ZmnSCPxj proposes the concept of offchain transaction cut-through systems and how they can be used to model changes to offchain system states. The process involves sending a transaction that spends a subset of the current state txos to participants in the update mechanism, who then agree on its validity before signing a new state with the spent txos deleted and new txos inserted. ZmnSCPxj suggests a future where most people do not usually have single-signer ownership of coins on-chain but are instead share-owners of coins, with single-signer ownership occurring on-chain only in the case of dispute or for long-term cold storage. The change-in-membership ritual is suggested to elaborate on this idea, which will be optimized for privacy and low on-chain fees paid for by parties entering and leaving the channel.The Lightning Network team is discussing possible solutions for liveness issues, including pre-signing updates or creating a new mechanism-within-mechanism layer. ZmnSCPxj suggests an escape hatch in the scripts that allows to spend any output attached to the settlement transaction by n-1 participants, which could be reclaimed into a new open right away. However, careful design would be required as the entire point of requiring an n-of-n signature is to protect against Sybil attacks. The recently published proof-of-concept of eltoo on signet by Richard has led to discussions on how to build the system, using the Bitcoin object model as an interface, so that a lot of existing tooling can be reused. The Lightning Network team is also discussing various methods to increase privacy and liveness while minimizing on-chain fees and maintaining security.</summary>
    <published>2019-09-06T14:32:38+00:00</published>
  </entry>
</feed>
