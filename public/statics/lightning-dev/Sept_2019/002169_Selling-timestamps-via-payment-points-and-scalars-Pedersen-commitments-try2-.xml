<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Selling timestamps (via payment points and scalars + Pedersen commitments ) [try2]</title>
  <updated>2023-05-23T02:13:56.982381+00:00</updated>
  <author>
    <name>Anthony Towns 2019-09-25 19:29:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Selling timestamps (via payment points and scalars + Pedersen commitments ) [try2]</title>
    <updated>2023-05-23T02:13:56.982381+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-September/002169.html" rel="alternate"/>
    <summary>In a recent discussion, the possibility of using Lightning Network to pay for a server was brought up. One participant suggested providing R and C along with a zero knowledge proof that one knows an r such that R = SHA256(r) and C = SHA256(x || r). Another participant mentioned insisting on paying only if the server reveals an r that matches some known R such that R = SHA256(r), as currently done in Lightning network. However, the challenge was then posed of proving, knowing only R and x and that there exists some r such that R = SHA256(r), that C = SHA256(x || r). It was suggested that if one knows x and r, they can generate C and R and a zero knowledge proof of the relationship between x, C, and R without revealing r. This could potentially be done with bulletproofs. However, it was noted that this zero knowledge proof already proves that C was generated based on x, making the timestamp unnecessary.</summary>
    <published>2019-09-25T19:29:58+00:00</published>
  </entry>
</feed>
