<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo implementation in Bitcoin functional test framework</title>
  <updated>2023-06-02T20:08:53.458129+00:00</updated>
  <author>
    <name>Richard Myers 2019-09-04 11:19:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo implementation in Bitcoin functional test framework</title>
    <updated>2023-06-02T20:08:53.458129+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-September/002131.html" rel="alternate"/>
    <summary>Richard has implemented the eltoo update scheme in the Bitcoin functional test framework to better understand and refine the Bitcoin scripts and message passing protocol for eltoo. These simulations exercise a concrete implementation of the eltoo Bitcoin scripts and explore the data flow between nodes that use eltoo to update their channel state. Richard's motivation for creating these tests is to have a framework for both understanding and refining the Bitcoin scripts and message passing protocol for eltoo. This simulation uses a fork of Bitcoin with cdeckerâ€™s SIGHASH_NOINPUT patch applied to the signet2 fork fjahr created with patches applied for signet (kallewoof), taproot (sipa) and anyprevout* (ajtowns). Richard plans to add bidirectional channel updates, and derive public keys for settle transactions from a pre-shared basepoint. He is also looking for other eltoo implementations to compare notes and get the ball rolling on a detailed specification.Richard extends special thanks to the Chaincode Summer Residency and Christian Decker for their helpful advice and encouragement while he worked on this project. The link to his implementation can be found on GitHub.</summary>
    <published>2019-09-04T11:19:49+00:00</published>
  </entry>
</feed>
