<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Anchor transaction for no expiration channels without segwit</title>
  <updated>2023-05-24T00:57:09.485422+00:00</updated>
  <author>
    <name>Nicolas Dorier 2017-02-07 02:39:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Anchor transaction for no expiration channels without segwit</title>
    <updated>2023-05-24T00:57:09.485422+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-February/000669.html" rel="alternate"/>
    <summary>The discussion revolves around a proposal to create a time-locked transaction. The proposed solution is for TX2 to be nTimelocked after the bounty's expiration. If Alice sees Bob not signing it, she can reclaim the bounty fast. If Bob signs it, Alice cannot broadcast it immediately. Nicolas Dorier suggests that there is no need for a second timeout. TX2 would be signed by Bob only when he could get back the second output of TX1. However, Alice must have a fully-signed version of TX2 before the timeout finishes. If she doesn't, Bob can reclaim TX1/1 once the timeout expires and refuse to sign TX2. Alice needs a signed version of TX2 to broadcast it and immediately close the channel (claiming TX1/0). Once accepted, she can then claim TX1/1. Overall, the proposal aims to create a secure and efficient time-locked transaction system.</summary>
    <published>2017-02-07T02:39:53+00:00</published>
  </entry>
</feed>
