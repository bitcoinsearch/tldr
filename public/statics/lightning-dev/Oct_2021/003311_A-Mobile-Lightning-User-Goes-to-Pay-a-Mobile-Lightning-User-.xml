<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
  <updated>2023-06-03T06:23:10.412101+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-10-13 09:58:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
    <updated>2023-06-03T06:23:10.412101+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003311.html" rel="alternate"/>
    <summary>ZmnSCPxj has suggested using PTLCs (Probabilistic Time-Locked Contracts) as a solution to prevent collusion between the sender and lnurl endpoint in stealing funds. He proposes that every payment should have a random nonce added by the sender, making it difficult for anyone to steal the funds. However, he also mentions that this solution might not be foolproof, and asks for suggestions apart from PTLCs.Another suggestion made by ZmnSCPxj is to use two hashes instead of one in an HTLC (Hashed Time-Locked Contract), with the second hash being generated by the sender. This would provide protection against forwarding nodes probing, similar to what payment_secret provides.ZmnSCPxj also thinks that this method could allow for a Barrier Escrow-like mechanism while still in HTLC-land.</summary>
    <published>2021-10-13T09:58:40+00:00</published>
  </entry>
</feed>
