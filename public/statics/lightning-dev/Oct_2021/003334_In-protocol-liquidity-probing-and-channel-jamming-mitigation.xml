<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>In-protocol liquidity probing and channel jamming mitigation</title>
  <updated>2023-06-03T06:26:07.614037+00:00</updated>
  <author>
    <name>Joost Jager 2021-10-21 12:55:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>In-protocol liquidity probing and channel jamming mitigation</title>
    <updated>2023-06-03T06:26:07.614037+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003334.html" rel="alternate"/>
    <summary>In a discussion between ZmnSCPxj and Joost, the potential downside of using a dedicated probe message in Lightning Network was brought up. The concern was that users could potentially use this message for free messaging by including additional data in the payload for the recipient. Although free messaging is already possible through htlcs, the probe message would lower the cost to do so as the sender wouldn't need to lock up liquidity for it, increasing the spam potential. ZmnSCPxj wondered if it was possible to design the probe message so that it was useless for anything other than probing, but Joost pointed out that it would be difficult as there is still an obfuscated 1300 bytes block with the remaining part of the route in it, making it hard for nodes to determine whether there is other meaningful data at the end. They suggested reducing the onion max size to make it less usable for remote messaging, but Joost noted that this may not work if they want to support 27 hops like they do for payments, as there will be quite some space left for messaging on real routes which are mostly much shorter.</summary>
    <published>2021-10-21T12:55:30+00:00</published>
  </entry>
</feed>
