<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
  <updated>2023-06-03T06:23:48.690128+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2021-10-19 11:51:38</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
    <updated>2023-06-03T06:23:48.690128+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003328.html" rel="alternate"/>
    <summary>In this email conversation between Bastien and ZmnSCPxj via Lightning-dev, they discuss an improvement to HTLCs (Hashed Time-Locked Contracts) for payments on the Lightning Network. Bastien likes the proposal of using onion messages with notifications to get recipients online quickly. However, he notes that senders also need to come online while the payment isn't settled to avoid losing their channels. If the sender's LSP receives the preimage but the sender doesn't come online, the sender's LSP will have to force-close to claim the HTLC on-chain when it gets close to the timeout. This is not a show-stopper, but an implementation detail to keep in mind. ZmnSCPxj suggests using two hashes instead of one for every HTLC on LN, even for current "online RPi user pays online RPi user," to provide similar protection as the `payment_secret` in invoices. He proposes that the second hash be from a preimage the sender generates, which the sender sends (encrypted via onion) to the receiver. However, he acknowledges that adapting every node in the path would require informing them and handling this change, so he agrees that PTLCs (Probabilistic Payment Tokens) should be used instead.</summary>
    <published>2021-10-19T11:51:38+00:00</published>
  </entry>
</feed>
