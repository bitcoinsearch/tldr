<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>In-protocol liquidity probing and channel jamming mitigation</title>
  <updated>2023-06-03T06:25:46.024499+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-10-15 22:51:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>In-protocol liquidity probing and channel jamming mitigation</title>
    <updated>2023-06-03T06:25:46.024499+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003323.html" rel="alternate"/>
    <summary>In this context, C realizes that B is lying but faces a dilemma. He can either say no because he knows that B is lying or say yes and get some free sats from the failed payment. However, if B cannot forward an HTLC to C later, then C cannot have a failed payment and cannot earn any money from the upfront payment scheme. Even though there is still a positive incentive for continuing the lie, C decides to keep the lie going for his benefit. D, the payee, cannot tell that it's a lie when it reaches her. If C wants to tattle, he needs to blame B instead of himself to avoid payers assuming that the liquidity deficit is with C rather than B.</summary>
    <published>2021-10-15T22:51:37+00:00</published>
  </entry>
</feed>
