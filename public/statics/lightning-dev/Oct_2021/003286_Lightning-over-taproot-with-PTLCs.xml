<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning over taproot with PTLCs</title>
  <updated>2023-06-03T06:18:38.872665+00:00</updated>
  <author>
    <name>Lloyd Fournier 2021-10-11 06:05:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning over taproot with PTLCs</title>
    <updated>2023-06-03T06:18:38.872665+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003286.html" rel="alternate"/>
    <summary>In this email exchange, the sender praises the recipient's work on "witness asymmetric channels" and their use of "revocable signatures" to solve the constant size storage problem in generalized payment channels. They also highlight the breakthrough of concurrent non-interactive payment forwarding using a refined version of Z's fast forward idea. The use of revocable signatures also enables scorched earth punishments, allowing wronged parties to take coins from all channels with the perpetrator. The sender asks for clarification on the need for numbering each inflight transaction by "k," and what RP/2/k notation implies given the definition of RP provided. They also suggest a solution to the issue of compensating for the lack of option_static_remotekey, by signing a "good will" in-flight transaction that sends all coins to the static key.</summary>
    <published>2021-10-11T06:05:05+00:00</published>
  </entry>
</feed>
