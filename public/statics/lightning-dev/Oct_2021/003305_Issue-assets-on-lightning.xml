<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Issue assets on lightning</title>
  <updated>2023-06-03T06:21:52.566721+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-10-13 03:59:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Issue assets on lightning</title>
    <updated>2023-06-03T06:21:52.566721+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003305.html" rel="alternate"/>
    <summary>The message is about asset issuance on the Lightning Network. The author asks whether it's possible to issue assets on LN and if so, what the process is. They also ask if anyone is working or planning to work on it. The author mentions Omni BOLT as a potential solution, but they're not sure about its status. They provide some use cases for tokens on lightning such as DEX, stablecoins, and liquidity. The author mentions the RGB colored coin project which plans to be compatible with Lightning so that channels could be denominated in an issued asset. However, this complicates the use of such channels for forwarding. Blockstream has plans to include support for Liquid-issued assets in C-Lightning. Generally, there would be a Lightning Network where channels have different asset types, and you can forward via any channel, suffering some kind of asset conversion fee if you have a hop where the incoming asset is different from the outgoing asset. However, due to American Call Option problem, issued assets may not be usable on Lightning after all, even if someone makes the work to make non-Bitcoin assets on Lightning channels. The author cites various solutions like CJP trust-requiring solution, a paper requiring Ethereum, and Barrier Escrows. Barrier Escrows are still trusted to operate correctly, but the exact use of their service is blinded to them.</summary>
    <published>2021-10-13T03:59:45+00:00</published>
  </entry>
</feed>
