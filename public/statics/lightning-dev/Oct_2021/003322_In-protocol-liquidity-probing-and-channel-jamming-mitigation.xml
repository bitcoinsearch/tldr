<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>In-protocol liquidity probing and channel jamming mitigation</title>
  <updated>2023-06-03T06:25:31.500571+00:00</updated>
  <author>
    <name>Owen Gunden 2021-10-15 17:50:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>In-protocol liquidity probing and channel jamming mitigation</title>
    <updated>2023-06-03T06:25:31.500571+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003322.html" rel="alternate"/>
    <summary>In a discussion on the Lightning-dev mailing list, ZmnSCPxj proposed a mechanism to prevent forwarding nodes from lying about their capacity to allow payments to go through. However, Joost Jager's proposal creates an even greater incentive for forwarding nodes to lie, as they can receive sats for doing so. While ZmnSCPxj suggests accepting "no" from any node along the path, only the payee's "yes" is meaningful and she doesn't have enough information to know if the routers were lying or not. The proposed enforcement mechanism is to fail the channel between nodes if the asking node does not have sufficient capacity towards it. However, this may not align with incentives as other nodes may benefit from keeping the lie going. A reputation scheme, as suggested by Joost, may be a solution.</summary>
    <published>2021-10-15T17:50:06+00:00</published>
  </entry>
</feed>
