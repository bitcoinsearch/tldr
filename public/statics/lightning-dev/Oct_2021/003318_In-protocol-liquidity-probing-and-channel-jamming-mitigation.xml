<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>In-protocol liquidity probing and channel jamming mitigation</title>
  <updated>2023-06-03T06:27:19.905759+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-10-15 14:29:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>In-protocol liquidity probing and channel jamming mitigation</title>
    <updated>2023-06-03T06:27:19.905759+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003318.html" rel="alternate"/>
    <summary>In an email thread on the Lightning-dev mailing list, Joost Jager proposed a combination of two proposals to make probing free and require senders to pay for failed payment attempts. However, a concern was raised about the possibility of malicious routing nodes succeeding in the probe and then failing the payment to collect the failed payment fee. In response, a proposal by ZmnSCPxj was mentioned which suggested reusing the mechanism of sending an onion and getting back an "error" reply, but only accepting a "everything is OK" result from the destination and a "sorry cannot forward" from any node along the path. This way, a malicious node cannot succeed the probe if it has to reach the destination, and a malicious forwarding node would have no incentive to cooperate with the destination to fail the actual payment later just to extract a tiny failure fee.</summary>
    <published>2021-10-15T14:29:15+00:00</published>
  </entry>
</feed>
