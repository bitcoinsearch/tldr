<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning over taproot with PTLCs</title>
  <updated>2023-06-03T06:18:14.608912+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-10-09 02:27:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning over taproot with PTLCs</title>
    <updated>2023-06-03T06:18:14.608912+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003281.html" rel="alternate"/>
    <summary>In a discussion about the Lightning Network, it was suggested that transactions should not be put on-chain to avoid implementation complexity in drop-onchain cases. However, this requires calculating fees in advance and not being able to update the transaction without going on-chain. If child pays for parent (CPFP) is acceptable, then fees for the commitment transaction can pay for the transitioning transaction. This method allows the historical longevity of the channel to be maintained, which is a positive indicator of desirability for many pathfinding and autopilot heuristics. A suggestion was made to establish a new taproot-based channel without advertising it, and secretly commit to the PTLCs in the new channel instead of the current one. Once the funding transaction for the new channel is sufficiently buried, it can be advertised instead of the old one, and the old channel can become a shadow channel. This setup allows for funds to be spliced into or out of the shadow channel while retaining the positive longevity heuristics of the public channel. However, this method requires two UTXOs, so another suggestion was made to add a gossip message to validate a new short-channel-id using an old short-channel-id's age.</summary>
    <published>2021-10-09T02:27:37+00:00</published>
  </entry>
</feed>
