<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Highly Available Lightning Channels</title>
  <updated>2023-06-03T11:52:23.562865+00:00</updated>
  <author>
    <name>Matt Corallo 2023-02-16 00:42:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Highly Available Lightning Channels</title>
    <updated>2023-06-03T11:52:23.562865+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-February/003856.html" rel="alternate"/>
    <summary>In a thread discussing how to maintain outbound liquidity on the Lightning Network, Joost Jager asks how to set the flag for maintaining high availability (HA) without a credit relationship. He questions whether setting the flag based on channel saturation could result in errors and whether it is possible to avoid punishment from senders if HA guarantees are not met due to large flows. In response, the suggestion is made to open new channels, rebalance, or swap-in in time to maintain outbound liquidity. Jager questions whether publicly visible data can give accurate payment success rates for evaluating the network as a whole. There are three relevant categories of nodes: large nodes sending lots of payments, client nodes connecting to an LSP or two, and routing nodes that do not send many payments. For category (a), we may not need extra measures beyond improving scoring algorithms. Category (b) can be solved by downloading data from a node in category (a), while category (c) is trickier but can be addressed through fetching semi-trusted data. By doing so, everyone can have a similar experience as the River report.</summary>
    <published>2023-02-16T00:42:54+00:00</published>
  </entry>
</feed>
