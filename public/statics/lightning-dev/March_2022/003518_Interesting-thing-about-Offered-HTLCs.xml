<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Interesting thing about Offered HTLCs</title>
  <updated>2023-06-03T07:43:30.251819+00:00</updated>
  <author>
    <name>darosior 2022-03-16 10:03:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Interesting thing about Offered HTLCs</title>
    <updated>2023-06-03T07:43:30.251819+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-March/003518.html" rel="alternate"/>
    <summary>The email conversation discusses the use of Miniscript in Lightning to prevent unintended paths from being taken. It is noted that Miniscripts with duplicate keys are considered insane as it makes it too hard to reason about malleability. A policy compiler would never produce such a Miniscript. The conversation also touches on the issue of offered HTLC outputs and the three claim paths associated with them. The offering party can claim via the HTLC-timeout case on their commitment transaction with their signature and the remote's signature after the cltv_expiry timeout. However, they can only spend with the HTLC-timeout transaction because of SIGHASH_ALL. It is suggested that splitting the Script branches in two tapleaves and having bip342 signature digest committing to the tapleaf_hash could solve this issue.</summary>
    <published>2022-03-16T10:03:29+00:00</published>
  </entry>
</feed>
