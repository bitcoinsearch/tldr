<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[DRAFT] Multi-cell-hop onion with TLV (and example for multi-part-payment)</title>
  <updated>2023-06-02T15:08:11.201059+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-29 09:49:04</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[DRAFT] Multi-cell-hop onion with TLV (and example for multi-part-payment)</title>
    <updated>2023-06-02T15:08:11.201059+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001692.html" rel="alternate"/>
    <summary>The conversation starts with a description of a proposed `application_data` type 6, which would work for spontaneous payments to identify the sender. The writer is of the opinion that the invoice should not specify it as it will create confusion and could lead to people doing dumb things. The writer suggests using it for games of chance where the user can put in a random number. The intent is to combine multi-use offers with spontaneous payments. It was mentioned that spontaneous payment would be useful when interacting with trust-demanding third parties, like Bitcoin banks, that hold Bitcoin on behalf of their customers. It was suggested that the bank would provide a multi-use offer containing the application data, which the customer would use by providing a spontaneous payment below.The conversation then switches to describe a proposed spontaneous payment type 8, which would sacrifice proof-of-payment, and the reader would claim the HTLC using the given preimage. The writer agrees that readers should reject spontaneous payments and wonders if it should be advertised on global features.</summary>
    <published>2018-11-29T09:49:04+00:00</published>
  </entry>
</feed>
