<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Packet switching via intermediary rendezvous node</title>
  <updated>2023-05-25T15:51:42.333557+00:00</updated>
  <author>
    <name>Christian Decker 2018-11-13 04:06:23</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Packet switching via intermediary rendezvous node</title>
    <updated>2023-05-25T15:51:42.333557+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001574.html" rel="alternate"/>
    <summary>In the Lightning-dev mailing list, ZmnSCPxj proposed a method for packet switching in BOLT spec via multi-hop onion packets, identifying "next" by node-id instead of short-channel-id, and onion ephemeral key switching. The proposed packet types include packettype 0 (same as current realm 0), packettype 2 (ephemeral key switch), and packettype 4 (identify next node by node-id). This approach allows for routing payments through multiple channels, even if one channel has no capacity, and can increase anonymity set of rendez-vous routing. It also justifies multiple features having a single feature bit, making it difficult to discriminate nodes with this feature bit enabled. Furthermore, this approach can allow for uncertainty about the destination, by sending an onion with packettype 4 for one node followed by another packettype 4 for the actual recipient. Mapless Lightning nodes could ask a peer to be their pathfinding provider, but there is some uncertainty involved as the destination specified may not be the final destination. Finally, it was noted that there is a minor complication with rendez-vous routing, where spontaneous ephemeral key switches while forwarding a payment are not possible unless the sender or recipient knows the switchover points in their respective parts of the onion.</summary>
    <published>2018-11-13T04:06:23+00:00</published>
  </entry>
</feed>
