<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for Advertising Channel Liquidity</title>
  <updated>2023-05-25T15:21:59.026210+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-07 06:17:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for Advertising Channel Liquidity</title>
    <updated>2023-05-25T15:21:59.026210+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001536.html" rel="alternate"/>
    <summary>The discussion revolves around the question of whether a node should be able to request more liquidity than they put into the channel on their half. The concern is raised that allowing the initiator of the request to request for arbitrary capacity could be dangerous. For instance, someone with malicious intent could spin up a temporary Lightning Node, request for incoming capacity with only a nominal fee, and then shut down the node permanently, leaving the funds in an unuseable channel. This also loses potential earnings from the locked-up funds. However, if nodes were obligated to have at least greater capacity tied into the channel, this attack would become more expensive for the attacker as they would also be tying up their own funds. Advertised liquidity creates a market of inbound capacity that any node can take advantage of, reducing the amount of out-of-band negotiation needed to get the inbound capacity that you need. The credit goes to Casey Rodamor for the initial idea.</summary>
    <published>2018-11-07T06:17:17+00:00</published>
  </entry>
</feed>
