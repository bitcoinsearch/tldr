<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [PATCH] First draft of option_simplfied_commitment</title>
  <updated>2023-05-23T01:19:24.928242+00:00</updated>
  <author>
    <name>Matt Corallo 2019-10-30 16:21:43</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-22 02:20:16</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-21 02:54:18</name>
  </author>
  <author>
    <name>Matt Corallo 2019-10-30 16:08:41</name>
  </author>
  <author>
    <name>Matt Corallo 2019-11-19 18:53:01</name>
  </author>
  <author>
    <name>Matt Corallo 2019-11-16 05:46:26</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-29 17:13:44</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-25 19:09:25</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-25 19:02:55</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-21 17:55:33</name>
  </author>
  <link href="lightning-dev/Oct_2019/002267_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001654_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001644_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002266_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002338_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002334_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001695_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001667_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001666_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001647_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [PATCH] First draft of option_simplfied_commitment</title>
    <updated>2023-05-23T01:19:24.928242+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002267.html" rel="alternate"/>
    <summary>The Lightning Network is a protocol that facilitates faster and cheaper Bitcoin transactions. The email thread of the Lightning Network discusses various design decisions for anchor outputs, including proposals for an additional spending path and considerations for key rotation. The negotiation process and fees involved in Lightning Network transactions are also discussed, with the commitment transaction being the main transaction that spends from the funding transaction. The derivation of different public keys used in Lightning Network transactions is described, with commitment transactions having four types of outputs. Nodes may monitor the blockchain for unspent `to_local_pushme` and `to_remote_pushme` outputs and try to spend them after 10 confirmations. The context also includes information on the use of child-pays-for-parent and the importance of incentivizing nodes to cooperate.The Lightning Network protocol specifies the `funding_signed` message as part of the channel establishment process, and once a node receives a valid `funding_signed`, it should broadcast the funding transaction. The `option_simplified_commitment` is determined at this point, which simplifies channel state and penalty transaction handling. During the closing process, the sending node must set `fee_satoshis` less than or equal to the base fee of the final commitment transaction. The article further describes the derivation of various pubkeys, such as `localpubkey`, `local_htlcpubkey`, `remote_htlcpubkey`, `local_delayedpubkey`, and `remote_delayedpubkey`. These pubkeys are generated using SHA256 from their base points. The developers in the Lightning Network are discussing various changes, proposals, and optimizations on the mailing list. One proposal is to add `1 OP_CHECKSEQUENCEVERIFY OP_DROP` to the non-revocation clause of the HTLC outputs. There are also discussions about using new addresses for both parties to communicate in the `open_channel` and `accept_channel` messages, but there are concerns about spamming and the need for more simplicity in the protocol. Additionally, the developers debate whether to rotate keys or abandon privacy from watchtowers.The Lightning Network's channel features are explained in a document that outlines penalty transactions, `feerate_per_kw`, closing transaction negotiations, pushme outputs, and the `02-peer-protocol.md` file. The BOLT#4 document provides information on how a sending node must behave when paying for transactions while maintaining its channel reserve. Furthermore, the expected weight of a commitment transaction is calculated based on the number of HTLC outputs and whether `option_simplified_commitment` applies or not. This weight is used to determine fees for timely inclusion in a block. A node may monitor the blockchain for unspent `to_local_pushme` and `to_remote_pushme` outputs and try to spend them after 10 confirmations. Other features available in Lightning Network include `initial_routing_sync`, `option_upfront_shutdown_script`, and `gossip_queries`.</summary>
    <published>2019-10-30T16:21:43+00:00</published>
  </entry>
</feed>
