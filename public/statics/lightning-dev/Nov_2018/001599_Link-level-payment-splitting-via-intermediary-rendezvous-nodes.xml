<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Link-level payment splitting via intermediary rendezvous nodes</title>
  <updated>2023-05-25T15:41:24.940891+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-14 23:29:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Link-level payment splitting via intermediary rendezvous nodes</title>
    <updated>2023-05-25T15:41:24.940891+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001599.html" rel="alternate"/>
    <summary>A proposal for multiple rendezvous nodes is discussed in the Lightning-dev mailing list. The proposed construction differs from HORNET by allowing multiple rendezvous nodes instead of only one. However, concerns are raised about possible security degradation due to this added flexibility. A member of the group suggests that implementing HORNET, which supports rendezvous routing and is formally proven in this model, might be a better path forward. The group discusses potential issues with the mechanism they described during the spec meeting and how it could violate the wrap-resistance property of the ideal onion routing scheme. A new proposal is presented involving an additional ECDH at the rendezvous point, one ChaCha20 encryption, and one scalar multiplication to generate the next ephemeral keys. This proposal adds a little detour when generating the next onion but assembles the existing machinery differently. The proposal aims to make sure that the recipient can deterministically generate the same padding that RV will generate and hide the fact that RV was indeed a rendezvous point.</summary>
    <published>2018-11-14T23:29:30+00:00</published>
  </entry>
</feed>
