<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>"Trustless" Pathfinding Service</title>
  <updated>2023-05-25T15:50:49.626452+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-09 12:02:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>"Trustless" Pathfinding Service</title>
    <updated>2023-05-25T15:50:49.626452+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001552.html" rel="alternate"/>
    <summary>During a discussion with representatives from Nayuta, the topic of a "trustless" pathfinding service was brought up. A scenario was presented where a paying Lightning node cannot keep a complete routemap and desires a service that can contain it without knowing the payer and payee. Initially, a solution was proposed where the paying node provides several nodes in an ordered list, including itself and the destination, and the routing service creates a long route passing through all the nodes in the specified order. However, upon reconsideration, this solution was deemed unsatisfactory. The proposed solution previously mentioned had several constraints, such as the payer needing to precede the payee on the list, and the nodes needing to be within 10 nodes of each other. Additionally, the routing service maintains one or more Lightning nodes with higher than typical fees to bias pathfinding towards those nodes. Further exploration of the issue is needed to find a better solution for a trustless pathfinding service.</summary>
    <published>2018-11-09T12:02:21+00:00</published>
  </entry>
</feed>
