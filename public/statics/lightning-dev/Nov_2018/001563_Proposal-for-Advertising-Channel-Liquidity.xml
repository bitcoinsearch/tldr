<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for Advertising Channel Liquidity</title>
  <updated>2023-05-25T15:25:07.701731+00:00</updated>
  <author>
    <name>lisa neigut 2018-11-12 09:20:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for Advertising Channel Liquidity</title>
    <updated>2023-05-25T15:25:07.701731+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001563.html" rel="alternate"/>
    <summary>In this discussion on the Lightning-dev mailing list, the topic of whether a node should be able to request more liquidity than they put into the channel on their half is debated. ZmnSCPxj argues that allowing the initiator of the request to request for arbitrary capacity could be dangerous, as an attacker could potentially lock up another user's funds in an unusable channel. The counterpoint is made that if the fee for the liquidity is high enough, it does not matter to the provider whether the liquidity is used or not. The discussion also touches on the issue of when a liquidity providing node (maker) should be able to close the channel. Stipulating a length of time isn't necessarily beneficial, as the liquidity provided may be used up rather quickly. There are various strategies that nodes can use to limit potential losses, such as soliciting small liquidity offers and blacklisting unreliable nodes. It is suggested that keeping a high-traffic channel open should be worth more in routing fees than the liquidity provided, and if the market prices itself rationally, the risk of being locked out of liquidity should remain insignificant.Overall, allowing nodes to advertise liquidity creates a market of inbound capacity that any node can take advantage of, reducing the amount of out-of-band negotiation needed to get the inbound capacity that is required.</summary>
    <published>2018-11-12T09:20:49+00:00</published>
  </entry>
</feed>
