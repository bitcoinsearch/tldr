<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for rendez-vous routing</title>
  <updated>2023-05-25T15:09:37.926878+00:00</updated>
  <author>
    <name>CJP 2018-11-04 06:26:59</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for rendez-vous routing</title>
    <updated>2023-05-25T15:09:37.926878+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001498.html" rel="alternate"/>
    <summary>In the Lightning network, there is a concern that some powerful participants may enforce KYC requirements on Lightning nodes, which could lead to a split in the network. This would be an undesirable scenario since it would go against the idea of a decentralized and inclusive network free from central authorities imposing arbitrary rules. The enabler of this scenario is the public channel map of the network required for source routing.Private channels are a sort-of-a counter measure, but their existence needs to be known to payers who need to cross the gap between compliant and non-compliant parts of the network, which risks penalties for the node owners on the compliant side. Rendez-vous routing may offer a better solution where payee chooses one or more routes from certain third-party nodes in the network to himself and passes sphinx-encrypted blobs for those routes to the payer. Payee may lead the route over private channels without revealing their existence and still be a node inside the "compliant" section of the network without linking their activities to their identity.There might be alternative approaches, such as not routing between incompatible regulatory domains, but simply having nodes on each network if needed and moving funds on-chain between nodes whenever necessary, which will require on-chain mixing though.</summary>
    <published>2018-11-04T06:26:59+00:00</published>
  </entry>
</feed>
