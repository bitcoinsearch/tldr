<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for Advertising Channel Liquidity</title>
  <updated>2023-05-25T15:22:57.564871+00:00</updated>
  <author>
    <name>lisa neigut 2018-11-12 09:42:13</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for Advertising Channel Liquidity</title>
    <updated>2023-05-25T15:22:57.564871+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001565.html" rel="alternate"/>
    <summary>The proposed solution to the liquidity discovery problem on Lightning Network involves allowing nodes to advertise initial liquidity matching through their node_announcement. The proposal aims to let nodes independently source inbound capacity from a market of advertised liquidity rates set by other nodes. A new feature flag, option_liquidity_provider, is added to the node_announcement which includes data such as a fee charged per satoshi of liquidity added at channel open and base fee charged for providing liquidity at channel open. The open_channel includes a new feature flag (channel_flags) named option_liquidity_buy, where push_msat is set to fee payment for requested liquidity and liquidity_msat_request indicates the amount of dual funding requested at channel open. If a node cannot provide the liquidity requested in open_channel, it must return an error. It's an open question whether a liquidity advertising node should include a maximum amount of liquidity that they will match/provide.While some are concerned about incentives for leaches to arise that accept the fee then insta close, others see this proposal as paving the way for automated node re-balancing and creating a market of inbound capacity that any node can take advantage of, reducing the amount of out-of-band negotiation needed to get the inbound capacity that you need.</summary>
    <published>2018-11-12T09:42:13+00:00</published>
  </entry>
</feed>
