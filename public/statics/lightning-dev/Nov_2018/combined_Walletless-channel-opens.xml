<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Walletless channel opens</title>
  <updated>2023-05-25T15:39:05.613227+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-07 22:30:12</name>
  </author>
  <author>
    <name>David A. Harding 2018-11-10 21:40:30</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-12 00:39:56</name>
  </author>
  <link href="lightning-dev/Nov_2018/001539_Walletless-channel-opens.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001556_Walletless-channel-opens.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001561_Walletless-channel-opens.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Walletless channel opens</title>
    <updated>2023-05-25T15:39:05.613227+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001539.html" rel="alternate"/>
    <summary>ZmnSCPxj, a member of the Lightning Development Summit 2018, discussed that every Lightning implementation needs to have its own onchain wallet implementation. SIGHASH_NOINPUT would allow Lightning implementations to be "walletless". The first pair of commitment transactions will need to be signed with SIGHASH_NOINPUT, then the funding transaction can be created using a normal wallet. This would reduce the number of transactions needed when users prefer to use a specific wallet implementation that may have features unavailable in the Lightning implementation. Additionally, this would reduce implementation complexity for Lightning implementations, as there would only need to trace status (unconfirmed/confirmed, spent/unspent) specific transaction outputs, not scan the blockchain for specific `scriptPubKey`. However, Dave Harding raised a concern that committing to the transaction fees for various delayed-broadcast transactions could lead to committing to an undesirable high feerate. Therefore, better ways to integrate onchain wallets with protocols that delay between signing and broadcast should be considered instead.</summary>
    <published>2018-11-07T22:30:12+00:00</published>
  </entry>
</feed>
