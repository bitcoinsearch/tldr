<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Link-level payment splitting via intermediary rendezvous nodes</title>
  <updated>2023-05-25T15:43:32.654529+00:00</updated>
  <author>
    <name>Christian Decker 2018-11-14 11:40:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Link-level payment splitting via intermediary rendezvous nodes</title>
    <updated>2023-05-25T15:43:32.654529+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001594.html" rel="alternate"/>
    <summary>In an email thread discussing routing and payment splitting in Lightning Network, Conner Fromknecht suggests using the formal proof of HORNET to support rendezvous routing as a viable solution. He argues that introducing re-routing or rendezvous routing in the current manner would violate the wrap-resistance property of the ideal onion routing scheme defined in [1], which is proven for Sphinx in section 4.3 of [2]. Christian Decker raises concerns about the padding at the rendezvous point and proposes a new scheme that involves one additional ECDH at the rendezvous, one ChaCha20 encryption, and one scalar multiplication to generate the next ephemeral keys. ZmnSCPxj points out that even if a node has only a single channel to the next node, it is possible to still perform link-level payment splitting/re-routing by using rendezvous routing.</summary>
    <published>2018-11-14T11:40:46+00:00</published>
  </entry>
</feed>
