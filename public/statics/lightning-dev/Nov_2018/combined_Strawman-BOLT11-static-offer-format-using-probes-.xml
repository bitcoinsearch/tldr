<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Strawman BOLT11 static "offer" format using probes.</title>
  <updated>2023-05-25T17:05:41.347131+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-16 03:07:15</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-15 04:42:28</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-15 16:22:29</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-16 00:15:28</name>
  </author>
  <author>
    <name>Ren√© Pickhardt 2018-11-16 07:47:15</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-16 09:01:35</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-17 23:20:56</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-15 03:56:31</name>
  </author>
  <link href="lightning-dev/Nov_2018/001616_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001603_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001611_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001615_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001623_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001625_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001633_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001602_Strawman-BOLT11-static-offer-format-using-probes-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Strawman BOLT11 static "offer" format using probes.</title>
    <updated>2023-05-25T17:05:41.347131+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001616.html" rel="alternate"/>
    <summary>ZmnSCPxj apologized for not providing enough details about Scriptless Scripts before the summit. Implementation of SS without Schnorr requires OP_CODESEPARATOR code magic, and for static invoicing, payees need to provide a new payment hash or payment point under SS dynamically. ZmnSCPxj suggested a separate BOLT for type, len, data and proposed generating BOLT15 advertisement document to create BOLT11 invoices with a unique secret to the payer as separate proofs-of-payment.Rusty's proposal suggests reusable BOLT11 offers that provide almost-spontaneous payments without generating a BOLT11 invoice for each sale. The payer uses a new lightning probe message using the current onion format used for HTLCs to retrieve the complete invoice. Invoices have a `p` field of 26 bytes and optional types such as quantity can be defined. Rusty also proposed a mechanism to stream invoices using a payment network, allowing non-transferrable proof-of-payment and recurring payments, and suggested attaching payments for each HORNET-style messaging system.In an email to Rusty, a member of the Lightning Development mailing list asked for clarification on a proposal for reusable BOLT11 "offers", and Rusty provided details on how it would function. Rusty also described the format of the final-hop lightning onion containing various fields, including quantity and delivery-address. This method gives static invoicing and can be used for recurring payments. Rusty apologized for not fleshing out the proposal before the summit.The member suggested building a connection-oriented communication layer on top of the protocol, but Rusty pointed out that this would be complicated to implement and raise privacy concerns, as well as lack incentives.</summary>
    <published>2018-11-16T03:07:15+00:00</published>
  </entry>
</feed>
