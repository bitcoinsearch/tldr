<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Recovering protocol for Lightning network</title>
  <updated>2023-05-25T15:02:47.366897+00:00</updated>
  <author>
    <name>Johan Tor√•s Halseth 2018-11-01 10:26:09</name>
  </author>
  <author>
    <name>Margherita Favaretto 2018-10-31 23:58:57</name>
  </author>
  <link href="lightning-dev/Nov_2018/001488_Recovering-protocol-for-Lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001485_Recovering-protocol-for-Lightning-network.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Recovering protocol for Lightning network</title>
    <updated>2023-05-25T15:02:47.366897+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001488.html" rel="alternate"/>
    <summary>Margherita Favaretto shared her project on GitHub, aimed at realizing a recovering protocol for Lightning Network. The current issue in the Eltoo mechanism is that if one of the two nodes loses some information, it can ask the other node to share the most recent status. However, this mechanism doesn't include the case where the other node shares an older transaction, more favorable for its balance. Margherita's idea is to use the other connected nodes as a backup of one's recent status. For each transaction between A and B, A sends an encrypted information to C regarding the last commitment transaction with B, and for each commitment transaction with C, sends an encrypted information to B regarding the last commitment transaction with C. In this way, if A loses the last transactions, she may ask the information to the other connected node and update the status. Margherita is open to discussion and possible collaborations to work together. Johan suggested Margherita to look into "data loss protection" as defined in the BOLTs, watchtowers, and static and dynamic channel backups, as they touch onto what Margherita is describing.</summary>
    <published>2018-11-01T10:26:09+00:00</published>
  </entry>
</feed>
