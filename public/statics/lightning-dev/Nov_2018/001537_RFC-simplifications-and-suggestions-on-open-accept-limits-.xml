<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RFC: simplifications and suggestions on open/accept limits.</title>
  <updated>2023-05-20T09:00:19.685215+00:00</updated>
  <author>
    <name>Anthony Towns 2018-11-07 09:39:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RFC: simplifications and suggestions on open/accept limits.</title>
    <updated>2023-05-20T09:00:19.685215+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001537.html" rel="alternate"/>
    <summary>A payment protocol is expected to route payments with fractions, provided they are above the set minimum. Even if a fraction of a satoshi is sent, the new balance will be one satoshi lower on-chain since everything is rounded down. However, this doesn't have to affect accounting except occasionally to one's benefit when ending up with a thousand millisatoshis. One can set their fee_base_msat to 2000 msat to make sure every HTLC routed pays at least one satoshi, even with losses from rounding. If willing to find oneself having routed payments for free (after rounding), then setting it to 1000 msat should work too. In this sense, open-source configuration by end-users is possible.</summary>
    <published>2018-11-07T09:39:15+00:00</published>
  </entry>
</feed>
