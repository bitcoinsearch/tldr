<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Packet switching via intermediary rendezvous node</title>
  <updated>2023-05-20T09:03:06.196623+00:00</updated>
  <author>
    <name>Anthony Towns 2018-11-16 15:31:59</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-16 03:24:29</name>
  </author>
  <link href="lightning-dev/Nov_2018/001628_Packet-switching-via-intermediary-rendezvous-node.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001617_Packet-switching-via-intermediary-rendezvous-node.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Packet switching via intermediary rendezvous node</title>
    <updated>2023-05-20T09:03:06.196623+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001628.html" rel="alternate"/>
    <summary>The Lightning-dev mailing list discussed the possibility of packet switching as part of their agenda. Although it was deferred to a later version of BOLT spec, it has become possible due to three features that were not deferred: multi-hop onion packets, identifying "next" by node-id instead of short-channel-id, and onion ephemeral key switching required by rendezvous routing. Different scenarios were discussed where the node-id can be identified through a channel with capacity, without capacity, or without a channel at all. The case where there is no channel can build up packet switching. This also allows some uncertainty about the destination and increases anonymity set of rendezvous routing. The switch-ephemeral-key packet type can be used to forward the packettype 4 to a peer, which might know the destination specified but with some amount of uncertainty. Finally, some issues with creating an arbitrarily long route were discussed.</summary>
    <published>2018-11-16T15:31:59+00:00</published>
  </entry>
</feed>
