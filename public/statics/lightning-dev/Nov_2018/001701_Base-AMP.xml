<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Base AMP</title>
  <updated>2023-05-25T16:26:20.082409+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-11-30 05:53:26</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Base AMP</title>
    <updated>2023-05-25T16:26:20.082409+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001701.html" rel="alternate"/>
    <summary>In an email conversation, ZmnSCPxj suggested using a 2-byte "number of total pieces" to split the bill, but this method wouldn't work well in all cases. For example, it wouldn't work with a dynamic algorithm that tries to pay the whole amount at once and then splits it if it doesn't fit. Rusty Russell explained that using `numpaths` overcommits to what you will do in the future, and is unnecessary anyway. The payee is interested in the total value, not the details of the split.They also discussed a network where there are four paths between payer and payee; three paths have low capacity but negligible feerate, while the fourth has high capacity with expensive feerates. In order to minimize fees when paying a large amount, it would be rational to split among the three low-cost paths. However, if two of those paths fail, it would be better to merge them into a single payment along the expensive fourth path. The remaining succeeding path has already given `numpaths`=3.</summary>
    <published>2018-11-30T05:53:26+00:00</published>
  </entry>
</feed>
