<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Splice Pinning Prevention w/o Anchors</title>
  <updated>2023-06-03T09:40:05.850943+00:00</updated>
  <author>
    <name>Eugene Siegel 2022-08-10 18:03:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Splice Pinning Prevention w/o Anchors</title>
    <updated>2023-06-03T09:40:05.850943+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-August/003671.html" rel="alternate"/>
    <summary>The conversation is about a function in bitcoind called PaysMoreThanConflicts, which checks that a transaction pays a higher fee rate than the replaced transaction. This function is not a BIP125 rule, so it may have caused confusion. The discussion also covers the ancestor bulking variant of pinning and how it matters in certain cases. If a low feerate ancestor junk puts the transaction at the bottom of the mempool, it would require a higher feerate to replace it through BIP125 rule#3, even if it has a high feerate itself. The new funding output can't have 1 OP_CSV unless the commit tx format changes. If it's not encumbered, an attacker can make a junk tree using the anchor output, and pinning exists. It is replaceable using RBF since you have your own commit tx (with anchor) to broadcast.</summary>
    <published>2022-08-10T18:03:14+00:00</published>
  </entry>
</feed>
