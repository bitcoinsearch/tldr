<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BOLT #2: wire protocol: YA acknowledgement change.</title>
  <updated>2023-05-23T23:43:12.194617+00:00</updated>
  <author>
    <name>Pierre 2016-05-18 17:46:44</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-23 21:26:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-17 07:06:37</name>
  </author>
  <link href="lightning-dev/May_2016/000539_BOLT-2-wire-protocol-YA-acknowledgement-change-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2016/000540_BOLT-2-wire-protocol-YA-acknowledgement-change-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2016/000537_BOLT-2-wire-protocol-YA-acknowledgement-change-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BOLT #2: wire protocol: YA acknowledgement change.</title>
    <updated>2023-05-23T23:43:12.194617+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-May/000539.html" rel="alternate"/>
    <summary>Rusty has revised the 02-wire-protocol.md draft and has implemented a protocol simulator to ensure it's reasonable. The summary is that acknowledgement numbers are not needed, and the revocation reply gives everything we need. The draft expresses it in terms of local &amp; remote commitment transactions, and acked and non-acked changesets for both. The revocation reply is the moment at which incoming changes ("unacked") are added to the other side (as "acked"). Rusty has written a layman's writeup and the spec can be found on Github. Tests are available as well and feedback is welcome. Pierre is glad to see progress being made and was able to independently implement a toy version of the protocol and pass Rusty's scripted tests. He wonders why the "nocommitwait" is optional in Rusty's test and asks why two successive commits would be forbidden, given that the more permissive approach is perfectly well defined. Rusty replies that it's simpler if you don't let yourself do multiple in-flight commits. Rusty also explains what YA means and provides a link to a description on Wikipedia.</summary>
    <published>2016-05-18T17:46:44+00:00</published>
  </entry>
</feed>
