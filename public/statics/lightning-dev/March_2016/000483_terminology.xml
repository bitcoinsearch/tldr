<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>terminology</title>
  <updated>2023-05-18T16:45:33.473717+00:00</updated>
  <author>
    <name>Anthony Towns 2016-03-09 06:48:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>terminology</title>
    <updated>2023-05-18T16:45:33.473717+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000483.html" rel="alternate"/>
    <summary>A discussion was held on IRC to determine a term to use in documentation for the failure mode where a node uses too tight a timeout, which results in the node paying out an outgoing HTLC but being unable to redeem the incoming HTLC. The suggested term of "one-sided redemption" was deemed not punchy enough. It was noted that the timeout for outgoing payments is chosen by the node and if the incoming timeout runs out, the outgoing timeout was too long. A suggestion was made to call it "avoiding timeout on incoming HTLC when forwarding" or something similar. The conversation then moved on to the confusion caused by the term "revocation preimage," which is used as the method to invalidate old transactions between pairs of nodes, but should be avoided from being abbreviated to R. It was suggested that "void" be used to describe the old commitment, with "V" as the symbol for the hash/signature/whatever. It was noted that "R" for the HTLC "receipt" seems to work okay so it should be kept.</summary>
    <published>2016-03-09T06:48:50+00:00</published>
  </entry>
</feed>
