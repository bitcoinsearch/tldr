<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Breach tx vulnerability &amp; CPFP attack</title>
  <updated>2023-05-23T23:22:25.973072+00:00</updated>
  <author>
    <name>Jérôme Legoupil 2016-03-28 09:19:42</name>
  </author>
  <author>
    <name>David A. Harding 2016-03-28 16:18:39</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-28 23:47:24</name>
  </author>
  <author>
    <name>Jannes Faber 2016-03-29 01:03:50</name>
  </author>
  <link href="lightning-dev/March_2016/000500_Breach-tx-vulnerability-CPFP-attack.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000501_Breach-tx-vulnerability-CPFP-attack.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000503_Breach-tx-vulnerability-CPFP-attack.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000504_Breach-tx-vulnerability-CPFP-attack.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Breach tx vulnerability &amp; CPFP attack</title>
    <updated>2023-05-23T23:22:25.973072+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000500.html" rel="alternate"/>
    <summary>The context describes a scenario where Alice and Bob have a channel with 50BTC on each side. After some time, the channel ends up with 100BTC in Bob's favor and Alice has 0BTC in that channel. Alice broadcasts the obsolete 50/50BTC commitment tx as well as her revocable tx: Multisig tx -&gt; Alice 50BTC, OP_CSV. When Bob sees that, he broadcasts his breach tx, but it’s not being picked up in blocks. Alice follows up by broadcasting (or privately sending to major pools) the tx: Alice 50BTC -&gt; Alice 25BTC. She is offering miners to share Bob’s 50BTC with her. Alice has nothing to lose behaving this way since she had nothing left in the channel anyways, and miners have a strong financial incentive to wait and hope to include Alice’s 25BTC offer instead of including Bob’s worthless breach tx.To defend against this attack, Bob should not allow any of his channels to drop below a certain amount like 10% or something, in order to keep some guarantee from Alice, so she won’t have an incentive to behave maliciously. Unfortunately, this reduces the channel's efficiency, but this example shows that exhausted channels are insecure. Bob should monitor the blockchain permanently and as soon as he detects an obsolete commitment that is confirmed, he should immediately broadcast his breach tx and assume Alice is offering miners to collude with her. Therefore, he should engage ASAP in a scorched earth policy by broadcasting a replace-by-fee CPFP tx to himself, offering Alice’s share to miners. He can increase the fee until it is picked up. He has an advantage over Alice during the contest period, but his advantage diminishes as the contest period comes near the end. If he wins, Alice loses her 10%, but 10% may not be enough to outbid Alice, and Bob may end up losing money. Bob has better chances to win at a lesser cost, the longer the contest period is. If the channel contains high values, the contest period could be chosen higher than usual at setup to make it more secure.The thread also discusses the importance of small miners in the context of the attack, where Alice offered miners to share Bob's 50BTC with her. Small miners are considered the most efficient at providing the service of being independent from other miners, which is valued because we don't want over 50% of the hashing power to be controlled by any one entity.</summary>
    <published>2016-03-28T09:19:42+00:00</published>
  </entry>
</feed>
