<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Maintenance service for Lightning Network</title>
  <updated>2023-05-23T23:15:27.443367+00:00</updated>
  <author>
    <name>Kumaigorodskiy Anton 2016-03-25 21:21:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Maintenance service for Lightning Network</title>
    <updated>2023-05-23T23:15:27.443367+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000502.html" rel="alternate"/>
    <summary>The author is interested in adding Lightning Network (LN) to their Bitcoin wallet and has been contemplating how it could work for end users. They explain that a payment sender needs at least three pieces of "core" data before interacting with LN, including the required hash of R-value, a list of "full node" URLs where the receiver currently has open channels, and a list of receiver IDs for each "full node." Additionally, the sender may want optional metadata such as name, picture, and address. To avoid confusion, the "Lightning address" and QR-code approach won't work as R-value should be unique. The "core" data should come directly from the receiver's device, either via the internet or locally through Bluetooth, WiFiP2P, NFC, etc. The author notes that the sender needs a way to verify that the receiver is who they say they are, which means resistance to MITM and identity theft, plus some kind of "name authority" to validate metadata. Therefore, LN users should be able to generate stable identities on their devices using EC25519 keys because of their small size and applicability for both encryption and signing. The author suggests that there has to be a service parallel to LN that can transfer "core" data in encrypted form (easy because identities are pubKeys), perhaps store requests for some time if the receiver's device is offline, optionally act as a third-party watcher for broadcasted commitment transactions, and finally, act as "name authority" for users who supplied some metadata along with their public keys. In conclusion, the author asks if their ideas make sense or if they are off somewhere for some reason.</summary>
    <published>2016-03-25T21:21:20+00:00</published>
  </entry>
</feed>
