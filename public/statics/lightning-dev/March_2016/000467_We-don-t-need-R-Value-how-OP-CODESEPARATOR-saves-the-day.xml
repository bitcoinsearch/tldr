<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>We don't need R-Value, how OP_CODESEPARATOR saves the day</title>
  <updated>2023-05-23T22:43:25.502658+00:00</updated>
  <author>
    <name>Nicolas Dorier 2016-03-08 04:44:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>We don't need R-Value, how OP_CODESEPARATOR saves the day</title>
    <updated>2023-05-23T22:43:25.502658+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000467.html" rel="alternate"/>
    <summary>The conversation between two individuals, Nicolas and Joseph Poon, involves the use of signatures as a method of revocation for commitments in Bitcoin transactions. Nicolas suggests using SIGHASH_NOPINPUT to fix the problem of storage requirements, but upon re-reading Poon's post on bitcoin-dev, he realizes that the linear storage of channel participants was already solved. They discuss the possibility of using private keys for HD and whether the index of the commitment would need to be stored in the transaction. Poon proposes disclosing temporary private keys instead of signatures for compact revocable examples. He provides an example of Alice broadcasting the correct commitment and Bob not having access to PrivkeyAlice, but Alice having to wait for the CSV delay. In case Alice does not broadcast the correct commitment, Bob can take the money immediately since she disclosed her private key when creating the new commitment transaction.They also discuss the possibility of using OP_CODESEPARATOR if there is SIGHASH_NOINPUT inside segregated witness in the future, which would allow one signature to apply towards multiple types of transactions. Overall, the conversation is focused on finding efficient ways to handle Bitcoin transactions and revocations.</summary>
    <published>2016-03-08T04:44:05+00:00</published>
  </entry>
</feed>
