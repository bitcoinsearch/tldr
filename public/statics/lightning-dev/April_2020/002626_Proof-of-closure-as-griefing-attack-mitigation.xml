<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof-of-closure as griefing attack mitigation</title>
  <updated>2023-06-03T00:29:36.307801+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-04-12 08:30:29</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof-of-closure as griefing attack mitigation</title>
    <updated>2023-06-03T00:29:36.307801+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002626.html" rel="alternate"/>
    <summary>In the context provided, ZmnSCPxj discusses the possibility of an attack where a malicious node, E, can lock up funds from another node, B, through the creation of new nodes and channels. ZmnSCPxj suggests that this attack may not be solvable through inter-node interactions alone, as a throwaway node could be created for the purpose of executing the attack. The remaining solution, according to ZmnSCPxj, is to require nodes to lock up funds in a separate UTXO, creating an economically-barred identity which can be blamed for bad behavior. This additional cost would deter attackers and prevent potential victims from bearing the cost. ZmnSCPxj suggests that the "superbolt network" idea should consider implementing such a mitigation, as it requires some form of persistent identity anyway.</summary>
    <published>2020-04-12T08:30:29+00:00</published>
  </entry>
</feed>
