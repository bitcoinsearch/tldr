<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-05-23T03:11:39.409573+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 23:13:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-05-23T03:11:39.409573+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002655.html" rel="alternate"/>
    <summary>The discussion between developers Olaoluwa Osuntokun and Matt Corallo focused on the limitations of package limits in Bitcoin contracts. Osuntokun questioned the need for such limitations in more complex contracts, while Corallo defended them as anti-DoS measures. The conversation also touched on monitoring the global mempool for safe execution of transactions, with Osuntokun suggesting it is not complex, but Corallo pointing out potential issues with relying solely on one's mempool. Both parties agreed that as long as one party confirms within the CLTV-delta, everyone is made whole.Throughout the discussion, various open pull requests proposing optimization were mentioned. The feasibility of a "proper" routing node on the network being backed by a full-node was also discussed, with the idea that watching the mempool could mitigate potential attacks. However, the discussion centered on the challenges and potential threats of implementing such a node and the proposed solutions to mitigate them.Adding anchors to lnd 0.10 was suggested as a solution to eliminate the commitment fee guessing game, allowing users to pay less on force close, and enabling reliable enforcement of multi-hop HTLC resolution. The proposal is seen as necessary to coalesce 2nd level HTLC transactions with the same CLTV expiry. The suggestion to make HTLC output spending more free-form with SIGHASH_ANYONECAN_PAY|SIGHASH_SINGLE is deemed unsuitable as it may result in loss of money.An alternative proposal is to pre-sign all HTLC output spends. However, this would require an overhaul in the channel state machine to make presenting a new commitment take at least two phases. In summary, the conversation delved into the technical details of Bitcoin contracts and proposals for optimizing their implementation.</summary>
    <published>2020-04-22T23:13:01+00:00</published>
  </entry>
</feed>
