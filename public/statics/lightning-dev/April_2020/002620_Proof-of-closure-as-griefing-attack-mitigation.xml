<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof-of-closure as griefing attack mitigation</title>
  <updated>2023-06-03T00:18:12.000201+00:00</updated>
  <author>
    <name>Nadav Kohen 2020-04-02 14:56:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof-of-closure as griefing attack mitigation</title>
    <updated>2023-06-03T00:18:12.000201+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002620.html" rel="alternate"/>
    <summary>In a discussion about the proposed proof-of-closure mechanism on Lightning Network, a concern was raised that an attacker could open a channel with themselves and use it to lock up their competitor's channels. While the cost of setting up and tearing down a channel is significant, the attacker could still hold their competitor's funds hostage and have enough liquidity in other channels to facilitate routing. The proposal adds a cost to the attacker of two on-chain transactions, but they can immediately revoke it by knowing both pieces of the revocation private key. However, the proposal is seen as an improvement over the current system but may not properly punish attackers in its current form. It is noted that proof-of-closure is an economic mechanism, not an information-theoretic one. The mere existence of a channel to be later sacrificed is considered punishment enough. The discussion also mentions using upfront payments on payments with abnormally high soft timeouts and the potential issue of giving a proof of closure being equivalent to actually closing the channel in Poon-Dryja channels.</summary>
    <published>2020-04-02T14:56:42+00:00</published>
  </entry>
</feed>
