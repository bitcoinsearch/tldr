<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof-of-closure as griefing attack mitigation</title>
  <updated>2023-06-03T00:29:22.867758+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-04-05 00:54:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof-of-closure as griefing attack mitigation</title>
    <updated>2023-06-03T00:29:22.867758+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002624.html" rel="alternate"/>
    <summary>The conversation between two individuals discusses the possibility of revoking the unilateral close of a self-channel, where the revocation clause would allow one party to claim money immediately and put it into another channel. However, if typical mempools are full and the closing transaction feerate is low, one party may create a close transaction that will be dropped from typical mempools and may never confirm, allowing them to continue using the channel in attacks against its other peers. This is only possible if the same entity controls the other end of the channel. Once a closing transaction is released as proof-of-closure, the counterparty can keep posting it to the mempool, making it safe only if the counterparty cooperates.</summary>
    <published>2020-04-05T00:54:28+00:00</published>
  </entry>
</feed>
