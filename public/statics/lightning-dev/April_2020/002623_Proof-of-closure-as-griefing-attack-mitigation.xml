<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof-of-closure as griefing attack mitigation</title>
  <updated>2023-06-03T00:22:06.604412+00:00</updated>
  <author>
    <name>David A. Harding 2020-04-04 16:05:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof-of-closure as griefing attack mitigation</title>
    <updated>2023-06-03T00:22:06.604412+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002623.html" rel="alternate"/>
    <summary>In a Lightning-dev discussion, ZmnSCPxj notes that if a channel is self-owned, then the counterparty can claim the money immediately and put it into another channel using the revocation clause. The counterparty can also replace the close transaction with a minimal 1-input, 1-output transaction if it's a self-channel. Furthermore, if typical mempools are full and the closing transaction fee rate is very low, then the counterparty can create a close transaction that will be dropped from typical mempools in the near future, allowing them to continue using the channel for attacks against other peers.</summary>
    <published>2020-04-04T16:05:46+00:00</published>
  </entry>
</feed>
