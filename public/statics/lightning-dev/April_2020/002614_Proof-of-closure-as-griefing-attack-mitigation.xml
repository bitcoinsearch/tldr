<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proof-of-closure as griefing attack mitigation</title>
  <updated>2023-06-03T00:15:55.805273+00:00</updated>
  <author>
    <name>Nadav Kohen 2020-04-01 18:07:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proof-of-closure as griefing attack mitigation</title>
    <updated>2023-06-03T00:15:55.805273+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002614.html" rel="alternate"/>
    <summary>The Lightning Network is a payment channel network that enables quick and low-cost transactions. However, there are concerns about "griefing attacks" that can cause intermediate nodes to lose money. One proposed solution is to use up-front payments, but this may make micropayments infeasible. Another solution is Proof-of-Closure, which uses a softer timeout that is measurable in fractions of a second and is not on-chain enforceable.Proof-of-Closure requires significant changes to the update state machine. The basic idea is that if a channel goes unused for a certain period of time, it can be closed unilaterally by either party. This allows intermediate nodes to protect themselves against payer/payee collusions, as they can simply close channels that have been used for griefing attacks.However, this solution raises some potential issues. For example, an attacker could generate a false proof of closure for a channel by setting up a fake channel and using it in a griefing attack. Even if the false proof ends up being published on-chain, the attacker has lost no ability to route and has successfully locked up all the channels of a competitor. Another potential issue is whether it would be advisable to use up-front payments on payments with abnormally high soft timeouts.In conclusion, while there are several proposed solutions to mitigate the effects of griefing attacks, Proof-of-Closure offers a promising solution that addresses the issue without creating economic barriers against normal payments. However, further investigation is needed to address potential issues and ensure the effectiveness of this solution.The article discusses the concept of proof-of-closure in the context of Lightning Network transactions. Specifically, it looks at how unilateral closing of a channel can be safely executed without risking loss of funds due to collusion or falsification. The article explains two approaches - the Decker-Russell-Osuntokun and Poon-Dryja mechanisms - and highlights their strengths and limitations. It also mentions the need for future-proofing and payment decorrelation as privacy measures. The article concludes by acknowledging the mild privacy loss that may occur with the implementation of proof-of-closure.The Lightning-dev mailing list recently discussed the privacy implications of proof-of-closure in relation to malicious payments. The consensus was that proof-of-closure does not result in any privacy loss. The discussion centered on the fact that proof-of-closure only reveals information that is already publicly available on the blockchain. The mailing list is hosted by the Linux Foundation and provides a platform for discussing developments related to the Lightning Network.</summary>
    <published>2020-04-01T18:07:58+00:00</published>
  </entry>
</feed>
