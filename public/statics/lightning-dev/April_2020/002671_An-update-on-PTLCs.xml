<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An update on PTLCs</title>
  <updated>2023-06-03T00:59:25.237404+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-04-24 07:17:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An update on PTLCs</title>
    <updated>2023-06-03T00:59:25.237404+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002671.html" rel="alternate"/>
    <summary>The article delves into the challenges associated with deploying Discreet Log Contracts (DLC) due to bootstrapping issues with oracles. One possible solution to this is Coinbase's new price oracle for the ETH ecosystem, which could simplify deploying a DLC oracle and enable numerous possibilities, including DLC-specific channels and contracts. Another solution is the Defiads project, which allows an oracle service to advertise itself on defiads using a timelocked fidelity bond to back up the advertisement.Equivocation protection in DLC is achieved by forcing the revelation of a scalar behind a point. However, the article highlights that the oracle can still lie without equivocating between different segments of its users. The article also provides an update on the current state of thinking and coding regarding replacing Hash-TimeLock Contracts (HTLCs) with Point-TimeLock Contracts (PTLCs) in lightning payments.PTLCs are considered an improvement over HTLCs because they allow for payment de-correlation along routes, improving privacy and protecting against wormhole attacks. They also open up various interesting applications such as stuckless payments with proof of payment, escrow contracts over Lightning, and High/DLOG AMP. However, implementing PTLCs would require significant changes to the core channel state machine, HTLC scripts, on-chain HTLC handling and resolution, path finding algorithms, invoice changes, and onion blob processing.Nadav Ivgi, a Bitcoin and Lightning Network developer, has published an article on Payment Points, a new type of atomic swap contract for the Lightning Network. Payment Points allow for more complex contracts to be built on top of Lightning, such as multi-payment setups, Discreet Log Contracts (DLC), and barrier escrows. To implement Payment Points, Taproot, a proposed soft fork for Bitcoin, is needed. For now, developers have found a way to execute PTLCs on Bitcoin using 1p-ECDSA adaptor signatures. Nadav encourages further experimentation with PTLCs so that when Taproot is finally available, a safer and more stable Lightning Network can be implemented.</summary>
    <published>2020-04-24T07:17:07+00:00</published>
  </entry>
</feed>
