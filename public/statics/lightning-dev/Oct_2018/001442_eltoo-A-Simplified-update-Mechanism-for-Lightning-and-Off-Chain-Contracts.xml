<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-24T23:54:36.349929+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-10-12 03:20:55</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-24T23:54:36.349929+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001442.html" rel="alternate"/>
    <summary>In a discussion about the Lightning specification, it was suggested to use a larger overall counter for updates by always having two update transactions and incrementing highbits when lobits saturates. This creates a single counter with 10^18 possible updates. This method is useful for channels that require more than 1 billion updates as resetting the locktime by rolling over to new update keys can be done. This would save a transaction if a cooperative close is done rather than an unilaterally close. Rolling over to new update keys requires an extra transaction on-chain. The suggestion for this method came from Anthony Towns.</summary>
    <published>2018-10-12T03:20:55+00:00</published>
  </entry>
</feed>
