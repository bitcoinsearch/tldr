<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - RFC: simplifications and suggestions on open/accept limits.</title>
  <updated>2023-05-25T14:43:07.678644+00:00</updated>
  <author>
    <name>Rusty Russell 2018-10-17 03:22:41</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-07 09:39:15</name>
  </author>
  <author>
    <name>alexis petropoulos 2018-11-09 06:47:55</name>
  </author>
  <author>
    <name>Gert-Jaap Glasbergen 2018-11-05 08:48:56</name>
  </author>
  <author>
    <name>Christian Decker 2018-11-06 03:40:12</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-07 01:31:55</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-01 01:03:19</name>
  </author>
  <author>
    <name>Gert-Jaap Glasbergen 2018-11-06 22:22:56</name>
  </author>
  <author>
    <name>Gert-Jaap Glasbergen 2018-11-07 02:26:29</name>
  </author>
  <author>
    <name>Pierre 2018-11-07 04:51:21</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-11-09 06:53:56</name>
  </author>
  <author>
    <name>Gert-Jaap Glasbergen 2018-10-30 10:56:13</name>
  </author>
  <link href="lightning-dev/Oct_2018/001464_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001537_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001548_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001517_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001525_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001529_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001487_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001526_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001530_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001533_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001549_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001483_RFC-simplifications-and-suggestions-on-open-accept-limits-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - RFC: simplifications and suggestions on open/accept limits.</title>
    <updated>2023-05-25T14:43:07.678644+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001464.html" rel="alternate"/>
    <summary>The Lightning Network developers are currently engaged in negotiations regarding the protocol, as there are disagreements on various variables such as funding_satoshis, dust_limit_satoshis, max_htlc_value_in_flight_msat, channel_reserve_satoshis, and minimum_depth. Suggestions have been made to address these variables, with a focus on finding the right configuration options that strike a balance between freedom of choice and complexity. One suggestion is to treat the dust limit as the atomic unit instead of using millisatoshis.In an email conversation thread, the participants discuss how various parameters govern Bitcoin's Lightning Network and how they can be configured for optimal performance. They address issues such as the minimum size of payments and channel balances, the maximum value of HTLCs in flight, the reserve required for each channel, and the minimum depth required for transactions. Suggestions are made to improve efficiency, such as setting a higher funding_satoshi limit to prevent unilateral channel closings during fee spikes and making the dust_limit_satoshis variable in future.The Lightning Network developers have also proposed rules for implementing a new feature that would reject channels deemed too small. The suggested limit for rejecting channels is three times the minimum dust limit, rounded down to the nearest integer (i.e., 546 * 3). The max_htlc_value_in_flight_msat variable is also being evaluated, and the suggestion is to require the channel_reserve_satoshis percentage to be rounded down.Furthermore, the htlc_minimum_msat variable is being considered for removal since different implementations accept different values. Finally, the maximum number of accepted htlcs allowed should be increased to 483, which is the number given by both c-lightning and lnd, and the minimum_depth field can be limited to three. The developers are striving to simplify certain aspects of the Lightning Network protocol negotiation while negotiating the desire to not support sub-satoshi payments.</summary>
    <published>2018-10-17T03:22:41+00:00</published>
  </entry>
</feed>
