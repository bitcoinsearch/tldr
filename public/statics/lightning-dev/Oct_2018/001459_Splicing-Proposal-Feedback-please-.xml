<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Splicing Proposal: Feedback please!</title>
  <updated>2023-05-25T14:04:53.461540+00:00</updated>
  <author>
    <name>Christian Decker 2018-10-16 12:38:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Splicing Proposal: Feedback please!</title>
    <updated>2023-05-25T14:04:53.461540+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001459.html" rel="alternate"/>
    <summary>In a Lightning-dev discussion, a user suggests implementing the "pre-seating of inputs" from the multiple funding output approach. This would allow clients to generate addresses that others could deposit to and then splice directly into the channel. The process involves two public-key-derivation paths for each channel to create on-chain addresses and initiating a splice-in automatically when someone sends to one of the on-chain addresses in the path. This process can be implemented as a feature without requiring changes to the Lightning Network BOLT protocol. There are concerns about the safety of this approach without trust in the other peer, as the other party could refuse to create the new commit transaction. However, using a Taproot address can solve this issue by revealing the script it commits to, which is just a time-locked refund that requires a single signature. In case of an uncollaborative refund, the entirety of the funds needs to be claimed by one endpoint, and third-party funds will come from an on-chain wallet that is under the control of either party so the refund should go back to that party anyway.</summary>
    <published>2018-10-16T12:38:17+00:00</published>
  </entry>
</feed>
