<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-24T23:47:41.451585+00:00</updated>
  <author>
    <name>Christian Decker 2018-10-13 10:12:03</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-24T23:47:41.451585+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001453.html" rel="alternate"/>
    <summary>The Lightning Network specification uses a penalty-based invalidation mechanism, but eltoo is a drop-in replacement for this. One issue with eltoo's locktime-based sequencing is that it limits the number of updates to 1 billion. However, ZmnSCPxj suggests an adaptive scheme in which a second update transaction is added at around 90% of the available range; this effectively creates a larger overall counter with 10^18 possible updates. Alternatively, Anthony Towns suggests always having two update transactions, creating a single counter with 10^18 possible updates, and rolling over to new update keys after using more than 1 billion updates on a channel. This would make unilateral closes more painful, but keep cooperative closes cheap. Christian Decker notes that he did not think 1 billion updates would be used anytime soon since splice-in/splice-out operations would lead to regular on-chain re-anchoring.</summary>
    <published>2018-10-13T10:12:03+00:00</published>
  </entry>
</feed>
