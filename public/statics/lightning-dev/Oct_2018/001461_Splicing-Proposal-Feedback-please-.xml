<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Splicing Proposal: Feedback please!</title>
  <updated>2023-05-25T14:05:17.158997+00:00</updated>
  <author>
    <name>Rusty Russell 2018-10-16 22:30:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Splicing Proposal: Feedback please!</title>
    <updated>2023-05-25T14:05:17.158997+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001461.html" rel="alternate"/>
    <summary>Rusty Russell proposes a new protocol for side splice-in which treats splice-in and splice-out the same. The new protocol would require inline splice-in to have wait time, but since splice-out doesn't need this, it would not be necessary. The proposed protocol includes four types: `prepare any output with script of specific form`, `splice_in`, `update_splice_in_accept`, and `update_splice_in_reject`. The recipient of `splice_in` checks if the `blockheight` is far enough into the future and validates the claimed output before sending `update_splice_in_accept`. From that point onwards, all commitment transactions have one extra signature. However, Lisa found out that parallel splice does not work with Poon-Dryja channels as the counterparty can spend the old funding txout with a revoked spend. Rusty tried to come up with workarounds but nothing was successful, so he went back to Plan A.</summary>
    <published>2018-10-16T22:30:15+00:00</published>
  </entry>
</feed>
