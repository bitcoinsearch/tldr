<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-24T23:54:23.499577+00:00</updated>
  <author>
    <name>Christian Decker 2018-10-11 17:37:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-24T23:54:23.499577+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001441.html" rel="alternate"/>
    <summary>In a discussion about the eltoo Lightning Network specification, Anthony Towns suggests using new update keys to reset the locktime and state numbers when there are more than 1 billion updates to a channel. Christian Decker had originally believed that this number of updates was unlikely, but Towns explains that it could be possible with regular on-chain operations. To implement this, one would need to use an extra transaction on-chain to roll-over to the new update keys when unilaterally closing, but cooperative closes would remain cheap. This process could be repeated every time another 1 billion updates occur. The eltoo specification is a drop-in replacement for the penalty-based invalidation mechanism currently used in the Lightning Network.</summary>
    <published>2018-10-11T17:37:56+00:00</published>
  </entry>
</feed>
