<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-20T08:35:54.161786+00:00</updated>
  <author>
    <name>Anthony Towns 2018-10-13 11:40:30</name>
  </author>
  <author>
    <name>Anthony Towns 2018-10-10 08:25:46</name>
  </author>
  <author>
    <name>Anthony Towns 2018-07-18 10:02:38</name>
  </author>
  <link href="lightning-dev/Oct_2018/001454_eltoo-A-Simplified-update-Mechanism-for-Lightning-and-Off-Chain-Contracts.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001435_eltoo-A-Simplified-update-Mechanism-for-Lightning-and-Off-Chain-Contracts.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001363_eltoo-A-Simplified-update-Mechanism-for-Lightning-and-Off-Chain-Contracts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-20T08:35:54.161786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001454.html" rel="alternate"/>
    <summary>The conversation between Christian Decker and ZmnSCPxj on October 13th, 2018 focuses on the Lightning Network's eltoo penalty-based invalidation mechanism. They propose an adaptive scheme that uses two update transactions to create a larger overall counter. As a result, a single counter with 10^18 possible updates can be provided, which should be sufficient for a while without reanchoring. The email also discusses resetting the locktime by rolling over to use new update keys, which would allow for more than one billion updates to channels.Anthony Towns suggests in an email from April 30th, 2018 that it is possible to reset the locktime by using new update keys and using an extra transaction on-chain during unilateral closing. This approach would save a transaction if cooperative close was used instead. The email thread proposes a replacement mechanism for the penalty-based invalidation used in Lightning Network, called eltoo. The suggested mechanism proposes a simpler ratchet mechanism with a few nice features like transactions that can pay the market fees and can be CPFPed by a transaction spending the channel balance. Both parties can claim their funds at the same time. Although the game theory looks fine, there are still a few issues encountered while specifying and implementing the Lightning Network. However, this scheme is not suitable for untrusted outsourcing, and it still requires NOINPUT and does not work with adversarial outsourcing.</summary>
    <published>2018-10-13T11:40:30+00:00</published>
  </entry>
</feed>
