<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Route reliability&lt;-&gt;fee trade-off control parameter</title>
  <updated>2023-06-03T06:29:46.707255+00:00</updated>
  <author>
    <name>Joost Jager 2021-11-15 19:26:51</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Route reliability&lt;-&gt;fee trade-off control parameter</title>
    <updated>2023-06-03T06:29:46.707255+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-November/003345.html" rel="alternate"/>
    <summary>The context of the conversation is about probability-based routing and feature engineering. The speaker mentions that reliability can and should be expressed as a probability, which is discussed in a prior article. They go on to explain that they implemented a form of probability-based routing in lnd in March 2019 and refined it through several rounds. Regarding feature engineering, there are two steps: feature selection and combining features. Feature selection involves computing a min cost flow with a chosen cost function that represents the weights on the edges of the graph. The cost function should represent a combination of fees and reliability, but there are other potential features that could be used in the future to deliver more optimal results. Combining features involves using a weighted linear sum or harmonic mean to combine selected features. The speaker wants something anchored to an understandable starting point, so they worked with payment attempt cost, which is a virtual satoshi amount that represents the cost of a failed attempt. By putting a high price on failed attempts, pathfinding will tend towards more reliable routes even if they require a higher fee. Ultimately, the fee/reliability trade-off is up to the user to decide on.</summary>
    <published>2021-11-15T19:26:51+00:00</published>
  </entry>
</feed>
