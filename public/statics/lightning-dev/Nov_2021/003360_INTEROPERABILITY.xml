<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>INTEROPERABILITY</title>
  <updated>2023-06-03T06:34:45.075083+00:00</updated>
  <author>
    <name>x raid 2021-11-23 16:31:43</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>INTEROPERABILITY</title>
    <updated>2023-06-03T06:34:45.075083+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-November/003360.html" rel="alternate"/>
    <summary>The conversation revolves around the issue of liquidity on mainnet for testing before a public release. The proposal suggests that each team should provide boxes and channel liquidity as stake on mainnet for tests before announcing a public release to ensure smooth transitioning into the future envisioned mass. However, it is noted that not all members of all teams are independently wealthy and cannot afford significant liquidity on mainnet or can afford good Internet connection and keeping a device operational 24/7. This raises the barrier towards contribution. The open-source model allows those with skill but not money to contribute directly, while those who do not have the skill but have the money can contribute by hiring developers to work on the project they want. If users are confused, they can aggregate their resources and fund one or two developers to review and contribute to the project they are using, and maybe some hardware and coins for boxes they keep running. The real issue here is how to aggregate the will of a group of people without risking that some centralized "manager" of resources gets incentives that diverge from the group of people and starts allocating resources in ways that the group of people would, in aggregate, disagree with.Additionally, the idea of outsourcing the running of boxes with channels on mainnet for impl release and rc versions is suggested, but managing analysis of the team impl themselves is recommended. That said, the proposal raises concerns about where to set a proper cap in time for collections. The central point collector could be run outside of the impl team's perimeter and sponsored, but there are concerns regarding the leakage of information like who channel counterparties are and how often HTLCs are forwarded, exact dates, and times of each event, which could be used to locate a node and become a target for a targeted attack. Sensitivity redaction of logs and automated redaction are suggested, but this must be done carefully to avoid leaks.</summary>
    <published>2021-11-23T16:31:43+00:00</published>
  </entry>
</feed>
