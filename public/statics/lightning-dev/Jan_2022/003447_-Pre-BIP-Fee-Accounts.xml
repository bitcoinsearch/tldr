<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-03T07:19:40.107265+00:00</updated>
  <author>
    <name>Billy Tetrud 2022-01-19 16:51:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-03T07:19:40.107265+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-January/003447.html" rel="alternate"/>
    <summary>A proposal has been made for a new account system in Bitcoin that could be used to clean up the fee paying semantics. Currently, fees are a part of transactions, which makes it difficult to write DoS resistant payment channels and other long-lived smart contracts. The proposed account-based approach would define a special "fee account" output type that anyone can spend. This could potentially fix dust leakage for eltoo-like protocols and make the API less vulnerable to pinning issues.The proposed design involves using separate UTXO databases for fee accounts and only allowing two types of transactions to be signed by fee accounts. These transactions are committed in an extension block merkle tree and can be released into fees or consolidated together. The design is considered scalable and could potentially be modified for improved privacy. The Lightning Network is mentioned as a potential use case for this design. However, the proposal is still at the conceptual review stage, and the design space is wide open. There are concerns about centralization if this type of design were done as a federated network that bribes miners, as such an approach would mean there is a centralizing layer interfering with normal mining. Previously, a special type of transaction called a "Sponsor" was proposed to allow arbitrarily appending fees to a transaction to bump it up in the mempool. The account-based approach is an alternative to this. The current system of fees being a part of transactions they occur in makes writing DoS resistant payment channels and other long-lived smart contracts difficult. In summary, the proposed account-based approach to handling fees in Bitcoin transactions could potentially improve the overall system. However, the proposal is still in the conceptual review stage, and further work is needed to determine the best way to implement this approach while avoiding any potential centralization issues.</summary>
    <published>2022-01-19T16:51:48+00:00</published>
  </entry>
</feed>
