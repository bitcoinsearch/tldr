<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Inherited IDs - A safer, more powerful alternative to BIP-118 (ANYPREVOUT) for scaling	Bitcoin</title>
  <updated>2023-06-03T05:54:22.598096+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-09-21 02:11:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Inherited IDs - A safer, more powerful alternative to BIP-118 (ANYPREVOUT) for scaling	Bitcoin</title>
    <updated>2023-06-03T05:54:22.599095+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-September/003234.html" rel="alternate"/>
    <summary>In a recent email exchange, ZmnSCPxj raised concerns over the requirement of an on-chain transaction to update the set of channels created by a factory. He argued that this defeats the purpose of having a factory in the first place, which is to allow for changes in the set of channels without requiring an on-chain transaction. He pointed out that such factories can be created today without even Taproot. The funding transaction output pays to a simple n-of-n, which is spent by an off-chain transaction that splits the funds to the current set of channels. To change the set of channels, the participants create an alternate transaction and sign it but do not broadcast it. Then they sign the alternate transaction and broadcast it, which updates the set of channels with an on-chain transaction. This approach works without changes to Bitcoin and even without Taproot, although the witness size becomes large for large N without Taproot. In essence, this approach is a "no updates" factory that cuts through its closing transaction with the opening of a new factory.</summary>
    <published>2021-09-21T02:11:42+00:00</published>
  </entry>
</feed>
