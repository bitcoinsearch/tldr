<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stateless invoices with proof-of-payment</title>
  <updated>2023-06-03T05:54:34.986120+00:00</updated>
  <author>
    <name>Joost Jager 2021-09-23 09:48:06</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stateless invoices with proof-of-payment</title>
    <updated>2023-06-03T05:54:34.986120+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-September/003253.html" rel="alternate"/>
    <summary>The conventional approach to generating invoices on a node involves storing the invoice together with order details in a database. However, this setup requires protection against unbounded generation of payment requests and needs rate limiting. To avoid this, Redis can be used as an alternative. Another option is using elkrem or shachain to generate deterministic payment hashes without the need for state at all. It can also be beneficial to add more data into the hash function such as the payment amount and the order details. The service could maintain a unique elkrem/shachain state for each unique user to collapse the pre-image into the hash chain, which lets them save space and reproduce a given "proof that someone in the world paid" statement dynamically.</summary>
    <published>2021-09-23T09:48:06+00:00</published>
  </entry>
</feed>
