<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Do we really want users to solve an NP-hard problem when they wish to find a cheap way of paying each	other on the Lightning Network?</title>
  <updated>2023-05-23T16:09:38.213705+00:00</updated>
  <author>
    <name>Matt Corallo 2021-09-01 12:44:35</name>
  </author>
  <author>
    <name>Matt Corallo 2021-09-01 05:33:23</name>
  </author>
  <link href="lightning-dev/Sept_2021/003219_Do-we-really-want-users-to-solve-an-NP-hard-problem-when-they-wish-to-find-a-cheap-way-of-paying-each-other-on-the-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2021/003216_Do-we-really-want-users-to-solve-an-NP-hard-problem-when-they-wish-to-find-a-cheap-way-of-paying-each-other-on-the-Lightning-Network-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Do we really want users to solve an NP-hard problem when they wish to find a cheap way of paying each	other on the Lightning Network?</title>
    <updated>2023-05-23T16:09:38.213705+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-September/003219.html" rel="alternate"/>
    <summary>In a Lightning-dev mailing list thread, ZmnSCPxj cautions against accepting the proposal algorithm as "optimal," as it is only optimal under a specific heuristic used to approximate what the user wants. He explains that there are various things to balance, such as CLTV, feed, estimated failure probability calculated from node online percentages at-open liquidity, and even fees. However, he mentions that all of these can be translated into a single unit, the millisatoshi. Matt responds to ZmnSCPxj's message, stating that doing so involves some heuristics on the part of the application developer. Thus, there is no correct or optimal answer to how to do this, only various designs different folks have. Additionally, how you balance competing costs may lead to different score units, such as probability of success, and that's fine, neither is provably better than the other.Anthony Towns responds to the original post by asking whether users should solve an NP-hard problem when they want to find a cheap way of paying on the Lightning Network. He adds his opinion that if thatâ€™s the way it turns out, then sure. He compares it to "apt-get install," which solves an NP-hard problem every time it runs, and if it fails too often, developers will re-analyze and add a new heuristic to cope with it.Orfeas Stefanos Thyfronitis Litos responds to Anthony's post, acknowledging the issue as a thorny one. He expresses concern about relying on constantly finding new heuristics to approximate a solution to an NP-hard problem, as it allows too much room for nonconstructive disagreement between LN developers in the future. In a worst-case scenario, all implementations end up using different, incompatible heuristics because each group of developers thinks that they have the best one, leading to a suboptimal performance for everyone. He also notes that such an approach is much more suitable to Debian, as they have full control and a complete view over their "network" of packages.</summary>
    <published>2021-09-01T12:44:35+00:00</published>
  </entry>
</feed>
