<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LN without SegWit: less efficient or less secure?</title>
  <updated>2023-05-24T00:52:48.805445+00:00</updated>
  <author>
    <name>Andrés G. Aragoneses  2017-01-16 08:26:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LN without SegWit: less efficient or less secure?</title>
    <updated>2023-05-24T00:52:48.805445+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-January/000660.html" rel="alternate"/>
    <summary>In a discussion about the Lightning Network's approach to channel timeouts, Anthony Towns explains that Lightning uses CLTV and CSV to make the HTLC steps work. This is in contrast to the approach described on Bitcoin Stack Exchange, which adds a channel timeout. However, Towns notes that this approach is not a 100% solution on its own because the merchant can choose not to provide the second signature back to the customer ever, in which case the customer can't access their funds again until the refund time arrives. Andrés G. Aragoneses asks about the use of OP_CLTV/OP_CSV-style channels instead of Spillman-style channels, referencing a stop-gap solution using OP_CHECKSEQUENCEVERIFY or a less-optimal use of OP_CHECKLOCKTIMEVERIFY that will be described in a future paper by Rusty Russell. Aragoneses suggests that using CLTV (or CSV) for the refund transaction could be called an hypothetical Level2.5 of LN, with Level 3 being the one requiring SegWit.</summary>
    <published>2017-01-16T08:26:15+00:00</published>
  </entry>
</feed>
