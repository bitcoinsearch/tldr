<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blockstream Successfully Tests End-to-End Lightning Micropayment Transaction</title>
  <updated>2023-05-24T00:33:51.374049+00:00</updated>
  <author>
    <name>gb 2016-10-05 21:11:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blockstream Successfully Tests End-to-End Lightning Micropayment Transaction</title>
    <updated>2023-05-24T00:33:51.374049+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000628.html" rel="alternate"/>
    <summary>A blog post by Rusty Russell, a developer at Blockstream, described their recent use of a v0.5 C lightning prototype that demonstrated a completed transaction which included invoicing, multi-hop payment, and item delivery. The test was set up using a web server to create invoices for test bitcoin payments over the lightning network. Christian Decker, another Blockstream developer, purchased an ASCII cat picture using 0.01 test bitcoin to open a lightning channel with the server. After a single confirmation, he paid the invoice with a 100 satoshi transfer and accessed the link to find his cat picture. He discovered it was an ASCII picture with two cats and promptly opened another node, connected to the first node, and bought a second copy of the cat picture by routing through the previous node. The Digital Ocean server runs Apache, bitcoind, and lightningd. When accessed, a CGI script calls 'lightning-cli invoice 100000' to create an invoice, which is presented to the user. The user clicks through a unique link, and if 'lightning-cli listinvoice' indicates that the invoice was paid, the script presents the picture. This is the first end-to-end test of a lightning micropayment network, including invoicing, multi-hop payment, and item delivery. Blockstream developers found a few bugs in corner cases and hit some known FIXMEs, but also made lightningd more robust against misconfiguration. There are a few rough edges that they still want to smooth and some documentation that they'd like to write before the 0.5 release. They want to create libraries to allow web developers to play with constructing their own cat picture stores. The low production value fits with the ASCII art.</summary>
    <published>2016-10-05T21:11:49+00:00</published>
  </entry>
</feed>
