<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BOLT Draft] Onion Routing Spec</title>
  <updated>2023-05-18T16:51:54.820850+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2016-10-20 22:26:07</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BOLT Draft] Onion Routing Spec</title>
    <updated>2023-05-18T16:51:54.820850+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000637.html" rel="alternate"/>
    <summary>During a discussion on updating the Lightning Network specification, Christian Decker mentioned that they have dropped the end-to-end payload from the specification and kept the shared secret backlog for now. They discussed committing the routing information to the payment hash which was deemed awkward since it would increase the per-hop payload size which is expensive to do. They envisioned that the payment hash would be a parameter to the packet processing/creation function and would be concatenated to the material being authenticated similar to the "associated data" in AEAD cipher modes. This way there is no additional data added to the packets but the payment hash is authenticated as part of packet processing at each hop. If an adversary attempts a replay, then they're forced to use the same payment hash, otherwise the packet won't propagate. Assuming all nodes remember all payment hashes, then replay attempts always fail and come at a direct monetary cost to the attacker.</summary>
    <published>2016-10-20T22:26:07+00:00</published>
  </entry>
</feed>
