<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BOLT Draft] Onion Routing Spec</title>
  <updated>2023-05-18T16:50:37.904158+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2016-10-03 17:21:35</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BOLT Draft] Onion Routing Spec</title>
    <updated>2023-05-18T16:50:37.904158+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000625.html" rel="alternate"/>
    <summary>The conversation discusses the use of EC-Schnorr for on-chain keys instead of EC-DSA. The public/priv keys would remain the same, allowing the keys to be used for signing/verifying multi-sign for channel authentication proofs. The importance of protecting different secrets is highlighted and it is noted that compromise of the identity public key could allow an attacker to open/accept authenticated+confidential p2p connections on the network. It is suggested that all keying material should be as independent as possible from a compartmentalization standpoint. The commit keys should be rolled anew for each channel to enable per-channel process signers with mlock'd secrets and dedicated hardware. Separating onion privkey allows rotation, which would be beneficial if forward secrecy was obtained. The comms symmetric key should also be rotated with forward secrecy in mind. A simple ratcheting scheme could be included in the initial p2p spec.</summary>
    <published>2016-10-03T17:21:35+00:00</published>
  </entry>
</feed>
