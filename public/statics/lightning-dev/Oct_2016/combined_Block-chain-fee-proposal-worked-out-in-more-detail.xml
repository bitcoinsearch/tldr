<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Block chain fee proposal worked out in more detail</title>
  <updated>2023-05-24T00:37:22.981998+00:00</updated>
  <author>
    <name>CJP 2016-10-10 20:53:25</name>
  </author>
  <author>
    <name>Rusty Russell 2016-10-17 03:15:17</name>
  </author>
  <link href="lightning-dev/Oct_2016/000631_Block-chain-fee-proposal-worked-out-in-more-detail.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000634_Block-chain-fee-proposal-worked-out-in-more-detail.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Block chain fee proposal worked out in more detail</title>
    <updated>2023-05-24T00:37:22.981998+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000631.html" rel="alternate"/>
    <summary>The author discusses a proposal for extracting bitcoin fees from the HTLC creator on establishment and from the recipient on HTLC success. The proposal involves A depositing into a channel as a way of paying B, with an extra amount stored in the channel and a fee required for commit tx. Next, A makes a microtx to B, which requires extra fees for HTLC. The commit tx outputs change while the tx is locked or released to B or returned to A. Similarly, B makes a microtx to A with changes in the commit tx outputs. The algorithm involves shifting the non-fee part while using the channel and deducting the HTLC's extra fees from the HTLC itself. However, the author questions if this proposal is worth the complexity, and how to change the fee size when on-blockchain fee market conditions change.</summary>
    <published>2016-10-10T20:53:25+00:00</published>
  </entry>
</feed>
