<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Eltoo / Anyprevout &amp; Baked in Sequences</title>
  <updated>2023-05-23T15:22:50.038570+00:00</updated>
  <author>
    <name>Anthony Towns 2021-07-08 08:44:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Eltoo / Anyprevout &amp; Baked in Sequences</title>
    <updated>2023-05-23T15:22:50.038570+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-July/003114.html" rel="alternate"/>
    <summary>In a Bitcoin development mailing list, Jeremy raised concerns over the usage of Eltoo and absolute lock time simultaneously. He pointed out that it is not possible to use Eltoo in such a case due to overloading of the CLTV clause. Jeremy suggested the use of per-input locktimes to address the issue. This would allow satisfying both concerns but disallow using a relative locktime and an absolute locktime for the same input. To tackle this, a new CSV type, 'eltoo sequences' could be defined. However, this technique cannot be used with a sequence tag. Therefore, adding a per-input absolute locktime to the annex was suggested as a better alternative. This approach could also be used to add a commitment to an historical block hash to disambiguate which branch of a chain split or reorg a transaction is valid for.</summary>
    <published>2021-07-08T08:44:16+00:00</published>
  </entry>
</feed>
