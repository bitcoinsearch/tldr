<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Turbo channels spec?</title>
  <updated>2023-06-03T04:28:57.441090+00:00</updated>
  <author>
    <name>ZmnSCPxj 2021-07-05 02:20:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Turbo channels spec?</title>
    <updated>2023-06-03T04:28:57.441090+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-July/003108.html" rel="alternate"/>
    <summary>The email thread discusses the implementation of zero-conf channels, which are not currently specified. A strawman proposal is suggested, where a new feature bit called "I accept zeroconf channels" is assigned, and if both parties negotiate this, update_add_htlc can be sent before funding_locked without upsetting the peer. The risks for the funder are that the channel never confirms, while the risks for the fundee are that the funder doublespends, so the HTLCs must not be routed out to others unless there is another reason to trust the peer. The terminology used in the discussion is also nitpicked, with "funder" and "fundee" being deprecated in favor of "initiator" and "acceptor". Finally, it is noted that the substantial feature of turbo channels is the confirmation of the channel, not the opening process itself, and what matters is the sender and receiver of an HTLC, not who is the acceptor or initiator.</summary>
    <published>2021-07-05T02:20:01+00:00</published>
  </entry>
</feed>
