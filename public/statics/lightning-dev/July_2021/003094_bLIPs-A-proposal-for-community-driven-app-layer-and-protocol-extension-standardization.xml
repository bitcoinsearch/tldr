<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>bLIPs: A proposal for community-driven app layer and protocol extension standardization</title>
  <updated>2023-06-03T04:32:10.987300+00:00</updated>
  <author>
    <name>fiatjaf 2021-07-01 10:38:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>bLIPs: A proposal for community-driven app layer and protocol extension standardization</title>
    <updated>2023-06-03T04:32:10.987300+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-July/003094.html" rel="alternate"/>
    <summary>A new feature for atomic splitting of bills has been introduced along with a request for bLIP for compatibility. Ryan Gentry via Lightning-dev has initiated a discussion around how the BOLT process handles features and best practices that arise in the wild vs originating within the process itself. The discussion revolves around adding a BIP-style process (bLIPs? SPARKs?) on top of the BOLTs to describe and organize app layer best practices, especially those that require coordination. This would not affect the existing BOLT process but simply add a place for app layer best practices to be documented. Some potential bLIP ideas that people have mentioned include each lnurl variant, on-the-fly channel opens, AMP, dynamic commitments, podcast payment metadata, p2p messaging formats, new pathfinding heuristics, remote node connection standards, etc. A branch has been created to describe such a process based on BIP-0002. Developers from various implementations and from the broader app layer ecosystem are encouraged to volunteer as editors.</summary>
    <published>2021-07-01T10:38:46+00:00</published>
  </entry>
</feed>
