<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Impact of eltoo loss of state</title>
  <updated>2023-06-03T05:09:36.208937+00:00</updated>
  <author>
    <name>Jeremy 2021-07-12 22:20:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Impact of eltoo loss of state</title>
    <updated>2023-06-03T05:09:36.208937+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-July/003131.html" rel="alternate"/>
    <summary>Jeremy Rubin suggests a solution to fix the lost state issue in blockchain. One way to do this would be to encrypt data in an OP_RETURN for any update transaction for each participant. This way, if there is an update on a state that one doesn't have, they can use their static key to decrypt the relevant data for what PK_si signed off on. Another possible solution is to make the scripts similar to CLTV DROP PKu CHECKSIGVERIFY GETLOCKTIME BIP32DERIVE CHECKTRANSACTIONSIGNEDFROMSTACK, 2016 CSV DROP PK_si CHECKSIG. To upgrade to state M&gt;= N+1, one would have to publish a transaction signed with the BIP32 derived key for that update in the future. The downside is that it results in double publishing of txdata on the chain but ensures data availability.</summary>
    <published>2021-07-12T22:20:41+00:00</published>
  </entry>
</feed>
