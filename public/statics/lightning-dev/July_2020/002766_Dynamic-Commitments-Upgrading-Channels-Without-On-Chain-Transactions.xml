<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Dynamic Commitments: Upgrading Channels Without On-Chain Transactions</title>
  <updated>2023-05-23T14:10:26.008231+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2020-07-21 22:31:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Dynamic Commitments: Upgrading Channels Without On-Chain Transactions</title>
    <updated>2023-05-23T14:10:26.008231+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-July/002766.html" rel="alternate"/>
    <summary>Olaoluwa Osuntokun, a developer for Lightning Labs, has proposed an extension to the Lightning Network specification and channel state machine which would allow for on-the-fly commitment format or type changes. This modification will make it possible to upgrade existing channels to new safer types without any new on-chain transactions.To resolve ambiguity in channel type negotiation, the channel type used for funding will be made explicit via a new 'channel_type' TLV that would be added to 'open_channel' and 'accept_channel' messages. Two new messages, 'commit_switch' and 'commit_switch_reply', will be added to handle the process. The initiator-only etiquette will be retained but if both sides are allowed to initiate, collisions will need to be handled.The Lightning Network (LN) is proposing a protocol modification that allows nodes to upgrade their commitments without any on-chain transactions. This will allow LN to explore new channel types and create another point of extensibility in the protocol. Using the power of TLV message extensions, the `channel_type` specified on a given `commit_sig` message should be the `channel_type` of the new commitment being created. More complex channel types may require the exchange of additional keys or parameters which need to be known in order to reconstruct the new commitment format and verify the new signature. Allowing channel types to be upgraded on the fly lets us update the network to the new safer channel types in a desynchronized, distributed manner that doesn't require any on-chain transactions.The proposal has been made with the aim of upgrading all the existing LN-involved channels to the new anchor commitment format, which is the safest format yet. Feedback is welcome on the proposal as LND has committed to exploring this direction.</summary>
    <published>2020-07-21T22:31:45+00:00</published>
  </entry>
</feed>
