<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Dynamic Commitments: Upgrading Channels Without On-Chain Transactions</title>
  <updated>2023-06-03T01:50:51.903014+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-07-22 02:32:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Dynamic Commitments: Upgrading Channels Without On-Chain Transactions</title>
    <updated>2023-06-03T01:50:51.903014+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-July/002770.html" rel="alternate"/>
    <summary>In a discussion among developers, ZmnSCPxj proposed an upgrade transaction that transitions from the Poon-Dryja to the Decker-Russell-Osuntokun ("eltoo") mechanism. The transition is needed because the P2WSH used by Poon-Dryja channels will not work with the newer mechanism. An adaptor or an upgrade transaction can be created to move from one type to another, and the only thing to watch for would be old states for the oldest mechanism the channel had at the time of construction or the upgrade transaction. The upgrade transaction is a 1-input 1-output transaction that spends from the previous funding outpoint for a particular channel mechanism and then creates a new funding outpoint. This transaction is kept off-chain in the database and ignored at mutual close. The channel retains its short-channel ID, which may be useful since it implies high reliability on the part of both participants, and pathfinding algorithms may bias towards such long-lived channels.</summary>
    <published>2020-07-22T02:32:47+00:00</published>
  </entry>
</feed>
