<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-06-03T00:54:26.743757+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2020-06-19 07:44:11</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-06-03T00:54:26.743757+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-June/002739.html" rel="alternate"/>
    <summary>The email thread discusses proposals to protect against an attacker pinning a preimage transaction while preventing users from learning that preimage for at least `N` blocks. A lot of ideas have been thrown at the problem and are scattered across emails, IRC discussions, and github issues. The author has spent some time putting it all together in one gist, hoping that it will help stir the discussion forward as well as give newcomers all the background they need to ramp up on this issue and join the discussion, bringing new ideas to the table. The gist provides an alternative proposal that loosely reflects Matt's proposal and includes anchors and new txs only in some places. The author believes the official anchor outputs proposal should be safe enough and is much simpler if there are high enough `cltv_expiry_delta`, off-chain preimage broadcast, LN hubs participating in various mining pools to help discover preimages, and decent mitigations for eclipse attacks. The email also includes a discussion on the hashlock branch proposal by Matt.</summary>
    <published>2020-06-19T07:44:11+00:00</published>
  </entry>
</feed>
