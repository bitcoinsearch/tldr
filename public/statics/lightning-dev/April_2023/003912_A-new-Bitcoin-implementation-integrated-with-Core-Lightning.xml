<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A new Bitcoin implementation integrated with Core Lightning</title>
  <updated>2023-06-03T11:36:02.005380+00:00</updated>
  <author>
    <name>Michael Folkson 2023-04-19 10:54:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A new Bitcoin implementation integrated with Core Lightning</title>
    <updated>2023-06-03T11:36:02.005380+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-April/003912.html" rel="alternate"/>
    <summary>The email exchange between Michael Folkson and Kostas Karasavvas revolved around the default policy changes for Lightning. Michael expressed difficulty in following the discussions about the proposed changes and their criteria since they are scattered and not discussed seriously by some developers. To address this issue, Michael created a Bitcoin StackExchange post and recommended Bitcoin Core PR review clubs. Kostas countered Michael's suggestion of integrating full node and Lightning node, saying that separation of concerns is necessary to manage complexity. However, Michael argued that having two separate P2P networks and protocols would not make sense if most nodes are both full and Lightning nodes. It could also potentially lead to an easier tracking of edge cases and a more intuitive user experience. Kostas also suggested that the effort to integrate the two nodes would be better spent on separating the consensus logic or making a second libbitcoinkernel attempt. Michael acknowledged that libbitcoinkernel can achieve smaller goals but was skeptical about its ambitious goal of having different implementations with libbitcoinkernel at its core. He cited the recent btcd/lnd bugs as an example of consensus bugs that can crop up in unexpected places. Michael also shared his idea of a bare bones Knots-style Bitcoin implementation integrated with Core Lightning as an alternative to the current way the Bitcoin Core project is being managed. He said that the project has collected a lot of cruft over time, and parts of the codebase that no one is using should probably just be removed. However, the extent to which one can safely chop off the cruft and maintain a less crufty fork of Bitcoin Core is not clear yet.The email exchange ended with Michael saying that it would be nice to focus on ambitious projects, even if just conceptually, for a while given the ecosystem's constant evolution and improvement. In addition, there seems to be a lull in the chaos surrounding the activation of soft forks in the Bitcoin community, which Michael expressed gratitude for on Twitter. The post was originally shared on the bitcoin-dev mailing list, and Michael can be reached via email at michaelfolkson@protonmail.com or on Keybase as michaelfolkson. His PGP key is also provided. The post was shared by kkarasavvas on Twitter.</summary>
    <published>2023-04-19T10:54:10+00:00</published>
  </entry>
</feed>
