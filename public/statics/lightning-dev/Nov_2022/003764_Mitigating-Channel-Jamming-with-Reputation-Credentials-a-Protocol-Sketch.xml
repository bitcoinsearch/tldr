<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Mitigating Channel Jamming with Reputation Credentials: a Protocol Sketch</title>
  <updated>2023-06-03T10:39:04.962710+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-11-25 23:12:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Mitigating Channel Jamming with Reputation Credentials: a Protocol Sketch</title>
    <updated>2023-06-03T10:39:04.962710+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-November/003764.html" rel="alternate"/>
    <summary>The current reputation-credential architectural framework assumes credentials distribution at the endpoint of the network, however, it should be flexible enough for credentials to be harvested by LSPs and distributed in a secondary fashion to their spokes or attached transparently thanks to trampoline. However, this design intuition may not work as planned as competitor LSPs could easily apply to be a spoke on their rival's network and jam up several payments, reducing the reputation of their competitor. This is even worse if the competitor attaches their credentials on trampolines as the attacker doesn't need to apply to be a spoke. Therefore, the competitor needs a way to ensure that their spokes/trampoline requesters are not trying to jam them to drain their reputation. Ultimately, all reputation rests with ultimate senders who have to convince LSPs to sell their reputation to them as the price of sold reputation cannot be too high or low otherwise it is no different from upfront fees.</summary>
    <published>2022-11-25T23:12:08+00:00</published>
  </entry>
</feed>
