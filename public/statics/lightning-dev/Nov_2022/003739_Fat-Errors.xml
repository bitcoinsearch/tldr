<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fat Errors</title>
  <updated>2023-06-03T10:26:19.221501+00:00</updated>
  <author>
    <name>Thomas HUET 2022-11-03 15:12:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fat Errors</title>
    <updated>2023-06-03T10:26:19.221501+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-November/003739.html" rel="alternate"/>
    <summary>In a mailing list post, Joost Jager proposes a solution to the long-standing problem of gaps in error attribution in Lightning. Rusty Russell expresses interest in implementing this proposal and suggests using 16 hops as the limit, which would make the payload and hmacs around 4.5k. Russell also mentions an alternative pre-pay scheme he previously described where a sender sends N sats and a secp point, and every chained secret returned earns the forwarder 1 sat. The answers are placed in each layer of the onion, allowing the sender to know how far the onion got based on how much money they got back on failure. Thomas suggests two ways to keep the size small: adding each node's hmac in a naive way without deleting any part of the message to relay or using a low limit on the number of nodes and reverting to the legacy system if the failure happens after the first 8 hops.</summary>
    <published>2022-11-03T15:12:00+00:00</published>
  </entry>
</feed>
