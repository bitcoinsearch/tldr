<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Mitigating Channel Jamming with Reputation Credentials: a Protocol Sketch</title>
  <updated>2023-06-04T04:23:26.801668+00:00</updated>
  <author>
    <name>Antoine Riard 2022-11-21 04:01:24</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-22 00:26:22</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-23 01:13:06</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-23 15:59:56</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-25 02:21:54</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-25 15:40:11</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-26 02:23:39</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-28 18:48:52</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-28 21:34:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-12-01 11:52:13</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-12-01 12:28:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-12-02 00:33:20</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-24 02:48:06</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-24 14:44:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-25 23:12:08</name>
  </author>
  <author>
    <name>Michael Folkson 2022-11-26 10:52:54</name>
  </author>
  <author>
    <name>David A. Harding 2022-11-26 20:48:49</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-28 11:50:45</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-30 04:07:41</name>
  </author>
  <author>
    <name>Antoine Riard 2022-12-02 01:07:09</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-21 18:15:38</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-22 20:54:04</name>
  </author>
  <author>
    <name>David A. Harding 2022-11-27 16:34:57</name>
  </author>
  <author>
    <name>Michael Folkson 2022-11-29 16:25:31</name>
  </author>
  <link href="lightning-dev/Nov_2022/003754_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003756_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003758_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003759_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003762_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003763_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003765_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003771_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003772_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003775_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003776_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003778_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003760_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003761_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003764_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003766_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003767_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003770_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003774_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003779_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003755_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003757_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003768_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003773_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Mitigating Channel Jamming with Reputation Credentials: a Protocol Sketch</title>
    <updated>2023-06-04T04:23:26.801668+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-November/003754.html" rel="alternate"/>
    <summary>Antoine Riard has proposed a new mitigation proposal to solve channel jamming in the Lightning Network. The proposal uses "credentials" issued by routing hops and attached to each HTLC forward request. These credentials can be used by a reputation algorithm to allocate channel liquidity resources efficiently and reward/punish payment senders. The proposal is built on previous reputation-scheme research and integrates recent proposals of upfront fees as a mechanism to bootstrap the reputation system. The framework should be flexible enough for the credentials to be harvested by LSPs and distributed transparently to their spokes. The proposal could benefit the Lightning Network by improving its efficiency and preventing channel jamming. Clara Shikhelman expressed concern about the lack of a recommended policy for Antoine's proposed solution. Antoine responded that he is currently focusing on refining the proposed credentials architectural framework. Dynamic routing policy in function of channel congestion rate, combined with reputation to do active risk-management, are more advanced questions. He believes that a simple recommended policy is needed, but refinement can occur over time with solid foundations.Antoine also proposes a staking/reputational credentials system to save on unconditional fees paid by HTLC senders. Routing nodes can maintain a 0-risk HTLC forwarding acceptance by requesting strict binding between the acquisition cost of credentials and channel liquidity routed. Higher returns can be achieved with an adjusted ratio of credentials to liquidity, but this comes with higher risks. A "pure reputation" system can also be layered on top of this monetary paradigm to allocate more significant liquidity slots based on identity quality. Antoine discusses the economic aspects of new tokens and their secondary markets with Clara Shikhelman via email. He believes that secondary markets are expected to only happen between LSP and their spokes, where "trust" relationships already exist, making it harder to formalize.Several other individuals have been discussing the issue of credential tampering by intermediary nodes in classic payment paths within the Lightning Network. The proposed solution involves using staking/reputational credentials that are dependent on fat errors to assign payment path failure correctly. The conversation also explores alternatives for fresh credentials refill in the case of blinded paths and potential risks associated with them.Additionally, Antoine proposes a decentralized credit system that allows nodes to issue credentials redeemable for liquidity. This system could be extended beyond jamming prevention to create a generalized risk-management framework for the Bitcoin decentralized financial network. The potential impact on routing fees, ratecards, flow-control valves, and the liquidity toolchain must be studied.The conversation also touches upon the double-spend problem in secondary markets and suggests using the WabiSabi technique to address this. The use of credential tokens in the Lightning Network prevents DoS attacks by allowing only one-time creation of a single HTLC. Economic relationships between LSPs and their clients make token harvesting at the LSP-level possible. However, there are potential risks associated with token harvesting, such as an attacker tying up liquidity for many links and having higher return rates than attacker liquidity due to routing algorithms historical data.Overall, the conversation explores several potential solutions to issues within the Lightning Network and encourages further research and feedback.The Lightning Network community has been discussing the need for a recommended policy related to the use of tokens in transactions. Antoine Riard proposed a simple policy that covers full routing fees with no jamming risk and suggested using liquidity value credentials requested in function of local channel congestion rate or network data, which can increase returns in exchange for higher risk exposure. He also suggested laying on top a reputation layer where scores are fully fungible against monetary credentials. Clara expressed concern about the timeline for presenting such a policy, and Antoine suggested refining the proposed credentials architectural framework. Michael Folkson expressed skepticism about embedding a reputation layer into the Lightning protocol.There were discussions on preventing transaction malleability on the Lightning Network by using "commitment schemes" that bind each payment to a specific transaction ID. The Lightning development community provided positive feedback on the proposed mechanism, but some developers had concerns about its complexity and performance impact.In a discussion on Lightning-dev mailing list, the risk of loss of reputation of Lightning Service Providers (LSP) due to competitors is discussed. Riard explains that credential tokens are blinded so forwarding nodes can't use them to determine the origin of payment and assign blame. The attack on LSPs should not be economically rational as Bob can limit the damage by not giving more tokens after too many failures. Reputation still rests with ultimate senders who have to convince LSPs to sell their reputation to them because they might secretly be competitor LSPs who have an incentive to drain their reputation.Antoine Riard has proposed a reputation system for routing nodes in the Lightning Network (LN) to track historical performance metrics and determine trustworthiness in forwarding transactions. This could incentivize new routing hops to attract more traffic and lower acquisition costs but could also introduce centralization inertia. The ecosystem impacts on items such as inbound channel routing fees, ratecards, and flow-control valves must be studied to ensure future</summary>
    <published>2022-11-21T04:01:24+00:00</published>
  </entry>
</feed>
