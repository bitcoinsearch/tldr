<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PTLCs early draft specification</title>
  <updated>2023-06-03T06:45:44.914956+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2021-12-21 15:25:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PTLCs early draft specification</title>
    <updated>2023-06-03T06:45:44.914956+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-December/003433.html" rel="alternate"/>
    <summary>The discussion is centered around the use of payment points and hashes in Lightning Network transactions. With HTLCs, payment_hash is committed directly inside transaction scripts, which requires keeping track of all payment_hash seen to be able to recreate the scripts if outputs are revoked. This leads to "toxic waste" on-chain and privacy concerns. However, with PTLCs, payment_point is committed outside the scripts (in the adaptor signature), allowing for independent recreation of scripts without revealing the payment details on-chain. The conversation also touches on using local_anchor keys and revkeys, with the conclusion that revkeys cannot be used due to potential issues with bumping remote commitments. Additionally, the possibility of channel state growing without bound is addressed, with the proposed solution being to forget old PTLCs while reconstructing scripts using revocation keys and private keys. Overall, the conversation delves into technical aspects of Lightning Network transactions and ways to improve efficiency and privacy.</summary>
    <published>2021-12-21T15:25:41+00:00</published>
  </entry>
</feed>
