<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
  <updated>2023-05-23T16:42:39.907895+00:00</updated>
  <author>
    <name>Matt Corallo 2021-12-27 19:12:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
    <updated>2023-05-23T16:42:39.907895+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-December/003436.html" rel="alternate"/>
    <summary>In a recent email discussion, Matt Corallo and Rusty Russell talked about the challenges of sending invoices when using bolt12. One issue that arose was the inability to preprint amountless invoices because each invoice must contain an amount. This is different from bolt11, where you can receive a receipt but no amount. To address this problem, they proposed a generic authorization mechanism with a fallback node. The offer would contain a fallback node that would either return an invoice signed by the expected node or one signed by itself and an authorization from the expected node. The authorization could be specific to a certain offer or amount, or have an expiry. This method allows for users to choose the trust model they want. Additionally, the fallback node could provide an onion message notification service to avoid polling. Matt agreed with this proposal and suggested that for the tipping use-case, it would be acceptable to include a BOLT-12 response without an amount included under the signature, as long as a signed amount from the fallback node is provided.</summary>
    <published>2021-12-27T19:12:10+00:00</published>
  </entry>
</feed>
