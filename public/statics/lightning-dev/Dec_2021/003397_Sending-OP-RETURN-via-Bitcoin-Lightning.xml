<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Sending OP_RETURN via Bitcoin Lightning</title>
  <updated>2023-06-03T06:39:15.828690+00:00</updated>
  <author>
    <name>Alex Schoof 2021-12-09 12:12:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Sending OP_RETURN via Bitcoin Lightning</title>
    <updated>2023-06-03T06:39:15.828690+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-December/003397.html" rel="alternate"/>
    <summary>In a discussion between Alex and Peter Todd, the topic of Single Use Seals and multisig schemes was brought up. Single Use Seals require an on-chain transaction to post proof of publication to the ledger when an asset is transferred, but it can be scaled by batching many proofs into a merkle tree and adding the merkle root into a single transaction going into the ledger. For the on-chain aggregation seals, choosing a common aggregation service provider ahead of time may lead to availability and censorship risks if the provider disappears. Instead, mitigating these risks can be achieved by having a seal commit to three out of five next seals. This approach provides users with the ability to choose what kind of censorship risk they are willing to take and to mitigate it using "multisig" schemes that use multiple aggregators in parallel.</summary>
    <published>2021-12-09T12:12:45+00:00</published>
  </entry>
</feed>
