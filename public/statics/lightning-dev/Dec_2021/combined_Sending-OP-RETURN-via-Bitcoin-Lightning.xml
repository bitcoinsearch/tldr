<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sending OP_RETURN via Bitcoin Lightning</title>
  <updated>2023-06-04T02:43:06.915477+00:00</updated>
  <author>
    <name>Karl 2021-12-06 10:20:55</name>
  </author>
  <author>
    <name>Christian Moss 2021-12-06 16:35:19</name>
  </author>
  <author>
    <name>Christian Moss 2021-12-09 09:49:11</name>
  </author>
  <author>
    <name>Alex Schoof 2021-12-09 12:12:45</name>
  </author>
  <author>
    <name>Christian Moss 2021-12-06 12:38:30</name>
  </author>
  <author>
    <name>Martin Habov≈°tiak 2021-12-06 11:31:29</name>
  </author>
  <author>
    <name>Peter Todd 2021-12-09 09:12:59</name>
  </author>
  <author>
    <name>Peter Todd 2021-12-09 10:07:37</name>
  </author>
  <author>
    <name>Peter Todd 2021-12-09 12:56:19</name>
  </author>
  <link href="lightning-dev/Dec_2021/003374_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003404_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003406_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003397_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003403_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003375_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003395_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003396_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003398_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Sending OP_RETURN via Bitcoin Lightning</title>
    <updated>2023-06-04T02:43:06.916468+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-December/003374.html" rel="alternate"/>
    <summary>The bitcoin-dev mailing list has been discussing the possibility of using OP_RETURN to create and trade non-fungible tokens (NFTs) on Bitcoin. However, it was noted that it is not possible to make transactions with this opcode via Lightning because NFTs are not liquid. The best off-chain solution for NFTs on Bitcoin is using Ruben Somsens state chain protocol, which allows swapping utxos off-chain, and those off-chain utxos could harbor an op return/nft. It is possible to define a protocol that associates an OP_RETURN with ownership and transfer ownership via Lightning by sending associated currency via lightning. It is also possible to define a protocol that gives divisible ownership to OP_RETURNs, including via Lightning. Peter Todd, a well-known Bitcoin developer, responded to Christian Moss's concerns about the scalability of NFTs using RGB. Each transaction involving NFTs would require an on-chain transaction, which would not be scalable. However, RGB plans to scale NFTs and similar things in the future using scalable single-use-seals. In his 2017 article, Todd explains that single-use seals require an on-chain transaction to post proof of publication to the ledger when an asset is transferred, but it can scale because multiple proofs can be batched into a Merkle tree and added to a single transaction going into the ledger.In another discussion between Alex and Peter Todd, the topic of Single Use Seals and multisig schemes was brought up. Single Use Seals require an on-chain transaction to post proof of publication to the ledger when an asset is transferred, but it can be scaled by batching many proofs into a merkle tree and adding the merkle root into a single transaction going into the ledger. For the on-chain aggregation seals, choosing a common aggregation service provider ahead of time may lead to availability and censorship risks if the provider disappears. Instead, mitigating these risks can be achieved by having a seal commit to three out of five next seals. This approach provides users with the ability to choose what kind of censorship risk they are willing to take and to mitigate it using "multisig" schemes that use multiple aggregators in parallel.To summarize, the discussions revolve around the possibility of using OP_RETURN to create and trade NFTs on Bitcoin and the scalability concerns associated with such transactions. RGB aims to address this issue in the future by leveraging scalable single-use-seals, while multisig schemes can be used to mitigate censorship and availability risks associated with common aggregation service providers.</summary>
    <published>2021-12-06T10:20:55+00:00</published>
  </entry>
</feed>
