<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning-dev Digest, Vol 35, Issue 13 (sighash_noinput &amp; watchtowers)</title>
  <updated>2023-05-25T01:49:02.507694+00:00</updated>
  <author>
    <name>Rusty Russell 2018-07-14 00:48:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning-dev Digest, Vol 35, Issue 13 (sighash_noinput &amp; watchtowers)</title>
    <updated>2023-05-25T01:49:02.508694+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-July/001361.html" rel="alternate"/>
    <summary>The discussion is about the application of sighash_noinput which allows a reduction in the number of stored signatures as it can spend any uxto with the respective one-use pub key script. However, it is being questioned whether privacy is being traded off in the case of watchtowers as they reveal which states are related. Eltoo is mentioned as it requires SIGHASH_NOINPUT which means that only the latest transaction is needed instead of a penalty tx for every state change. The txid_half + encrypted blob guarantees that nothing is learned about each state and how they relate unless a revocation must happen. On the other hand, it doesn't scale as it requires one blob per outsourced state. Once signatures are reused for multiple states with sighash_noinput, the question arises as to how information disclosure to a third party can be minimized. Although no full design has been done yet, encryption using the txid is suggested as a possible solution. A twist is that the watchtower may need to consider transactions that have already been spent by one or a chain of SIGHASH_NOINPUT transactions, but this is considered easy.</summary>
    <published>2018-07-14T00:48:15+00:00</published>
  </entry>
</feed>
