<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Payment Point Feature Family (MultiSig, DLC, Escrow, ...)</title>
  <updated>2023-06-02T20:52:16.474410+00:00</updated>
  <author>
    <name>Nadav Kohen 2019-10-10 16:22:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Payment Point Feature Family (MultiSig, DLC, Escrow, ...)</title>
    <updated>2023-06-02T20:52:16.474410+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002216.html" rel="alternate"/>
    <summary>In this conversation, the participants discuss the implementation of a miniscript-like language for lightning network transactions. They explore various ideas, including revealing proof of knowledge rather than scalars and using pay-for-signature to reveal Schnorr signatures. The conversation also touches upon the use of economically-rational atomicity and computationally-intractable security in barrier escrows. The concept of a Barrier Escrow as a Service is also discussed, with the suggestion that there may be a need for a standard communication interface. Finally, the participants outline a High AMP protocol with rules for the receiver, such that only when the receiver acquires all branches as incoming payments will it be able to reconstruct the secret `z` and thereby claim its payment. The protocol is detailed step by step, with each participant learning the necessary secrets to claim their part of the transaction.</summary>
    <published>2019-10-10T16:22:45+00:00</published>
  </entry>
</feed>
