<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-02T20:33:12.836079+00:00</updated>
  <author>
    <name>Chris Stewart 2019-10-01 12:23:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-02T20:33:12.836079+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002179.html" rel="alternate"/>
    <summary>Bitcoin developer Christian Decker is seeking feedback on several proposals related to Taproot, a privacy and scalability-focused upgrade to the Bitcoin protocol. He has written a post on the Bitcoin-dev mailing list asking for input on the usefulness of three proposals: noinput / anyprevoutanyscript / anyprevout, chaperone signatures, and output tagging.Noinput / anyprevoutanyscript / anyprevout would enable users to spend from any unspent transaction output (UTXO) without revealing which UTXO they are spending from. This proposal could enhance privacy and reduce transaction fees by allowing wallets to consolidate multiple UTXOs into one transaction with lower fees. However, this proposal could lead to fund loss if the signing path that controls an exchange's on-chain funds gets mixed up with the second signing path using SIGHASH_NOINPUT. Chaperone signatures add an additional signature to transactions that use noinput / anyprevoutanyscript / anyprevout. The purpose of this additional signature is to prevent attackers from modifying the transaction in transit. However, adding chaperone signatures may increase computational and storage overhead.Output tagging proposes to make it impossible to send funds to certain types of outputs, such as those used in off-chain contracts. This proposal could help prevent accidental sending of funds to the wrong type of output, but could also harm fungibility by marking outputs used in a contract as such.Decker is asking for feedback on whether these proposals are useful and whether there is strong support or opposition to each proposal. He is also asking whether BIP-118 and bip-anyprevout should be merged, and if there are any other proposals that he has missed. It is important to avoid enabling the rebinding mechanism unintentionally, and NOINPUT MUST NOT be used unless explicitly needed for the application.</summary>
    <published>2019-10-01T12:23:47+00:00</published>
  </entry>
</feed>
