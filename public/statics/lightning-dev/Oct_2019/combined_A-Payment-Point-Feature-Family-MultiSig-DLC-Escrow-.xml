<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A Payment Point Feature Family (MultiSig, DLC, Escrow, ...)</title>
  <updated>2023-06-03T22:43:26.192422+00:00</updated>
  <author>
    <name>Nadav Kohen 2019-10-09 23:42:54</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-10-11 07:46:44</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-10-10 04:31:06</name>
  </author>
  <author>
    <name>Lloyd Fournier 2019-10-11 00:57:21</name>
  </author>
  <author>
    <name>Orfeas Stefanos Thyfronitis Litos 2019-10-11 10:36:29</name>
  </author>
  <author>
    <name>Jonas Nick 2019-10-11 11:49:44</name>
  </author>
  <author>
    <name>Nadav Kohen 2019-10-19 06:00:26</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-10-10 15:15:30</name>
  </author>
  <author>
    <name>Nadav Kohen 2019-10-10 16:22:45</name>
  </author>
  <author>
    <name>Lloyd Fournier 2019-10-11 00:41:34</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-10-15 05:01:09</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-10-24 06:39:27</name>
  </author>
  <link href="lightning-dev/Oct_2019/002213_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002225_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002214_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002222_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002227_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002228_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002234_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002215_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002216_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002221_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002232_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002239_A-Payment-Point-Feature-Family-MultiSig-DLC-Escrow-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A Payment Point Feature Family (MultiSig, DLC, Escrow, ...)</title>
    <updated>2023-06-03T22:43:26.193421+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002213.html" rel="alternate"/>
    <summary>On October 9, 2019, Nadav Kohen proposed new lightning contracts using Payment Points (PP) and ECDHing. These contracts can be used to create Multisig, Escrow, and DLCs. Payment points are proposed where payees receive a PTLC offer in exchange for the secret behind `S + Z`, while forwarding nodes receive a PTLC offer that they should forward in exchange for the secret behind `F + Y`. The author categorizes these new features into two categories: PoP and Commitment Applications. The Escrow Contract idea is based on the point S + ECDH(B,E) where S is the seller's point, B is the buyer's point, and E is the escrow's point. This allows for scalar discovery by the seller in collaboration with the buyer or the escrow, i.e., S AND (B OR E). The article describes a framework for creating a miniscript-like language for SCRIPT-based `OP_CHECKSIG`s and Lightning. In a Lightning Network mailing list, the participants discussed the use of barrier escrows for payment points on LN. They proposed grouping shares of a payment into parallel attempts using conditional discrete logarithm-based access structures. The proposed scheme involves atomic multi-payment setup via barrier escrows and payment re-negotiation using barrier escrows for selling DLC positions. Additionally, High AMP is interoperable with "Stuckless" payments. The participants also discussed the implementation of a miniscript-like language for lightning network transactions and explored various ideas. In another discussion, Nadav Kohen suggested using payment points and ECDH to create complex access structures for lightning contracts such as multi-signature, escrow, and Discreet Log Contracts (DLCs). ZmnSCPxj suggests contributing to the scriptless scripts repo to standardize terminology and notation for ideas in the scriptless space. Finally, in a comparison between Boomerang payment and ZmnSCPxj's High AMP + Stuckless proposal, the latter was found to be better as it required fewer layers of PTLCs than the former, had incentives for the payer to fail the second-layer PTLC, and had cool hacks like Barrier Escrows. Overall, these proposals aim to improve Lightning network's functionality and flexibility, allowing for more complex transactions and contracts to be created while maintaining security and trustlessness.</summary>
    <published>2019-10-09T23:42:54+00:00</published>
  </entry>
</feed>
