<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-02T20:33:58.179608+00:00</updated>
  <author>
    <name>Christian Decker 2019-10-03 09:42:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-02T20:33:58.179608+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002197.html" rel="alternate"/>
    <summary>In a discussion about implementing Decker-Russell-Osuntokun or eltoo, ZmnSCPxj proposes using a trigger transaction to separate timeout start and the actual update/settlement pairs. However, another user suggests that a trigger transaction is not necessary for Decker-Russell-Osuntokun and that any update transaction could spend the funding transaction output directly. The conversation then turns to the issue of having a refund transaction without a pre-signed settlement transaction. In this case, the first update and settlement pair can be signed before funding, without the need for noinput/anyprevoutanyscript. The use of output tagging would mandate that the first update must be published so that the funding output is indistinguishable from a normal output. Collaborative closes are still indistinguishable, but unilateral closes require the switch and would be identifiable anyway.The discussion then shifts to whether it's possible to keep outputs as unidentifiable as possible in off-chain payment networks. Although Lightning supports unpublished channels, nodes need to have the option of not announcing their channels to reduce noise in the network. Furthermore, historical channels that have been cooperatively closed are no longer normally gossiped, so the fact that they used to be channels is no longer widely broadcast, and may eventually be forgotten by most or all of the network.</summary>
    <published>2019-10-03T09:42:00+00:00</published>
  </entry>
</feed>
