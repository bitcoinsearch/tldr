<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_CAT was Re: Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-02T20:40:33.438194+00:00</updated>
  <author>
    <name>Jeremy 2019-10-04 18:40:53</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_CAT was Re: Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-02T20:40:33.438194+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002220.html" rel="alternate"/>
    <summary>A proposal was made to replace OP_CAT with an OP_SHA256STREAM that uses the streaming properties of a SHA256 hash function to allow concatenation of an unlimited amount of data, provided the only use is to hash it. The proposed implementation would start a new hash with item, add the item to the hash in state, and finalize it. However, one issue with this is that the simplest implementation where the state is just raw bytes would expose raw SHA256 midstates, allowing people to use them directly. This could be prevented by adding types to the stack. It was noted that SHA256 isn't designed to be used in situations where adversaries control the initialization vector, and that midstate support was not added to OpenTimestamps for this reason. A link was provided to an example of an experienced cryptographer on the bitcoin-dev mailing list proposing a design that falls victim to this attack, and it was suggested that this issue should not be encouraged.</summary>
    <published>2019-10-04T18:40:53+00:00</published>
  </entry>
</feed>
