<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A Payment Point Feature Family (MultiSig, DLC, Escrow, ...)</title>
  <updated>2023-06-02T20:55:17.137541+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-10-11 07:46:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A Payment Point Feature Family (MultiSig, DLC, Escrow, ...)</title>
    <updated>2023-06-02T20:55:17.138545+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002225.html" rel="alternate"/>
    <summary>The first discussion is about the Premium-free American Call Option mitigation, which is a security mechanism that can be used to implement various features such as barrier escrow and decorrelation. The proposal suggests defining terms such as attempt, sub-payment, and payment for better understanding. Payment points are also proposed where payees receive a PTLC offer in exchange for the secret behind `S + Z`, while forwarding nodes receive a PTLC offer that they should forward in exchange for the secret behind `F + Y`, where `Y = y * G`. Payers can make single payments or split payments via AMP into two sub-payments with simultaneous attempts per sub-payment via Stuckless.If a barrier escrow is desired, a node that supports High AMP should be located, and an invoice should be requested from it. In another context, the focus is on ensuring that the participant has a clear understanding of `z_all[p]` and is not attempting to cancel keys or using the MuSig technique. The writer suggests naming the language "Improv" since it is scriptless. The assistant acknowledges the writer's choice of name as an excellent one and compliments their level of acculturation.</summary>
    <published>2019-10-11T07:46:44+00:00</published>
  </entry>
</feed>
