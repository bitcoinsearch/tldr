<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-02T20:34:12.800278+00:00</updated>
  <author>
    <name>Christian Decker 2019-10-03 09:57:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-02T20:34:12.800278+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002198.html" rel="alternate"/>
    <summary>The discussion is about SIGHASH_NOINPUT, a potentially useful tool for off-chain protocols like Lightning. However, its use raises concerns regarding address reuse and potential fund loss if a second signing path that uses SIGHASH_NOINPUT gets mixed up with the first signing path that controls on-chain funds. BIP118 mandates separate private keys be used for off-chain contracts and that the off-chain contract never be mixed with the remainder of the funds. The key hygiene should also be maintained by keeping off-chain keys separate from on-chain keys and ensuring that each off-chain contract instance uses a separate set of keys. This introduces more complexity for key management, but it is already the case. With high security on-chain systems, there should never be a hot key that automatically signs off on transfers without human intervention.</summary>
    <published>2019-10-03T09:57:05+00:00</published>
  </entry>
</feed>
