<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Thoughts on CoinSwap privacy relative to Lightning</title>
  <updated>2023-06-01T18:21:58.602002+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-10-25 07:27:49</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Thoughts on CoinSwap privacy relative to Lightning</title>
    <updated>2023-06-01T18:21:58.602002+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002245.html" rel="alternate"/>
    <summary>ZmnSCPxj, a Bitcoin developer, has shared his thoughts on the CoinSwap protocol and related protocols that seem similar to payment channels in an email to the bitcoin-dev mailing list. He explained that one way of implementing CoinSwap involves pre-creating a backout transaction, which is a future-nLockTime transaction that returns the funds to their provider if the swap protocol aborts. He also highlighted Spillman channels and how the backout transaction in his CoinSwap proposals is similar to the Spillman initial backout transaction. ZmnSCPxj then proposed the implementation of CoinSwap over Lightning Network, explaining the ingredients needed and the ritual to concoct the CoinSwap. He introduced some problematic issues with CoinSwap, such as same-amount correlation and server logs problem, and explained how CoinSwap-over-Lightning could help with these issues. ZmnSCPxj stressed the importance of using published channels to avoid the Axiom of Terminus and recommended having multiple buffer channels to various points of the network. He concluded by saying that it is often best if the receiver node is a permanent node that also performs at least some amount of forwarding to hide its traffic.</summary>
    <published>2019-10-25T07:27:49+00:00</published>
  </entry>
</feed>
