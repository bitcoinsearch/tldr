<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Continuing the discussion about noinput / anyprevout</title>
  <updated>2023-06-02T20:35:56.569710+00:00</updated>
  <author>
    <name>Ethan Heilman 2019-10-01 14:27:21</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Continuing the discussion about noinput / anyprevout</title>
    <updated>2023-06-02T20:35:56.569710+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-October/002184.html" rel="alternate"/>
    <summary>The email thread discusses the potential adoption of the sighash_noinput and anyprevoutput* proposals to enable eltoo, but also to make possible better off-chain protocol designs generally. One of the benefits of this proposal is less interactive payment channel negotiation. Concerns were raised about the vague idea that rebindable transactions could be somehow misused or abused. However, these concerns can be classified and addressed. There was a discussion about the usefulness of noinput/anyprevoutanyscript/anyprevout, with general agreement on its adoption to enable eltoo and other off-chain protocol designs. The downside of chaperone signatures was discussed, with one additional downside being the additional code complexity required to flag whether or not a chaperone output is included. On the other hand, creating a no_input digest that skips the prevout and prevscript parts of a tx is much less intrusive and easier to maintain. Output tagging/explicit opt-in was also discussed, with the point made that tagged outputs negatively impact the anonymity set of taproot transactions. The suggested workaround would impose a cost to unilateral closes of an additional translation transaction, and not using the work around would cause a hit to anonymity for off-chain script users. In conclusion, the email thread suggests merging BIP-118 and bip-anyprevout, and also considers both chaperone signatures and output tagging as part of the discussion of security alternatives, but not part of the initial specification. Efforts like descriptors will help people follow best practices when working with complex scripts without pushing extra complexity for safety into the consensus layer of bitcoin. Anywhere core code can be made simpler, and foot-guns can be handled in higher level non-consensus code, the better.</summary>
    <published>2019-10-01T14:27:21+00:00</published>
  </entry>
</feed>
