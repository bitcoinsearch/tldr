<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [RFC] Lightning invoice/payment format draft</title>
  <updated>2023-05-24T02:00:50.794642+00:00</updated>
  <author>
    <name>ZmnSCPxj 2017-06-01 03:48:46</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-06-01 05:25:57</name>
  </author>
  <author>
    <name>Rusty Russell 2017-06-01 01:28:20</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-06-01 03:42:21</name>
  </author>
  <link href="lightning-dev/June_2017/000734_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <link href="lightning-dev/June_2017/000735_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <link href="lightning-dev/June_2017/000732_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <link href="lightning-dev/June_2017/000733_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [RFC] Lightning invoice/payment format draft</title>
    <updated>2023-05-24T02:00:50.794642+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-June/000734.html" rel="alternate"/>
    <summary>ZmnSCPxj corrected their understanding of the bech32 specification and apologized for any confusion. They also pointed out an issue with line 20 of Bolt#11 and the lack of description for the tagged `d` field encoding. ZmnSCPxj requested a more detailed explanation of how it is intended to be encoded. Rusty Russell shared a pull request for a lightning payment format that he would like reviewed more widely. ZmnSCPxj raised concerns about parsing optional amounts and the separator character between human-readable and data parts, as well as potential confusion regarding version upgrades and whether or not amounts are allowed to have the character "1". They suggested fixing the first 5 bits to be 0 to provide an unambiguous separator between human-readable and data parts, and providing the version by other means. Finally, ZmnSCPxj addressed a comment on the length of lightning invoices compared to segwit addresses in bech32, and clarified that human error is less likely due to invoices being too long to enter by hand.</summary>
    <published>2017-06-01T03:48:46+00:00</published>
  </entry>
</feed>
