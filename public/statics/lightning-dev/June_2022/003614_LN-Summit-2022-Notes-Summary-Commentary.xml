<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LN Summit 2022 Notes &amp; Summary/Commentary</title>
  <updated>2023-06-03T08:55:41.383767+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2022-06-23 22:10:36</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LN Summit 2022 Notes &amp; Summary/Commentary</title>
    <updated>2023-06-03T08:55:41.383767+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003614.html" rel="alternate"/>
    <summary>In an email exchange, two individuals discuss the terminology used to refer to "nested MuSig2" and "recursive MuSig2." They decide to go with the term "nested MuSig2" going forward for simplicity. The issue of latency is also brought up in regards to nested/recursive MuSig2 on Bitcoin StackExchange, but it is seen as more of an implementation-level concern. In the context of multi-signature settings for Lightning Network, designers will need to consider added latency due to adding more signers into the mix. The Lightning protocol must recognize and verify Schnorr signatures, which it currently does not do. The current plan is to jump straight to using musig2 in the funding output for a single aggregated 2-of-2 key, with a single multi-signature being used to close the channel. There may be some added latency depending on the system architecture, but from Alice's point of view, it might just be normal network latency.</summary>
    <published>2022-06-23T22:10:36+00:00</published>
  </entry>
</feed>
