<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Onion messages rate-limiting</title>
  <updated>2023-06-03T09:25:59.554363+00:00</updated>
  <author>
    <name>Christian Decker 2022-06-30 10:15:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Onion messages rate-limiting</title>
    <updated>2023-06-03T09:25:59.554363+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003639.html" rel="alternate"/>
    <summary>The proposal discussed in the conversation addresses the issue of a single party flooding the network and causing nodes to trigger rate limits which affects the usability of onion messages for all other parties. The proposal creates a small bubble in which an attacker can trigger the rate-limiter but beyond which its messages get dropped. This is similar to staggered gossip, where each node locally buffers changes and aggregates them before forwarding/broadcasting at an effective rate that doesn't overwhelm the network. It is also argued that non-channel OM forwarding may not be usable as nodes usually do not know about the existence of these connections and therefore should not be allowed except for some local applications where local knowledge is required. It is important for the OM to signal this clearly to the forwarding node or rely on direct messaging with the peer.In comparison to Tor, a major difference in Lightning is that it is no longer easy to sybil the network and there are no ways to just connect to a node and send it data, making it difficult for an attacker to extend their reach without opening a channel. The conversation ends with Christian thanking Bastien for the proposal.</summary>
    <published>2022-06-30T10:15:18+00:00</published>
  </entry>
</feed>
