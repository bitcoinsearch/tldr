<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving the Price Of Anarchy Problem, Or: Cheap AND Reliable Payments Via Forwarding Fee Economic	Rationality</title>
  <updated>2023-06-03T08:48:57.394335+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-06-29 12:38:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving the Price Of Anarchy Problem, Or: Cheap AND Reliable Payments Via Forwarding Fee Economic	Rationality</title>
    <updated>2023-06-03T08:48:57.394335+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003626.html" rel="alternate"/>
    <summary>In a recent discussion on optimizing Lightning Network payments, several ideas were presented. One suggestion involved generating local estimates for speed and reliability by regularly sending onion messages or designed-to-fail HTLCs. Another idea was to use feerate cards, which map probability of success ranges to a feerate. However, one participant pointed out that probability of success isn't a real measure for payers and instead suggested using fee budgets as the cost of failure.The feerate card is evaluated by plugging in the cost-of-failure-for-this-entry, obtained by multiplying (100% - middle probability of success) by the fee budget, into each entry of the feerate card and picking the lowest total fee. The goal is to optimize for low fee.The discussion also included a framework for optimizing base fees by setting F to be sats/tx and V to be txs/hour. However, it was noted that balanced flows are more important than maximally profitable ones, as they allow the channel to remain open. To achieve balanced flows, heuristics targeting a constant balance of 50% can be utilized.Additionally, all published nodes should support some kind of onchain/offchain swap capability to keep channels balanced and avoid needing to close them. ZmnSCPxj suggests that swap nodes may be more beneficial than LSPs in fixing fee imbalances and maintaining older channels. There is a need to address imbalances caused by collecting fees in order to preserve older channels, and this proposal could potentially provide a solution. However, further information is needed to fully understand the context and implications of this proposal.</summary>
    <published>2022-06-29T12:38:17+00:00</published>
  </entry>
</feed>
