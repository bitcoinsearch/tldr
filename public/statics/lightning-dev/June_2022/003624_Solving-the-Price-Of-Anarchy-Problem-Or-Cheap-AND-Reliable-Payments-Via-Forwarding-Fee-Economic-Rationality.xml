<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving the Price Of Anarchy Problem, Or: Cheap AND Reliable Payments Via Forwarding Fee Economic Rationality</title>
  <updated>2023-06-03T09:32:18.949430+00:00</updated>
  <author>
    <name>Anthony Towns 2022-06-29 10:17:25</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving the Price Of Anarchy Problem, Or: Cheap AND Reliable Payments Via Forwarding Fee Economic Rationality</title>
    <updated>2023-06-03T09:32:18.949430+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003624.html" rel="alternate"/>
    <summary>In a recent Lightning-dev post, ZmnSCPxj shared his thoughts on optimizing the Lightning Network. He suggested that it's essential to optimize for a combination of fee, speed, and reliability, with drain going to fee, and uncertainty/uptime are just ways of estimating reliability. One way to generate local estimates for speed/reliability is by regularly sending onion messages or designed-to-fail htlcs. Rene Pickhardt presented the idea of leaking friend-of-a-friend balances to help payers increase their payment reliability. ZmnSCPxj proposed that we can use existing mechanisms to leak channel balance by gossiping a `channel_update` with new feerates adjusted according to the supply on the channel instead of having a new message to leak friend-of-a-friend balance directly. This would entirely leak the balance of channels. However, it's better to adjust fees not to maintain a balanced channel but a balanced flow, where it doesn't matter if you get the balanced flow that results in an average of a 50:50, 80:20, or 20:80 ratio of channel balances.Feerate cards were also discussed, indicating that they don't make sense since "probability of success" isn't a real measure the payer can use. It's better to have current information about the channel to plug into the formula and let that be the feerate directly. Additionally, ZmnSCPxj proposed that all published nodes support some form of onchain/offchain swap capability to fix imbalances caused by collecting fees and preserve older channels.</summary>
    <published>2022-06-29T10:17:25+00:00</published>
  </entry>
</feed>
