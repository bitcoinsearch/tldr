<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving the Price Of Anarchy Problem, Or: Cheap AND Reliable Payments Via Forwarding Fee Economic Rationality</title>
  <updated>2023-06-03T09:32:58.191464+00:00</updated>
  <author>
    <name>Anthony Towns 2022-06-29 15:25:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving the Price Of Anarchy Problem, Or: Cheap AND Reliable Payments Via Forwarding Fee Economic Rationality</title>
    <updated>2023-06-03T09:32:58.191464+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003627.html" rel="alternate"/>
    <summary>In a recent email conversation, ZmnSCPxj proposed the idea of a feerate card, which is a mapping between a probability-of-success range and a feerate. The payer wants to pay because it values a service/product more highly than the sats they are spending. If payment fails, then the payer incurs an opportunity cost as it is unable to utilize the difference in subjective value between the service/product and the sats being spent. The subjective difference in value between the service/product being bought, and the sats to be paid, is the cost of payment failure. One can use the left-hand side of the feerate card table by multiplying `100% - middle_probability_of_success` (i.e. probability of failure) by the fee budget (i.e. cost of failure), and getting the cost-of-failure-for-this-entry. However, this approach may not make much sense as it doesn't consider multiple hops and retry delay factors. To get the entire path, one needs all the hops to succeed, giving an expected benefit (for a particular combination of rate card entries). Finding out that you're paying 50ppm at the exact same time someone else is "paying" -10ppm is likely to be really irritating, however economically rational it might be argued to be too. Nodes utilizing wall strategies and doing lots of rebalancing put low limits on the fee budget of the rebalancing cost. These nodes are willing to try lots of possible routes, hoping to nab the liquidity of a low-fee node on the cheap in order to resell it later. Such nodes are fine with low probability of success. One place where a feerate card could be interesting is if it were parameterized by time. For example, you might find after doing all this elasticity analysis, that your optimal fee rate during the US business day is high, but during night time it's substantially lower. Rather than broadcasting gossip traffic twice daily to switch over, perhaps you could just publish it once with a rate card, "55ppm between 12:00UTC and 24:00UTC, 10ppm at other times". A published schedule would also let price-sensitive users actually plan ahead, which could be nice.</summary>
    <published>2022-06-29T15:25:15+00:00</published>
  </entry>
</feed>
