<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Why OpenTimestamps does not "linearize" its transactions</title>
  <updated>2023-06-03T09:03:16.817838+00:00</updated>
  <author>
    <name>Peter Todd 2022-06-14 11:12:14</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Why OpenTimestamps does not "linearize" its transactions</title>
    <updated>2023-06-03T09:03:16.817838+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003605.html" rel="alternate"/>
    <summary>In an email conversation, Jeremy Rubin has proposed a model for timestamping services that he believes is necessary for reliability. However, Peter Todd argues that the linearization approach is flawed and timestamps only prove the existence of a message prior to a certain time. The OpenTimestamps service uses commitment operations on an initial message to create a message known to have been created at some point in time, such as a Bitcoin block header, but none of the technical details of this process are relevant to the validity of the proof. Todd suggests that random beacons provide a solution for dual-sided bounds on when messages were created and can be used with trusted alternatives like the NIST random beacon or Roughtime. He also notes that OpenTimestamps could offer a trustless relative random beacon service using per-second commitments in a merkle mountain range, but involving transactions in any random beacon approach would be pointless.</summary>
    <published>2022-06-14T11:12:14+00:00</published>
  </entry>
</feed>
