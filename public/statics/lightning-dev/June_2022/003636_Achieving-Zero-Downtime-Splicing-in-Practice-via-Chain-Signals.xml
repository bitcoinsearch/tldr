<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Achieving Zero Downtime Splicing in Practice via Chain Signals</title>
  <updated>2023-06-03T09:10:32.293403+00:00</updated>
  <author>
    <name>lisa neigut 2022-06-30 03:06:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Achieving Zero Downtime Splicing in Practice via Chain Signals</title>
    <updated>2023-06-03T09:10:32.293403+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003636.html" rel="alternate"/>
    <summary>In a recent discussion, it was suggested that if a chain close is seen along with a gossip message indicating a splice, the gossip should be propagated urgently and widely. However, adding urgency to gossip messages can be difficult to enforce as there is a cost associated with closing a channel which cuts down on the ability to send out urgent messages frequently. Additionally, spamming gossip with splices is expensive. This means that changing the behavior of the secondary information system may be a better approach than embedding the info into the chain.Lisa Neigut expressed confusion as to why on-chain signals are being proposed because it runs counter to the goal of making Lightning's on-chain footprint indistinguishable from any other on-chain usage. She questioned whether there was another reason for suggesting an on-chain detectable signal aside from infallibility. While the severity of a comms failure is minimal with the potential for lost routing fees, she did acknowledge that more robust signaling could be added later if needed.Regarding the "wait N blocks before you close your channels" solution, it was noted that it takes about an hour for gossip to propagate. As such, waiting 12 blocks (or two hours) is a reasonable first estimate. This wait time may be adjusted once real-world experience is gained. It was also mentioned that Alex Myer's minisketch project may improve gossip reconciliation efficiency, making gossip reliability less of an issue.</summary>
    <published>2022-06-30T03:06:50+00:00</published>
  </entry>
</feed>
