<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SPSP: Simple Protocol for Spontaneous Payments</title>
  <updated>2023-05-25T01:46:07.909333+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-06-27 20:30:44</name>
  </author>
  <author>
    <name>CJP 2018-06-27 19:56:11</name>
  </author>
  <link href="lightning-dev/June_2018/001327_SPSP-Simple-Protocol-for-Spontaneous-Payments.xml" rel="alternate"/>
  <link href="lightning-dev/June_2018/001326_SPSP-Simple-Protocol-for-Spontaneous-Payments.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - SPSP: Simple Protocol for Spontaneous Payments</title>
    <updated>2023-05-25T01:46:07.909333+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-June/001327.html" rel="alternate"/>
    <summary>The Lightning Network is a protocol for fast and cheap transactions on the Bitcoin blockchain. Currently, in order to send a payment, one needs to get an invoice from the receiver. However, this makes it difficult to make spontaneous payments. In a mailing list post, a user suggests a simple implementation to solve this problem. The sender can route the payment to the receiver's Lightning node by knowing their node ID. The routing message to the receiver's node includes the preimage and possibly other data, such as the hash of a signed description. If the receiver's node recognizes this format, then it can use the preimage to complete the transaction or cancel it if the node owner doesn't want to receive unsolicited money. Interestingly, none of the intermediate nodes can use the preimage to steal funds since the routing data is encrypted. This method allows for clear, intended payments without needing the second half of the route back to oneself and might even include a small message. A link to the protocol implementation is provided in the post.</summary>
    <published>2018-06-27T20:30:44+00:00</published>
  </entry>
</feed>
