<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-24T23:47:11.466966+00:00</updated>
  <author>
    <name>Christian Decker 2018-06-19 14:46:32</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-24T23:47:11.466966+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-June/001311.html" rel="alternate"/>
    <summary>In a recent email exchange, David A. Harding raised a question about the certainty of the last agreed-upon state not being replaced. In response, Christian Decker clarified that while it is true that the last agreed-upon state can be replaced in the mempool by paying more fees, it can be ensured that this update doesn't have any effect by binding the next agreed-upon state to it immediately afterwards. This way, even if intermediate updates make it into the blockchain, they will not unlock the intermediate settlement path and the blockchain will be paid with the fees attached to the intermediate updates. Decker also mentioned that anyone can perform rewriting and follow the funding output to know the final update. Therefore, it is essential to ensure finality in case of a cooperative close, and monitoring for old states needs to continue until the final state has enough confirmations to make it immutable. Additionally, in the event of a reorganization that unconfirms the update, additional rewrites may be necessary similar to LN-penalty where it's critical to ensure that the penalty transaction is final and does not get reorged out.</summary>
    <published>2018-06-19T14:46:32+00:00</published>
  </entry>
</feed>
