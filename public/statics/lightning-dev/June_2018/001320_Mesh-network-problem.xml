<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Mesh network problem</title>
  <updated>2023-05-25T01:29:13.058038+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-06-23 02:06:15</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Mesh network problem</title>
    <updated>2023-05-25T01:29:13.058038+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-June/001320.html" rel="alternate"/>
    <summary>The Lightning Network's routing problem is perceived as a weakness in the architecture. The sender cannot choose the next recipient efficiently as routing tables are not part of the network. However, the current spec has each participant sharing their view of the entire graph with each other. The payer uses its own local view to create a route from payer to payee, and no intermediate nodes need to make any decisions or keep routing tables. This eliminates guesswork and makes it impossible to fake a channel without committing money into a UTXO, which deters spam.The mesh network routing problem can be solved by self-addressing packets, much like IP. If a node receives a packet that is not addressed to it, it looks up the destination address in its routing table. If it does not exist, then the node throws it to another peer, which is progress. Similarly, a "payment packet" could offer a forwarding fee and the payment. When a node receives it, it deducts some of the fee for itself and attempts to forward it to one of its other peers, revealing the destination of the payment. The current solution used by Lightning Network is direct but costly as each node needs to keep a view of the entire network, making it difficult for low-end devices to keep the local network views. The Eclair developers may provide insights on whether the network map is already too large for mobile devices.</summary>
    <published>2018-06-23T02:06:15+00:00</published>
  </entry>
</feed>
