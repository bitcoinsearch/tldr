<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-03T07:07:27.265295+00:00</updated>
  <author>
    <name>ZmnSCPxj 2022-02-20 02:39:50</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-03T07:07:27.265295+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-February/003488.html" rel="alternate"/>
    <summary>In a recent email thread, the topic of "necromancing" was discussed as a possible attack vector in Bitcoin's transaction validation process. While some argued that out-of-date transactions cannot be considered an attack, others pointed out that unwanted necromancy can still be expensive and annoying. As such, it was suggested that Bitcoin standards should avoid making this kind of attack cheap and easy. One proposed solution is to use Tapscript version for fee-account-authorization, which would provide similar functionality to anchor outputs without requiring an explicit output on the initial transaction, saving blockspace. This approach would allow for feebumping of particular transactions only by participants who have been authorized to feebump, thus reducing the likelihood of unwanted necromancy while providing a more secure system for all parties involved.</summary>
    <published>2022-02-20T02:39:50+00:00</published>
  </entry>
</feed>
