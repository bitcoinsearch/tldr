<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Pre-BIP] Fee Accounts</title>
  <updated>2023-06-03T07:08:51.974405+00:00</updated>
  <author>
    <name>Jeremy 2022-02-20 16:13:16</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Pre-BIP] Fee Accounts</title>
    <updated>2023-06-03T07:08:51.974405+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-February/003491.html" rel="alternate"/>
    <summary>In this email conversation, the topic of opt-in or explicit tagging of fee account is being discussed. One person suggests that it is a bad design as having an explicit key required means pre-planning, which can be problematic in situations where you want to distribute funds over many years. Additionally, if the key is compromised, it may be challenging to maintain the system's security.Another person points out that there might be situations where someone does a transaction that pays you low fee, and they choose to opt-out. In such cases, it would be better to always have the ability to fee bump.The conversation then shifts to a discussion on replacement transactions. The point is made that while it is not impossible for a replacement transaction to invalidate a previous version of it, there is no guarantee that anyone has ever heard of the replacement transaction. The consensus about either the previous version or its replacement is only established once one of them is mined and accepted into the block. The discussion concludes with the understanding that the goal is to prevent this from happening more often.</summary>
    <published>2022-02-20T16:13:16+00:00</published>
  </entry>
</feed>
