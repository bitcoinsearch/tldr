<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Both-side funded channels</title>
  <updated>2023-05-25T02:41:55.962619+00:00</updated>
  <author>
    <name>Cezary Dziemian 2018-09-10 18:30:18</name>
  </author>
  <author>
    <name>Cezary Dziemian 2018-09-11 18:55:41</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-09-12 04:57:08</name>
  </author>
  <author>
    <name>Giovanni P 2018-09-11 20:40:25</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-09-11 07:06:18</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-09-12 04:40:27</name>
  </author>
  <author>
    <name>Gregorio Guidi 2018-09-12 07:15:48</name>
  </author>
  <link href="lightning-dev/Sept_2018/001406_Both-side-funded-channels.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2018/001408_Both-side-funded-channels.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2018/001411_Both-side-funded-channels.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2018/001409_Both-side-funded-channels.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2018/001407_Both-side-funded-channels.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2018/001410_Both-side-funded-channels.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2018/001412_Both-side-funded-channels.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Both-side funded channels</title>
    <updated>2023-05-25T02:41:55.962619+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-September/001406.html" rel="alternate"/>
    <summary>The Lightning Network is considering implementing dual-sided funding channels to allow for single, trustless transactions where users can pay a peer while also agreeing to fund some of their funds into the channel. However, there are concerns about privacy leakage and locked funds. To mitigate these issues, the initiator of the dual-funded channel would need to pay a fee based on the capacity requested from the initiatee and the `to_self_delay` requested by the initiator. The details of implementation will be discussed further at the November lightning-dev summit with implementation to follow over the next year or more.An alternate solution to this problem could be off-to-onchain swaps, which can be repeated with "the same" funds to get more incoming capacity, paying fees each time. This solution can be implemented today and allows for incoming capacity from multiple points on the network until the service runs out of on-chain funds.Initiators of dual-sided channels should pay a fee to mitigate the risk of an attack where nodes tie up on-chain funds into channels and then take them offline permanently. The privacy leakage can also be mitigated by requiring that the initiator always put up greater than or equal capacity it requests from the other party to the channel.The Lightning Network may implement both-side funding channels, allowing for single, trustless transactions where initiators can put up funds at least equal to the capacity they request from the other side. There is work on trustless swaps between on-chain and lightning funds, but there are weaknesses that still need to be addressed.People who keep their node consistently online for a few months generally get incoming capacity anyway, and there may be competition between routing nodes to fund stable channels with new merchants, potentially making incoming capacity a non-issue in the steady state.</summary>
    <published>2018-09-10T18:30:18+00:00</published>
  </entry>
</feed>
