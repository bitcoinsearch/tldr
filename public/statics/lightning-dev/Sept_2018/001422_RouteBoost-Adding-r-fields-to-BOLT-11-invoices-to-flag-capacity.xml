<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RouteBoost: Adding 'r=' fields to BOLT 11 invoices to flag capacity</title>
  <updated>2023-05-25T13:59:23.363537+00:00</updated>
  <author>
    <name>Rusty Russell 2018-09-26 23:03:33</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RouteBoost: Adding 'r=' fields to BOLT 11 invoices to flag capacity</title>
    <updated>2023-05-25T13:59:23.363537+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-September/001422.html" rel="alternate"/>
    <summary>In a discussion about protecting the available bandwidth in a channel, Olaoluwa Osuntokun suggests that randomly rejecting packets is the only way to protect against probing. If a "prober" learns that a node has accepted a packet, they know that at least that amount of bandwidth is available. To protect against this kind of probing, a false capacity floor must be implemented and varied periodically. Randomly failing attempts as the channel approaches zero capacity are also subject to probing. The max_htlc value in the channel update can mitigate this issue, but multiple HTLCs can still be sent to ascertain available bandwidth. Probing one's own channel is pointless, as the discussion centers around probing someone else's channel.</summary>
    <published>2018-09-26T23:03:33+00:00</published>
  </entry>
</feed>
