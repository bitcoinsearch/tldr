<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>RouteBoost: Adding 'r=' fields to BOLT 11 invoices to flag capacity</title>
  <updated>2023-05-20T08:41:25.484536+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-09-29 01:48:34</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>RouteBoost: Adding 'r=' fields to BOLT 11 invoices to flag capacity</title>
    <updated>2023-05-20T08:41:25.484536+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-September/001424.html" rel="alternate"/>
    <summary>In a discussion between Olaoluwa Osuntokun and Rusty Russell, the topic of leaking available bandwidth information through new routing hints arose. Osuntokun suggested that randomly rejecting packets is the only way a node can protect their instantaneous channel capacity. However, if a "prober" learns that a packet has been accepted, they know that the node has at least that amount of available bandwidth. Without an "unadd" feature in the protocol, nodes must accept an HTLC before cancelling it. The max_htlc value in the channel update can mitigate this, but multiple HTLCs can still be sent to ascertain available bandwidth. Russell noted that there's no point in probing your own channel and that this scenario involves receiving a new HTLC from a remote party unbeknownst to the node. Without something like an "unadd," dropping packets is the only recourse against an individual attempting to probe the node.</summary>
    <published>2018-09-29T01:48:34+00:00</published>
  </entry>
</feed>
