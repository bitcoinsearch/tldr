<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
  <updated>2023-06-02T21:43:49.127749+00:00</updated>
  <author>
    <name>Takaya Imai 2020-01-20 06:33:28</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
    <updated>2023-06-02T21:43:49.127749+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002432.html" rel="alternate"/>
    <summary>DLAS (Data Lightning Atomic Swap) is a proposed protocol that allows for the secure exchange of data and lightning payments. The protocol consists of two patterns: DLAS-down, which enables payers to swap data-download with lightning payment to a payee, and DLAS-up, which allows payers to swap data-upload with lightning payment to a payee. In both patterns, the data is embedded into a preimage, which means that sending and receiving data requires lightning payment at the same time. DLAS-down has atomic data download exchange with lightning payment as its pros, while DLAS-up has atomic data upload exchange with lightning payment as its pros. To ensure security, the protocol uses OG AMP, which revokes payments and data transfers in case of failure.However, there are some limitations to DLAS, such as the fact that the size of data is restricted to 256 bits. This can be extended using several payment paths through DLAS-up, but DLAS-down needs better mechanisms to expand data size. Additionally, DLAS-up may require multiple iterations to transfer all blocks, while DLAS-down may have a limit on the number of split blocks that the recipient accepts.Despite these limitations, DLAS can be useful in various use cases, such as hosting incentives like Acai Protocol. Commitment tx data can be sent to Data Host using DLAS-up, where commitment tx data is embedded in preimage. Joost Jager has proposed Instant messages with lightning onion routing, whatsat, which use recent sphinx payload change. However, it is not atomic with lightning payment.The document also discusses how DLAS uses distributed secret key sharing as a backup, where one of secret key shares is distributed with encryption to some nodes. These nodes receive lightning payment as a key managing fee and provide proof for managing the key in response to bloom filter periodically.Overall, DLAS is a promising protocol for secure data and lightning payment exchange, although there are some limitations that need to be addressed for wider adoption. The document provides references to related work and includes a link to the DLAS document on GitHub.</summary>
    <published>2020-01-20T06:33:28+00:00</published>
  </entry>
</feed>
