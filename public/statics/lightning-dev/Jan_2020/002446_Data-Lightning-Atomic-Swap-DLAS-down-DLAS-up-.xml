<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
  <updated>2023-06-02T21:45:20.085415+00:00</updated>
  <author>
    <name>Andr√©s G. Aragoneses 2020-01-21 07:37:47</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
    <updated>2023-06-02T21:45:20.085415+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002446.html" rel="alternate"/>
    <summary>In a discussion on the Lightning-dev mailing list, ZmnSCPxj suggests using a protocol that sends an encrypted version of the entire file with a single payment made and the payment preimage acting as the decryption key. This eliminates the need to consider blocks of the file and ensures atomicity. However, it may not be possible to provide a zk-proof of some property of the entire file that can be understood by an end-user. It is suggested that for video files, one might want to prove that a thumbnail of the video file is extracted from a frame of the video. Matt Corallo warns against sending data in Lightning payments unless necessary as it can be DoS-y and rude to peers. Instead, he suggests using Zero Knowledge Contingent Payments (ZKCP) to lock funds to a hash preimage, which can detect if data is correct or not. There are discussions of ZKCP available online, but no academic-style papers have been written about it.</summary>
    <published>2020-01-21T07:37:47+00:00</published>
  </entry>
</feed>
