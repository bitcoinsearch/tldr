<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Speculations on hardware wallet support for Lightning</title>
  <updated>2023-06-02T22:40:00.657684+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-16 01:36:42</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Speculations on hardware wallet support for Lightning</title>
    <updated>2023-06-02T22:40:00.657684+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002426.html" rel="alternate"/>
    <summary>The context discusses the challenges surrounding the trustworthiness of hardware and software in Lightning Network. While some features, such as storing only a commitment to the current state, can be stored on hardware, others, like revocation secrets for remote commitment transaction, should be stored by the software. To reduce trust in the node software, publishing penalty transactions can be delegated to a quorum of watchtowers. The hardware is unable to access the blockchain or mempool so it cannot ensure revocation of old remote state. Forwarding is also trusted as the hardware has to approve an outgoing HTLC based on the existence of an incoming HTLC on another channel and cannot push transactions on-chain. To reduce storage size, the hardware can store just a single commitment to the current state it knows to be valid. However, there is a need for secure forms of storage where at least one backup must be recoverable at all times within the penalty time window.</summary>
    <published>2020-01-16T01:36:42+00:00</published>
  </entry>
</feed>
