<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>DRAFT: interactive tx construction protocol</title>
  <updated>2023-06-02T23:02:23.372820+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-30 14:38:57</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>DRAFT: interactive tx construction protocol</title>
    <updated>2023-06-02T23:02:23.372820+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002476.html" rel="alternate"/>
    <summary>A proposal for avoiding utxo snooping by using transaction chain construction has been discussed. The proposal involves using a signed transaction committed to the channel opening, so the opener doesn't probe gratuitously. A drawback is that anything that is not `SIGHASH_ALL` sticks out in chain analysis. PoDLE (Proof of discrete logarithm equality) as used in JoinMarket is another solution to this problem. It commits to a UTXO without being trivially grindable from the UTXO set and also includes a proof that the creator of the PoDLE knows the secret key behind it. If the opener aborts, then the acceptor can gossip the UTXO and the revealed PoDLE as well to the rest of Lightning, so the opener at least cannot reuse the same UTXO to probe other potential acceptors. JoinMarket has also solved the issue of allowing a UTXO to be used at most N times by appending a single byte to something that is hashed and ensuring its value is less than N. Getting into contact with waxwing / Adam Gibson for this might be useful to fill out how PoDLE works and so on.</summary>
    <published>2020-01-30T14:38:57+00:00</published>
  </entry>
</feed>
