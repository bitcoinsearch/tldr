<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Reduce the amount of collateral locked by scripts for transferring funds in lightning network</title>
  <updated>2023-06-03T23:29:40.482448+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-27 15:10:24</name>
  </author>
  <author>
    <name>Subhra Mazumdar 2020-01-28 05:24:27</name>
  </author>
  <author>
    <name>Subhra Mazumdar 2020-01-25 14:06:37</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-27 00:45:13</name>
  </author>
  <author>
    <name>Subhra Mazumdar 2020-01-27 04:23:16</name>
  </author>
  <link href="lightning-dev/Jan_2020/002460_Reduce-the-amount-of-collateral-locked-by-scripts-for-transferring-funds-in-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002467_Reduce-the-amount-of-collateral-locked-by-scripts-for-transferring-funds-in-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002451_Reduce-the-amount-of-collateral-locked-by-scripts-for-transferring-funds-in-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002452_Reduce-the-amount-of-collateral-locked-by-scripts-for-transferring-funds-in-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002454_Reduce-the-amount-of-collateral-locked-by-scripts-for-transferring-funds-in-lightning-network.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Reduce the amount of collateral locked by scripts for transferring funds in lightning network</title>
    <updated>2023-06-03T23:29:40.482448+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002460.html" rel="alternate"/>
    <summary>The email conversation between ZmnSCPxj and Subhra Mazumdar is about the AMCU paper which proposes a method for multi-channel updates with constant collateral in Bitcoin-compatible payment-channel networks. The base technique used by the AMCU paper is to realize that from a payment channel, it can instantiate two inner payment channels. However, this technique violates relationship anonymity, thus compromising privacy to achieve atomicity and reduced collateral. The AMCU paper outlines how any off-chain updateable cryptocurrency system can host any contract that the hosting cryptocurrency system can host, including instances of itself. ZmnSCPxj explains that off-chain updateable cryptocurrency systems can host any contract that the hosting cryptocurrency system can host, including instances of itself. Participants in this system follow the protocol rules, culminating in a transaction that spends the funds of the sub-channel to whatever set of contracts was agreed upon as the latest channel state. To close the sub-channel, particular protocol rules need to be followed, culminating in a transaction that spends the fund of the sub-channel to the latest agreed-upon set of contracts. Off-chain updateable cryptocurrency systems implement a cut-through mechanism where presenting a valid transaction to the participants should be enough to convince them to delete those spent outputs and replace them with the outputs of that transaction in the next state of the off-chain cryptocurrency system.In the context, the sender is asking about applying conditions on the fraction of channel fund to ensure successful payment. They want to know if it is possible to lock only a partial amount of fund in a payment channel and leave the rest for another payment request. The concept of subchannels in a single channel has been suggested in "Atomic multi-channel updates with constant collateral in bitcoin-compatible payment-channel networks." However, the sender is still unsure about what happens during the closing of a subchannel. In response, ZmnSCPxj clarified that for a payment less than the channel funds on one side, only the amount required for payment transfer is locked behind an HTLC and the remaining amount remains usable for other HTLCs.The AMCU technique is measured against its ability to be implemented on-chain to enable a multi-participant CoinSwap. However, from a skim of the AMCU paper, it seems like all intermediate hops need to validate that all other intermediate hops follow the protocol, which would require presenting all transactions involved. This implies that all intermediate hops know the entire route, which is bad for privacy. The paper "Atomic multi-channel updates with constant collateral in bitcoin-compatible payment-channel networks" describes a setup phase requiring freezing coins available at each channel involved in the protocol. During this phase, the balance at each payment channel is split into two sub-channels: one with coins required for the present protocol session, and the other with remaining coins that can be freely spent. Operations at each channel during this phase can be carried out in parallel. In summary, the email conversation between ZmnSCPxj and Subhra Mazumdar discusses the AMCU paper proposing a method for multi-channel updates with constant collateral in Bitcoin-compatible payment-channel networks. The AMCU technique violates relationship anonymity, thus compromising privacy to achieve atomicity and reduced collateral, but it could potentially make the Lightning Network unusable. The concept of subchannels in a single channel has been suggested in the paper, but it is still unclear what happens during closing a subchannel.</summary>
    <published>2020-01-27T15:10:24+00:00</published>
  </entry>
</feed>
