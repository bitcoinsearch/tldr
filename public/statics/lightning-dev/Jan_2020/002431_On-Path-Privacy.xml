<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On Path Privacy</title>
  <updated>2023-06-02T22:35:59.924478+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-20 01:21:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On Path Privacy</title>
    <updated>2023-06-02T22:35:59.924478+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002431.html" rel="alternate"/>
    <summary>The Lightning Network is a payment protocol that uses a network of nodes to facilitate instant micropayments. One issue with the protocol is amount-based correlation, where two payments can be linked together if they have the same amount. To address this problem, standardized multipart splitting amounts can be used. This involves specifying a set of standardized payment amounts and forcing algorithms to split with those amounts always, possibly overpaying the destination a little just to hide all the payment amounts of a multipath to standardized payment amounts.Another solution to amount-based correlation is self-payment. Self-payment involves performing donations by using a self-payment, hiding the donation in the fee of the node we wish to pay. PTLCs (Payment-Point Time-Locked Contracts) are a requirement of path decorrelation, which increases the security of such circular payments. However, this technique increases the number of hop nodes that could fail the payment, meaning more payment attempts and thus more people getting told of the payment. Therefore, more analysis on the use of circular payments when paying may be in order.The article discusses various techniques for improving privacy in the Lightning Network. It highlights that source and amount are unremovable data, and any improvement to destination privacy may come at the cost of source privacy. The article then delves into the issue of random walk loops and suggests using path length increasing algorithms that avoid loops being formed. The article analyzes multipath and just-in-time (JIT) routing for privacy and demonstrates that JIT routing gives better privacy than multipath. It notes that with multipath, every part of the payment has the same hash, making it easier for surveillors to extract information. On the other hand, JIT routing has a different hash from the payment, preventing nodes involved in JIT routing from being easily correlated. The article also talks about path decorrelation and how it mitigates privacy issues with artificially-lengthened paths and multipath. It introduces extended shadow routing, where instead of actually taking a longer path, we pretend to take a longer path and overpay some forwarding nodes with more fees and CLTV-delta than they demand. This technique helps mitigate the reduction in useability caused by long routes. Knowing the maximum CLTV-delta at the ultimate sender could allow forwarding nodes to identify the source of a payment, thus improving privacy at the destination comes with a decay in the privacy of the source.In conclusion, the article provides insights into privacy issues with the Lightning Network and suggests various techniques for improving privacy. There are practical limits to how many nodes can be stuffed onto an artificially lengthened path. Permuteroute algorithm applied to payments could provide a mild improvement in privacy compared to high-randomization pathfinding techniques. However, increasing the path length does not necessarily improve privacy. It may increase fees, risk of stuckness, and worst-case stuckness without providing any real benefits. The same hash is used throughout the route, which allows surveillance nodes to easily notice when they are on the same route. Longer paths also mean increased chances of going through two surveillance nodes which could compromise privacy even further.</summary>
    <published>2020-01-20T01:21:46+00:00</published>
  </entry>
</feed>
