<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
  <updated>2023-05-23T02:49:37.971480+00:00</updated>
  <author>
    <name>Matt Corallo 2020-01-20 18:56:12</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
    <updated>2023-05-23T02:49:37.971480+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002442.html" rel="alternate"/>
    <summary>The use of ZK proofs are suggested as a method for correctness in transferring files using lighting payments. A user inquired about how to ensure the correctness of the entire asset being transferred when partitioned into several units, and was informed that ZK proofs are fast for small programs and can be used in a two-party system. There were concerns that ZK proofs would slow down the system and defy the purpose of the lightning network, but it was noted that this is not necessarily true for relatively simple programs. The paper on Zero Knowledge Contingent Payments was referenced as a way to detect if data is correct or not, and it was mentioned that while the paper discusses it, there is no proper academic paper on ZKCP.</summary>
    <published>2020-01-20T18:56:12+00:00</published>
  </entry>
</feed>
