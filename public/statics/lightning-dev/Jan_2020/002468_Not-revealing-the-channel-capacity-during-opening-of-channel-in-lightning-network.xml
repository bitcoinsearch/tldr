<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Not revealing the channel capacity during opening of channel in lightning network</title>
  <updated>2023-06-02T22:51:16.192633+00:00</updated>
  <author>
    <name>Christian Decker 2020-01-29 13:14:19</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Not revealing the channel capacity during opening of channel in lightning network</title>
    <updated>2023-06-02T22:51:16.192633+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002468.html" rel="alternate"/>
    <summary>In a recent forum post, Matt Corallo proposed an approach to prevent routing nodes from overcharging transaction fees. He suggested defining a fixed and proportional max fee and selecting a random route that pays no more than those fees unless no such route is available. He also recommended biasing towards old or good-reputation nodes, routing across nodes hosted on different ISPs/Tor/across continents, etc. Christian, from c-lightning, explained that they set up a fee budget of 0.5% and then select a random route within this constraint. They also fuzz the amount and other parameters within this range to obfuscate the distance to the recipient, i.e., slightly overpaying the recipient but simulating a shadow route. This randomization helps with privacy. Recent research results show that attempting to squeeze the very last bit of fees out has a detrimental effect on sender-receiver-privacy.</summary>
    <published>2020-01-29T13:14:19+00:00</published>
  </entry>
</feed>
