<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
  <updated>2023-05-23T02:49:51.682689+00:00</updated>
  <author>
    <name>Matt Corallo 2020-01-20 18:29:44</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
    <updated>2023-05-23T02:49:51.682689+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002440.html" rel="alternate"/>
    <summary>Zk proofs are fast for small programs, although too slow for a consensus system where every party needs to download and validate them. However, for relatively simple programs, a two-party system using them is doable. The use of zero-knowledge proofs in the Lightning Network has raised concerns that it may slow down the system and therefore defeat its purpose of making transactions scalable and faster. There was no paper on Zero Knowledge Contingent Payment (ZKCP), but there were various discussions about it. ZKCP was designed for on-chain applications but can fit into the Lightning Network as it only requires a method to lock funds to a hash preimage. Unfortunately, many great ideas in this space lack papers which lead to academic papers around Bitcoin missing nearly all relevant context.</summary>
    <published>2020-01-20T18:29:44+00:00</published>
  </entry>
</feed>
