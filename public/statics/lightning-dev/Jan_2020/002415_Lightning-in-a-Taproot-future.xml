<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning in a Taproot future</title>
  <updated>2023-06-02T22:14:28.761699+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-07 00:26:05</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning in a Taproot future</title>
    <updated>2023-06-02T22:14:28.761699+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002415.html" rel="alternate"/>
    <summary>In this email exchange, Lloyd Fournier suggests that transactions with relative lock times could be improved to make them less distinguishable. In response, ZmnSCPxj proposes that Bitcoin Core could set the nSequence of UTXOs being spent to the block age, which would enhance anti-fee-sniping and limit a sniper's ability to rearrange ancestor transactions. However, it is noted that having both non-zero nLockTime and relative-locktime nSequence does not work. Instead, Bitcoin Core could use a coin toss to determine whether to use a non-relative-locktime nSequence and an nLockTime of the next block or a relative-locktime nSequence equal to the confirmations of the output being spent and an nLockTime of 0. The Lightning relative-locktime transactions could then be hidden with an nLockTime of 0. It is suggested that relative-locktime is used for unlimited-lifetime offchain updateable mechanisms, while intra-chain swaps should use absolute-locktime.</summary>
    <published>2020-01-07T00:26:05+00:00</published>
  </entry>
</feed>
