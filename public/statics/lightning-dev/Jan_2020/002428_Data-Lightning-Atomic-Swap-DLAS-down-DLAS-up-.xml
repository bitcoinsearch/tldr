<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
  <updated>2023-06-02T21:46:53.723484+00:00</updated>
  <author>
    <name>Subhra Mazumdar 2020-01-16 07:14:45</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Data Lightning Atomic Swap (DLAS-down, DLAS-up)</title>
    <updated>2023-06-02T21:46:53.723484+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002428.html" rel="alternate"/>
    <summary>The proposal for Data Lightning Atomic Swap (DLAS) is a way to swap data and lightning payment atomically. DLAS has two patterns: DLAS-down and DLAS-up. DLAS-down is for a payer to swap data-download with lightning payment to a payee, while DLAS-up is for a payer to swap data-upload with lightning payment to a payee. The data is embedded into preimage, which means sending and receiving the data requires lightning payment simultaneously. DLAS is useful in various use cases such as hosting incentives, distributed secret key sharing, and preventing email spam and DDoS attacks with large data.DLAS-down allows the payer to send lightning payment and receive data from the payee atomically. However, the size of data is restricted to 256 bits, but it can be extended to larger data and transferred in several payment paths like DLAS-up. On the other hand, DLAS-up is similar to OG AMP system where the payer sends data and lightning payment to the payee atomically. This protocol transfers 512 bits data in two paths, but it can transfer larger data in several payment paths. There are pros and cons to both DLAS-down and DLAS-up. DLAS-down has the pros of atomic data download exchange with lightning payment, while the con is that it needs better mechanism to expand data size. DLAS-up has the pros of atomic data upload exchange with lightning payment, but OG AMP is needed to implement it.DLAS is useful in the Lightning Network ecosystem, crypto currency problems, and preventing email spam and DDoS attack with large data. For example, it can be used for hosting incentives like Acai Protocol, distributed secret key sharing, and preventing email spam and DDoS attacks with large data. Bounty for code bug fixes based on cryptographic proofs or secret computations could also be a potential use case.In other news related to the Lightning Network, a recent tweet by Lightning Labs CEO, Roasbeef, linked to a 2016 paper on atomic swaps. The paper describes how this can be achieved using Hash Time Locked Contracts (HTLCs). Following the tweet, a Github repository containing a draft specification for atomic swaps on the Lightning Network was shared. This repository was submitted as a pull request to the official Lightning RFC repository on Github.However, members of the Lightning developer community raised concerns about the proposed specification, including potential security vulnerabilities and implementation issues. Takaya Imai, who had submitted the pull request, subsequently published a document on Github addressing these concerns and proposing changes to the spec.The Lightning Network is a protocol layer built on top of Bitcoin which enables faster and cheaper transactions through the use of payment channels. Atomic swaps allow for the exchange of different cryptocurrencies without the need for a centralized exchange, reducing counterparty risk and increasing privacy. While atomic swaps have been possible on the Bitcoin blockchain for several years, the Lightning Network introduces new possibilities for cross-chain atomic swaps, improving efficiency and usability.</summary>
    <published>2020-01-16T07:14:45+00:00</published>
  </entry>
</feed>
