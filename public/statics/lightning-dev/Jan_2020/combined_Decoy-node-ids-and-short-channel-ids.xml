<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Decoy node_ids and short_channel_ids</title>
  <updated>2023-06-03T23:27:22.889409+00:00</updated>
  <author>
    <name>Rusty Russell 2020-02-13 04:49:47</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-13 10:45:46</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-03 15:05:25</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-05 01:28:43</name>
  </author>
  <author>
    <name>m.a.holden 2020-02-03 06:50:20</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-04 04:04:31</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-04 14:09:16</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-05 09:00:32</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-10 03:40:10</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-13 09:44:23</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-03 04:37:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-03 05:31:04</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-03 14:06:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-03 14:51:33</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-04 04:29:09</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-04 14:50:26</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-06 02:38:30</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-11 10:58:14</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-13 10:43:58</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-01-20 16:44:53</name>
  </author>
  <link href="lightning-dev/Feb_2020/002535_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002540_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002493_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002501_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002490_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002494_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002497_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002502_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002512_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002538_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002488_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002489_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002491_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002492_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002495_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002499_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002504_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002519_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002539_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002435_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Decoy node_ids and short_channel_ids</title>
    <updated>2023-06-03T23:27:22.889409+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002535.html" rel="alternate"/>
    <summary>In an email exchange between Rusty Russell and Bastien Teinturier, the privacy of Lightning Network transactions is discussed. The proposed approach involves using `z` to represent a bolt11 letter and TLV inside to provide extra routing information. Additionally, a new field called "private_scid" is suggested to address the problem of private channels needing a temporary scid. ZmnSCPxj also proposes using the letter 'z' in bolt11 for its usage as rendezvous. The conversation also explores potential attacks on Lightning Network payments, specifically the scenario where Mallory receives two invoices and wants to verify if they are from the same node.Bastien proposes a solution that uses `payment_secret` and `decoy_key` to derive the `decoy_scid`, which should defend against this attack. However, Rusty points out that Mallory can still include the P_I from the wrong invoice for Bob. To mitigate this, Bob needs to include the scid he used in the update_add_htlc message so that Alice can check. The conversation also touches on the complexity of implementing temporary IDs or node_ids for better privacy and compares it to other state management solutions. They discuss their concerns about custodial lightning services restricting what they will pay to due to potential KYC pressure. Ultimately, it will be up to the recipient to decide whether they want to use a normal invoice and reveal their identity or pass on that payment.Mark Holden proposes a way for Alice and Bob to agree on a set of 256 scids without additional messages or changes to existing messages. They can agree on a random integer 'r', which could be negotiated on open_channel, and use the `temporary_channel_id`. Bastien suggests using Tor and a different node_id each time for better privacy when Alice opens multiple channels to each of her Bobs. Rusty suggests using a temporary ID for private channels to obscure on-chain footprints and applying a new temporary ID and node_id for every invoice. In another conversation, Rusty Russell and Bastien Teinturier discuss the implementation of a feature that allows temporary node IDs to be used for private channels in Lightning Network. They explore the potential attack vectors associated with using temporary IDs.The email being explored in this context discusses proposed enhancements to unannounced channels in the Lightning Network. These channels are beneficial for mobile nodes that may not be online often enough to route payments and can help break the link between on-chain and off-chain payments. However, the current implementation has a flaw where invoices leak both the node_id and short_channel_id.To address this issue, the author proposes an alternative design that can use unique short_channel_ids and node_ids for each invoice. This design involves using decoy node_ids and short_channel_ids to prevent the leakage of real information. The proposed scheme can be improved by leveraging the payment_secret to get rid of the 33 bytes used in the invoice.In addition to this, the context mentions ZmnSCPxj who has claimed the number '8' as his bolt11 letter to actively mislead surveillors who may be monitoring his public alias.</summary>
    <published>2020-02-13T04:49:47+00:00</published>
  </entry>
</feed>
