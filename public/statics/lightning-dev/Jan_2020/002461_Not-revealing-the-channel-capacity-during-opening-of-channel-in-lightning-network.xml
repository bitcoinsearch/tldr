<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Not revealing the channel capacity during opening of channel in lightning network</title>
  <updated>2023-05-23T02:56:26.636141+00:00</updated>
  <author>
    <name>Matt Corallo 2020-01-27 15:15:10</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Not revealing the channel capacity during opening of channel in lightning network</title>
    <updated>2023-05-23T02:56:26.637135+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002461.html" rel="alternate"/>
    <summary>The Lightning Network requires proof-of-funds-locked mainly for DoS resistance, effectively rate-limiting flooding the global routing table with garbage. Matt Corallo suggests that non-lightning "channels" (eg just a contractual agreement to settle up later between two mutually-trusting parties) would actually be quite compelling. In general proving 2-of-2 multisig UTXO ownership doesn't do much to prevent route hijacking to begin with, so it shouldn't be much different. A potential problem may arise if a channel is opened whereby the channel capacity is not revealed publicly but just a range proof of the attribute (capacity &gt;0 and capacity &lt;max) provided. It can make the channels susceptible to channel exhaustion attack or a particular node might be targeted for node isolation attack. To have faith that the channel announced by the nodes is actually locked on the Bitcoin mainchain we need to have the outpoint (txid and vout) of the funding transaction. Since Bitcoin does not allow confidential transactions, we can query the blockchain and find out the channel capacity even when the amounts are never explicitly mentioned.</summary>
    <published>2020-01-27T15:15:10+00:00</published>
  </entry>
</feed>
