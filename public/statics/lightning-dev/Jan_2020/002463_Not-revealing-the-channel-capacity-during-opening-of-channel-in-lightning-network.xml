<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Not revealing the channel capacity during opening of channel in lightning network</title>
  <updated>2023-05-23T02:56:05.720743+00:00</updated>
  <author>
    <name>Matt Corallo 2020-01-27 15:33:18</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Not revealing the channel capacity during opening of channel in lightning network</title>
    <updated>2023-05-23T02:56:05.720743+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002463.html" rel="alternate"/>
    <summary>In a discussion on the Lightning-dev mailing list, ZmnSCPxj and Matt Corallo responded to a question about the potential problem of not revealing channel capacity publicly but just providing a range proof of the attribute. ZmnSCPxj explained that the added complexity is for spam-prevention, not routing in particular. Pathfinding algorithms can use the lower limit of the rangeproof to filter out channels too small to pass a particular payment through. The reason lightning nodes today require proof-of-funds-locked is largely for DoS resistance, rate-limiting flooding the global routing table with garbage. On the other hand, Matt suggested that there's no real reason lightning nodes have to have confidence in that details such as non-lightning channels, eg just a contractual agreement to settle up later between two mutually-trusting parties could be allowed. Anti-DoS could reasonably be accomplished with simple equivalent proofs, though they would be somewhat more expensive to create/validate. However, there is almost nothing done today to prevent spam and route-hijacks (aka someone providing routing for a lower fee and users happily taking it) in the routing DB today.</summary>
    <published>2020-01-27T15:33:18+00:00</published>
  </entry>
</feed>
