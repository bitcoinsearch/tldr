<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>QR of node information</title>
  <updated>2023-05-24T22:50:22.063442+00:00</updated>
  <author>
    <name>Robert Olsson 2018-04-07 15:17:22</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>QR of node information</title>
    <updated>2023-05-24T22:50:22.064481+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001139.html" rel="alternate"/>
    <summary>The writer is seeking help regarding the QR code of node at ip:port, specifically about eclair only supporting the format hex at ip:port format. They have not tried any other mobile wallets. The writer suggested that there should be support for bech32 nodeid's to keep the QR small. They believe that if it isn't standardized yet, they should do it soon so all wallets will support it from the start and bulky QR codes can be avoided. To fully utilize QR, it should work with charset in text-mode. The writer suggests a format like lightning:ln1bech32nodeid/ipnumber/port where /port is optional if port is 9735. This is to avoid confusion of : in ipv6 and :portnumber. Another approach would be to encode ip and portnumber in bech32 as well. The writer thinks that everything coded entirely in bech32 shouldn't need a protocol so the 'lightning:' part could possibly be omitted as well. In conclusion, the writer seeks support for bech32 nodeid's to reduce the size of QR codes and believes that standardization is necessary to ensure that all wallets support it from the start. The suggested format is lightning:ln1bech32nodeid/ipnumber/port where /port is optional if port is 9735.</summary>
    <published>2018-04-07T15:17:22+00:00</published>
  </entry>
</feed>
