<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for Advertising Lightning nodes via DNS records.</title>
  <updated>2023-05-24T22:54:48.219047+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-09 23:31:41</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for Advertising Lightning nodes via DNS records.</title>
    <updated>2023-05-24T22:54:48.219047+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001148.html" rel="alternate"/>
    <summary>The BOLT (Basis of Lightning Technology) proposal could bring about a number of changes to the Lightning Network's functionality. One such change would be allowing mobile wallets like Eclair to accept a domain parameter that specifies an initial node for a user's first channel and increasing decentralization for fringe users. While connecting to a fixed node with high uptime would allow autopilot to download the entire network map, there is uncertainty around whether getting gossip from a known merchant node is better than the hardcoded one. Additionally, domain operators will be able to have public nodes alongside private ones to manage their risks. However, it is unclear how risks can be managed if both public and private nodes are owned by the same entity. If a single economic entity owns both public and private nodes, then the earnings are not in the B-&gt;C channel but the A-&gt;B channel and attacking B will still allow hackers to take earnings. This model might work if B and C are owned by different entities, or for large conglomerates that create a single public access node and several private nodes for each subsidiary, giving one channel for each subsidiary. Hubs may arise as public nodes that take on the risk of having large amounts of money in their channels and create private channels to their clients, which will at least be trustless since the client can drop the channel on-chain if they lose trust in the hub. In comparison to current merchant accounts offered by exchanges, where users cannot withdraw their money if the exchange decides they are unworthy, this situation is better.</summary>
    <published>2018-04-09T23:31:41+00:00</published>
  </entry>
</feed>
