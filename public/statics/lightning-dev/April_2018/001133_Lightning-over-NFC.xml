<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning over NFC</title>
  <updated>2023-05-24T22:44:23.470362+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-05 15:39:58</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning over NFC</title>
    <updated>2023-05-24T22:44:23.470362+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001133.html" rel="alternate"/>
    <summary>Igor Cota, a developer, is experimenting with using Lightning for everyday retail payments on his Android device. He wants to create a system that is instantaneous like contactless bank cards, and encodes a fancy HTML receipt in bolt11 for the payer's future reference. He has been using c-lightning on Android and NFC-enabled phones for this purpose. There are two basic ways to use NFC enabled phones: passive tag readers and card emulation mode. Passive tags work as expected if both the phone and terminal are connected to the network and have a route to each other. Card emulation mode enables two-way communication and an ad hoc connection to the lightning network. After some handshaking, the phone can tell the terminal that it wants to connect to lightning via NFC. All communication between these two lightning nodes can be done over NFC or even Bluetooth. Igor settled on a MIME type (application/lightning) and an NFC application id (LIGHTNING). For interoperability's sake, standards should be agreed upon, but it is unclear how to proceed with this.</summary>
    <published>2018-04-05T15:39:58+00:00</published>
  </entry>
</feed>
