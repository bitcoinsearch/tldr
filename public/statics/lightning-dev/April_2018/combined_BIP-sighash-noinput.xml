<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP sighash_noinput</title>
  <updated>2023-05-25T00:37:56.219893+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-07-02 18:11:54</name>
  </author>
  <author>
    <name>Peter Todd 2018-07-03 05:21:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-07-03 06:58:36</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-03 23:45:22</name>
  </author>
  <author>
    <name>DING FENG 2018-07-11 04:37:27</name>
  </author>
  <author>
    <name>Rusty Russell 2018-05-09 23:04:58</name>
  </author>
  <author>
    <name>Anthony Towns 2018-05-14 09:23:29</name>
  </author>
  <author>
    <name>Christian Decker 2018-05-07 19:40:46</name>
  </author>
  <author>
    <name>Anthony Towns 2018-05-08 14:40:21</name>
  </author>
  <author>
    <name>William Casarin 2018-07-03 11:54:37</name>
  </author>
  <author>
    <name>Peter Todd 2018-07-09 09:41:39</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-03 04:56:53</name>
  </author>
  <author>
    <name>Christian Decker 2018-04-30 16:29:53</name>
  </author>
  <author>
    <name>Dario Sneidermanis 2018-04-30 18:25:42</name>
  </author>
  <author>
    <name>Christian Decker 2018-07-03 12:05:09</name>
  </author>
  <author>
    <name>Luke Dashjr 2018-07-03 12:13:44</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-07-11 07:43:49</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-13 00:04:14</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-09 23:01:39</name>
  </author>
  <author>
    <name>Christian Decker 2018-05-15 14:28:22</name>
  </author>
  <author>
    <name>Bram Cohen 2018-05-07 20:51:11</name>
  </author>
  <link href="lightning-dev/July_2018/001333_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001336_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001338_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001345_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001356_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001266_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001274_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001242_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001253_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001339_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001354_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001334_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001224_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001225_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001340_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001341_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001357_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001359_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001265_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001282_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001288_BIP-sighash-noinput.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP sighash_noinput</title>
    <updated>2023-05-25T00:37:56.219893+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-July/001333.html" rel="alternate"/>
    <summary>Bitcoin developers are discussing a proposed new sighash flag, SIGHASH_NOINPUT, which removes the commitment to the previous transaction output. However, concerns have been raised about the security implications of using this flag, as it could make reuse of addresses more dangerous and lead to loss of funds if a third party pays to an address a second time. Rusty Russell has expressed his concern over the `SIGHASH_NOINPUT` proposal, stating that it has a huge failure case.One suggestion is to have `SIGHASH_NOINPUT` as a flag to a signature for a hypothetical "OP_CHECK_SIG_FOR_SINGLE_USE_KEY" opcode instead, which would ensure that a `_NOINPUT` signature is only valid for keys deliberately intended to be single use. Another suggestion is to name the flag as "SIGHASH_REPLAY_VULNERABLE" or "SIGHASH_WEAK_REPLAYABLE" to better communicate the potential risks. Additionally, using a separate opcode for `SIGHASH_NOINPUT` would allow for independent support through soft-forking.Bitcoin developer Christian Decker has proposed a new "sighash flag," called SIGHASH_NOINPUT, which removes the commitment to the previous output. The proposal enables simple watch-towers, allowing users to outsource the need to watch the blockchain for channel closures and react appropriately if their counterparty misbehaves. The deployment part of the proposal is left vague on purpose not to collide with any other proposals.In a discussion thread on the Bitcoin-dev mailing list, concerns were raised about the potential risks of using the SIGHASH_NOINPUT flag in Bitcoin. Some suggested the use of a new opcode or a new sighash flag instead of NOINPUT to enable more secure usage and minimize risks. Overall, it was emphasized that the use of SIGHASH_NOINPUT should be done responsibly and with caution.There is a discussion regarding the use of SIGHASH_NONE in Bitcoin's segwit. Some suggest limiting its use, while others propose introducing a new opcode or hash flag to address contingencies on-chain. The proposal for `SIGHASH_NOINPUT` has been discussed, but concerns about other potential uses have been raised.The conversation is about technical implementation of SIGHASH_NOINPUT proposal. The proposal has gained general enthusiasm and a BIP number has been requested. One issue raised was that v0 and pre-segwit signatures won't support NOINPUT. A possible solution could be passing an extra flag to TransactionSignatureChecker::CheckSig(). Another technical suggestion was to have a boolean specifying whether the inputs listed must be all of them or a subset of everything.</summary>
    <published>2018-07-02T18:11:54+00:00</published>
  </entry>
</feed>
