<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning over NFC</title>
  <updated>2023-05-24T22:44:48.045627+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-05 16:53:52</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning over NFC</title>
    <updated>2023-05-24T22:44:48.045627+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001136.html" rel="alternate"/>
    <summary>The email conversation between Corn√© Plooy and ZmnSCPxj on the Lightning-dev mailing list discusses the possibility of using Lightning for everyday retail payments. Igor Cota shared his experiment with payments via NFC, which works well as long as both the phone and terminal are connected to the network and have a route to each other. In card emulation mode, two-way communication is possible, enabling an ad hoc connection to the Lightning network, even if mobile data is not available. A MIME type (application/lightning) and an NFC application id (LIGHTNING) were selected, along with a simple protocol to forward socket data. However, ZmnSCPxj raised concerns about censorship and direct payment channels. For practical mobile devices, communication over a secure channel to a trusted server is preferred, but the payment terminal would provide a connection to the Internet-in-general rather than to the payment terminal node. Initiating a payment requires direct communication with whoever you have a direct channel to, and if the mobile device can communicate only with the payment terminal, then it can only pay using channels with the only node it has a connection to. It could pay anyone else on the network via that channel, but presumably, the purpose of the payment terminal is to be the node that receives the payment.</summary>
    <published>2018-04-05T16:53:52+00:00</published>
  </entry>
</feed>
