<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Towards a gridlike Lightning Network</title>
  <updated>2023-05-24T22:24:27.841531+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-20 03:24:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Towards a gridlike Lightning Network</title>
    <updated>2023-05-24T22:24:27.841531+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001208.html" rel="alternate"/>
    <summary>The conversation between Benjamin and ZmnSCPxj revolves around the Lightning Network, specifically on the identification of a "neighborhood" and the establishment of order within that neighborhood. ZmnSCPxj praises Benjamin's use of bloom filters to define a neighborhood, saying it is an economically efficient approach to maintaining competition and redundancy. However, ZmnSCPxj questions the ability to make cycle establishment within a neighborhood robust in a dynamic context. As people come and go, cycles will break, and neighborhoods identified by one setting of the bloom filter will become undesirably large. ZmnSCPxj suggests a heuristic where the probability of establishing a channel is proportional to the number of bits in common in the pubkey hash. ZmnSCPxj also notes that the algorithm does not consider what happens when a new member joins or an existing member wishes to leave and there is no way to inform this. For leaving LN permanently, the leaving node SHOULD close all its channels, updating the network view of everybody, and putting the channel funds on-chain. However, for a new node entering the network, there is a problem as it requires existing nodes to close existing channels and open new ones to the new node, which costs on-chain fees. ZmnSCPxj believes the main benefit of the algorithm he describes is that it flattens the number of channels a node will have and reduces centralization while having similar reachability as random selection. He notes that if each node opens two channels to two different nodes, pure random selection will, by chance, award a few lucky nodes with more incoming channels than others. Lastly, ZmnSCPxj discusses how dynamic optimization based on actual usage would be possible if it were not for the privacy goals. Nodes could track routes of payments that flow through their channels and spot fees that seem both large and popular, identifying under-served nodes to which a direct channel might be in order. However, this compromise would require longer minimum routes for a given level of privacy.</summary>
    <published>2018-04-20T03:24:40+00:00</published>
  </entry>
</feed>
