<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Commitment delay asymmetry</title>
  <updated>2023-05-24T23:16:10.227873+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-16 03:52:48</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Commitment delay asymmetry</title>
    <updated>2023-05-24T23:16:10.227873+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001189.html" rel="alternate"/>
    <summary>ZmnSCPxj discusses two possible attack scenarios in the world of symmetric and asymmetric delays. In a symmetric delay scenario, he can use either passive or active attacks to force most funds into the other side, resulting in lockups for both parties. In an asymmetric delay scenario, he can only use a passive attack to force most funds into the other side, resulting in lockup for the other party only. ZmnSCPxj argues that adding a new attack vector to mitigate another attack vector is not a good trade-off as it creates a new attack that is easier to perform than the current attack. He then proposes a channel setup where he funds a 1BTC channel with Daniel. To make the symmetry equal on both sides of the commitment transaction, he sends 0.99BTC to Daniel for 0.99BTC worth of Daniel products. He then publishes his original revoked commitment transaction without any delay and gets 1.0BTC and 0.99BTC worth of Daniel products immediately.</summary>
    <published>2018-04-16T03:52:48+00:00</published>
  </entry>
</feed>
