<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal for Advertising Lightning nodes via DNS records.</title>
  <updated>2023-05-24T22:51:30.947803+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-20 04:30:08</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal for Advertising Lightning nodes via DNS records.</title>
    <updated>2023-05-24T22:51:30.947803+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001211.html" rel="alternate"/>
    <summary>The context discusses the use of Numerifides command, which is a scheme that allows for non-financial data to be stored on-chain. The CLTV Unix epoch is used for absolute lock time, and CSV is used for relative lock time measured in blocks. The scheme involves generating a secret private key and public key, encoding the command, computing the pay-to-contract public key, generating a P2WSH to the script, paying to the P2WSH on the Bitcoin network, and broadcasting command, P, and the txid+outnum of the UTXO that pays to the P2WSH above to the Numerifides network. Numerifides nodes then verify the command+P+outpoint by confirming that it can get C = P + h(P || command) * G, and that the outpoint is unspent, and pays to a P2WSH matching the above script template with the replaced with the computed C. When the command expires, the user can reclaim its locked coins from c = p + h(P || command), meaning it only has to memorize p and command. If two commands conflict, the one with higher locked amount is preferred. The same scheme can be used for practically any kind of asset, not just names.</summary>
    <published>2018-04-20T04:30:08+00:00</published>
  </entry>
</feed>
