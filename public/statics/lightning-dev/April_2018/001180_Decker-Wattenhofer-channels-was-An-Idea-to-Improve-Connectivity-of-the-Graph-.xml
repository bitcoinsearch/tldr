<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Decker-Wattenhofer channels (was: An Idea to Improve Connectivity of the Graph)</title>
  <updated>2023-05-24T23:19:47.639577+00:00</updated>
  <author>
    <name>Christian Decker 2018-04-13 20:51:54</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Decker-Wattenhofer channels (was: An Idea to Improve Connectivity of the Graph)</title>
    <updated>2023-05-24T23:19:47.639577+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001180.html" rel="alternate"/>
    <summary>The Decker-Wattenhofer construction of Duplex Micropayment Channels uses an invalidation tree to split the funds between payer and payee in individual simplex channels. However, this raises concerns about how HTLCs with absolute timelocks are compatible with the relative timelock used by the invalidation tree. To ensure compatibility, the absolute timelocks must be set far enough in the future to commit the latest branch of the invalidation tree on-chain and then commit the HTLC resolution before the HTLC timeout expires. Similarly, Poon-Dryja channels have a relative-timelock only on the claim transaction after a unilateral commitment transaction, and HTLC timeouts also require dropping on-chain to guarantee that all following hops resolve prior to resolving the incoming one. This is significant as it could affect Burchert-Decker-Wattenhofer channel factories, which use invalidation trees internally and come before the HTLCs they eventually pay out to.</summary>
    <published>2018-04-13T20:51:54+00:00</published>
  </entry>
</feed>
