<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Lightning dice</title>
  <updated>2023-05-23T14:36:32.437567+00:00</updated>
  <author>
    <name>Anthony Towns 2021-01-25 11:34:30</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Lightning dice</title>
    <updated>2023-05-23T14:36:32.437567+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-January/002937.html" rel="alternate"/>
    <summary>The author proposes a rough design for a gambling system similar to Satoshi Dice, which would be provably fair on the Lightning Network once PTLCs exist. The security model of the system is such that if the casino cheats, it can be proven but there is no way to get just rewards through the proof alone. The author explains that not guaranteeing the payout cryptographically allows both bets to be sent over Lightning and not reserve funds for the lifetime of the bet. This approach is more friendly to the Lightning Network and requires less capital to run than other methods. The first step in setting up the wager involves Bob the better and Carol the casino agreeing to a standard bet with a 1.8% chance of winning and a 50x payout, with up to 200 satoshi stake (10k satoshi max payout). The bet is implemented as Bob and Carol both picking random numbers (b and c, respectively), and the winner being decided based on the relationship between those numbers. Two messages are used to initiate the bet: m1, which specifies the amount owed by Carol to Bob provided certain conditions are met, and m2, which specifies the values of b and c chosen by Bob and Carol.</summary>
    <published>2021-01-25T11:34:30+00:00</published>
  </entry>
</feed>
