<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Laundry list of inter-peer wire protocol changes</title>
  <updated>2023-05-23T22:09:07.633205+00:00</updated>
  <author>
    <name>Rusty Russell 2016-01-29 02:35:17</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Laundry list of inter-peer wire protocol changes</title>
    <updated>2023-05-23T22:09:07.633205+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-January/000413.html" rel="alternate"/>
    <summary>The Amiko Pay protocol is discussed in detail by Rusty Russell, who highlights the various concept choices. The transport layer used is TCP, although it will be re-implemented in a higher layer as it isn't good enough and works well over TOR. For serialization, JSON with some added conventions will be used, which is bloated but easily debuggable and extensible. Message confirmation will be done manually so that a node knows which messages were received/need re-transmitted even after a crash and restart. Bi-directional routing is an important part of the protocol, allowing both payer and payee to route towards a meeting point without either needing a routable address on the network. Multiple channels per link are also available, and different channel classes are used for micro-transactions. Furthermore, reserving before locking is utilized for optimisation purposes.</summary>
    <published>2016-01-29T02:35:17+00:00</published>
  </entry>
</feed>
