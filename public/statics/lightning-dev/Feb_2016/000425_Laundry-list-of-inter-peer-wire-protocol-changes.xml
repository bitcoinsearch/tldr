<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Laundry list of inter-peer wire protocol changes</title>
  <updated>2023-05-23T22:07:10.616426+00:00</updated>
  <author>
    <name>Rusty Russell 2016-02-03 00:55:37</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Laundry list of inter-peer wire protocol changes</title>
    <updated>2023-05-23T22:07:10.616426+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000425.html" rel="alternate"/>
    <summary>The Amiko Pay system assigns a number to every message for confirmation purposes. This allows the receiving side to confirm which messages have been received and not-yet-confirmed messages will be retransmitted, ignoring duplicates. The system also allows direct TCP stream communication between payer and payee, which reduces latency and is done on a direct TCP stream between them. This is useful in cases where reduced latency is needed. For v1.0 of the protocol, they will assume that there is a channel for simplicity, and the R hash and route is known by the payer. However, without reserving, a transaction might take three seconds instead of one second, which might be problematic for public transport access gates. Rusty is worried that higher latency is a centralization pressure, and encourages people to sacrifice privacy. He believes that complexity should be avoided, but doesn't know where the threshold is.</summary>
    <published>2016-02-03T00:55:37+00:00</published>
  </entry>
</feed>
