<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Protocol for multiple in-flight updates.</title>
  <updated>2023-05-23T22:32:50.644475+00:00</updated>
  <author>
    <name>Rusty Russell 2016-02-02 01:18:17</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-03 00:32:50</name>
  </author>
  <author>
    <name>Joseph Poon 2016-02-03 01:33:30</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-04 04:08:35</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-01 10:08:01</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-04 06:35:03</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-05 00:54:14</name>
  </author>
  <author>
    <name>Joseph Poon 2016-02-02 07:28:14</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-03 04:35:33</name>
  </author>
  <author>
    <name>Joseph Poon 2016-02-03 05:01:35</name>
  </author>
  <link href="lightning-dev/Feb_2016/000421_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000424_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000426_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000429_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000418_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000430_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000431_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000422_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000427_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000428_Protocol-for-multiple-in-flight-updates-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Protocol for multiple in-flight updates.</title>
    <updated>2023-05-23T22:32:50.644475+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000421.html" rel="alternate"/>
    <summary>The email exchange between Rusty Russell and Joseph Poon discusses the latter's proposed HTLC negotiation protocol. The protocol involves adding, removing or settling HTLCs, with both parties sending messages in order to ensure all messages are accounted for through accept/reject orders. The proposal suggests a three-step process for more secure transactions, but acknowledges that asynchronous steps are simpler. The protocol also includes two broadcastable commitments from each party, as well as staging and counter IDs for modifications. The email thread also discusses the commit steps for HTLCs, with Rusty asking about cut-through prevention and committing with regards to HTLC states. The proposal suggests an "unstage request" to unstage an HTLC if it fails to complete within a reasonable time. Additionally, there may be no reason to accept anything except an add request, and SETTLE_PRESTAGE and TIMEOUT_PRESTAGE states may be redundant.The proposal also considers handling upstream node rejected messages with FAIL messages, and defines TIMEOUT as the responsibility of the HTLC proposer. Finally, the proposal suggests that starting staging an HTLC on the outgoing channel before it's committed on the incoming one can reduce latency, though this means the HTLC recipient cannot commit to the HTLC until the sender does.Overall, the protocol is still being optimized, but it presents a simpler approach to pipelining requests with sophisticated overlaps.</summary>
    <published>2016-02-02T01:18:17+00:00</published>
  </entry>
</feed>
