<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
  <updated>2023-05-18T00:22:40.051219+00:00</updated>
  <author>
    <name>Anthony Towns 2016-02-09 08:59:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
    <updated>2023-05-18T00:22:40.051219+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000437.html" rel="alternate"/>
    <summary>In a discussion about the best options for closing a payment channel, Rusty Russell presents four possible choices: keeping the channel open, having the other party close it unilaterally, closing it unilaterally oneself, or cooperatively closing it together. He then argues that the preferences are strictly in favor of cooperative closing as opposed to unilateral closing by either party. Unilateral closing has some disadvantages compared to cooperative closing due to the OP_CSV delay. Russell also suggests that if one is trying to convince the other party to close the channel unilaterally instead of doing it oneself, it would be better to simply do a cooperative close. This approach would be preferred anyway and would also be more likely to be accepted by the other party. He believes that with the current arrangement, there are no realistic threats that the other party could make to avoid a cooperative close.Finally, Russell discusses the potential benefits of implementing an OP_CSV on both sides of HTLCs. With this change, one could threaten to close the channel unilaterally unless the other party pays a certain amount for a cooperative close. He concludes that while changing the system may make things marginally worse, it will not improve them.</summary>
    <published>2016-02-09T08:59:56+00:00</published>
  </entry>
</feed>
