<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Simplified protocol for multiple in-flight updates.</title>
  <updated>2023-05-23T22:34:08.175897+00:00</updated>
  <author>
    <name>Joseph Poon 2016-02-09 01:08:20</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Simplified protocol for multiple in-flight updates.</title>
    <updated>2023-05-23T22:34:08.175897+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000435.html" rel="alternate"/>
    <summary>In a discussion regarding the simplicity of a protocol, Rusty Russell suggests that eliminating all acknowledgements would make it much simpler. However, when adding HTLCs, this may have some tradeoffs. The downside of doing this is that there is uncertainty about whether the other party has received the message. This means that once packets are sent over the wire, it should be assumed the other party can broadcast. To remove an HTLC securely, it requires removing the HTLC, committing, and then the other party revokes the prior commitment. If the ratio of success/failure is high enough, eliminating acknowledgements may be worth it. However, intermittently connected nodes may face some disadvantages as requiring confirmation has a significantly smaller time window for non-responsive payments. Joseph Poon notes that he is optimizing against payment failure on the ADD side, as failure may require a re-route in the opposite direction to do a full cancel with a non-responsive node in multi-hop payments. He agrees that if both nodes are well connected, then eliminating acknowledgements is more optimal if latency is the primary concern.</summary>
    <published>2016-02-09T01:08:20+00:00</published>
  </entry>
</feed>
