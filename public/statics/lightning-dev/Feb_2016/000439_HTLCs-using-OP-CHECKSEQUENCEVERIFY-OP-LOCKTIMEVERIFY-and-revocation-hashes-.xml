<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
  <updated>2023-05-23T18:23:43.800319+00:00</updated>
  <author>
    <name>Rusty Russell 2016-02-09 23:14:46</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
    <updated>2023-05-23T18:23:43.800319+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000439.html" rel="alternate"/>
    <summary>In a discussion between Anthony Towns and Rusty Russell, they explored different options for closing channels in Bitcoin's Lightning Network. They identified four options: keeping the channel open, unilateral closure by either party, or cooperative closure. The preferences of each option are strictly ranked as d &gt; b &gt; c. Unilateral closure is better than cooperative closure due to the OP_CSV delay. However, cooperative closure is better than unilateral closure if a lower transaction fee can be used or if funds can be spent directly to a useful output address. If one party attempts to persuade the other party to close unilaterally to avoid doing so themselves, it is more beneficial to do a cooperative close instead. With an OP_CSV on both sides of HTLCs, one party can make a realistic threat to lock up the other party's funds if they don't pay a certain amount for a cooperative close. Rusty expressed concern that the party going offline pays the least penalty while their counterparties have their funds tied up.</summary>
    <published>2016-02-09T23:14:46+00:00</published>
  </entry>
</feed>
