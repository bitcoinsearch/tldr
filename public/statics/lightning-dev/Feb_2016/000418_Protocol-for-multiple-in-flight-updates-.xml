<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Protocol for multiple in-flight updates.</title>
  <updated>2023-05-23T22:28:38.460703+00:00</updated>
  <author>
    <name>Rusty Russell 2016-02-01 10:08:01</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Protocol for multiple in-flight updates.</title>
    <updated>2023-05-23T22:28:38.461749+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000418.html" rel="alternate"/>
    <summary>Rusty is asking Joseph and ml to describe their HTLC negotiation protocol since he wants to adapt his code to do the same. The c-lightning protocol exchange involves sending [add/fulfill/fail/timeout, with a new revocation hash] followed by receiving [acceptance, with a new revocation hash] or [decline if add], then sending [commitment, with signature of new commit tx, and old revocation preimage], and finally receiving [commitment reply, with signature of new commit tx, and old revocation preimage]. As the revocation hash needs to be provided to get a signature from the other party, this suggests an ordering in commitments. Rusty proposes variants of the first two steps without a new revocation hash, allowing for the addition of multiple changes before the commitment to all accepted updates. Rusty asks how similar Joseph and ml's protocol is to his.</summary>
    <published>2016-02-01T10:08:01+00:00</published>
  </entry>
</feed>
