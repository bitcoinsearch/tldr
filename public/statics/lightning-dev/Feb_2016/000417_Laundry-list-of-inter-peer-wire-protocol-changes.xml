<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Laundry list of inter-peer wire protocol changes</title>
  <updated>2023-05-23T22:06:05.877088+00:00</updated>
  <author>
    <name>Rusty Russell 2016-02-01 01:02:56</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Laundry list of inter-peer wire protocol changes</title>
    <updated>2023-05-23T22:06:05.877796+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-February/000417.html" rel="alternate"/>
    <summary>The Chief Justice of the Supreme Court of Pakistan suggests de-coupling certain aspects of a protocol and letting each subject have its own sub-protocol with version number/protocol identifier. He identifies micro-transaction channel design, commit conditions, and routing as the subjects that have ongoing design/alternative concepts. For Micro-transaction channel design, several variations on lightning channel design exist along with Amiko Pay's escrow-based HTLC emulation and IOU semi-channel. Commit conditions include hash values, time-out, start time and an alternative concept of using key pairs instead of hash values to de-correlate transactions in different links. Lastly, for routing, exchanging routing info is crucial to informing each other about Lightning nodes that exist and availability of routes, expected capacity, and fees. The type of routing info depends on the routing algorithm in use by a node. In Amiko Pay, the micro-transaction channel design is already separated, but commit conditions are not yet, and exchange of routing info doesn't really exist yet since it's still doing "dumb" non-source routing (trying every possible route).</summary>
    <published>2016-02-01T01:02:56+00:00</published>
  </entry>
</feed>
