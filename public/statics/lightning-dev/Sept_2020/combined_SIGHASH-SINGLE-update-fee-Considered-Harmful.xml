<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SIGHASH_SINGLE + update_fee Considered Harmful</title>
  <updated>2023-06-04T00:36:47.768135+00:00</updated>
  <author>
    <name>Johan Torås Halseth 2020-11-23 15:11:52</name>
  </author>
  <author>
    <name>Antoine Riard 2020-09-10 16:27:37</name>
  </author>
  <author>
    <name>Antoine Riard 2020-09-13 23:28:51</name>
  </author>
  <author>
    <name>Antoine Riard 2020-09-13 23:29:59</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-09-10 18:13:03</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2020-09-11 08:15:30</name>
  </author>
  <link href="lightning-dev/Nov_2020/002882_SIGHASH-SINGLE-update-fee-Considered-Harmful.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2020/002796_SIGHASH-SINGLE-update-fee-Considered-Harmful.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2020/002799_SIGHASH-SINGLE-update-fee-Considered-Harmful.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2020/002800_SIGHASH-SINGLE-update-fee-Considered-Harmful.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2020/002797_SIGHASH-SINGLE-update-fee-Considered-Harmful.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2020/002798_SIGHASH-SINGLE-update-fee-Considered-Harmful.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - SIGHASH_SINGLE + update_fee Considered Harmful</title>
    <updated>2023-06-04T00:36:47.768135+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-November/002882.html" rel="alternate"/>
    <summary>The Lightning Network's anchor output specification update has a potential vulnerability that could harm fund safety. This vulnerability is caused by the combination of the new usage of SIGHASH_SINGLE for HTLC transactions and the currently deployed mechanism of `update_fee`. The vulnerability allows malicious parties to inflate fees committed on HTLC input/output pairs and redirect this inflated fee to a single-controlled output attached to these malleable pairs, which can be exploited to partially escape the penalty and steal funds from an LN channel.To address this issue, tighter channel policies or committing only a minimal relay fee could be adopted. However, implementing tighter channel policies could introduce a griefing attack vector where a counterparty burns more of the lawful balance in fees than the victim punishes its revoked balance. Justice transactions could also be used, which adopt a scorched earth approach binding their feerate to the max to increase the odds of winning the feerate race and thus deter attackers.Another option is to patch the current anchor specification to remove `feerate_per_kw` application on 2nd-stage transactions. Implementations can start to phase out usage of `update_fee` by setting a minimal commitment fee when the channel is first opened, then relying on CPFP to bump up the commitment and any HTLCs if needed. Other limitations include per-implementation channel policies such as `max_accepted_htlcs`, `max_htlc_value_in_flight`, `channel_reserve`, and acceptance bound of `update_fee`.Antoine Riard has identified this vulnerability in the Lightning Network's anchor output specification update. It is important to take steps to address this vulnerability to ensure the safety of funds in LN channels.</summary>
    <published>2020-11-23T15:11:52+00:00</published>
  </entry>
</feed>
