<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Simulating Eltoo Factories using SCU Escrows (aka SCUE'd Eltoo)</title>
  <updated>2023-06-03T02:05:34.156309+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-09-03 06:48:40</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Simulating Eltoo Factories using SCU Escrows (aka SCUE'd Eltoo)</title>
    <updated>2023-06-03T02:05:34.156309+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-September/002794.html" rel="alternate"/>
    <summary>The article discusses the potential for collusion in escrow and suggests that even if the number of participants increases, trust that the escrow does not perform collusion with any of the participants must still exist. The article suggests that this can be mitigated by having the escrow be a k-of-n federation. The article also mentions channel factories, which host channels, "degrade gracefully". The article suggests that the general use of updating the factory layer would be to rebalance the channels inside it. It also discusses the advantages of channel factories and mentions that they have the major advantage of greatly reducing the onchain footprint. The article suggests merging the escrow functionality with watchtower functionality to improve privacy and increase anonymity set when you are not colluding with your escrows. Lastly, the article mentions that Decker-Russell-Osuntokun only simplifies watchtowers if the watchtower knows the funding outpoint and that hiding the funding outpoint prevents having a simple key for the watchtower to replace.</summary>
    <published>2020-09-03T06:48:40+00:00</published>
  </entry>
</feed>
